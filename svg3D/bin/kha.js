// Generated by Haxe 4.0.0-preview.5
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
;$hx_exports["kha"]["_Color"] = $hx_exports["kha"]["_Color"] || {};
$hx_exports["hxGeomAlgo"] = $hx_exports["hxGeomAlgo"] || {};
$hx_exports["hxGeomAlgo"]["_HxPoint"] = $hx_exports["hxGeomAlgo"]["_HxPoint"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
var Main = function() {
	this.theta = Math.PI / 4;
	this.mesh4Name = "mesh4";
	this.mesh3Name = "mesh3";
	this.mesh2Name = "mesh2";
	this.meshName = "mesh";
	this.cameraDataName = "MyCameraData";
	this.cameraName = "MyCamera";
	this.sceneName = "Scene";
	this.fillDraw = new trilateralXtra_parsing_FillDrawTess2(Main.wid,Main.hi);
	kha_Assets.loadEverything($bind(this,this.loadAll));
};
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	kha_System.init({ title : "Iron with Trilateral", width : Main.wid, height : Main.hi, samplesPerPixel : 4},function() {
		new Main();
	});
};
Main.prototype = {
	ironHelper: null
	,fillDraw: null
	,colorMesh: null
	,sceneName: null
	,cameraName: null
	,cameraDataName: null
	,meshName: null
	,mesh2Name: null
	,mesh3Name: null
	,mesh4Name: null
	,loadAll: function() {
		this.ironHelper = new iron_helper_IronHelper(this.sceneName,this.cameraName,this.cameraDataName,[this.meshName],Main.bgColor);
		this.ironHelper.ready = $bind(this,this.sceneReady);
		this.ironHelper.create();
	}
	,sceneReady: function(scene) {
		this.svgToTriangles(kha_Assets.blobs.salsaLogo_svg.toString());
		this.meshCreate();
	}
	,svgToTriangles: function(svgStr) {
		var s;
		var spaces = 0;
		var strIter = new trilateral_nodule_StringCodeIterator(svgStr);
		strIter.c = strIter.str.charCodeAt(strIter.pos++);
		var rootNodule = new trilateral_nodule_Nodule();
		rootNodule.name = "root";
		var parent = rootNodule;
		var nodule = null;
		var contentBuf = new StringBuf();
		while(strIter.pos < strIter.length) {
			var _g = strIter.c;
			if(_g != null) {
				switch(_g) {
				case 9:case 10:case 13:case 32:
					++spaces;
					var c = strIter.c;
					contentBuf.b += String.fromCodePoint(c);
					break;
				case 60:
					s = contentBuf.b;
					if(spaces != s.length) {
						if(nodule != null) {
							nodule.content = s;
						}
					}
					spaces = 0;
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					contentBuf = new StringBuf();
					strIter.b = new StringBuf();
					switch(strIter.c) {
					case 33:
						strIter.b = new StringBuf();
						while(strIter.c != 62) {
							var c1 = strIter.c;
							strIter.b.b += String.fromCodePoint(c1);
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
						}
						strIter.last2 = strIter.last;
						strIter.last = strIter.b.b;
						var s1 = strIter.last;
						s1 = HxOverrides.substr(s1,3,s1.length - 5);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
						break;
					case 47:
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
						strIter.b = new StringBuf();
						while(strIter.c != 62) {
							var c2 = strIter.c;
							strIter.b.b += String.fromCodePoint(c2);
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
						}
						strIter.last2 = strIter.last;
						strIter.last = strIter.b.b;
						var s2 = strIter.last;
						if(s2 == parent.name) {
							parent = parent.parent;
						}
						break;
					case 63:
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
						strIter.b = new StringBuf();
						while(strIter.c != 63) {
							var c3 = strIter.c;
							strIter.b.b += String.fromCodePoint(c3);
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
						}
						strIter.last2 = strIter.last;
						strIter.last = strIter.b.b;
						var s3 = strIter.last;
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
						break;
					default:
						strIter.b = new StringBuf();
						while(strIter.c != 62 && strIter.c != 32 && strIter.c != 47) {
							var c4 = strIter.c;
							strIter.b.b += String.fromCodePoint(c4);
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
						}
						strIter.last2 = strIter.last;
						strIter.last = strIter.b.b;
						var s4 = strIter.last;
						if(strIter.c != 47) {
							var node = new trilateral_nodule_Nodule();
							node.name = s4;
							nodule = node;
							parent.addChild(nodule);
							parent = nodule;
							var att = null;
							var attName = "";
							var toggle = true;
							while(strIter.c != 62) switch(strIter.c) {
							case 32:case 47:case 61:
								strIter.c = strIter.str.charCodeAt(strIter.pos++);
								break;
							default:
								strIter.b = new StringBuf();
								var inSpeach = false;
								while(strIter.c != 62 && strIter.c != 61) {
									if(strIter.c != 34 && strIter.c != 39) {
										var c5 = strIter.c;
										strIter.b.b += String.fromCodePoint(c5);
									} else {
										inSpeach = !inSpeach;
									}
									strIter.c = strIter.str.charCodeAt(strIter.pos++);
									if(!inSpeach) {
										if(strIter.c == 32) {
											break;
										} else if(strIter.c == 47) {
											if(parent != null) {
												if(parent.parent != null) {
													parent = parent.parent;
												}
											}
											break;
										}
									}
								}
								strIter.last2 = strIter.last;
								strIter.last = strIter.b.b;
								var s5 = strIter.last;
								if(toggle) {
									var att_ = new trilateral_nodule_Nodule();
									att = att_;
									att.name = s5;
									nodule.addAttribute(att);
								} else {
									att.content = s5;
								}
								toggle = !toggle;
							}
						} else {
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
							strIter.b = new StringBuf();
							while(strIter.c != 62) {
								var c6 = strIter.c;
								strIter.b.b += String.fromCodePoint(c6);
								strIter.c = strIter.str.charCodeAt(strIter.pos++);
							}
							strIter.last2 = strIter.last;
							strIter.last = strIter.b.b;
							var s6 = strIter.last;
							if(s6 == parent.name) {
								parent = parent.parent;
							}
						}
					}
					break;
				case 8:case 16:case 17:case 18:case 19:case 91:case 92:case 93:case 143:case 144:case 224:
					break;
				default:
					var c7 = strIter.c;
					contentBuf.b += String.fromCodePoint(c7);
				}
			}
			strIter.c = strIter.str.charCodeAt(strIter.pos++);
		}
		strIter = null;
		var nodule1 = rootNodule.firstChild;
		var svg = new trilateral_parsing_svg_Svg(nodule1);
		svg.render(this.fillDraw,Main.randomColors);
		return this.fillDraw;
	}
	,meshCreate: function() {
		var blanks = [];
		var _g = 0;
		var _g1 = this.fillDraw.colors.length;
		while(_g < _g1) {
			var i = _g++;
			blanks[i] = -1;
		}
		this.colorMesh = new iron_helper_MultiColorMesh(this.meshName,Main.wid,Main.hi,Main.depth,Main.fractionColor,Main.randomColors);
		var materialMeshHelper = new iron_helper_MaterialMeshHelper(this.ironHelper.raw,this.colorMesh,this.fillDraw.triangles,this.fillDraw.contours,this.fillDraw.colors,this.fillDraw.contourColors,"triangles");
		materialMeshHelper.ready = $bind(this,this.adjustPositions);
		materialMeshHelper.create();
	}
	,adjustPositions: function(o) {
		if(htmlHelper_tools_AnimateTimer.s == null) {
			htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
			htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
			window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
			htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
			htmlHelper_tools_AnimateTimer.loop(60.0);
		}
		htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.render);
	}
	,theta: null
	,render: function(t) {
		var obj = iron_Scene.active.getChild("triangles");
		var v = new iron_math_Vec4(-Math.PI / 6,Math.PI / 4,Math.PI / 7);
		obj.transform.rotate(v,-0.05);
		var v1 = this;
		var v2 = this;
		var v3 = this;
		v = new iron_math_Vec4(Math.sin(v1.theta += 0.01),Math.cos(v2.theta += 0.01),Math.sin(v3.theta += 0.01));
		obj.transform.move(v,0.004);
	}
	,__class__: Main
};
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var c = _g_s.charCodeAt(_g_offset++);
		if(c >= 55296 && c < 56319) {
			c = c - 55232 << 10 | _g_s.charCodeAt(_g_offset++) & 1023;
		}
		var code = c;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : "ValueType", __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type["typeof"] = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = "_UInt.UInt_Impl_";
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.getReserved(att);
		} else {
			return _this.h[att];
		}
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		return this.attributeMap.keys();
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Object.create(cl1.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Object.create(cl2.prototype);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c11 << 2 | c2 >> 4;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = c12 << 2 | c21 >> 4;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = c21 << 4 | c31 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : "haxe.io.Encoding", __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = "haxe.ds._StringMap.StringMapIterator";
haxe_ds__$StringMap_StringMapIterator.prototype = {
	map: null
	,keys: null
	,index: null
	,count: null
	,hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			var eof1 = (eof instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if((eof1 instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: $extend(haxe_io_Input.prototype.__properties__,{set_position:"set_position"})
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,writeString: function(s,encoding) {
		var b = haxe_io_Bytes.ofString(s,encoding);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : "haxe.io.Error", __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper.i32ToFloat = function(i) {
	haxe_io_FPHelper.helper.setInt32(0,i,true);
	return haxe_io_FPHelper.helper.getFloat32(0,true);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = "haxe.io._UInt8Array.UInt8Array_Impl_";
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	output: null
	,pretty: null
	,writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
				}
				var child = HxOverrides.iter(value.children);
				while(child.hasNext()) {
					var child1 = child.next();
					this.writeNode(child1,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input1 = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input1);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input2 = StringTools.trim(commentContent);
			this.output.b += Std.string(input2);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
			}
			var child2 = HxOverrides.iter(value.children);
			while(child2.hasNext()) {
				var child3 = child2.next();
				this.writeNode(child3,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
		}
		var child = HxOverrides.iter(value.children);
		while(child.hasNext()) {
			var child1 = child.next();
			switch(child1.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child1.nodeType == Xml.Document || child1.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + child1.nodeType);
				}
				if(StringTools.ltrim(child1.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var htmlHelper_tools_AnimateTimer = function() { };
$hxClasses["htmlHelper.tools.AnimateTimer"] = htmlHelper_tools_AnimateTimer;
htmlHelper_tools_AnimateTimer.__name__ = "htmlHelper.tools.AnimateTimer";
htmlHelper_tools_AnimateTimer.create = function() {
	if(htmlHelper_tools_AnimateTimer.s != null) {
		return;
	}
	htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
	htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
	window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
	htmlHelper_tools_AnimateTimer.loop(60.0);
};
htmlHelper_tools_AnimateTimer.loop = function(tim) {
	window.requestAnimationFrame(htmlHelper_tools_AnimateTimer.loop);
	if(htmlHelper_tools_AnimateTimer.onFrame != null) {
		htmlHelper_tools_AnimateTimer.onFrame(htmlHelper_tools_AnimateTimer.counter);
	}
	htmlHelper_tools_AnimateTimer.counter++;
	return true;
};
htmlHelper_tools_AnimateTimer.kill = function() {
	if(htmlHelper_tools_AnimateTimer.s == null) {
		return;
	}
	window.document.getElementsByTagName("head")[0].removeChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.onFrame = null;
	htmlHelper_tools_AnimateTimer.s = null;
};
htmlHelper_tools_AnimateTimer.tween = function(t,b,e,d,f) {
	if(t > d) {
		return null;
	}
	return f(t,b,e - b,d);
};
var hxGeomAlgo_Debug = function() { };
$hxClasses["hxGeomAlgo.Debug"] = hxGeomAlgo_Debug;
hxGeomAlgo_Debug.__name__ = "hxGeomAlgo.Debug";
hxGeomAlgo_Debug.assert = function(cond,message,pos) {
	return;
};
var hxGeomAlgo_HomogCoord = function(x,y,w) {
	if(w == null) {
		w = 1;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.w = w;
};
$hxClasses["hxGeomAlgo.HomogCoord"] = hxGeomAlgo_HomogCoord;
hxGeomAlgo_HomogCoord.__name__ = "hxGeomAlgo.HomogCoord";
hxGeomAlgo_HomogCoord.det = function(p,q,r) {
	return p.w * q.perpdot(r) - q.w * p.perpdot(r) + r.w * p.perpdot(q);
};
hxGeomAlgo_HomogCoord.ccw = function(p,q,r) {
	return hxGeomAlgo_HomogCoord.det(p,q,r) > 0;
};
hxGeomAlgo_HomogCoord.cw = function(p,q,r) {
	return hxGeomAlgo_HomogCoord.det(p,q,r) < 0;
};
hxGeomAlgo_HomogCoord.prototype = {
	x: null
	,y: null
	,w: null
	,add: function(p) {
		this.x += p.x;
		this.y += p.y;
		return this;
	}
	,sub: function(p) {
		this.x -= p.x;
		this.y -= p.y;
		return this;
	}
	,neg: function() {
		this.w = -this.w;
		this.x = -this.x;
		this.y = -this.y;
		return this;
	}
	,mul: function(m) {
		this.w *= m;
		this.x *= m;
		this.y *= m;
		return this;
	}
	,div: function(m) {
		this.w /= m;
		this.x /= m;
		this.y /= m;
		return this;
	}
	,normalize: function() {
		return this.div(this.length());
	}
	,lengthSquared: function() {
		return this.x * this.x + this.y * this.y;
	}
	,length: function() {
		return Math.sqrt(this.lengthSquared());
	}
	,perp: function() {
		var tmp = -this.y;
		this.y = this.x;
		this.x = tmp;
		return this;
	}
	,dotPoint: function(p) {
		return this.w + this.x * p.x + this.y * p.y;
	}
	,dot: function(p) {
		return this.w * p.w + this.x * p.x + this.y * p.y;
	}
	,perpdot: function(p) {
		return this.x * p.y - this.y * p.x;
	}
	,dotperp: function(p) {
		return -this.x * p.y + this.y * p.x;
	}
	,equals: function(p) {
		if(p.w * this.x == this.w * p.x) {
			return p.w * this.y == this.w * p.y;
		} else {
			return false;
		}
	}
	,left: function(p) {
		return this.dotPoint(p) > 0;
	}
	,right: function(p) {
		return this.dotPoint(p) < 0;
	}
	,toScreen: function() {
		return hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(this.x / this.w,-this.y / this.w);
	}
	,toPoint: function() {
		return hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(this.x / this.w,this.y / this.w);
	}
	,meet: function(p) {
		return new hxGeomAlgo_HomogCoord(p.w * this.y - this.w * p.y,this.w * p.x - p.w * this.x,this.x * p.y - this.y * p.x);
	}
	,meetPoint: function(p) {
		return new hxGeomAlgo_HomogCoord(this.y - this.w * p.y,this.w * p.x - this.x,this.x * p.y - this.y * p.x);
	}
	,toString: function() {
		return " (w:" + this.w + "; x:" + this.x + ", y:" + this.y + ")  ";
	}
	,__class__: hxGeomAlgo_HomogCoord
};
var hxGeomAlgo_HxPointData = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["hxGeomAlgo.HxPointData"] = hxGeomAlgo_HxPointData;
hxGeomAlgo_HxPointData.__name__ = "hxGeomAlgo.HxPointData";
hxGeomAlgo_HxPointData.prototype = {
	x: null
	,y: null
	,toString: function() {
		return "(" + this.x + ", " + this.y + ")";
	}
	,__class__: hxGeomAlgo_HxPointData
};
var hxGeomAlgo__$HxPoint_HxPoint_$Impl_$ = $hx_exports["hxGeomAlgo"]["_HxPoint"]["HxPoint_Impl_"] = {};
$hxClasses["hxGeomAlgo._HxPoint.HxPoint_Impl_"] = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$;
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.__name__ = "hxGeomAlgo._HxPoint.HxPoint_Impl_";
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.__properties__ = {set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.get_x = function(this1) {
	return this1.x;
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.set_x = function(this1,value) {
	return this1.x = value;
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.get_y = function(this1) {
	return this1.y;
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.set_y = function(this1,value) {
	return this1.y = value;
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	var this1 = new hxGeomAlgo_HxPointData(x,y);
	return this1;
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.setTo = function(this1,newX,newY) {
	this1.x = newX;
	this1.y = newY;
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.equals = function(this1,p) {
	if(p != null && this1.x == p.x) {
		return this1.y == p.y;
	} else {
		return false;
	}
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.clone = function(this1) {
	return hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(this1.x,this1.y);
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.toString = function(this1) {
	return "(" + this1.x + ", " + this1.y + ")";
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.fromPointStruct = function(p) {
	return hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(p.x,p.y);
};
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.toPointStruct = function(this1) {
	return { x : this1.x, y : this1.y};
};
var hxGeomAlgo_PolyTools = $hx_exports["hxGeomAlgo"]["PolyTools"] = function() { };
$hxClasses["hxGeomAlgo.PolyTools"] = hxGeomAlgo_PolyTools;
hxGeomAlgo_PolyTools.__name__ = "hxGeomAlgo.PolyTools";
hxGeomAlgo_PolyTools.isCCW = function(poly) {
	if(poly.length <= 2) {
		return true;
	}
	var signedArea = 0.;
	var _g = 0;
	var _g1 = poly.length;
	while(_g < _g1) {
		var i = _g++;
		var idx = i - 1;
		var idx1 = idx;
		var len = poly.length;
		if(idx1 < 0) {
			idx1 += len;
		}
		idx = idx1 % len;
		var idx2 = i - 1;
		var idx3 = idx2;
		var len1 = poly.length;
		if(idx3 < 0) {
			idx3 += len1;
		}
		idx2 = idx3 % len1;
		signedArea += poly[idx].x * poly[i].y - poly[i].x * poly[idx2].y;
	}
	return signedArea < 0;
};
hxGeomAlgo_PolyTools.isCW = function(poly) {
	if(poly.length <= 2) {
		return true;
	}
	var signedArea = 0.;
	var _g = 0;
	var _g1 = poly.length;
	while(_g < _g1) {
		var i = _g++;
		var idx = i - 1;
		var idx1 = idx;
		var len = poly.length;
		if(idx1 < 0) {
			idx1 += len;
		}
		idx = idx1 % len;
		var idx2 = i - 1;
		var idx3 = idx2;
		var len1 = poly.length;
		if(idx3 < 0) {
			idx3 += len1;
		}
		idx2 = idx3 % len1;
		signedArea += poly[idx].x * poly[i].y - poly[i].x * poly[idx2].y;
	}
	return signedArea > 0;
};
hxGeomAlgo_PolyTools.makeCCW = function(poly) {
	var reversed = false;
	if(!hxGeomAlgo_PolyTools.isCCW(poly)) {
		poly.reverse();
		reversed = true;
	}
	return reversed;
};
hxGeomAlgo_PolyTools.makeCW = function(poly) {
	var reversed = false;
	if(hxGeomAlgo_PolyTools.isCCW(poly)) {
		poly.reverse();
		reversed = true;
	}
	return reversed;
};
hxGeomAlgo_PolyTools.isConvex = function(poly) {
	var isPositive = null;
	var _g = 0;
	var _g1 = poly.length;
	while(_g < _g1) {
		var i = _g++;
		var lower = i == 0 ? poly.length - 1 : i - 1;
		var middle = i;
		var upper = i == poly.length - 1 ? 0 : i + 1;
		var dx0 = poly[middle].x - poly[lower].x;
		var dy0 = poly[middle].y - poly[lower].y;
		var dx1 = poly[upper].x - poly[middle].x;
		var dy1 = poly[upper].y - poly[middle].y;
		var cross = dx0 * dy1 - dx1 * dy0;
		var newIsPositive = cross > 0;
		if(cross == 0) {
			continue;
		}
		if(isPositive == null) {
			isPositive = newIsPositive;
		} else if(isPositive != newIsPositive) {
			return false;
		}
	}
	return true;
};
hxGeomAlgo_PolyTools.isSimple = function(poly) {
	var len = poly.length;
	if(len <= 3) {
		return true;
	}
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		var p0 = i;
		var p1 = i == len - 1 ? 0 : i + 1;
		var _g2 = i + 1;
		var _g11 = len;
		while(_g2 < _g11) {
			var j = _g2++;
			var q0 = j;
			var q1 = j == len - 1 ? 0 : j + 1;
			var intersection = hxGeomAlgo_PolyTools.segmentIntersect(poly[p0],poly[p1],poly[q0],poly[q1]);
			var tmp;
			var tmp1;
			if(intersection != null) {
				var tmp2;
				var w = poly[p0];
				var x = intersection.x - w.x;
				var x1 = intersection.y - w.y;
				if(!(Math.sqrt(x * x + x1 * x1) < hxGeomAlgo_PolyTools.EPSILON)) {
					var w1 = poly[p1];
					var x2 = intersection.x - w1.x;
					var x3 = intersection.y - w1.y;
					tmp2 = Math.sqrt(x2 * x2 + x3 * x3) < hxGeomAlgo_PolyTools.EPSILON;
				} else {
					tmp2 = true;
				}
				tmp1 = !tmp2;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var tmp3;
				var w2 = poly[q0];
				var x4 = intersection.x - w2.x;
				var x5 = intersection.y - w2.y;
				if(!(Math.sqrt(x4 * x4 + x5 * x5) < hxGeomAlgo_PolyTools.EPSILON)) {
					var w3 = poly[q1];
					var x6 = intersection.x - w3.x;
					var x7 = intersection.y - w3.y;
					tmp3 = Math.sqrt(x6 * x6 + x7 * x7) < hxGeomAlgo_PolyTools.EPSILON;
				} else {
					tmp3 = true;
				}
				tmp = !tmp3;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
		}
	}
	return true;
};
hxGeomAlgo_PolyTools.segmentIntersect = function(p0,p1,q0,q1) {
	var a1 = p1.y - p0.y;
	var b1 = p0.x - p1.x;
	var c1 = p1.x * p0.y - p0.x * p1.y;
	var a2 = q1.y - q0.y;
	var b2 = q0.x - q1.x;
	var c2 = q1.x * q0.y - q0.x * q1.y;
	var denom = a1 * b2 - a2 * b1;
	if(denom == 0) {
		return null;
	}
	var intersectionPoint = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new();
	intersectionPoint.x = (b1 * c2 - b2 * c1) / denom;
	intersectionPoint.y = (a2 * c1 - a1 * c2) / denom;
	var x = p0.x - p1.x;
	var x1 = p0.y - p1.y;
	var p0p1 = x * x + x1 * x1;
	var x2 = q0.x - q1.x;
	var x3 = q0.y - q1.y;
	var q0q1 = x2 * x2 + x3 * x3;
	var x4 = intersectionPoint.x - p1.x;
	var x5 = intersectionPoint.y - p1.y;
	if(x4 * x4 + x5 * x5 > p0p1) {
		return null;
	}
	var x6 = intersectionPoint.x - p0.x;
	var x7 = intersectionPoint.y - p0.y;
	if(x6 * x6 + x7 * x7 > p0p1) {
		return null;
	}
	var x8 = intersectionPoint.x - q1.x;
	var x9 = intersectionPoint.y - q1.y;
	if(x8 * x8 + x9 * x9 > q0q1) {
		return null;
	}
	var x10 = intersectionPoint.x - q0.x;
	var x11 = intersectionPoint.y - q0.y;
	if(x10 * x10 + x11 * x11 > q0q1) {
		return null;
	}
	return intersectionPoint;
};
hxGeomAlgo_PolyTools.findDuplicatePoints = function(poly,consecutiveOnly,wrapAround) {
	if(wrapAround == null) {
		wrapAround = true;
	}
	if(consecutiveOnly == null) {
		consecutiveOnly = true;
	}
	var len = poly.length;
	if(len <= 1) {
		return [];
	}
	var dupIndices = [];
	var _g = 0;
	var _g1 = len - 1;
	while(_g < _g1) {
		var i = _g++;
		var j = i + 1;
		while(j < len) {
			var this1 = poly[i];
			var p = poly[j];
			var foundDup = p != null && this1.x == p.x && this1.y == p.y;
			if(foundDup) {
				dupIndices.push(i);
			}
			if(consecutiveOnly || foundDup && !consecutiveOnly) {
				break;
			}
			++j;
		}
	}
	var tmp;
	if(wrapAround && consecutiveOnly) {
		var this2 = poly[0];
		var p1 = poly[len - 1];
		tmp = p1 != null && this2.x == p1.x && this2.y == p1.y;
	} else {
		tmp = false;
	}
	if(tmp) {
		dupIndices.push(len - 1);
	}
	return dupIndices;
};
hxGeomAlgo_PolyTools.intersection = function(p1,p2,q1,q2) {
	var res = null;
	var a1 = p2.y - p1.y;
	var b1 = p1.x - p2.x;
	var c1 = a1 * p1.x + b1 * p1.y;
	var a2 = q2.y - q1.y;
	var b2 = q1.x - q2.x;
	var c2 = a2 * q1.x + b2 * q1.y;
	var det = a1 * b2 - a2 * b1;
	if(!(Math.abs(det) <= hxGeomAlgo_PolyTools.EPSILON)) {
		res = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new();
		res.x = (b2 * c1 - b1 * c2) / det;
		res.y = (a1 * c2 - a2 * c1) / det;
	}
	return res;
};
hxGeomAlgo_PolyTools.isReflex = function(poly,idx) {
	var idx1 = idx - 1;
	var idx2 = idx1;
	var len = poly.length;
	if(idx2 < 0) {
		idx2 += len;
	}
	idx1 = idx2 % len;
	var p = poly[idx1];
	var idx3 = idx;
	var idx4 = idx3;
	var len1 = poly.length;
	if(idx4 < 0) {
		idx4 += len1;
	}
	idx3 = idx4 % len1;
	var a = poly[idx3];
	var idx5 = idx + 1;
	var idx6 = idx5;
	var len2 = poly.length;
	if(idx6 < 0) {
		idx6 += len2;
	}
	idx5 = idx6 % len2;
	var b = poly[idx5];
	return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) < 0;
};
hxGeomAlgo_PolyTools.at = function(poly,idx) {
	var idx1 = idx;
	var len = poly.length;
	if(idx1 < 0) {
		idx1 += len;
	}
	idx = idx1 % len;
	return poly[idx];
};
hxGeomAlgo_PolyTools.wrappedIdx = function(poly,idx) {
	var len = poly.length;
	if(idx < 0) {
		idx += len;
	}
	return idx % len;
};
hxGeomAlgo_PolyTools.side = function(p,a,b) {
	return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y);
};
hxGeomAlgo_PolyTools.isLeft = function(p,a,b) {
	return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) > 0;
};
hxGeomAlgo_PolyTools.isLeftOrOn = function(p,a,b) {
	return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) >= 0;
};
hxGeomAlgo_PolyTools.isRight = function(p,a,b) {
	return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) < 0;
};
hxGeomAlgo_PolyTools.isRightOrOn = function(p,a,b) {
	return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) <= 0;
};
hxGeomAlgo_PolyTools.isCollinear = function(p,a,b) {
	return (a.x - p.x) * (b.y - p.y) - (b.x - p.x) * (a.y - p.y) == 0;
};
hxGeomAlgo_PolyTools.distance = function(v,w) {
	var x = v.x - w.x;
	var x1 = v.y - w.y;
	return Math.sqrt(x * x + x1 * x1);
};
hxGeomAlgo_PolyTools.distanceToSegment = function(p,v,w) {
	return Math.sqrt(hxGeomAlgo_PolyTools.distanceToSegmentSquared(p,v,w));
};
hxGeomAlgo_PolyTools.distanceSquared = function(v,w) {
	var x = v.x - w.x;
	var x1 = v.y - w.y;
	return x * x + x1 * x1;
};
hxGeomAlgo_PolyTools.distanceToSegmentSquared = function(p,v,w) {
	var x = v.x - w.x;
	var x1 = v.y - w.y;
	var l2 = x * x + x1 * x1;
	if(l2 == 0) {
		var x2 = p.x - v.x;
		var x3 = p.y - v.y;
		return x2 * x2 + x3 * x3;
	}
	var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;
	if(t < 0) {
		var x4 = p.x - v.x;
		var x5 = p.y - v.y;
		return x4 * x4 + x5 * x5;
	}
	if(t > 1) {
		var x6 = p.x - w.x;
		var x7 = p.y - w.y;
		return x6 * x6 + x7 * x7;
	}
	hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.setTo(hxGeomAlgo_PolyTools.point,v.x + t * (w.x - v.x),v.y + t * (w.y - v.y));
	var w1 = hxGeomAlgo_PolyTools.point;
	var x8 = p.x - w1.x;
	var x9 = p.y - w1.y;
	return x8 * x8 + x9 * x9;
};
hxGeomAlgo_PolyTools.getCentroid = function(poly) {
	var c = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new();
	var area = hxGeomAlgo_PolyTools.getArea(poly);
	if(area != 0) {
		var len = poly.length;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			var p0 = poly[i];
			var p1 = poly[(i + 1) % len];
			var m = p0.x * p1.y - p1.x * p0.y;
			c.x += (p0.x + p1.x) * m;
			c.y += (p0.y + p1.y) * m;
		}
		c.x /= 6 * area;
		c.y /= 6 * area;
	} else {
		c = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.EMPTY;
	}
	return c;
};
hxGeomAlgo_PolyTools.getArea = function(poly) {
	var area = 0.0;
	var len = poly.length;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		var p0 = poly[i];
		var p1 = poly[(i + 1) % len];
		area += p0.x * p1.y - p1.x * p0.y;
	}
	area = .5 * area;
	return area;
};
hxGeomAlgo_PolyTools.meet = function(p,q) {
	return new hxGeomAlgo_HomogCoord(p.y - q.y,q.x - p.x,p.x * q.y - p.y * q.x);
};
hxGeomAlgo_PolyTools.dot = function(p,q) {
	return p.x * q.x + p.y * q.y;
};
hxGeomAlgo_PolyTools.sqr = function(x) {
	return x * x;
};
hxGeomAlgo_PolyTools.eq = function(a,b) {
	return Math.abs(a - b) <= hxGeomAlgo_PolyTools.EPSILON;
};
hxGeomAlgo_PolyTools.clear = function(array) {
	array.length = 0;
};
hxGeomAlgo_PolyTools.toFloatArray = function(poly,out) {
	out = out != null ? out : [];
	var _g = 0;
	while(_g < poly.length) {
		var p = poly[_g];
		++_g;
		out.push(p.x);
		out.push(p.y);
	}
	return out;
};
hxGeomAlgo_PolyTools.reverseFloatArray = function(poly,inPlace) {
	if(inPlace == null) {
		inPlace = false;
	}
	var res = inPlace ? poly : [];
	var nPoints = poly.length >> 1;
	var _g = 0;
	var _g1 = nPoints;
	while(_g < _g1) {
		var i = _g++;
		var xPos = (nPoints - i - 1) * 2;
		res[i * 2] = poly[xPos];
		res[i * 2 + 1] = poly[xPos + 1];
	}
	return res;
};
hxGeomAlgo_PolyTools.flatten = function(array,out) {
	var res = out != null ? out : [];
	var _g = 0;
	while(_g < array.length) {
		var arr = array[_g];
		++_g;
		var _g1 = 0;
		while(_g1 < arr.length) {
			var item = arr[_g1];
			++_g1;
			res.push(item);
		}
	}
	return res;
};
hxGeomAlgo_PolyTools.toPointArray = function(poly,out) {
	out = out != null ? out : [];
	var size = poly.length;
	if(poly.length % 2 == 1) {
		--size;
	}
	var _g = 0;
	var _g1 = size >> 1;
	while(_g < _g1) {
		var i = _g++;
		out.push(hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(poly[i * 2],poly[i * 2 + 1]));
	}
	return out;
};
hxGeomAlgo_PolyTools.inflateLine = function(start,end,thickness) {
	var halfWidth = thickness / 2;
	var dx = end.x - start.x;
	var dy = end.y - start.y;
	var len = Math.sqrt(dx * dx + dy * dy);
	var nx = dx / len * halfWidth;
	var ny = dy / len * halfWidth;
	return [hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(start.x - ny,start.y + nx),hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(end.x - ny,end.y + nx),hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(end.x + ny,end.y - nx),hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(start.x + ny,start.y - nx)];
};
hxGeomAlgo_PolyTools.clip = function(subjPoly,clipPoly) {
	var cond = clipPoly.length >= 3 && hxGeomAlgo_PolyTools.isConvex(clipPoly);
	var res = [];
	var output = subjPoly;
	var isInside = hxGeomAlgo_PolyTools.isCCW(clipPoly) ? hxGeomAlgo_PolyTools.isRight : hxGeomAlgo_PolyTools.isLeft;
	var clipEdgeStart;
	var clipEdgeEnd;
	var inputEdgeStart;
	var inputEdgeEnd;
	var clipLen = clipPoly.length;
	var i = 0;
	var _g = 0;
	var _g1 = clipLen;
	while(_g < _g1) {
		var i1 = _g++;
		clipEdgeStart = clipPoly[i1];
		var idx = i1 + 1;
		var len = clipPoly.length;
		if(idx < 0) {
			idx += len;
		}
		clipEdgeEnd = clipPoly[idx % len];
		var input = output;
		output = [];
		inputEdgeStart = input[input.length - 1];
		var _g2 = 0;
		var _g11 = input.length;
		while(_g2 < _g11) {
			var j = _g2++;
			inputEdgeEnd = input[j];
			if(isInside(inputEdgeEnd,clipEdgeStart,clipEdgeEnd)) {
				if(!isInside(inputEdgeStart,clipEdgeStart,clipEdgeEnd)) {
					var intersectionPoint = hxGeomAlgo_PolyTools.intersection(inputEdgeStart,inputEdgeEnd,clipEdgeStart,clipEdgeEnd);
					if(intersectionPoint != null) {
						output.push(intersectionPoint);
					}
				}
				output.push(inputEdgeEnd);
			} else if(isInside(inputEdgeStart,clipEdgeStart,clipEdgeEnd)) {
				var intersectionPoint1 = hxGeomAlgo_PolyTools.intersection(inputEdgeStart,inputEdgeEnd,clipEdgeStart,clipEdgeEnd);
				if(intersectionPoint1 != null) {
					output.push(intersectionPoint1);
				}
			}
			inputEdgeStart = inputEdgeEnd;
		}
		res.push(output);
	}
	return res;
};
hxGeomAlgo_PolyTools.exposeEnum = function(enumClass,as) {
	var dotPath = (as != null ? as : enumClass.__ename__).split(".");
	var exports = $hx_exports;
	var i = 0;
	while(i < dotPath.length - 1) {
		var currPath = dotPath[i];
		exports[currPath] = exports[currPath] || { };
		exports = exports[currPath];
		++i;
	}
	exports[dotPath[i]] = enumClass;
};
var hxGeomAlgo_WindingRule = $hxEnums["hxGeomAlgo.WindingRule"] = { __ename__ : "hxGeomAlgo.WindingRule", __constructs__ : ["ODD","NON_ZERO","POSITIVE","NEGATIVE","ABS_GEQ_TWO"]
	,ODD: {_hx_index:0,__enum__:"hxGeomAlgo.WindingRule",toString:$estr}
	,NON_ZERO: {_hx_index:1,__enum__:"hxGeomAlgo.WindingRule",toString:$estr}
	,POSITIVE: {_hx_index:2,__enum__:"hxGeomAlgo.WindingRule",toString:$estr}
	,NEGATIVE: {_hx_index:3,__enum__:"hxGeomAlgo.WindingRule",toString:$estr}
	,ABS_GEQ_TWO: {_hx_index:4,__enum__:"hxGeomAlgo.WindingRule",toString:$estr}
};
var hxGeomAlgo_ResultType = $hxEnums["hxGeomAlgo.ResultType"] = { __ename__ : "hxGeomAlgo.ResultType", __constructs__ : ["POLYGONS","CONNECTED_POLYGONS","BOUNDARY_CONTOURS","EXPERIMENTAL_DELAUNAY"]
	,POLYGONS: {_hx_index:0,__enum__:"hxGeomAlgo.ResultType",toString:$estr}
	,CONNECTED_POLYGONS: {_hx_index:1,__enum__:"hxGeomAlgo.ResultType",toString:$estr}
	,BOUNDARY_CONTOURS: {_hx_index:2,__enum__:"hxGeomAlgo.ResultType",toString:$estr}
	,EXPERIMENTAL_DELAUNAY: {_hx_index:3,__enum__:"hxGeomAlgo.ResultType",toString:$estr}
};
var hxGeomAlgo_Tess2 = $hx_exports["hxGeomAlgo"]["Tess2"] = function() { };
$hxClasses["hxGeomAlgo.Tess2"] = hxGeomAlgo_Tess2;
hxGeomAlgo_Tess2.__name__ = "hxGeomAlgo.Tess2";
hxGeomAlgo_Tess2.tesselate = function(contours,windingRule,resultType,polySize,vertexDim,normal) {
	if(vertexDim == null) {
		vertexDim = 2;
	}
	if(polySize == null) {
		polySize = 3;
	}
	var tess = new hxGeomAlgo_Tesselator();
	var _g = 0;
	var _g1 = contours.length;
	while(_g < _g1) {
		var i = _g++;
		tess.addContour(vertexDim,contours[i]);
	}
	tess.tesselate(windingRule == null ? hxGeomAlgo_WindingRule.ODD : windingRule,resultType == null ? hxGeomAlgo_ResultType.POLYGONS : resultType,polySize,vertexDim,normal == null ? [0,0,1] : normal);
	return { vertices : tess.vertices, vertexIndices : tess.vertexIndices, vertexCount : tess.vertexCount, elements : tess.elements, elementCount : tess.elementCount};
};
hxGeomAlgo_Tess2.union = function(contoursA,contoursB,resultType,polySize,vertexDim) {
	if(vertexDim == null) {
		vertexDim = 2;
	}
	if(polySize == null) {
		polySize = 3;
	}
	var contours = contoursA.concat(contoursB);
	return hxGeomAlgo_Tess2.tesselate(contours,hxGeomAlgo_WindingRule.NON_ZERO,resultType,polySize,vertexDim);
};
hxGeomAlgo_Tess2.intersection = function(contoursA,contoursB,resultType,polySize,vertexDim) {
	if(vertexDim == null) {
		vertexDim = 2;
	}
	if(polySize == null) {
		polySize = 3;
	}
	var contours = contoursA.concat(contoursB);
	return hxGeomAlgo_Tess2.tesselate(contours,hxGeomAlgo_WindingRule.ABS_GEQ_TWO,resultType,polySize,vertexDim);
};
hxGeomAlgo_Tess2.difference = function(contoursA,contoursB,resultType,polySize,vertexDim) {
	if(vertexDim == null) {
		vertexDim = 2;
	}
	if(polySize == null) {
		polySize = 3;
	}
	var _g = [];
	var _g1 = 0;
	while(_g1 < contoursB.length) {
		var poly = contoursB[_g1];
		++_g1;
		_g.push(hxGeomAlgo_PolyTools.reverseFloatArray(poly));
	}
	var diffB = _g;
	var contours = contoursA.concat(diffB);
	return hxGeomAlgo_Tess2.tesselate(contours,hxGeomAlgo_WindingRule.POSITIVE,resultType,polySize,vertexDim);
};
hxGeomAlgo_Tess2.convertResult = function(vertices,elements,resultType,polySize,out) {
	out = out != null ? out : [];
	var tmp = resultType._hx_index != 2;
	var i = 0;
	switch(resultType._hx_index) {
	case 0:case 3:
		while(i < elements.length) {
			var poly = [];
			var _g = 0;
			var _g1 = polySize;
			while(_g < _g1) {
				var j = _g++;
				var idx = elements[i + j];
				if(idx == -1) {
					continue;
				}
				poly.push(hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(vertices[idx * 2],vertices[idx * 2 + 1]));
			}
			out.push(poly);
			i += polySize;
		}
		break;
	case 1:
		while(i < elements.length) {
			var poly1 = [];
			var _g2 = 0;
			var _g11 = polySize;
			while(_g2 < _g11) {
				var j1 = _g2++;
				var idx1 = elements[i + j1];
				if(idx1 == -1) {
					continue;
				}
				poly1.push(hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(vertices[idx1 * 2],vertices[idx1 * 2 + 1]));
			}
			out.push(poly1);
			i += polySize * 2;
		}
		break;
	case 2:
		while(i < elements.length) {
			var poly2 = [];
			var start = elements[i];
			var count = elements[i + 1];
			var _g3 = 0;
			var _g12 = count;
			while(_g3 < _g12) {
				var j2 = _g3++;
				var idx2 = start + j2;
				poly2.push(hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(vertices[idx2 * 2],vertices[idx2 * 2 + 1]));
			}
			out.push(poly2);
			i += 2;
		}
		break;
	}
	return out;
};
var hxGeomAlgo__$Tess2_TessVertex = function() {
	this.idx = 0;
	this.n = 0;
	this.pqHandle = 0;
	this.t = 0.0;
	this.s = 0.0;
	this.coords = [0,0,0];
	this.anEdge = null;
	this.prev = null;
	this.next = null;
};
$hxClasses["hxGeomAlgo._Tess2.TessVertex"] = hxGeomAlgo__$Tess2_TessVertex;
hxGeomAlgo__$Tess2_TessVertex.__name__ = "hxGeomAlgo._Tess2.TessVertex";
hxGeomAlgo__$Tess2_TessVertex.prototype = {
	next: null
	,prev: null
	,anEdge: null
	,coords: null
	,s: null
	,t: null
	,pqHandle: null
	,n: null
	,idx: null
	,__class__: hxGeomAlgo__$Tess2_TessVertex
};
var hxGeomAlgo__$Tess2_TessFace = function() {
	this.inside = false;
	this.marked = false;
	this.n = 0;
	this.trail = null;
	this.anEdge = null;
	this.prev = null;
	this.next = null;
};
$hxClasses["hxGeomAlgo._Tess2.TessFace"] = hxGeomAlgo__$Tess2_TessFace;
hxGeomAlgo__$Tess2_TessFace.__name__ = "hxGeomAlgo._Tess2.TessFace";
hxGeomAlgo__$Tess2_TessFace.prototype = {
	next: null
	,prev: null
	,anEdge: null
	,trail: null
	,n: null
	,marked: null
	,inside: null
	,__class__: hxGeomAlgo__$Tess2_TessFace
};
var hxGeomAlgo__$Tess2_TessHalfEdge = function(side) {
	this.winding = 0;
	this.activeRegion = null;
	this.Lface = null;
	this.Org = null;
	this.Lnext = null;
	this.Onext = null;
	this.Sym = null;
	this.next = null;
	this.side = side;
};
$hxClasses["hxGeomAlgo._Tess2.TessHalfEdge"] = hxGeomAlgo__$Tess2_TessHalfEdge;
hxGeomAlgo__$Tess2_TessHalfEdge.__name__ = "hxGeomAlgo._Tess2.TessHalfEdge";
hxGeomAlgo__$Tess2_TessHalfEdge.prototype = {
	next: null
	,Sym: null
	,Onext: null
	,Lnext: null
	,Org: null
	,Lface: null
	,activeRegion: null
	,winding: null
	,side: null
	,mark: null
	,get_Rface: function() {
		return this.Sym.Lface;
	}
	,set_Rface: function(v) {
		return this.Sym.Lface = v;
	}
	,get_Dst: function() {
		return this.Sym.Org;
	}
	,set_Dst: function(v) {
		return this.Sym.Org = v;
	}
	,get_Oprev: function() {
		return this.Sym.Lnext;
	}
	,set_Oprev: function(v) {
		return this.Sym.Lnext = v;
	}
	,get_Lprev: function() {
		return this.Onext.Sym;
	}
	,set_Lprev: function(v) {
		return this.Onext.Sym = v;
	}
	,get_Dprev: function() {
		return this.Lnext.Sym;
	}
	,set_Dprev: function(v) {
		return this.Lnext.Sym = v;
	}
	,get_Rprev: function() {
		return this.Sym.Onext;
	}
	,set_Rprev: function(v) {
		return this.Sym.Onext = v;
	}
	,get_Dnext: function() {
		return this.Sym.Onext.Sym;
	}
	,set_Dnext: function(v) {
		return this.Sym.Onext.Sym = v;
	}
	,get_Rnext: function() {
		return this.Sym.Lnext.Sym;
	}
	,set_Rnext: function(v) {
		return this.Sym.Lnext.Sym = v;
	}
	,__class__: hxGeomAlgo__$Tess2_TessHalfEdge
	,__properties__: {set_Rnext:"set_Rnext",get_Rnext:"get_Rnext",set_Dnext:"set_Dnext",get_Dnext:"get_Dnext",set_Rprev:"set_Rprev",get_Rprev:"get_Rprev",set_Dprev:"set_Dprev",get_Dprev:"get_Dprev",set_Lprev:"set_Lprev",get_Lprev:"get_Lprev",set_Oprev:"set_Oprev",get_Oprev:"get_Oprev",set_Dst:"set_Dst",get_Dst:"get_Dst",set_Rface:"set_Rface",get_Rface:"get_Rface"}
};
var hxGeomAlgo__$Tess2_TessMesh = function() {
	this.eSym = new hxGeomAlgo__$Tess2_TessHalfEdge(1);
	this.e = new hxGeomAlgo__$Tess2_TessHalfEdge(0);
	this.f = new hxGeomAlgo__$Tess2_TessFace();
	this.v = new hxGeomAlgo__$Tess2_TessVertex();
	this.v.next = this.v.prev = this.v;
	this.v.anEdge = null;
	this.f.next = this.f.prev = this.f;
	this.f.anEdge = null;
	this.f.trail = null;
	this.f.marked = false;
	this.f.inside = false;
	this.e.next = this.e;
	this.e.Sym = this.eSym;
	this.e.Onext = null;
	this.e.Lnext = null;
	this.e.Org = null;
	this.e.Lface = null;
	this.e.winding = 0;
	this.e.activeRegion = null;
	this.e.mark = false;
	this.eSym.next = this.eSym;
	this.eSym.Sym = this.e;
	this.eSym.Onext = null;
	this.eSym.Lnext = null;
	this.eSym.Org = null;
	this.eSym.Lface = null;
	this.eSym.winding = 0;
	this.eSym.activeRegion = null;
	this.e.Sym.mark = false;
	this.vHead = this.v;
	this.fHead = this.f;
	this.eHead = this.e;
	this.eHeadSym = this.eSym;
};
$hxClasses["hxGeomAlgo._Tess2.TessMesh"] = hxGeomAlgo__$Tess2_TessMesh;
hxGeomAlgo__$Tess2_TessMesh.__name__ = "hxGeomAlgo._Tess2.TessMesh";
hxGeomAlgo__$Tess2_TessMesh.flipEdge = function(mesh,edge) {
	var a0 = edge;
	var a1 = a0.Lnext;
	var a2 = a1.Lnext;
	var b0 = edge.Sym;
	var b1 = b0.Lnext;
	var b2 = b1.Lnext;
	var aOrg = a0.Org;
	var aOpp = a2.Org;
	var bOrg = b0.Org;
	var bOpp = b2.Org;
	var fa = a0.Lface;
	var fb = b0.Lface;
	var cond = hxGeomAlgo__$Tess2_Geom.edgeIsInternal(edge);
	a0.Org = bOpp;
	a0.Onext = b1.Sym;
	b0.Org = aOpp;
	b0.Onext = a1.Sym;
	a2.Onext = b0;
	b2.Onext = a0;
	b1.Onext = a2.Sym;
	a1.Onext = b2.Sym;
	a0.Lnext = a2;
	a2.Lnext = b1;
	b1.Lnext = a0;
	b0.Lnext = b2;
	b2.Lnext = a1;
	a1.Lnext = b0;
	a1.Lface = fb;
	b1.Lface = fa;
	fa.anEdge = a0;
	fb.anEdge = b0;
	if(aOrg.anEdge == a0) {
		aOrg.anEdge = b1;
	}
	if(bOrg.anEdge == b0) {
		bOrg.anEdge = a1;
	}
	var cond1 = a0.get_Oprev().Onext.Org == a0.Org;
};
hxGeomAlgo__$Tess2_TessMesh.prototype = {
	v: null
	,f: null
	,e: null
	,eSym: null
	,vHead: null
	,fHead: null
	,eHead: null
	,eHeadSym: null
	,makeEdge_: function(eNext) {
		var e = new hxGeomAlgo__$Tess2_TessHalfEdge(0);
		var eSym = new hxGeomAlgo__$Tess2_TessHalfEdge(1);
		if(eNext.Sym.side < eNext.side) {
			eNext = eNext.Sym;
		}
		var ePrev = eNext.Sym.next;
		eSym.next = ePrev;
		ePrev.Sym.next = e;
		e.next = eNext;
		eNext.Sym.next = eSym;
		e.Sym = eSym;
		e.Onext = e;
		e.Lnext = eSym;
		e.Org = null;
		e.Lface = null;
		e.winding = 0;
		e.activeRegion = null;
		eSym.Sym = e;
		eSym.Onext = eSym;
		eSym.Lnext = e;
		eSym.Org = null;
		eSym.Lface = null;
		eSym.winding = 0;
		eSym.activeRegion = null;
		return e;
	}
	,splice_: function(a,b) {
		var aOnext = a.Onext;
		var bOnext = b.Onext;
		aOnext.Sym.Lnext = b;
		bOnext.Sym.Lnext = a;
		a.Onext = bOnext;
		b.Onext = aOnext;
	}
	,makeVertex_: function(newVertex,eOrig,vNext) {
		var vNew = newVertex;
		var vPrev = vNext.prev;
		vNew.prev = vPrev;
		vPrev.next = vNew;
		vNew.next = vNext;
		vNext.prev = vNew;
		vNew.anEdge = eOrig;
		var e = eOrig;
		while(true) {
			e.Org = vNew;
			e = e.Onext;
			if(!(e != eOrig)) {
				break;
			}
		}
	}
	,makeFace_: function(newFace,eOrig,fNext) {
		var fNew = newFace;
		var fPrev = fNext.prev;
		fNew.prev = fPrev;
		fPrev.next = fNew;
		fNew.next = fNext;
		fNext.prev = fNew;
		fNew.anEdge = eOrig;
		fNew.trail = null;
		fNew.marked = false;
		fNew.inside = fNext.inside;
		var e = eOrig;
		while(true) {
			e.Lface = fNew;
			e = e.Lnext;
			if(!(e != eOrig)) {
				break;
			}
		}
	}
	,killEdge_: function(eDel) {
		if(eDel.Sym.side < eDel.side) {
			eDel = eDel.Sym;
		}
		var eNext = eDel.next;
		var ePrev = eDel.Sym.next;
		eNext.Sym.next = ePrev;
		ePrev.Sym.next = eNext;
	}
	,killVertex_: function(vDel,newOrg) {
		var eStart = vDel.anEdge;
		var e = eStart;
		while(true) {
			e.Org = newOrg;
			e = e.Onext;
			if(!(e != eStart)) {
				break;
			}
		}
		var vPrev = vDel.prev;
		var vNext = vDel.next;
		vNext.prev = vPrev;
		vPrev.next = vNext;
	}
	,killFace_: function(fDel,newLface) {
		var eStart = fDel.anEdge;
		var e = eStart;
		while(true) {
			e.Lface = newLface;
			e = e.Lnext;
			if(!(e != eStart)) {
				break;
			}
		}
		var fPrev = fDel.prev;
		var fNext = fDel.next;
		fNext.prev = fPrev;
		fPrev.next = fNext;
	}
	,makeEdge: function() {
		var newVertex1 = new hxGeomAlgo__$Tess2_TessVertex();
		var newVertex2 = new hxGeomAlgo__$Tess2_TessVertex();
		var newFace = new hxGeomAlgo__$Tess2_TessFace();
		var e = this.makeEdge_(this.eHead);
		this.makeVertex_(newVertex1,e,this.vHead);
		this.makeVertex_(newVertex2,e.Sym,this.vHead);
		this.makeFace_(newFace,e,this.fHead);
		return e;
	}
	,splice: function(eOrg,eDst) {
		var joiningLoops = false;
		var joiningVertices = false;
		if(eOrg == eDst) {
			return;
		}
		if(eDst.Org != eOrg.Org) {
			joiningVertices = true;
			this.killVertex_(eDst.Org,eOrg.Org);
		}
		if(eDst.Lface != eOrg.Lface) {
			joiningLoops = true;
			this.killFace_(eDst.Lface,eOrg.Lface);
		}
		this.splice_(eDst,eOrg);
		if(!joiningVertices) {
			var newVertex = new hxGeomAlgo__$Tess2_TessVertex();
			this.makeVertex_(newVertex,eDst,eOrg.Org);
			eOrg.Org.anEdge = eOrg;
		}
		if(!joiningLoops) {
			var newFace = new hxGeomAlgo__$Tess2_TessFace();
			this.makeFace_(newFace,eDst,eOrg.Lface);
			eOrg.Lface.anEdge = eOrg;
		}
	}
	,'delete': function(eDel) {
		var eDelSym = eDel.Sym;
		var joiningLoops = false;
		if(eDel.Lface != eDel.get_Rface()) {
			joiningLoops = true;
			this.killFace_(eDel.Lface,eDel.get_Rface());
		}
		if(eDel.Onext == eDel) {
			this.killVertex_(eDel.Org,null);
		} else {
			eDel.get_Rface().anEdge = eDel.get_Oprev();
			eDel.Org.anEdge = eDel.Onext;
			this.splice_(eDel,eDel.get_Oprev());
			if(!joiningLoops) {
				var newFace = new hxGeomAlgo__$Tess2_TessFace();
				this.makeFace_(newFace,eDel,eDel.Lface);
			}
		}
		if(eDelSym.Onext == eDelSym) {
			this.killVertex_(eDelSym.Org,null);
			this.killFace_(eDelSym.Lface,null);
		} else {
			eDel.Lface.anEdge = eDelSym.get_Oprev();
			eDelSym.Org.anEdge = eDelSym.Onext;
			this.splice_(eDelSym,eDelSym.get_Oprev());
		}
		this.killEdge_(eDel);
	}
	,addEdgeVertex: function(eOrg) {
		var eNew = this.makeEdge_(eOrg);
		var eNewSym = eNew.Sym;
		this.splice_(eNew,eOrg.Lnext);
		eNew.Org = eOrg.get_Dst();
		var newVertex = new hxGeomAlgo__$Tess2_TessVertex();
		this.makeVertex_(newVertex,eNewSym,eNew.Org);
		eNew.Lface = eNewSym.Lface = eOrg.Lface;
		return eNew;
	}
	,splitEdge: function(eOrg) {
		var tempHalfEdge = this.addEdgeVertex(eOrg);
		var eNew = tempHalfEdge.Sym;
		this.splice_(eOrg.Sym,eOrg.Sym.get_Oprev());
		this.splice_(eOrg.Sym,eNew);
		eOrg.set_Dst(eNew.Org);
		eNew.get_Dst().anEdge = eNew.Sym;
		eNew.set_Rface(eOrg.get_Rface());
		eNew.winding = eOrg.winding;
		eNew.Sym.winding = eOrg.Sym.winding;
		return eNew;
	}
	,connect: function(eOrg,eDst) {
		var joiningLoops = false;
		var eNew = this.makeEdge_(eOrg);
		var eNewSym = eNew.Sym;
		if(eDst.Lface != eOrg.Lface) {
			joiningLoops = true;
			this.killFace_(eDst.Lface,eOrg.Lface);
		}
		this.splice_(eNew,eOrg.Lnext);
		this.splice_(eNewSym,eDst);
		eNew.Org = eOrg.get_Dst();
		eNewSym.Org = eDst.Org;
		eNew.Lface = eNewSym.Lface = eOrg.Lface;
		eOrg.Lface.anEdge = eNewSym;
		if(!joiningLoops) {
			var newFace = new hxGeomAlgo__$Tess2_TessFace();
			this.makeFace_(newFace,eNew,eOrg.Lface);
		}
		return eNew;
	}
	,zapFace: function(fZap) {
		var eStart = fZap.anEdge;
		var e;
		var eSym;
		var eNext = eStart.Lnext;
		while(true) {
			e = eNext;
			eNext = e.Lnext;
			e.Lface = null;
			if(e.get_Rface() == null) {
				if(e.Onext == e) {
					this.killVertex_(e.Org,null);
				} else {
					e.Org.anEdge = e.Onext;
					this.splice_(e,e.get_Oprev());
				}
				eSym = e.Sym;
				if(eSym.Onext == eSym) {
					this.killVertex_(eSym.Org,null);
				} else {
					eSym.Org.anEdge = eSym.Onext;
					this.splice_(eSym,eSym.get_Oprev());
				}
				this.killEdge_(e);
			}
			if(!(e != eStart)) {
				break;
			}
		}
		var fPrev = fZap.prev;
		var fNext = fZap.next;
		fNext.prev = fPrev;
		fPrev.next = fNext;
	}
	,countFaceVerts_: function(f) {
		var eCur = f.anEdge;
		var n = 0;
		while(true) {
			++n;
			eCur = eCur.Lnext;
			if(!(eCur != f.anEdge)) {
				break;
			}
		}
		return n;
	}
	,mergeConvexFaces: function(maxVertsPerFace) {
		var eCur;
		var eNext;
		var eSym;
		var vStart;
		var curNv;
		var symNv;
		var f = this.fHead.next;
		while(f != this.fHead) {
			if(!f.inside) {
				f = f.next;
				continue;
			}
			eCur = f.anEdge;
			vStart = eCur.Org;
			while(true) {
				eNext = eCur.Lnext;
				eSym = eCur.Sym;
				if(eSym != null && eSym.Lface != null && eSym.Lface.inside) {
					curNv = this.countFaceVerts_(f);
					symNv = this.countFaceVerts_(eSym.Lface);
					if(curNv + symNv - 2 <= maxVertsPerFace) {
						if(hxGeomAlgo__$Tess2_Geom.vertCCW(eCur.get_Lprev().Org,eCur.Org,eSym.Lnext.Lnext.Org) && hxGeomAlgo__$Tess2_Geom.vertCCW(eSym.get_Lprev().Org,eSym.Org,eCur.Lnext.Lnext.Org)) {
							eNext = eSym.Lnext;
							this["delete"](eSym);
							eCur = null;
							eSym = null;
						}
					}
				}
				if(eCur != null && eCur.Lnext.Org == vStart) {
					break;
				}
				eCur = eNext;
			}
			f = f.next;
		}
		return true;
	}
	,check: function() {
		var fHead = this.fHead;
		var vHead = this.vHead;
		var eHead = this.eHead;
		var f;
		var v;
		var e;
		var fPrev = fHead;
		while(true) {
			f = fPrev.next;
			if(!(f != fHead)) {
				break;
			}
			e = f.anEdge;
			while(true) {
				e = e.Lnext;
				if(!(e != f.anEdge)) {
					break;
				}
			}
			fPrev = f;
		}
		var vPrev = vHead;
		while(true) {
			v = vPrev.next;
			if(!(v != vHead)) {
				break;
			}
			e = v.anEdge;
			while(true) {
				e = e.Onext;
				if(!(e != v.anEdge)) {
					break;
				}
			}
			vPrev = v;
		}
		var ePrev = eHead;
		while(true) {
			e = ePrev.next;
			if(!(e != eHead)) {
				break;
			}
			var cond = e.get_Dst() != null;
			ePrev = e;
		}
		var cond1 = e.Sym.next == ePrev.Sym && e.Sym == this.eHeadSym && e.Sym.Sym == e && e.Org == null && e.get_Dst() == null && e.Lface == null && e.get_Rface() == null;
	}
	,__class__: hxGeomAlgo__$Tess2_TessMesh
};
var hxGeomAlgo__$Tess2_Geom = function() { };
$hxClasses["hxGeomAlgo._Tess2.Geom"] = hxGeomAlgo__$Tess2_Geom;
hxGeomAlgo__$Tess2_Geom.__name__ = "hxGeomAlgo._Tess2.Geom";
hxGeomAlgo__$Tess2_Geom.vertEq = function(u,v) {
	if(u.s == v.s) {
		return u.t == v.t;
	} else {
		return false;
	}
};
hxGeomAlgo__$Tess2_Geom.vertLeq = function(u,v) {
	if(!(u.s < v.s)) {
		if(u.s == v.s) {
			return u.t <= v.t;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxGeomAlgo__$Tess2_Geom.transLeq = function(u,v) {
	if(!(u.t < v.t)) {
		if(u.t == v.t) {
			return u.s <= v.s;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hxGeomAlgo__$Tess2_Geom.edgeGoesLeft = function(e) {
	return hxGeomAlgo__$Tess2_Geom.vertLeq(e.get_Dst(),e.Org);
};
hxGeomAlgo__$Tess2_Geom.edgeGoesRight = function(e) {
	return hxGeomAlgo__$Tess2_Geom.vertLeq(e.Org,e.get_Dst());
};
hxGeomAlgo__$Tess2_Geom.edgeIsInternal = function(e) {
	if(e.get_Rface() != null) {
		return e.get_Rface().inside;
	} else {
		return false;
	}
};
hxGeomAlgo__$Tess2_Geom.vertL1dist = function(u,v) {
	return Math.abs(u.s - v.s) + Math.abs(u.t - v.t);
};
hxGeomAlgo__$Tess2_Geom.edgeEval = function(u,v,w) {
	var cond = hxGeomAlgo__$Tess2_Geom.vertLeq(u,v) && hxGeomAlgo__$Tess2_Geom.vertLeq(v,w);
	var gapL = v.s - u.s;
	var gapR = w.s - v.s;
	if(gapL + gapR > 0.0) {
		if(gapL < gapR) {
			return v.t - u.t + (u.t - w.t) * (gapL / (gapL + gapR));
		} else {
			return v.t - w.t + (w.t - u.t) * (gapR / (gapL + gapR));
		}
	}
	return 0.0;
};
hxGeomAlgo__$Tess2_Geom.edgeSign = function(u,v,w) {
	var cond = hxGeomAlgo__$Tess2_Geom.vertLeq(u,v) && hxGeomAlgo__$Tess2_Geom.vertLeq(v,w);
	var gapL = v.s - u.s;
	var gapR = w.s - v.s;
	if(gapL + gapR > 0.0) {
		return (v.t - w.t) * gapL + (v.t - u.t) * gapR;
	}
	return 0.0;
};
hxGeomAlgo__$Tess2_Geom.transEval = function(u,v,w) {
	var cond = hxGeomAlgo__$Tess2_Geom.transLeq(u,v) && hxGeomAlgo__$Tess2_Geom.transLeq(v,w);
	var gapL = v.t - u.t;
	var gapR = w.t - v.t;
	if(gapL + gapR > 0.0) {
		if(gapL < gapR) {
			return v.s - u.s + (u.s - w.s) * (gapL / (gapL + gapR));
		} else {
			return v.s - w.s + (w.s - u.s) * (gapR / (gapL + gapR));
		}
	}
	return 0.0;
};
hxGeomAlgo__$Tess2_Geom.transSign = function(u,v,w) {
	var cond = hxGeomAlgo__$Tess2_Geom.transLeq(u,v) && hxGeomAlgo__$Tess2_Geom.transLeq(v,w);
	var gapL = v.t - u.t;
	var gapR = w.t - v.t;
	if(gapL + gapR > 0.0) {
		return (v.s - w.s) * gapL + (v.s - u.s) * gapR;
	}
	return 0.0;
};
hxGeomAlgo__$Tess2_Geom.vertCCW = function(u,v,w) {
	return u.s * (v.t - w.t) + v.s * (w.t - u.t) + w.s * (u.t - v.t) >= 0.0;
};
hxGeomAlgo__$Tess2_Geom.interpolate = function(a,x,b,y) {
	if(a < 0) {
		a = 0;
	}
	if(b < 0) {
		b = 0;
	}
	if(a <= b) {
		if(b == 0) {
			return (x + y) / 2;
		} else {
			return x + (y - x) * (a / (a + b));
		}
	} else {
		return y + (x - y) * (b / (a + b));
	}
};
hxGeomAlgo__$Tess2_Geom.intersect = function(o1,d1,o2,d2,v) {
	var z1;
	var z2;
	var t;
	if(!hxGeomAlgo__$Tess2_Geom.vertLeq(o1,d1)) {
		t = o1;
		o1 = d1;
		d1 = t;
	}
	if(!hxGeomAlgo__$Tess2_Geom.vertLeq(o2,d2)) {
		t = o2;
		o2 = d2;
		d2 = t;
	}
	if(!hxGeomAlgo__$Tess2_Geom.vertLeq(o1,o2)) {
		t = o1;
		o1 = o2;
		o2 = t;
		t = d1;
		d1 = d2;
		d2 = t;
	}
	if(!hxGeomAlgo__$Tess2_Geom.vertLeq(o2,d1)) {
		v.s = (o2.s + d1.s) / 2;
	} else if(hxGeomAlgo__$Tess2_Geom.vertLeq(d1,d2)) {
		z1 = hxGeomAlgo__$Tess2_Geom.edgeEval(o1,o2,d1);
		z2 = hxGeomAlgo__$Tess2_Geom.edgeEval(o2,d1,d2);
		if(z1 + z2 < 0) {
			z1 = -z1;
			z2 = -z2;
		}
		v.s = hxGeomAlgo__$Tess2_Geom.interpolate(z1,o2.s,z2,d1.s);
	} else {
		z1 = hxGeomAlgo__$Tess2_Geom.edgeSign(o1,o2,d1);
		z2 = -hxGeomAlgo__$Tess2_Geom.edgeSign(o1,d2,d1);
		if(z1 + z2 < 0) {
			z1 = -z1;
			z2 = -z2;
		}
		v.s = hxGeomAlgo__$Tess2_Geom.interpolate(z1,o2.s,z2,d2.s);
	}
	if(!hxGeomAlgo__$Tess2_Geom.transLeq(o1,d1)) {
		t = o1;
		o1 = d1;
		d1 = t;
	}
	if(!hxGeomAlgo__$Tess2_Geom.transLeq(o2,d2)) {
		t = o2;
		o2 = d2;
		d2 = t;
	}
	if(!hxGeomAlgo__$Tess2_Geom.transLeq(o1,o2)) {
		t = o1;
		o1 = o2;
		o2 = t;
		t = d1;
		d1 = d2;
		d2 = t;
	}
	if(!hxGeomAlgo__$Tess2_Geom.transLeq(o2,d1)) {
		v.t = (o2.t + d1.t) / 2;
	} else if(hxGeomAlgo__$Tess2_Geom.transLeq(d1,d2)) {
		z1 = hxGeomAlgo__$Tess2_Geom.transEval(o1,o2,d1);
		z2 = hxGeomAlgo__$Tess2_Geom.transEval(o2,d1,d2);
		if(z1 + z2 < 0) {
			z1 = -z1;
			z2 = -z2;
		}
		v.t = hxGeomAlgo__$Tess2_Geom.interpolate(z1,o2.t,z2,d1.t);
	} else {
		z1 = hxGeomAlgo__$Tess2_Geom.transSign(o1,o2,d1);
		z2 = -hxGeomAlgo__$Tess2_Geom.transSign(o1,d2,d1);
		if(z1 + z2 < 0) {
			z1 = -z1;
			z2 = -z2;
		}
		v.t = hxGeomAlgo__$Tess2_Geom.interpolate(z1,o2.t,z2,d2.t);
	}
};
hxGeomAlgo__$Tess2_Geom.calcAngle = function(v0,v1,v2) {
	var a_0 = v2.s - v1.s;
	var a_1 = v2.t - v1.t;
	var b_0 = v0.s - v1.s;
	var b_1 = v0.t - v1.t;
	var num = a_0 * b_0 + a_1 * b_1;
	var den = Math.sqrt(a_0 * a_0 + a_1 * a_1) * Math.sqrt(b_0 * b_0 + b_1 * b_1);
	if(den > 0.0) {
		num /= den;
	}
	if(num < -1.0) {
		num = -1.0;
	}
	if(num > 1.0) {
		num = 1.0;
	}
	return Math.acos(num);
};
hxGeomAlgo__$Tess2_Geom.edgeIsLocallyDelaunay = function(e) {
	return hxGeomAlgo__$Tess2_Geom.calcAngle(e.Lnext.Org,e.Lnext.Lnext.Org,e.Org) + hxGeomAlgo__$Tess2_Geom.calcAngle(e.Sym.Lnext.Org,e.Sym.Lnext.Lnext.Org,e.Sym.Org) < Math.PI + 0.01;
};
var hxGeomAlgo__$Tess2_DictNode = function() {
	this.prev = null;
	this.next = null;
	this.key = null;
};
$hxClasses["hxGeomAlgo._Tess2.DictNode"] = hxGeomAlgo__$Tess2_DictNode;
hxGeomAlgo__$Tess2_DictNode.__name__ = "hxGeomAlgo._Tess2.DictNode";
hxGeomAlgo__$Tess2_DictNode.prototype = {
	key: null
	,next: null
	,prev: null
	,__class__: hxGeomAlgo__$Tess2_DictNode
};
var hxGeomAlgo__$Tess2_Dict = function(frame,leq) {
	this.head = new hxGeomAlgo__$Tess2_DictNode();
	this.head.next = this.head;
	this.head.prev = this.head;
	this.frame = frame;
	this.leq = leq;
};
$hxClasses["hxGeomAlgo._Tess2.Dict"] = hxGeomAlgo__$Tess2_Dict;
hxGeomAlgo__$Tess2_Dict.__name__ = "hxGeomAlgo._Tess2.Dict";
hxGeomAlgo__$Tess2_Dict.prototype = {
	head: null
	,frame: null
	,leq: null
	,min: function() {
		return this.head.next;
	}
	,max: function() {
		return this.head.prev;
	}
	,insert: function(k) {
		return this.insertBefore(this.head,k);
	}
	,search: function(key) {
		var node = this.head;
		while(true) {
			node = node.next;
			if(!(node.key != null && !this.leq(this.frame,key,node.key))) {
				break;
			}
		}
		return node;
	}
	,insertBefore: function(node,key) {
		while(true) {
			node = node.prev;
			if(!(node.key != null && !this.leq(this.frame,node.key,key))) {
				break;
			}
		}
		var newNode = new hxGeomAlgo__$Tess2_DictNode();
		newNode.key = key;
		newNode.next = node.next;
		node.next.prev = newNode;
		newNode.prev = node;
		node.next = newNode;
		return newNode;
	}
	,'delete': function(node) {
		node.next.prev = node.prev;
		node.prev.next = node.next;
	}
	,__class__: hxGeomAlgo__$Tess2_Dict
};
var hxGeomAlgo__$Tess2_PQNode = function() {
	this.handle = -1;
};
$hxClasses["hxGeomAlgo._Tess2.PQNode"] = hxGeomAlgo__$Tess2_PQNode;
hxGeomAlgo__$Tess2_PQNode.__name__ = "hxGeomAlgo._Tess2.PQNode";
hxGeomAlgo__$Tess2_PQNode.prototype = {
	handle: null
	,__class__: hxGeomAlgo__$Tess2_PQNode
};
var hxGeomAlgo__$Tess2_PQHandleElem = function() {
	this.node = -1;
	this.key = null;
};
$hxClasses["hxGeomAlgo._Tess2.PQHandleElem"] = hxGeomAlgo__$Tess2_PQHandleElem;
hxGeomAlgo__$Tess2_PQHandleElem.__name__ = "hxGeomAlgo._Tess2.PQHandleElem";
hxGeomAlgo__$Tess2_PQHandleElem.prototype = {
	key: null
	,node: null
	,__class__: hxGeomAlgo__$Tess2_PQHandleElem
};
var hxGeomAlgo__$Tess2_PriorityQ = function(size,leq) {
	this.size = 0;
	this.max = size;
	this.nodes = [];
	var _g = 0;
	var _g1 = size + 1;
	while(_g < _g1) {
		var i = _g++;
		this.nodes[i] = new hxGeomAlgo__$Tess2_PQNode();
	}
	this.handles = [];
	var _g2 = 0;
	var _g3 = size + 1;
	while(_g2 < _g3) {
		var i1 = _g2++;
		this.handles[i1] = new hxGeomAlgo__$Tess2_PQHandleElem();
	}
	this.initialized = false;
	this.freeList = 0;
	this.leq = leq;
	this.nodes[1].handle = 1;
	this.handles[1].key = null;
};
$hxClasses["hxGeomAlgo._Tess2.PriorityQ"] = hxGeomAlgo__$Tess2_PriorityQ;
hxGeomAlgo__$Tess2_PriorityQ.__name__ = "hxGeomAlgo._Tess2.PriorityQ";
hxGeomAlgo__$Tess2_PriorityQ.prototype = {
	size: null
	,max: null
	,nodes: null
	,handles: null
	,initialized: null
	,freeList: null
	,leq: null
	,floatDown_: function(curr) {
		var n = this.nodes;
		var h = this.handles;
		var hChild;
		var child;
		var hCurr = n[curr].handle;
		while(true) {
			child = curr << 1;
			if(child < this.size && this.leq(h[n[child + 1].handle].key,h[n[child].handle].key)) {
				++child;
			}
			hChild = n[child].handle;
			if(child > this.size || this.leq(h[hCurr].key,h[hChild].key)) {
				n[curr].handle = hCurr;
				h[hCurr].node = curr;
				break;
			}
			n[curr].handle = hChild;
			h[hChild].node = curr;
			curr = child;
		}
	}
	,floatUp_: function(curr) {
		var n = this.nodes;
		var h = this.handles;
		var hParent;
		var parent;
		var hCurr = n[curr].handle;
		while(true) {
			parent = curr >> 1;
			hParent = n[parent].handle;
			if(parent == 0 || this.leq(h[hParent].key,h[hCurr].key)) {
				n[curr].handle = hCurr;
				h[hCurr].node = curr;
				break;
			}
			n[curr].handle = hParent;
			h[hParent].node = curr;
			curr = parent;
		}
	}
	,init: function() {
		var i = this.size;
		while(i >= 1) {
			this.floatDown_(i);
			--i;
		}
		this.initialized = true;
	}
	,min: function() {
		return this.handles[this.nodes[1].handle].key;
	}
	,isEmpty: function() {
		return this.size == 0;
	}
	,insert: function(keyNew) {
		var free;
		var curr = ++this.size;
		if(curr * 2 > this.max) {
			this.max *= 2;
			var s = this.nodes.length;
			var _g = s;
			var _g1 = this.max + 1;
			while(_g < _g1) {
				var i = _g++;
				this.nodes[i] = new hxGeomAlgo__$Tess2_PQNode();
			}
			s = this.handles.length;
			var _g2 = this.handles.length;
			var _g3 = this.max + 1;
			while(_g2 < _g3) {
				var i1 = _g2++;
				this.handles[i1] = new hxGeomAlgo__$Tess2_PQHandleElem();
			}
		}
		if(this.freeList == 0) {
			free = curr;
		} else {
			free = this.freeList;
			this.freeList = this.handles[free].node;
		}
		this.nodes[curr].handle = free;
		this.handles[free].node = curr;
		this.handles[free].key = keyNew;
		if(this.initialized) {
			this.floatUp_(curr);
		}
		return free;
	}
	,extractMin: function() {
		var n = this.nodes;
		var h = this.handles;
		var hMin = n[1].handle;
		var min = h[hMin].key;
		if(this.size > 0) {
			n[1].handle = n[this.size].handle;
			h[n[1].handle].node = 1;
			h[hMin].key = null;
			h[hMin].node = this.freeList;
			this.freeList = hMin;
			--this.size;
			if(this.size > 0) {
				this.floatDown_(1);
			}
		}
		return min;
	}
	,'delete': function(hCurr) {
		var n = this.nodes;
		var h = this.handles;
		var curr = h[hCurr].node;
		n[curr].handle = n[this.size].handle;
		h[n[curr].handle].node = curr;
		--this.size;
		if(curr <= this.size) {
			if(curr <= 1 || this.leq(h[n[curr >> 1].handle].key,h[n[curr].handle].key)) {
				this.floatDown_(curr);
			} else {
				this.floatUp_(curr);
			}
		}
		h[hCurr].key = null;
		h[hCurr].node = this.freeList;
		this.freeList = hCurr;
	}
	,__class__: hxGeomAlgo__$Tess2_PriorityQ
};
var hxGeomAlgo__$Tess2_ActiveRegion = function() {
	this.fixUpperEdge = false;
	this.dirty = false;
	this.sentinel = false;
	this.inside = false;
	this.windingNumber = 0;
	this.nodeUp = null;
	this.eUp = null;
};
$hxClasses["hxGeomAlgo._Tess2.ActiveRegion"] = hxGeomAlgo__$Tess2_ActiveRegion;
hxGeomAlgo__$Tess2_ActiveRegion.__name__ = "hxGeomAlgo._Tess2.ActiveRegion";
hxGeomAlgo__$Tess2_ActiveRegion.prototype = {
	eUp: null
	,nodeUp: null
	,windingNumber: null
	,inside: null
	,sentinel: null
	,dirty: null
	,fixUpperEdge: null
	,__class__: hxGeomAlgo__$Tess2_ActiveRegion
};
var hxGeomAlgo__$Tess2_Sweep = function() { };
$hxClasses["hxGeomAlgo._Tess2.Sweep"] = hxGeomAlgo__$Tess2_Sweep;
hxGeomAlgo__$Tess2_Sweep.__name__ = "hxGeomAlgo._Tess2.Sweep";
hxGeomAlgo__$Tess2_Sweep.regionBelow = function(r) {
	return r.nodeUp.prev.key;
};
hxGeomAlgo__$Tess2_Sweep.regionAbove = function(r) {
	return r.nodeUp.next.key;
};
hxGeomAlgo__$Tess2_Sweep.debugEvent = function(tess) {
};
hxGeomAlgo__$Tess2_Sweep.addWinding = function(eDst,eSrc) {
	eDst.winding += eSrc.winding;
	eDst.Sym.winding += eSrc.Sym.winding;
};
hxGeomAlgo__$Tess2_Sweep.edgeLeq = function(tess,reg1,reg2) {
	var ev = tess.event;
	var t1;
	var t2;
	var e1 = reg1.eUp;
	var e2 = reg2.eUp;
	if(e1.get_Dst() == ev) {
		if(e2.get_Dst() == ev) {
			if(hxGeomAlgo__$Tess2_Geom.vertLeq(e1.Org,e2.Org)) {
				return hxGeomAlgo__$Tess2_Geom.edgeSign(e2.get_Dst(),e1.Org,e2.Org) <= 0;
			}
			return hxGeomAlgo__$Tess2_Geom.edgeSign(e1.get_Dst(),e2.Org,e1.Org) >= 0;
		}
		return hxGeomAlgo__$Tess2_Geom.edgeSign(e2.get_Dst(),ev,e2.Org) <= 0;
	}
	if(e2.get_Dst() == ev) {
		return hxGeomAlgo__$Tess2_Geom.edgeSign(e1.get_Dst(),ev,e1.Org) >= 0;
	}
	var t11 = hxGeomAlgo__$Tess2_Geom.edgeEval(e1.get_Dst(),ev,e1.Org);
	var t21 = hxGeomAlgo__$Tess2_Geom.edgeEval(e2.get_Dst(),ev,e2.Org);
	return t11 >= t21;
};
hxGeomAlgo__$Tess2_Sweep.deleteRegion = function(tess,reg) {
	var reg1 = reg.fixUpperEdge;
	reg.eUp.activeRegion = null;
	tess.dict["delete"](reg.nodeUp);
};
hxGeomAlgo__$Tess2_Sweep.fixUpperEdge = function(tess,reg,newEdge) {
	tess.mesh["delete"](reg.eUp);
	reg.fixUpperEdge = false;
	reg.eUp = newEdge;
	newEdge.activeRegion = reg;
};
hxGeomAlgo__$Tess2_Sweep.topLeftRegion = function(tess,reg) {
	var org = reg.eUp.Org;
	var e;
	while(true) {
		reg = hxGeomAlgo__$Tess2_Sweep.regionAbove(reg);
		if(!(reg.eUp.Org == org)) {
			break;
		}
	}
	if(reg.fixUpperEdge) {
		e = tess.mesh.connect(hxGeomAlgo__$Tess2_Sweep.regionBelow(reg).eUp.Sym,reg.eUp.Lnext);
		if(e == null) {
			return null;
		}
		hxGeomAlgo__$Tess2_Sweep.fixUpperEdge(tess,reg,e);
		reg = hxGeomAlgo__$Tess2_Sweep.regionAbove(reg);
	}
	return reg;
};
hxGeomAlgo__$Tess2_Sweep.topRightRegion = function(reg) {
	var dst = reg.eUp.get_Dst();
	while(true) {
		reg = hxGeomAlgo__$Tess2_Sweep.regionAbove(reg);
		if(!(reg.eUp.get_Dst() == dst)) {
			break;
		}
	}
	return reg;
};
hxGeomAlgo__$Tess2_Sweep.addRegionBelow = function(tess,regAbove,eNewUp) {
	var regNew = new hxGeomAlgo__$Tess2_ActiveRegion();
	regNew.eUp = eNewUp;
	regNew.nodeUp = tess.dict.insertBefore(regAbove.nodeUp,regNew);
	regNew.fixUpperEdge = false;
	regNew.sentinel = false;
	regNew.dirty = false;
	eNewUp.activeRegion = regNew;
	return regNew;
};
hxGeomAlgo__$Tess2_Sweep.isWindingInside = function(tess,n) {
	switch(tess.windingRule._hx_index) {
	case 0:
		return (n & 1) != 0;
	case 1:
		return n != 0;
	case 2:
		return n > 0;
	case 3:
		return n < 0;
	case 4:
		if(n < 2) {
			return n <= -2;
		} else {
			return true;
		}
		break;
	}
};
hxGeomAlgo__$Tess2_Sweep.computeWinding = function(tess,reg) {
	reg.windingNumber = hxGeomAlgo__$Tess2_Sweep.regionAbove(reg).windingNumber + reg.eUp.winding;
	reg.inside = hxGeomAlgo__$Tess2_Sweep.isWindingInside(tess,reg.windingNumber);
};
hxGeomAlgo__$Tess2_Sweep.finishRegion = function(tess,reg) {
	var e = reg.eUp;
	var f = e.Lface;
	f.inside = reg.inside;
	f.anEdge = e;
	hxGeomAlgo__$Tess2_Sweep.deleteRegion(tess,reg);
};
hxGeomAlgo__$Tess2_Sweep.finishLeftRegions = function(tess,regFirst,regLast) {
	var e;
	var ePrev;
	var reg = null;
	var regPrev = regFirst;
	var ePrev1 = regFirst.eUp;
	while(regPrev != regLast) {
		regPrev.fixUpperEdge = false;
		reg = hxGeomAlgo__$Tess2_Sweep.regionBelow(regPrev);
		e = reg.eUp;
		if(e.Org != ePrev1.Org) {
			if(!reg.fixUpperEdge) {
				hxGeomAlgo__$Tess2_Sweep.finishRegion(tess,regPrev);
				break;
			}
			e = tess.mesh.connect(ePrev1.get_Lprev(),e.Sym);
			hxGeomAlgo__$Tess2_Sweep.fixUpperEdge(tess,reg,e);
		}
		if(ePrev1.Onext != e) {
			tess.mesh.splice(e.get_Oprev(),e);
			tess.mesh.splice(ePrev1,e);
		}
		hxGeomAlgo__$Tess2_Sweep.finishRegion(tess,regPrev);
		ePrev1 = reg.eUp;
		regPrev = reg;
	}
	return ePrev1;
};
hxGeomAlgo__$Tess2_Sweep.addRightEdges = function(tess,regUp,eFirst,eLast,eTopLeft,cleanUp) {
	var reg = null;
	var firstTime = true;
	var e = eFirst;
	while(true) {
		var cond = hxGeomAlgo__$Tess2_Geom.vertLeq(e.Org,e.get_Dst());
		hxGeomAlgo__$Tess2_Sweep.addRegionBelow(tess,regUp,e.Sym);
		e = e.Onext;
		if(!(e != eLast)) {
			break;
		}
	}
	if(eTopLeft == null) {
		eTopLeft = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp).eUp.get_Rprev();
	}
	var regPrev = regUp;
	var ePrev = eTopLeft;
	while(true) {
		reg = hxGeomAlgo__$Tess2_Sweep.regionBelow(regPrev);
		e = reg.eUp.Sym;
		if(e.Org != ePrev.Org) {
			break;
		}
		if(e.Onext != ePrev) {
			tess.mesh.splice(e.get_Oprev(),e);
			tess.mesh.splice(ePrev.get_Oprev(),e);
		}
		reg.windingNumber = regPrev.windingNumber - e.winding;
		reg.inside = hxGeomAlgo__$Tess2_Sweep.isWindingInside(tess,reg.windingNumber);
		regPrev.dirty = true;
		if(!firstTime && hxGeomAlgo__$Tess2_Sweep.checkForRightSplice(tess,regPrev)) {
			hxGeomAlgo__$Tess2_Sweep.addWinding(e,ePrev);
			hxGeomAlgo__$Tess2_Sweep.deleteRegion(tess,regPrev);
			tess.mesh["delete"](ePrev);
		}
		firstTime = false;
		regPrev = reg;
		ePrev = e;
	}
	regPrev.dirty = true;
	if(cleanUp) {
		hxGeomAlgo__$Tess2_Sweep.walkDirtyRegions(tess,regPrev);
	}
};
hxGeomAlgo__$Tess2_Sweep.spliceMergeVertices = function(tess,e1,e2) {
	tess.mesh.splice(e1,e2);
};
hxGeomAlgo__$Tess2_Sweep.vertexWeights = function(isect,org,dst) {
	var t1 = hxGeomAlgo__$Tess2_Geom.vertL1dist(org,isect);
	var t2 = hxGeomAlgo__$Tess2_Geom.vertL1dist(dst,isect);
	var w0 = 0.5 * t2 / (t1 + t2);
	var w1 = 0.5 * t1 / (t1 + t2);
	isect.coords[0] += w0 * org.coords[0] + w1 * dst.coords[0];
	isect.coords[1] += w0 * org.coords[1] + w1 * dst.coords[1];
	isect.coords[2] += w0 * org.coords[2] + w1 * dst.coords[2];
};
hxGeomAlgo__$Tess2_Sweep.getIntersectData = function(tess,isect,orgUp,dstUp,orgLo,dstLo) {
	var tmp = isect.coords[1] = isect.coords[2] = 0;
	isect.coords[0] = tmp;
	isect.idx = -1;
	hxGeomAlgo__$Tess2_Sweep.vertexWeights(isect,orgUp,dstUp);
	hxGeomAlgo__$Tess2_Sweep.vertexWeights(isect,orgLo,dstLo);
};
hxGeomAlgo__$Tess2_Sweep.checkForRightSplice = function(tess,regUp) {
	var regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	var eUp = regUp.eUp;
	var eLo = regLo.eUp;
	if(hxGeomAlgo__$Tess2_Geom.vertLeq(eUp.Org,eLo.Org)) {
		if(hxGeomAlgo__$Tess2_Geom.edgeSign(eLo.get_Dst(),eUp.Org,eLo.Org) > 0) {
			return false;
		}
		if(!hxGeomAlgo__$Tess2_Geom.vertEq(eUp.Org,eLo.Org)) {
			tess.mesh.splitEdge(eLo.Sym);
			tess.mesh.splice(eUp,eLo.get_Oprev());
			regUp.dirty = regLo.dirty = true;
		} else if(eUp.Org != eLo.Org) {
			tess.pq["delete"](eUp.Org.pqHandle);
			hxGeomAlgo__$Tess2_Sweep.spliceMergeVertices(tess,eLo.get_Oprev(),eUp);
		}
	} else {
		if(hxGeomAlgo__$Tess2_Geom.edgeSign(eUp.get_Dst(),eLo.Org,eUp.Org) < 0) {
			return false;
		}
		hxGeomAlgo__$Tess2_Sweep.regionAbove(regUp).dirty = regUp.dirty = true;
		tess.mesh.splitEdge(eUp.Sym);
		tess.mesh.splice(eLo.get_Oprev(),eUp);
	}
	return true;
};
hxGeomAlgo__$Tess2_Sweep.checkForLeftSplice = function(tess,regUp) {
	var regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	var eUp = regUp.eUp;
	var eLo = regLo.eUp;
	var e;
	var cond = !hxGeomAlgo__$Tess2_Geom.vertEq(eUp.get_Dst(),eLo.get_Dst());
	if(hxGeomAlgo__$Tess2_Geom.vertLeq(eUp.get_Dst(),eLo.get_Dst())) {
		if(hxGeomAlgo__$Tess2_Geom.edgeSign(eUp.get_Dst(),eLo.get_Dst(),eUp.Org) < 0) {
			return false;
		}
		hxGeomAlgo__$Tess2_Sweep.regionAbove(regUp).dirty = regUp.dirty = true;
		e = tess.mesh.splitEdge(eUp);
		tess.mesh.splice(eLo.Sym,e);
		e.Lface.inside = regUp.inside;
	} else {
		if(hxGeomAlgo__$Tess2_Geom.edgeSign(eLo.get_Dst(),eUp.get_Dst(),eLo.Org) > 0) {
			return false;
		}
		regUp.dirty = regLo.dirty = true;
		e = tess.mesh.splitEdge(eLo);
		tess.mesh.splice(eUp.Lnext,eLo.Sym);
		e.get_Rface().inside = regUp.inside;
	}
	return true;
};
hxGeomAlgo__$Tess2_Sweep.checkForIntersect = function(tess,regUp) {
	var regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	var eUp = regUp.eUp;
	var eLo = regLo.eUp;
	var orgUp = eUp.Org;
	var orgLo = eLo.Org;
	var dstUp = eUp.get_Dst();
	var dstLo = eLo.get_Dst();
	var isect = new hxGeomAlgo__$Tess2_TessVertex();
	var e;
	var cond = !hxGeomAlgo__$Tess2_Geom.vertEq(dstLo,dstUp);
	var cond1 = hxGeomAlgo__$Tess2_Geom.edgeSign(dstUp,tess.event,orgUp) <= 0;
	var cond2 = hxGeomAlgo__$Tess2_Geom.edgeSign(dstLo,tess.event,orgLo) >= 0;
	if(orgUp == orgLo) {
		return false;
	}
	var tMinUp = Math.min(orgUp.t,dstUp.t);
	var tMaxLo = Math.max(orgLo.t,dstLo.t);
	if(tMinUp > tMaxLo) {
		return false;
	}
	if(hxGeomAlgo__$Tess2_Geom.vertLeq(orgUp,orgLo)) {
		if(hxGeomAlgo__$Tess2_Geom.edgeSign(dstLo,orgUp,orgLo) > 0) {
			return false;
		}
	} else if(hxGeomAlgo__$Tess2_Geom.edgeSign(dstUp,orgLo,orgUp) < 0) {
		return false;
	}
	hxGeomAlgo__$Tess2_Sweep.debugEvent(tess);
	hxGeomAlgo__$Tess2_Geom.intersect(dstUp,orgUp,dstLo,orgLo,isect);
	if(hxGeomAlgo__$Tess2_Geom.vertLeq(isect,tess.event)) {
		isect.s = tess.event.s;
		isect.t = tess.event.t;
	}
	var orgMin = hxGeomAlgo__$Tess2_Geom.vertLeq(orgUp,orgLo) ? orgUp : orgLo;
	if(hxGeomAlgo__$Tess2_Geom.vertLeq(orgMin,isect)) {
		isect.s = orgMin.s;
		isect.t = orgMin.t;
	}
	if(hxGeomAlgo__$Tess2_Geom.vertEq(isect,orgUp) || hxGeomAlgo__$Tess2_Geom.vertEq(isect,orgLo)) {
		hxGeomAlgo__$Tess2_Sweep.checkForRightSplice(tess,regUp);
		return false;
	}
	if(!hxGeomAlgo__$Tess2_Geom.vertEq(dstUp,tess.event) && hxGeomAlgo__$Tess2_Geom.edgeSign(dstUp,tess.event,isect) >= 0 || !hxGeomAlgo__$Tess2_Geom.vertEq(dstLo,tess.event) && hxGeomAlgo__$Tess2_Geom.edgeSign(dstLo,tess.event,isect) <= 0) {
		if(dstLo == tess.event) {
			tess.mesh.splitEdge(eUp.Sym);
			tess.mesh.splice(eLo.Sym,eUp);
			regUp = hxGeomAlgo__$Tess2_Sweep.topLeftRegion(tess,regUp);
			eUp = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp).eUp;
			hxGeomAlgo__$Tess2_Sweep.finishLeftRegions(tess,hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp),regLo);
			hxGeomAlgo__$Tess2_Sweep.addRightEdges(tess,regUp,eUp.get_Oprev(),eUp,eUp,true);
			return true;
		}
		if(dstUp == tess.event) {
			tess.mesh.splitEdge(eLo.Sym);
			tess.mesh.splice(eUp.Lnext,eLo.get_Oprev());
			regLo = regUp;
			regUp = hxGeomAlgo__$Tess2_Sweep.topRightRegion(regUp);
			e = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp).eUp.get_Rprev();
			regLo.eUp = eLo.get_Oprev();
			eLo = hxGeomAlgo__$Tess2_Sweep.finishLeftRegions(tess,regLo,null);
			hxGeomAlgo__$Tess2_Sweep.addRightEdges(tess,regUp,eLo.Onext,eUp.get_Rprev(),e,true);
			return true;
		}
		if(hxGeomAlgo__$Tess2_Geom.edgeSign(dstUp,tess.event,isect) >= 0) {
			hxGeomAlgo__$Tess2_Sweep.regionAbove(regUp).dirty = regUp.dirty = true;
			tess.mesh.splitEdge(eUp.Sym);
			eUp.Org.s = tess.event.s;
			eUp.Org.t = tess.event.t;
		}
		if(hxGeomAlgo__$Tess2_Geom.edgeSign(dstLo,tess.event,isect) <= 0) {
			regUp.dirty = regLo.dirty = true;
			tess.mesh.splitEdge(eLo.Sym);
			eLo.Org.s = tess.event.s;
			eLo.Org.t = tess.event.t;
		}
		return false;
	}
	tess.mesh.splitEdge(eUp.Sym);
	tess.mesh.splitEdge(eLo.Sym);
	tess.mesh.splice(eLo.get_Oprev(),eUp);
	eUp.Org.s = isect.s;
	eUp.Org.t = isect.t;
	eUp.Org.pqHandle = tess.pq.insert(eUp.Org);
	hxGeomAlgo__$Tess2_Sweep.getIntersectData(tess,eUp.Org,orgUp,dstUp,orgLo,dstLo);
	hxGeomAlgo__$Tess2_Sweep.regionAbove(regUp).dirty = regUp.dirty = regLo.dirty = true;
	return false;
};
hxGeomAlgo__$Tess2_Sweep.walkDirtyRegions = function(tess,regUp) {
	var regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	var eUp;
	var eLo;
	while(true) {
		while(regLo.dirty) {
			regUp = regLo;
			regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regLo);
		}
		if(!regUp.dirty) {
			regLo = regUp;
			regUp = hxGeomAlgo__$Tess2_Sweep.regionAbove(regUp);
			if(regUp == null || !regUp.dirty) {
				return;
			}
		}
		regUp.dirty = false;
		eUp = regUp.eUp;
		eLo = regLo.eUp;
		if(eUp.get_Dst() != eLo.get_Dst()) {
			if(hxGeomAlgo__$Tess2_Sweep.checkForLeftSplice(tess,regUp)) {
				if(regLo.fixUpperEdge) {
					hxGeomAlgo__$Tess2_Sweep.deleteRegion(tess,regLo);
					tess.mesh["delete"](eLo);
					regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
					eLo = regLo.eUp;
				} else if(regUp.fixUpperEdge) {
					hxGeomAlgo__$Tess2_Sweep.deleteRegion(tess,regUp);
					tess.mesh["delete"](eUp);
					regUp = hxGeomAlgo__$Tess2_Sweep.regionAbove(regLo);
					eUp = regUp.eUp;
				}
			}
		}
		if(eUp.Org != eLo.Org) {
			if(eUp.get_Dst() != eLo.get_Dst() && !regUp.fixUpperEdge && !regLo.fixUpperEdge && (eUp.get_Dst() == tess.event || eLo.get_Dst() == tess.event)) {
				if(hxGeomAlgo__$Tess2_Sweep.checkForIntersect(tess,regUp)) {
					return;
				}
			} else {
				hxGeomAlgo__$Tess2_Sweep.checkForRightSplice(tess,regUp);
			}
		}
		if(eUp.Org == eLo.Org && eUp.get_Dst() == eLo.get_Dst()) {
			hxGeomAlgo__$Tess2_Sweep.addWinding(eLo,eUp);
			hxGeomAlgo__$Tess2_Sweep.deleteRegion(tess,regUp);
			tess.mesh["delete"](eUp);
			regUp = hxGeomAlgo__$Tess2_Sweep.regionAbove(regLo);
		}
	}
};
hxGeomAlgo__$Tess2_Sweep.connectRightVertex = function(tess,regUp,eBottomLeft) {
	var eNew;
	var eTopLeft = eBottomLeft.Onext;
	var regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	var eUp = regUp.eUp;
	var eLo = regLo.eUp;
	var degenerate = false;
	if(eUp.get_Dst() != eLo.get_Dst()) {
		hxGeomAlgo__$Tess2_Sweep.checkForIntersect(tess,regUp);
	}
	if(hxGeomAlgo__$Tess2_Geom.vertEq(eUp.Org,tess.event)) {
		tess.mesh.splice(eTopLeft.get_Oprev(),eUp);
		regUp = hxGeomAlgo__$Tess2_Sweep.topLeftRegion(tess,regUp);
		eTopLeft = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp).eUp;
		hxGeomAlgo__$Tess2_Sweep.finishLeftRegions(tess,hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp),regLo);
		degenerate = true;
	}
	if(hxGeomAlgo__$Tess2_Geom.vertEq(eLo.Org,tess.event)) {
		tess.mesh.splice(eBottomLeft,eLo.get_Oprev());
		eBottomLeft = hxGeomAlgo__$Tess2_Sweep.finishLeftRegions(tess,regLo,null);
		degenerate = true;
	}
	if(degenerate) {
		hxGeomAlgo__$Tess2_Sweep.addRightEdges(tess,regUp,eBottomLeft.Onext,eTopLeft,eTopLeft,true);
		return;
	}
	if(hxGeomAlgo__$Tess2_Geom.vertLeq(eLo.Org,eUp.Org)) {
		eNew = eLo.get_Oprev();
	} else {
		eNew = eUp;
	}
	eNew = tess.mesh.connect(eBottomLeft.get_Lprev(),eNew);
	hxGeomAlgo__$Tess2_Sweep.addRightEdges(tess,regUp,eNew,eNew.Onext,eNew.Onext,false);
	eNew.Sym.activeRegion.fixUpperEdge = true;
	hxGeomAlgo__$Tess2_Sweep.walkDirtyRegions(tess,regUp);
};
hxGeomAlgo__$Tess2_Sweep.connectLeftDegenerate = function(tess,regUp,vEvent) {
	var e = regUp.eUp;
	if(hxGeomAlgo__$Tess2_Geom.vertEq(e.Org,vEvent)) {
		hxGeomAlgo__$Tess2_Sweep.spliceMergeVertices(tess,e,vEvent.anEdge);
		return;
	}
	if(!hxGeomAlgo__$Tess2_Geom.vertEq(e.get_Dst(),vEvent)) {
		tess.mesh.splitEdge(e.Sym);
		if(regUp.fixUpperEdge) {
			tess.mesh["delete"](e.Onext);
			regUp.fixUpperEdge = false;
		}
		tess.mesh.splice(vEvent.anEdge,e);
		hxGeomAlgo__$Tess2_Sweep.sweepEvent(tess,vEvent);
		return;
	}
	regUp = hxGeomAlgo__$Tess2_Sweep.topRightRegion(regUp);
	var reg = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	var eTopRight = reg.eUp.Sym;
	var eLast = eTopRight.Onext;
	var eTopLeft = eLast;
	if(reg.fixUpperEdge) {
		hxGeomAlgo__$Tess2_Sweep.deleteRegion(tess,reg);
		tess.mesh["delete"](eTopRight);
		eTopRight = eTopLeft.get_Oprev();
	}
	tess.mesh.splice(vEvent.anEdge,eTopRight);
	if(!hxGeomAlgo__$Tess2_Geom.edgeGoesLeft(eTopLeft)) {
		eTopLeft = null;
	}
	hxGeomAlgo__$Tess2_Sweep.addRightEdges(tess,regUp,eTopRight.Onext,eLast,eTopLeft,true);
};
hxGeomAlgo__$Tess2_Sweep.connectLeftVertex = function(tess,vEvent) {
	var eNew;
	var tmp = new hxGeomAlgo__$Tess2_ActiveRegion();
	tmp.eUp = vEvent.anEdge.Sym;
	var regUp = tess.dict.search(tmp).key;
	var regLo = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	if(regLo == null) {
		return;
	}
	var eUp = regUp.eUp;
	var eLo = regLo.eUp;
	if(hxGeomAlgo__$Tess2_Geom.edgeSign(eUp.get_Dst(),vEvent,eUp.Org) == 0.0) {
		hxGeomAlgo__$Tess2_Sweep.connectLeftDegenerate(tess,regUp,vEvent);
		return;
	}
	var reg = hxGeomAlgo__$Tess2_Geom.vertLeq(eLo.get_Dst(),eUp.get_Dst()) ? regUp : regLo;
	if(regUp.inside || reg.fixUpperEdge) {
		if(reg == regUp) {
			eNew = tess.mesh.connect(vEvent.anEdge.Sym,eUp.Lnext);
		} else {
			var tempHalfEdge = tess.mesh.connect(eLo.get_Dnext(),vEvent.anEdge);
			eNew = tempHalfEdge.Sym;
		}
		if(reg.fixUpperEdge) {
			hxGeomAlgo__$Tess2_Sweep.fixUpperEdge(tess,reg,eNew);
		} else {
			hxGeomAlgo__$Tess2_Sweep.computeWinding(tess,hxGeomAlgo__$Tess2_Sweep.addRegionBelow(tess,regUp,eNew));
		}
		hxGeomAlgo__$Tess2_Sweep.sweepEvent(tess,vEvent);
	} else {
		hxGeomAlgo__$Tess2_Sweep.addRightEdges(tess,regUp,vEvent.anEdge,vEvent.anEdge,null,true);
	}
};
hxGeomAlgo__$Tess2_Sweep.sweepEvent = function(tess,vEvent) {
	tess.event = vEvent;
	hxGeomAlgo__$Tess2_Sweep.debugEvent(tess);
	var e = vEvent.anEdge;
	while(e.activeRegion == null) {
		e = e.Onext;
		if(e == vEvent.anEdge) {
			hxGeomAlgo__$Tess2_Sweep.connectLeftVertex(tess,vEvent);
			return;
		}
	}
	var regUp = hxGeomAlgo__$Tess2_Sweep.topLeftRegion(tess,e.activeRegion);
	var reg = hxGeomAlgo__$Tess2_Sweep.regionBelow(regUp);
	var eTopLeft = reg.eUp;
	var eBottomLeft = hxGeomAlgo__$Tess2_Sweep.finishLeftRegions(tess,reg,null);
	if(eBottomLeft.Onext == eTopLeft) {
		hxGeomAlgo__$Tess2_Sweep.connectRightVertex(tess,regUp,eBottomLeft);
	} else {
		hxGeomAlgo__$Tess2_Sweep.addRightEdges(tess,regUp,eBottomLeft.Onext,eTopLeft,eTopLeft,true);
	}
};
hxGeomAlgo__$Tess2_Sweep.addSentinel = function(tess,smin,smax,t) {
	var reg = new hxGeomAlgo__$Tess2_ActiveRegion();
	var e = tess.mesh.makeEdge();
	e.Org.s = smax;
	e.Org.t = t;
	e.get_Dst().s = smin;
	e.get_Dst().t = t;
	tess.event = e.get_Dst();
	reg.eUp = e;
	reg.windingNumber = 0;
	reg.inside = false;
	reg.fixUpperEdge = false;
	reg.sentinel = true;
	reg.dirty = false;
	reg.nodeUp = tess.dict.insert(reg);
};
hxGeomAlgo__$Tess2_Sweep.initEdgeDict = function(tess) {
	tess.dict = new hxGeomAlgo__$Tess2_Dict(tess,hxGeomAlgo__$Tess2_Sweep.edgeLeq);
	var w = tess.bmax[0] - tess.bmin[0];
	var h = tess.bmax[1] - tess.bmin[1];
	var smin = tess.bmin[0] - w;
	var smax = tess.bmax[0] + w;
	var tmin = tess.bmin[1] - h;
	var tmax = tess.bmax[1] + h;
	hxGeomAlgo__$Tess2_Sweep.addSentinel(tess,smin,smax,tmin);
	hxGeomAlgo__$Tess2_Sweep.addSentinel(tess,smin,smax,tmax);
};
hxGeomAlgo__$Tess2_Sweep.doneEdgeDict = function(tess) {
	var reg;
	var fixedEdges = 0;
	while(true) {
		reg = tess.dict.min().key;
		if(!(reg != null)) {
			break;
		}
		if(!reg.sentinel) {
			var cond = ++fixedEdges == 1;
		}
		hxGeomAlgo__$Tess2_Sweep.deleteRegion(tess,reg);
	}
};
hxGeomAlgo__$Tess2_Sweep.removeDegenerateEdges = function(tess) {
	var eNext;
	var eLnext;
	var eHead = tess.mesh.eHead;
	var e = eHead.next;
	while(e != eHead) {
		eNext = e.next;
		eLnext = e.Lnext;
		if(hxGeomAlgo__$Tess2_Geom.vertEq(e.Org,e.get_Dst()) && e.Lnext.Lnext != e) {
			hxGeomAlgo__$Tess2_Sweep.spliceMergeVertices(tess,eLnext,e);
			tess.mesh["delete"](e);
			e = eLnext;
			eLnext = e.Lnext;
		}
		if(eLnext.Lnext == e) {
			if(eLnext != e) {
				if(eLnext == eNext || eLnext == eNext.Sym) {
					eNext = eNext.next;
				}
				tess.mesh["delete"](eLnext);
			}
			if(e == eNext || e == eNext.Sym) {
				eNext = eNext.next;
			}
			tess.mesh["delete"](e);
		}
		e = eNext;
	}
};
hxGeomAlgo__$Tess2_Sweep.initPriorityQ = function(tess) {
	var vertexCount = 0;
	var vHead = tess.mesh.vHead;
	var v = vHead.next;
	while(v != vHead) {
		++vertexCount;
		v = v.next;
	}
	vertexCount += 8;
	var pq = tess.pq = new hxGeomAlgo__$Tess2_PriorityQ(vertexCount,hxGeomAlgo__$Tess2_Geom.vertLeq);
	vHead = tess.mesh.vHead;
	v = vHead.next;
	while(v != vHead) {
		v.pqHandle = pq.insert(v);
		v = v.next;
	}
	if(v != vHead) {
		return false;
	}
	pq.init();
	return true;
};
hxGeomAlgo__$Tess2_Sweep.donePriorityQ = function(tess) {
	tess.pq = null;
};
hxGeomAlgo__$Tess2_Sweep.removeDegenerateFaces = function(tess,mesh) {
	var fNext;
	var e;
	var f = mesh.fHead.next;
	while(f != mesh.fHead) {
		fNext = f.next;
		e = f.anEdge;
		if(e.Lnext.Lnext == e) {
			hxGeomAlgo__$Tess2_Sweep.addWinding(e.Onext,e);
			tess.mesh["delete"](e);
		}
		f = fNext;
	}
	return true;
};
hxGeomAlgo__$Tess2_Sweep.computeInterior = function(tess) {
	var v;
	var vNext;
	hxGeomAlgo__$Tess2_Sweep.removeDegenerateEdges(tess);
	if(!hxGeomAlgo__$Tess2_Sweep.initPriorityQ(tess)) {
		return false;
	}
	hxGeomAlgo__$Tess2_Sweep.initEdgeDict(tess);
	var pq = tess.pq;
	while(true) {
		v = tess.pq.extractMin();
		if(!(v != null)) {
			break;
		}
		while(true) {
			vNext = tess.pq.min();
			if(vNext == null || !hxGeomAlgo__$Tess2_Geom.vertEq(vNext,v)) {
				break;
			}
			vNext = tess.pq.extractMin();
			hxGeomAlgo__$Tess2_Sweep.spliceMergeVertices(tess,v.anEdge,vNext.anEdge);
		}
		hxGeomAlgo__$Tess2_Sweep.sweepEvent(tess,v);
	}
	tess.event = tess.dict.min().key.eUp.Org;
	hxGeomAlgo__$Tess2_Sweep.debugEvent(tess);
	hxGeomAlgo__$Tess2_Sweep.doneEdgeDict(tess);
	hxGeomAlgo__$Tess2_Sweep.donePriorityQ(tess);
	if(!hxGeomAlgo__$Tess2_Sweep.removeDegenerateFaces(tess,tess.mesh)) {
		return false;
	}
	tess.mesh.check();
	return true;
};
var hxGeomAlgo_Tesselator = $hx_exports["hxGeomAlgo"]["Tesselator"] = function() {
	this.elementCount = 0;
	this.elements = [];
	this.vertexCount = 0;
	this.vertexIndices = [];
	this.vertices = [];
	this.vertexIndexCounter = 0;
	this.event = null;
	this.pq = null;
	this.dict = null;
	this.bmax = [0.0,0.0];
	this.bmin = [0.0,0.0];
	this.tUnit = [0.0,0.0,0.0];
	this.sUnit = [0.0,0.0,0.0];
	this.normal = [0.0,0.0,0.0];
	this.mesh = null;
	this.windingRule = hxGeomAlgo_WindingRule.ODD;
};
$hxClasses["hxGeomAlgo.Tesselator"] = hxGeomAlgo_Tesselator;
hxGeomAlgo_Tesselator.__name__ = "hxGeomAlgo.Tesselator";
hxGeomAlgo_Tesselator.prototype = {
	mesh: null
	,normal: null
	,sUnit: null
	,tUnit: null
	,bmin: null
	,bmax: null
	,windingRule: null
	,dict: null
	,pq: null
	,event: null
	,vertexIndexCounter: null
	,vertices: null
	,vertexIndices: null
	,vertexCount: null
	,elements: null
	,elementCount: null
	,dot_: function(u,v) {
		return u[0] * v[0] + u[1] * v[1] + u[2] * v[2];
	}
	,normalize_: function(v) {
		var len = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];
		len = Math.sqrt(len);
		v[0] /= len;
		v[1] /= len;
		v[2] /= len;
	}
	,longAxis_: function(v) {
		var i = 0;
		if(Math.abs(v[1]) > Math.abs(v[0])) {
			i = 1;
		}
		if(Math.abs(v[2]) > Math.abs(v[i])) {
			i = 2;
		}
		return i;
	}
	,computeNormal_: function(norm) {
		var c;
		var tLen2;
		var maxVal = [.0,.0,.0];
		var minVal = [.0,.0,.0];
		var d1 = [.0,.0,.0];
		var d2_0 = .0;
		var d2_1 = .0;
		var d2_2 = .0;
		var tNorm_0 = .0;
		var tNorm_1 = .0;
		var tNorm_2 = .0;
		var maxVert = [null,null,null];
		var minVert = [null,null,null];
		var vHead = this.mesh.vHead;
		var v = vHead.next;
		c = v.coords[0];
		minVal[0] = c;
		minVert[0] = v;
		maxVal[0] = c;
		maxVert[0] = v;
		c = v.coords[1];
		minVal[1] = c;
		minVert[1] = v;
		maxVal[1] = c;
		maxVert[1] = v;
		c = v.coords[2];
		minVal[2] = c;
		minVert[2] = v;
		maxVal[2] = c;
		maxVert[2] = v;
		v = vHead.next;
		while(v != vHead) {
			c = v.coords[0];
			if(c < minVal[0]) {
				minVal[0] = c;
				minVert[0] = v;
			}
			if(c > maxVal[0]) {
				maxVal[0] = c;
				maxVert[0] = v;
			}
			c = v.coords[1];
			if(c < minVal[1]) {
				minVal[1] = c;
				minVert[1] = v;
			}
			if(c > maxVal[1]) {
				maxVal[1] = c;
				maxVert[1] = v;
			}
			c = v.coords[2];
			if(c < minVal[2]) {
				minVal[2] = c;
				minVert[2] = v;
			}
			if(c > maxVal[2]) {
				maxVal[2] = c;
				maxVert[2] = v;
			}
			v = v.next;
		}
		var i = 0;
		if(maxVal[1] - minVal[1] > maxVal[0] - minVal[0]) {
			i = 1;
		}
		if(maxVal[2] - minVal[2] > maxVal[i] - minVal[i]) {
			i = 2;
		}
		if(minVal[i] >= maxVal[i]) {
			norm[0] = 0;
			norm[1] = 0;
			norm[2] = 1;
			return;
		}
		var maxLen2 = .0;
		var v1 = minVert[i];
		var v2 = maxVert[i];
		d1[0] = v1.coords[0] - v2.coords[0];
		d1[1] = v1.coords[1] - v2.coords[1];
		d1[2] = v1.coords[2] - v2.coords[2];
		v = vHead.next;
		while(v != vHead) {
			d2_0 = v.coords[0] - v2.coords[0];
			d2_1 = v.coords[1] - v2.coords[1];
			d2_2 = v.coords[2] - v2.coords[2];
			tNorm_0 = d1[1] * d2_2 - d1[2] * d2_1;
			tNorm_1 = d1[2] * d2_0 - d1[0] * d2_2;
			tNorm_2 = d1[0] * d2_1 - d1[1] * d2_0;
			tLen2 = tNorm_0 * tNorm_0 + tNorm_1 * tNorm_1 + tNorm_2 * tNorm_2;
			if(tLen2 > maxLen2) {
				maxLen2 = tLen2;
				norm[0] = tNorm_0;
				norm[1] = tNorm_1;
				norm[2] = tNorm_2;
			}
			v = v.next;
		}
		if(maxLen2 <= 0) {
			norm[0] = norm[1] = norm[2] = 0;
			norm[this.longAxis_(d1)] = 1;
		}
	}
	,checkOrientation_: function() {
		var fHead = this.mesh.fHead;
		var v;
		var vHead = this.mesh.vHead;
		var e;
		var area = .0;
		var f = fHead.next;
		while(f != fHead) {
			e = f.anEdge;
			if(e.winding <= 0) {
				f = f.next;
				continue;
			}
			while(true) {
				area += (e.Org.s - e.get_Dst().s) * (e.Org.t + e.get_Dst().t);
				e = e.Lnext;
				if(!(e != f.anEdge)) {
					break;
				}
			}
			f = f.next;
		}
		if(area < 0) {
			v = vHead.next;
			while(v != vHead) {
				v.t = -v.t;
				v = v.next;
			}
			this.tUnit[0] = -this.tUnit[0];
			this.tUnit[1] = -this.tUnit[1];
			this.tUnit[2] = -this.tUnit[2];
		}
	}
	,projectPolygon_: function() {
		var vHead = this.mesh.vHead;
		var norm = [.0,.0,.0];
		var computedNormal = false;
		norm[0] = this.normal[0];
		norm[1] = this.normal[1];
		norm[2] = this.normal[2];
		if(norm[0] == 0.0 && norm[1] == 0.0 && norm[2] == 0.0) {
			this.computeNormal_(norm);
			computedNormal = true;
		}
		var sUnit = this.sUnit;
		var tUnit = this.tUnit;
		var i = this.longAxis_(norm);
		sUnit[i] = 0;
		sUnit[(i + 1) % 3] = 1.0;
		sUnit[(i + 2) % 3] = 0.0;
		tUnit[i] = 0;
		tUnit[(i + 1) % 3] = 0.0;
		tUnit[(i + 2) % 3] = norm[i] > 0 ? 1.0 : -1.0;
		var v = vHead.next;
		while(v != vHead) {
			v.s = this.dot_(v.coords,sUnit);
			v.t = this.dot_(v.coords,tUnit);
			v = v.next;
		}
		if(computedNormal) {
			this.checkOrientation_();
		}
		var first = true;
		v = vHead.next;
		while(v != vHead) {
			if(first) {
				var tmp = this.bmax[0] = v.s;
				this.bmin[0] = tmp;
				var tmp1 = this.bmax[1] = v.t;
				this.bmin[1] = tmp1;
				first = false;
			} else {
				if(v.s < this.bmin[0]) {
					this.bmin[0] = v.s;
				}
				if(v.s > this.bmax[0]) {
					this.bmax[0] = v.s;
				}
				if(v.t < this.bmin[1]) {
					this.bmin[1] = v.t;
				}
				if(v.t > this.bmax[1]) {
					this.bmax[1] = v.t;
				}
			}
			v = v.next;
		}
	}
	,addWinding_: function(eDst,eSrc) {
		eDst.winding += eSrc.winding;
		eDst.Sym.winding += eSrc.Sym.winding;
	}
	,tessellateMonoRegion_: function(mesh,face) {
		var up = face.anEdge;
		while(hxGeomAlgo__$Tess2_Geom.vertLeq(up.get_Dst(),up.Org)) up = up.get_Lprev();
		while(hxGeomAlgo__$Tess2_Geom.vertLeq(up.Org,up.get_Dst())) up = up.Lnext;
		var lo = up.get_Lprev();
		while(up.Lnext != lo) if(hxGeomAlgo__$Tess2_Geom.vertLeq(up.get_Dst(),lo.Org)) {
			while(lo.Lnext != up && (hxGeomAlgo__$Tess2_Geom.edgeGoesLeft(lo.Lnext) || hxGeomAlgo__$Tess2_Geom.edgeSign(lo.Org,lo.get_Dst(),lo.Lnext.get_Dst()) <= 0.0)) {
				var tempHalfEdge = mesh.connect(lo.Lnext,lo);
				lo = tempHalfEdge.Sym;
			}
			lo = lo.get_Lprev();
		} else {
			while(lo.Lnext != up && (hxGeomAlgo__$Tess2_Geom.edgeGoesRight(up.get_Lprev()) || hxGeomAlgo__$Tess2_Geom.edgeSign(up.get_Dst(),up.Org,up.get_Lprev().Org) >= 0.0)) {
				var tempHalfEdge1 = mesh.connect(up,up.get_Lprev());
				up = tempHalfEdge1.Sym;
			}
			up = up.Lnext;
		}
		while(lo.Lnext.Lnext != up) {
			var tempHalfEdge2 = mesh.connect(lo.Lnext,lo);
			lo = tempHalfEdge2.Sym;
		}
		return true;
	}
	,tessellateInterior_: function(mesh) {
		var next;
		var f = mesh.fHead.next;
		while(f != mesh.fHead) {
			next = f.next;
			if(f.inside) {
				if(!this.tessellateMonoRegion_(mesh,f)) {
					return false;
				}
			}
			f = next;
		}
		return true;
	}
	,refineDelaunay_: function(mesh) {
		var stack = [];
		var e;
		var edges_0 = null;
		var edges_1 = null;
		var edges_2 = null;
		var edges_3 = null;
		var f = mesh.fHead.next;
		while(f != mesh.fHead) {
			if(f.inside) {
				e = f.anEdge;
				while(true) {
					e.mark = hxGeomAlgo__$Tess2_Geom.edgeIsInternal(e);
					if(e.mark && !e.Sym.mark) {
						stack.push(e);
					}
					e = e.Lnext;
					if(!(e != f.anEdge)) {
						break;
					}
				}
			}
			f = f.next;
		}
		while(stack.length > 0) {
			e = stack.pop();
			e.mark = e.Sym.mark = false;
			if(!hxGeomAlgo__$Tess2_Geom.edgeIsLocallyDelaunay(e)) {
				hxGeomAlgo__$Tess2_TessMesh.flipEdge(mesh,e);
				edges_0 = e.Lnext;
				edges_1 = e.get_Lprev();
				edges_2 = e.Sym.Lnext;
				edges_3 = e.Sym.get_Lprev();
				if(!edges_0.mark && hxGeomAlgo__$Tess2_Geom.edgeIsInternal(edges_0)) {
					edges_0.mark = edges_0.Sym.mark = true;
					stack.push(edges_0);
				}
				if(!edges_1.mark && hxGeomAlgo__$Tess2_Geom.edgeIsInternal(edges_1)) {
					edges_1.mark = edges_1.Sym.mark = true;
					stack.push(edges_1);
				}
				if(!edges_2.mark && hxGeomAlgo__$Tess2_Geom.edgeIsInternal(edges_2)) {
					edges_2.mark = edges_2.Sym.mark = true;
					stack.push(edges_2);
				}
			}
		}
		var _g = 0;
		while(_g < stack.length) {
			var e1 = stack[_g];
			++_g;
			stack.pop();
		}
		stack = null;
	}
	,discardExterior_: function(mesh) {
		var next;
		var f = mesh.fHead.next;
		while(f != mesh.fHead) {
			next = f.next;
			if(!f.inside) {
				mesh.zapFace(f);
			}
			f = next;
		}
	}
	,setWindingNumber_: function(mesh,value,keepOnlyBoundary) {
		var eNext;
		var e = mesh.eHead.next;
		while(e != mesh.eHead) {
			eNext = e.next;
			if(e.get_Rface().inside != e.Lface.inside) {
				e.winding = e.Lface.inside ? value : -value;
			} else if(!keepOnlyBoundary) {
				e.winding = 0;
			} else {
				mesh["delete"](e);
			}
			e = eNext;
		}
	}
	,getNeighbourFace_: function(edge) {
		if(edge.get_Rface() == null) {
			return -1;
		}
		if(!edge.get_Rface().inside) {
			return -1;
		}
		return edge.get_Rface().n;
	}
	,outputPolymesh_: function(mesh,resultsType,polySize,vertexDim) {
		var edge;
		var maxFaceCount = 0;
		var maxVertexCount = 0;
		var faceVerts;
		var i;
		var elements = 0;
		var vert;
		if(polySize > 3) {
			mesh.mergeConvexFaces(polySize);
		}
		var v = mesh.vHead.next;
		while(v != mesh.vHead) {
			v.n = -1;
			v = v.next;
		}
		var f = mesh.fHead.next;
		while(f != mesh.fHead) {
			f.n = -1;
			if(!f.inside) {
				f = f.next;
				continue;
			}
			edge = f.anEdge;
			faceVerts = 0;
			while(true) {
				v = edge.Org;
				if(v.n == -1) {
					v.n = maxVertexCount;
					++maxVertexCount;
				}
				++faceVerts;
				edge = edge.Lnext;
				if(!(edge != f.anEdge)) {
					break;
				}
			}
			f.n = maxFaceCount;
			++maxFaceCount;
			f = f.next;
		}
		this.elementCount = maxFaceCount;
		if(resultsType == hxGeomAlgo_ResultType.CONNECTED_POLYGONS) {
			maxFaceCount *= 2;
		}
		this.elements = [];
		this.vertexCount = maxVertexCount;
		this.vertices = [];
		this.vertexIndices = [];
		v = mesh.vHead.next;
		while(v != mesh.vHead) {
			if(v.n != -1) {
				var idx = v.n * vertexDim;
				this.vertices[idx] = v.coords[0];
				this.vertices[idx + 1] = v.coords[1];
				if(vertexDim > 2) {
					this.vertices[idx + 2] = v.coords[2];
				}
				this.vertexIndices[v.n] = v.idx;
			}
			v = v.next;
		}
		var nel = 0;
		f = mesh.fHead.next;
		while(f != mesh.fHead) {
			if(!f.inside) {
				f = f.next;
				continue;
			}
			edge = f.anEdge;
			faceVerts = 0;
			while(true) {
				v = edge.Org;
				this.elements[nel++] = v.n;
				++faceVerts;
				edge = edge.Lnext;
				if(!(edge != f.anEdge)) {
					break;
				}
			}
			var _g = faceVerts;
			var _g1 = polySize;
			while(_g < _g1) {
				var i1 = _g++;
				this.elements[nel++] = -1;
			}
			if(resultsType == hxGeomAlgo_ResultType.CONNECTED_POLYGONS) {
				edge = f.anEdge;
				while(true) {
					this.elements[nel++] = this.getNeighbourFace_(edge);
					edge = edge.Lnext;
					if(!(edge != f.anEdge)) {
						break;
					}
				}
				var _g2 = faceVerts;
				var _g3 = polySize;
				while(_g2 < _g3) {
					var i2 = _g2++;
					this.elements[nel++] = -1;
				}
			}
			f = f.next;
		}
	}
	,outputContours_: function(mesh,vertexDim) {
		var edge;
		var start;
		var verts;
		var elements;
		var vertInds;
		var startVert = 0;
		var vertCount = 0;
		this.vertexCount = 0;
		this.elementCount = 0;
		var f = mesh.fHead.next;
		while(f != mesh.fHead) {
			if(!f.inside) {
				f = f.next;
				continue;
			}
			edge = f.anEdge;
			start = edge;
			while(true) {
				this.vertexCount++;
				edge = edge.Lnext;
				if(!(edge != start)) {
					break;
				}
			}
			this.elementCount++;
			f = f.next;
		}
		this.elements = [];
		this.vertices = [];
		this.vertexIndices = [];
		var nv = 0;
		var nvi = 0;
		var nel = 0;
		startVert = 0;
		f = mesh.fHead.next;
		while(f != mesh.fHead) {
			if(!f.inside) {
				f = f.next;
				continue;
			}
			vertCount = 0;
			edge = f.anEdge;
			start = edge;
			while(true) {
				this.vertices[nv++] = edge.Org.coords[0];
				this.vertices[nv++] = edge.Org.coords[1];
				if(vertexDim > 2) {
					this.vertices[nv++] = edge.Org.coords[2];
				}
				this.vertexIndices[nvi++] = edge.Org.idx;
				++vertCount;
				edge = edge.Lnext;
				if(!(edge != start)) {
					break;
				}
			}
			this.elements[nel++] = startVert;
			this.elements[nel++] = vertCount;
			startVert += vertCount;
			f = f.next;
		}
	}
	,addContour: function(vertexDim,vertices) {
		if(this.mesh == null) {
			this.mesh = new hxGeomAlgo__$Tess2_TessMesh();
		}
		if(vertexDim < 2) {
			vertexDim = 2;
		}
		if(vertexDim > 3) {
			vertexDim = 3;
		}
		var e = null;
		var i = 0;
		while(i < vertices.length) {
			if(e == null) {
				e = this.mesh.makeEdge();
				this.mesh.splice(e,e.Sym);
			} else {
				this.mesh.splitEdge(e);
				e = e.Lnext;
			}
			e.Org.coords[0] = vertices[i];
			e.Org.coords[1] = vertices[i + 1];
			if(vertexDim > 2) {
				e.Org.coords[2] = vertices[i + 2];
			} else {
				e.Org.coords[2] = 0.0;
			}
			e.Org.idx = this.vertexIndexCounter++;
			e.winding = 1;
			e.Sym.winding = -1;
			i += vertexDim;
		}
	}
	,tesselate: function(windingRule,resultType,polySize,vertexDim,normal) {
		this.vertices = [];
		this.elements = [];
		this.vertexIndices = [];
		this.vertexIndexCounter = 0;
		if(normal != null) {
			this.normal[0] = normal[0];
			this.normal[1] = normal[1];
			this.normal[2] = normal[2];
		}
		this.windingRule = windingRule;
		if(vertexDim < 2) {
			vertexDim = 2;
		}
		if(vertexDim > 3) {
			vertexDim = 3;
		}
		if(this.mesh == null) {
			return false;
		}
		this.projectPolygon_();
		hxGeomAlgo__$Tess2_Sweep.computeInterior(this);
		var mesh = this.mesh;
		if(resultType == hxGeomAlgo_ResultType.BOUNDARY_CONTOURS) {
			this.setWindingNumber_(mesh,1,true);
		} else {
			this.tessellateInterior_(mesh);
			if(resultType == hxGeomAlgo_ResultType.EXPERIMENTAL_DELAUNAY) {
				this.refineDelaunay_(mesh);
				polySize = 3;
			}
		}
		mesh.check();
		if(resultType == hxGeomAlgo_ResultType.BOUNDARY_CONTOURS) {
			this.outputContours_(mesh,vertexDim);
		} else {
			this.outputPolymesh_(mesh,resultType,polySize,vertexDim);
		}
		return true;
	}
	,__class__: hxGeomAlgo_Tesselator
};
var hxPolyK__$PolyK_ArrayPairs_$Impl_$ = {};
$hxClasses["hxPolyK._PolyK.ArrayPairs_Impl_"] = hxPolyK__$PolyK_ArrayPairs_$Impl_$;
hxPolyK__$PolyK_ArrayPairs_$Impl_$.__name__ = "hxPolyK._PolyK.ArrayPairs_Impl_";
hxPolyK__$PolyK_ArrayPairs_$Impl_$.__properties__ = {get_length:"get_length"};
hxPolyK__$PolyK_ArrayPairs_$Impl_$._new = function(arr) {
	var this1 = arr;
	return this1;
};
hxPolyK__$PolyK_ArrayPairs_$Impl_$.get_length = function(this1) {
	return this1.length / 2 | 0;
};
hxPolyK__$PolyK_ArrayPairs_$Impl_$.access = function(this1,key) {
	var i = key * 2 | 0;
	return { x : this1[i], y : this1[i + 1]};
};
hxPolyK__$PolyK_ArrayPairs_$Impl_$.reverse = function(this1) {
	var arr = [];
	var _g = 0;
	var _g1 = hxPolyK__$PolyK_ArrayPairs_$Impl_$._new(this1);
	while(_g < (_g1.length / 2 | 0)) {
		var i = _g * 2 | 0;
		var i_x = _g1[i];
		var i_y = _g1[i + 1];
		++_g;
		arr.unshift(i_y);
		arr.unshift(i_x);
	}
	this1 = arr;
	return arr;
};
var hxPolyK__$PolyK_ArrayTriple_$Impl_$ = {};
$hxClasses["hxPolyK._PolyK.ArrayTriple_Impl_"] = hxPolyK__$PolyK_ArrayTriple_$Impl_$;
hxPolyK__$PolyK_ArrayTriple_$Impl_$.__name__ = "hxPolyK._PolyK.ArrayTriple_Impl_";
hxPolyK__$PolyK_ArrayTriple_$Impl_$.__properties__ = {get_length:"get_length"};
hxPolyK__$PolyK_ArrayTriple_$Impl_$._new = function(arr) {
	var this1 = arr;
	return this1;
};
hxPolyK__$PolyK_ArrayTriple_$Impl_$.get_length = function(this1) {
	return this1.length / 3 | 0;
};
hxPolyK__$PolyK_ArrayTriple_$Impl_$.access = function(this1,key) {
	var i = key * 3 | 0;
	return { a : this1[i], b : this1[i + 1], c : this1[i + 2]};
};
hxPolyK__$PolyK_ArrayTriple_$Impl_$.reverse = function(this1) {
	var arr = [];
	var _g = 0;
	var _g1 = hxPolyK__$PolyK_ArrayTriple_$Impl_$._new(this1);
	while(_g < (_g1.length / 3 | 0)) {
		var i = _g * 3 | 0;
		var i_a = _g1[i];
		var i_b = _g1[i + 1];
		var i_c = _g1[i + 2];
		++_g;
		arr.unshift(i_c);
		arr.unshift(i_b);
		arr.unshift(i_a);
	}
	this1 = arr;
	return arr;
};
var hxPolyK_PolyK = function() {
};
$hxClasses["hxPolyK.PolyK"] = hxPolyK_PolyK;
hxPolyK_PolyK.__name__ = "hxPolyK.PolyK";
hxPolyK_PolyK.isSimple = function(p) {
	var n = p.length >> 1;
	if(n < 4) {
		return true;
	}
	var a1_x = 0.;
	var a1_y = 0.;
	var a1_flag = false;
	var a2_x = 0.;
	var a2_y = 0.;
	var a2_flag = false;
	var b1_x = 0.;
	var b1_y = 0.;
	var b1_flag = false;
	var b2_x = 0.;
	var b2_y = 0.;
	var b2_flag = false;
	var c_x = 0.;
	var c_y = 0.;
	var c_flag = false;
	var ind;
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		ind = 2 * i | 0;
		a1_x = p[ind];
		a1_y = p[ind + 1];
		if(i == n - 1) {
			a2_x = p[0];
			a2_y = p[1];
		} else {
			a2_x = p[ind + 2];
			a2_y = p[ind + 3];
		}
		var _g2 = 0;
		var _g11 = n;
		while(_g2 < _g11) {
			var j = _g2++;
			if(Math.abs(i - j) < 2) {
				continue;
			}
			if(j == n - 1 && i == 0) {
				continue;
			}
			if(i == n - 1 && j == 0) {
				continue;
			}
			ind = 2 * j;
			b1_x = p[ind];
			b1_y = p[ind + 1];
			if(j == n - 1) {
				b2_x = p[0];
				b2_y = p[1];
			} else {
				b2_x = p[ind + 2];
				b2_y = p[ind + 3];
			}
			var dax = a1_x - a2_x;
			var dbx = b1_x - b2_x;
			var day = a1_y - a2_y;
			var dby = b1_y - b2_y;
			var Den = dax * dby - day * dbx;
			var c;
			if(Den == 0) {
				c = null;
			} else {
				var A = a1_x * a2_y - a1_y * a2_x;
				var B = b1_x * b2_y - b1_y * b2_x;
				var I = { x : (A * dbx - dax * B) / Den, y : (A * dby - day * B) / Den, flag : false};
				var c1;
				var minx = Math.min(a1_x,a2_x);
				var maxx = Math.max(a1_x,a2_x);
				var miny = Math.min(a1_y,a2_y);
				var maxy = Math.max(a1_y,a2_y);
				if(minx == maxx ? miny <= I.y && I.y <= maxy : miny == maxy ? minx <= I.x && I.x <= maxx : minx <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx && miny <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy) {
					var minx1 = Math.min(b1_x,b2_x);
					var maxx1 = Math.max(b1_x,b2_x);
					var miny1 = Math.min(b1_y,b2_y);
					var maxy1 = Math.max(b1_y,b2_y);
					c1 = minx1 == maxx1 ? miny1 <= I.y && I.y <= maxy1 : miny1 == maxy1 ? minx1 <= I.x && I.x <= maxx1 : minx1 <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx1 && miny1 <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy1;
				} else {
					c1 = false;
				}
				c = c1 ? I : null;
			}
			if(c != null) {
				return false;
			}
		}
	}
	return true;
};
hxPolyK_PolyK.isConvex = function(p) {
	if(p.length < 6) {
		return true;
	}
	var l = p.length - 4;
	var l2 = l / 2 | 0;
	var i;
	var _g = 0;
	var _g1 = l2;
	while(_g < _g1) {
		var k = _g++;
		i = k * 2;
		var bx = p[i + 2];
		var by = p[i + 3];
		if(!((p[i + 1] - by) * (p[i + 4] - bx) + (bx - p[i]) * (p[i + 5] - by) >= 0)) {
			return false;
		}
	}
	var bx1 = p[l + 2];
	var by1 = p[l + 3];
	if(!((p[l + 1] - by1) * (p[0] - bx1) + (bx1 - p[l]) * (p[1] - by1) >= 0)) {
		return false;
	}
	var bx2 = p[0];
	var by2 = p[1];
	if(!((p[l + 3] - by2) * (p[2] - bx2) + (bx2 - p[l + 2]) * (p[3] - by2) >= 0)) {
		return false;
	}
	return true;
};
hxPolyK_PolyK.getArea = function(p) {
	if(p.length < 6) {
		return 0;
	}
	var l = p.length - 2;
	var sum = 0.;
	var l2 = l / 2 | 0;
	var i;
	var _g = 0;
	var _g1 = l2;
	while(_g < _g1) {
		var k = _g++;
		i = k * 2;
		sum += (p[i + 2] - p[i]) * (p[i + 1] + p[i + 3]);
	}
	sum += (p[0] - p[l]) * (p[l + 1] + p[1]);
	return -sum * 0.5;
};
hxPolyK_PolyK.getAABB = function(p) {
	var minx = Infinity;
	var miny = Infinity;
	var maxx = -Infinity;
	var maxy = -Infinity;
	var _g = 0;
	var _g1 = hxPolyK__$PolyK_ArrayPairs_$Impl_$._new(p);
	while(_g < (_g1.length / 2 | 0)) {
		var i = _g * 2 | 0;
		var i_x = _g1[i];
		var i_y = _g1[i + 1];
		++_g;
		minx = Math.min(minx,i_x);
		maxx = Math.max(maxx,i_x);
		miny = Math.min(miny,i_y);
		maxy = Math.max(maxy,i_y);
	}
	return { x : minx, y : miny, width : maxx - minx, height : maxy - miny};
};
hxPolyK_PolyK.reverse = function(p) {
	var ap = hxPolyK__$PolyK_ArrayPairs_$Impl_$._new(p);
	var arr = [];
	var _g = 0;
	var _g1 = hxPolyK__$PolyK_ArrayPairs_$Impl_$._new(ap);
	while(_g < (_g1.length / 2 | 0)) {
		var i = _g * 2 | 0;
		var i_x = _g1[i];
		var i_y = _g1[i + 1];
		++_g;
		arr.unshift(i_y);
		arr.unshift(i_x);
	}
	ap = arr;
	return arr;
};
hxPolyK_PolyK.triangulate = function(p) {
	var n = p.length >> 1;
	if(n < 3) {
		return [];
	}
	var tgs = [];
	var avl = [];
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		avl.push(i);
	}
	var i1 = 0;
	var al = n;
	var i0;
	var i11;
	var i2;
	var vi;
	var ax;
	var ay;
	var bx;
	var by;
	var cx;
	var cy;
	var earFound;
	while(al > 3) {
		i0 = avl[i1 % al];
		i11 = avl[(i1 + 1) % al];
		i2 = avl[(i1 + 2) % al];
		ax = p[2 * i0];
		ay = p[2 * i0 + 1];
		bx = p[2 * i11];
		by = p[2 * i11 + 1];
		cx = p[2 * i2];
		cy = p[2 * i2 + 1];
		earFound = false;
		if((ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0) {
			earFound = true;
			var _g2 = 0;
			var _g3 = al;
			while(_g2 < _g3) {
				var j = _g2++;
				var vi1 = avl[j];
				if(vi1 == i0 || vi1 == i11 || vi1 == i2) {
					continue;
				}
				var v0x = cx - ax;
				var v0y = cy - ay;
				var v1x = bx - ax;
				var v1y = by - ay;
				var v2x = p[2 * vi1] - ax;
				var v2y = p[2 * vi1 + 1] - ay;
				var dot00 = v0x * v0x + v0y * v0y;
				var dot01 = v0x * v1x + v0y * v1y;
				var dot02 = v0x * v2x + v0y * v2y;
				var dot11 = v1x * v1x + v1y * v1y;
				var dot12 = v1x * v2x + v1y * v2y;
				var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
				var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
				var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
				if(u >= 0 && v >= 0 && u + v < 1) {
					earFound = false;
					break;
				}
			}
		}
		if(earFound) {
			tgs.push(i0);
			tgs.push(i11);
			tgs.push(i2);
			avl.splice((i1 + 1) % al,1);
			--al;
			i1 = 0;
		} else if(i1++ > 3 * al) {
			break;
		}
	}
	tgs.push(avl[0]);
	tgs.push(avl[1]);
	tgs.push(avl[2]);
	return tgs;
};
hxPolyK_PolyK.containsPoint = function(p,px,py) {
	var n = p.length >> 1;
	var ax;
	var ay = p[2 * n - 3] - py;
	var bx = p[2 * n - 2] - px;
	var by = p[2 * n - 1] - py;
	var twoi;
	var lup = by > ay;
	var lx;
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		ax = bx;
		ay = by;
		twoi = 2 * i;
		bx = p[twoi] - px;
		by = p[twoi + 1] - py;
		if(ay == by) {
			continue;
		}
		lup = by > ay;
	}
	var depth = 0;
	var _g2 = 0;
	var _g3 = n;
	while(_g2 < _g3) {
		var i1 = _g2++;
		ax = bx;
		ay = by;
		twoi = 2 * i1;
		bx = p[twoi] - px;
		by = p[twoi + 1] - py;
		if(ay < 0 && by < 0) {
			continue;
		}
		if(ay > 0 && by > 0) {
			continue;
		}
		if(ax < 0 && bx < 0) {
			continue;
		}
		if(ay == by && Math.min(ax,bx) <= 0) {
			return true;
		}
		if(ay == by) {
			continue;
		}
		lx = ax + (bx - ax) * -ay / (by - ay);
		if(lx == 0) {
			return true;
		}
		if(lx > 0) {
			++depth;
		}
		if(ay == 0 && lup && by > ay) {
			--depth;
		}
		if(ay == 0 && !lup && by < ay) {
			--depth;
		}
		lup = by > ay;
	}
	return (depth & 1) == 1;
};
hxPolyK_PolyK.slice = function(p,ax,ay,bx,by) {
	if(hxPolyK_PolyK.containsPoint(p,ax,ay) || hxPolyK_PolyK.containsPoint(p,bx,by)) {
		return [p.slice(0)];
	}
	var a_y;
	var a_x = ax;
	a_y = ay;
	var a_flag = false;
	var b_x = ax;
	var b_y = ay;
	var b_flag = false;
	var iscs = [];
	var ps = [];
	var _g = 0;
	var _g1 = hxPolyK__$PolyK_ArrayPairs_$Impl_$._new(p);
	while(_g < (_g1.length / 2 | 0)) {
		var i = _g * 2 | 0;
		var i_x = _g1[i];
		var i_y = _g1[i + 1];
		++_g;
		ps.push({ x : i_x, y : i_y, flag : false});
	}
	var l = ps.length;
	var isc;
	var skip = false;
	var _g2 = 0;
	var _g3 = l;
	while(_g2 < _g3) {
		var i1 = _g2++;
		if(skip) {
			skip = false;
			continue;
		}
		var b1 = ps[i1];
		var b2 = ps[(i1 + 1) % ps.length];
		var dax = a_x - b_x;
		var dbx = b1.x - b2.x;
		var day = a_y - b_y;
		var dby = b1.y - b2.y;
		var Den = dax * dby - day * dbx;
		if(Den == 0) {
			isc = null;
		} else {
			var A = a_x * b_y - a_y * b_x;
			var B = b1.x * b2.y - b1.y * b2.x;
			var I = { x : (A * dbx - dax * B) / Den, y : (A * dby - day * B) / Den, flag : false};
			var isc1;
			var minx = Math.min(a_x,b_x);
			var maxx = Math.max(a_x,b_x);
			var miny = Math.min(a_y,b_y);
			var maxy = Math.max(a_y,b_y);
			if(minx == maxx ? miny <= I.y && I.y <= maxy : miny == maxy ? minx <= I.x && I.x <= maxx : minx <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx && miny <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy) {
				var minx1 = Math.min(b1.x,b2.x);
				var maxx1 = Math.max(b1.x,b2.x);
				var miny1 = Math.min(b1.y,b2.y);
				var maxy1 = Math.max(b1.y,b2.y);
				isc1 = minx1 == maxx1 ? miny1 <= I.y && I.y <= maxy1 : miny1 == maxy1 ? minx1 <= I.x && I.x <= maxx1 : minx1 <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx1 && miny1 <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy1;
			} else {
				isc1 = false;
			}
			isc = isc1 ? I : null;
		}
		var fisc = iscs[0];
		var lisc = iscs[iscs.length - 1];
		var tmp;
		var tmp1;
		if(isc != null) {
			if(fisc != null) {
				var dx = fisc.x - isc.x;
				var dy = fisc.y - isc.y;
				tmp1 = Math.sqrt(dx * dx + dy * dy) > 0.0000000001;
			} else {
				tmp1 = true;
			}
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			if(lisc != null) {
				var dx1 = lisc.x - isc.x;
				var dy1 = lisc.y - isc.y;
				tmp = Math.sqrt(dx1 * dx1 + dy1 * dy1) > 0.0000000001;
			} else {
				tmp = true;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			isc.flag = true;
			iscs.push(isc);
			ps.splice(i1 + 1,0);
			ps.splice(i1 + 1,0,isc);
			skip = true;
		}
	}
	if(iscs.length < 2) {
		return [p.slice(0)];
	}
	var comp = function(u,v) {
		var dx2 = u.x - a_x;
		var dy2 = u.y - a_y;
		var dx3 = v.x - a_x;
		var dy3 = v.y - a_y;
		var val = Math.sqrt(dx2 * dx2 + dy2 * dy2) - Math.sqrt(dx3 * dx3 + dy3 * dy3);
		if(val > 0) {
			return 1;
		}
		if(val < 0) {
			return -1;
		}
		return 0;
	};
	iscs.sort(comp);
	var pgs = [];
	var dir = 0;
	while(iscs.length > 0) {
		var n = ps.length;
		var i0 = iscs[0];
		var i11 = iscs[1];
		var ind0 = ps.indexOf(i0);
		var ind1 = ps.indexOf(i11);
		var solved = false;
		if(hxPolyK_PolyK.firstWithFlag(ps,ind0) == ind1) {
			solved = true;
		} else {
			i0 = iscs[1];
			i11 = iscs[0];
			ind0 = ps.indexOf(i0);
			ind1 = ps.indexOf(i11);
			if(hxPolyK_PolyK.firstWithFlag(ps,ind0) == ind1) {
				solved = true;
			}
		}
		if(solved) {
			--dir;
			var ind11 = ind1;
			var n1 = ps.length;
			var nps = [];
			if(ind11 < ind0) {
				ind11 += n1;
			}
			var l1 = ind11 + 1;
			var _g4 = ind0;
			var _g11 = l1;
			while(_g4 < _g11) {
				var i2 = _g4++;
				nps.push(ps[i2 % n1]);
			}
			var pgn = nps;
			pgs.push(pgn);
			var ind12 = ind0;
			var n2 = ps.length;
			var nps1 = [];
			if(ind12 < ind1) {
				ind12 += n2;
			}
			var l2 = ind12 + 1;
			var _g5 = ind1;
			var _g12 = l2;
			while(_g5 < _g12) {
				var i3 = _g5++;
				nps1.push(ps[i3 % n2]);
			}
			ps = nps1;
			i0.flag = i11.flag = false;
			iscs.splice(0,2);
			if(iscs.length == 0) {
				pgs.push(ps);
			}
		} else {
			++dir;
			iscs.reverse();
		}
		if(dir > 1) {
			break;
		}
	}
	var result = [];
	var l3 = pgs.length;
	var l21;
	var _g41 = 0;
	var _g51 = l3;
	while(_g41 < _g51) {
		var i4 = _g41++;
		var pg = pgs[i4];
		var npg = [];
		l21 = pg.length;
		var _g42 = 0;
		var _g52 = l21;
		while(_g42 < _g52) {
			var j = _g42++;
			npg.push(pg[j].x);
			npg.push(pg[j].y);
		}
		result.push(npg);
	}
	return result;
};
hxPolyK_PolyK.raycast = function(p,x,y,dx,dy,isc) {
	var l = p.length - 2;
	var tp = [];
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	var a1 = tp[0];
	var a2 = tp[1];
	var b1 = tp[2];
	var b2 = tp[3];
	var c = tp[4];
	a1.x = x;
	a1.y = y;
	a2.x = x + dx;
	a2.y = y + dy;
	if(isc == null) {
		isc = { dist : 0, edge : 0, norm : { x : 0, y : 0}, refl : { x : 0, y : 0}};
	}
	isc.dist = Infinity;
	var l2 = l / 2 | 0;
	var i;
	var _g = 0;
	var _g1 = l2;
	while(_g < _g1) {
		var k = _g++;
		i = k * 2;
		b1.x = p[i];
		b1.y = p[i + 1];
		b2.x = p[i + 2];
		b2.y = p[i + 3];
		var dax = a1.x - a2.x;
		var dbx = b1.x - b2.x;
		var day = a1.y - a2.y;
		var dby = b1.y - b2.y;
		var Den = dax * dby - day * dbx;
		var nisc;
		if(Den == 0) {
			nisc = null;
		} else {
			var A = a1.x * a2.y - a1.y * a2.x;
			var B = b1.x * b2.y - b1.y * b2.x;
			var I = c;
			var iDen = 1 / Den;
			I.x = (A * dbx - dax * B) * iDen;
			I.y = (A * dby - day * B) * iDen;
			var minx = Math.min(b1.x,b2.x);
			var maxx = Math.max(b1.x,b2.x);
			var miny = Math.min(b1.y,b2.y);
			var maxy = Math.max(b1.y,b2.y);
			nisc = !(minx == maxx ? miny <= I.y && I.y <= maxy : miny == maxy ? minx <= I.x && I.x <= maxx : minx <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx && miny <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy) ? null : day > 0 && I.y > a1.y || day < 0 && I.y < a1.y ? null : dax > 0 && I.x > a1.x || dax < 0 && I.x < a1.x ? null : I;
		}
		if(nisc != null) {
			var dx1 = c.x - a1.x;
			var dy1 = c.y - a1.y;
			var nrl = Math.sqrt(dx1 * dx1 + dy1 * dy1);
			if(nrl < isc.dist) {
				var dx2 = b2.x - b1.x;
				var dy2 = b2.y - b1.y;
				var ibl = 1 / Math.sqrt(dx2 * dx2 + dy2 * dy2);
				var nx = -(b2.y - b1.y) * ibl;
				var ny = (b2.x - b1.x) * ibl;
				var ddot = 2 * (dx * nx + dy * ny);
				isc.dist = nrl;
				isc.norm.x = nx;
				isc.norm.y = ny;
				isc.refl.x = -ddot * nx + dx;
				isc.refl.y = -ddot * ny + dy;
				isc.edge = i / 2;
			}
		}
	}
	b1.x = b2.x;
	b1.y = b2.y;
	b2.x = p[0];
	b2.y = p[1];
	var dax1 = a1.x - a2.x;
	var dbx1 = b1.x - b2.x;
	var day1 = a1.y - a2.y;
	var dby1 = b1.y - b2.y;
	var Den1 = dax1 * dby1 - day1 * dbx1;
	var nisc1;
	if(Den1 == 0) {
		nisc1 = null;
	} else {
		var A1 = a1.x * a2.y - a1.y * a2.x;
		var B1 = b1.x * b2.y - b1.y * b2.x;
		var I1 = c;
		var iDen1 = 1 / Den1;
		I1.x = (A1 * dbx1 - dax1 * B1) * iDen1;
		I1.y = (A1 * dby1 - day1 * B1) * iDen1;
		var minx1 = Math.min(b1.x,b2.x);
		var maxx1 = Math.max(b1.x,b2.x);
		var miny1 = Math.min(b1.y,b2.y);
		var maxy1 = Math.max(b1.y,b2.y);
		nisc1 = !(minx1 == maxx1 ? miny1 <= I1.y && I1.y <= maxy1 : miny1 == maxy1 ? minx1 <= I1.x && I1.x <= maxx1 : minx1 <= I1.x + 0.0000000001 && I1.x - 0.0000000001 <= maxx1 && miny1 <= I1.y + 0.0000000001 && I1.y - 0.0000000001 <= maxy1) ? null : day1 > 0 && I1.y > a1.y || day1 < 0 && I1.y < a1.y ? null : dax1 > 0 && I1.x > a1.x || dax1 < 0 && I1.x < a1.x ? null : I1;
	}
	if(nisc1 != null) {
		var dx3 = c.x - a1.x;
		var dy3 = c.y - a1.y;
		var nrl1 = Math.sqrt(dx3 * dx3 + dy3 * dy3);
		if(nrl1 < isc.dist) {
			var dx4 = b2.x - b1.x;
			var dy4 = b2.y - b1.y;
			var ibl1 = 1 / Math.sqrt(dx4 * dx4 + dy4 * dy4);
			var nx1 = -(b2.y - b1.y) * ibl1;
			var ny1 = (b2.x - b1.x) * ibl1;
			var ddot1 = 2 * (dx * nx1 + dy * ny1);
			isc.dist = nrl1;
			isc.norm.x = nx1;
			isc.norm.y = ny1;
			isc.refl.x = -ddot1 * nx1 + dx;
			isc.refl.y = -ddot1 * ny1 + dy;
			isc.edge = p.length / 2 - 1;
		}
	}
	if(isc.dist != Infinity) {
		return isc;
	} else {
		return null;
	}
};
hxPolyK_PolyK.closestEdge = function(p,x,y,isc) {
	var l = p.length - 2;
	var tp = [];
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	tp.push({ x : 0., y : 0., flag : false});
	var a1 = tp[0];
	var b1 = tp[2];
	var b2 = tp[3];
	var c = tp[4];
	a1.x = x;
	a1.y = y;
	if(isc == null) {
		isc = { dist : 0, edge : 0, point : { x : 0, y : 0}, norm : { x : 0, y : 0}};
	}
	isc.dist = Infinity;
	var l2 = l / 2 | 0;
	var i;
	var _g = 0;
	var _g1 = l2;
	while(_g < _g1) {
		var k = _g++;
		i = k * 2;
		b1.x = p[i];
		b1.y = p[i + 1];
		b2.x = p[i + 2];
		b2.y = p[i + 3];
		var x1 = a1.x;
		var y1 = a1.y;
		var x11 = b1.x;
		var y11 = b1.y;
		var x2 = b2.x;
		var y2 = b2.y;
		var A = x1 - x11;
		var B = y1 - y11;
		var C = x2 - x11;
		var D = y2 - y11;
		var dot = A * C + B * D;
		var len_sq = C * C + D * D;
		var param = dot / len_sq;
		var xx;
		var yy;
		if(param < 0 || x11 == x2 && y11 == y2) {
			xx = x11;
			yy = y11;
		} else if(param > 1) {
			xx = x2;
			yy = y2;
		} else {
			xx = x11 + param * C;
			yy = y11 + param * D;
		}
		var dx = x1 - xx;
		var dy = y1 - yy;
		var dst = Math.sqrt(dx * dx + dy * dy);
		if(dst < isc.dist) {
			isc.dist = dst;
			isc.edge = i >> 1;
			isc.point.x = xx;
			isc.point.y = yy;
		}
	}
	b1.x = b2.x;
	b1.y = b2.y;
	b2.x = p[0];
	b2.y = p[1];
	var x3 = a1.x;
	var y3 = a1.y;
	var x12 = b1.x;
	var y12 = b1.y;
	var x21 = b2.x;
	var y21 = b2.y;
	var A1 = x3 - x12;
	var B1 = y3 - y12;
	var C1 = x21 - x12;
	var D1 = y21 - y12;
	var dot1 = A1 * C1 + B1 * D1;
	var len_sq1 = C1 * C1 + D1 * D1;
	var param1 = dot1 / len_sq1;
	var xx1;
	var yy1;
	if(param1 < 0 || x12 == x21 && y12 == y21) {
		xx1 = x12;
		yy1 = y12;
	} else if(param1 > 1) {
		xx1 = x21;
		yy1 = y21;
	} else {
		xx1 = x12 + param1 * C1;
		yy1 = y12 + param1 * D1;
	}
	var dx1 = x3 - xx1;
	var dy1 = y3 - yy1;
	var dst1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);
	if(dst1 < isc.dist) {
		isc.dist = dst1;
		isc.edge = l >> 1;
		isc.point.x = xx1;
		isc.point.y = yy1;
	}
	var idst = 1 / isc.dist;
	isc.norm.x = (x - isc.point.x) * idst;
	isc.norm.y = (y - isc.point.y) * idst;
	return isc;
};
hxPolyK_PolyK.pointLineDist = function(p,a,b,edge,isc) {
	var x = p.x;
	var y = p.y;
	var x1 = a.x;
	var y1 = a.y;
	var x2 = b.x;
	var y2 = b.y;
	var A = x - x1;
	var B = y - y1;
	var C = x2 - x1;
	var D = y2 - y1;
	var dot = A * C + B * D;
	var len_sq = C * C + D * D;
	var param = dot / len_sq;
	var xx;
	var yy;
	if(param < 0 || x1 == x2 && y1 == y2) {
		xx = x1;
		yy = y1;
	} else if(param > 1) {
		xx = x2;
		yy = y2;
	} else {
		xx = x1 + param * C;
		yy = y1 + param * D;
	}
	var dx = x - xx;
	var dy = y - yy;
	var dst = Math.sqrt(dx * dx + dy * dy);
	if(dst < isc.dist) {
		isc.dist = dst;
		isc.edge = edge;
		isc.point.x = xx;
		isc.point.y = yy;
	}
};
hxPolyK_PolyK.updateISC = function(dx,dy,a1,b1,b2,c,edge,isc) {
	var dx1 = c.x - a1.x;
	var dy1 = c.y - a1.y;
	var nrl = Math.sqrt(dx1 * dx1 + dy1 * dy1);
	if(nrl < isc.dist) {
		var dx2 = b2.x - b1.x;
		var dy2 = b2.y - b1.y;
		var ibl = 1 / Math.sqrt(dx2 * dx2 + dy2 * dy2);
		var nx = -(b2.y - b1.y) * ibl;
		var ny = (b2.x - b1.x) * ibl;
		var ddot = 2 * (dx * nx + dy * ny);
		isc.dist = nrl;
		isc.norm.x = nx;
		isc.norm.y = ny;
		isc.refl.x = -ddot * nx + dx;
		isc.refl.y = -ddot * ny + dy;
		isc.edge = edge;
	}
};
hxPolyK_PolyK.getPoints = function(ps,ind0,ind1) {
	var n = ps.length;
	var nps = [];
	if(ind1 < ind0) {
		ind1 += n;
	}
	var l = ind1 + 1;
	var _g = ind0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		nps.push(ps[i % n]);
	}
	return nps;
};
hxPolyK_PolyK.firstWithFlag = function(ps,ind) {
	var n = ps.length;
	while(true) {
		ind = (ind + 1) % n;
		if(ps[ind].flag) {
			return ind;
		}
	}
};
hxPolyK_PolyK.pointInTriangle = function(px,py,ax,ay,bx,by,cx,cy) {
	var v0x = cx - ax;
	var v0y = cy - ay;
	var v1x = bx - ax;
	var v1y = by - ay;
	var v2x = px - ax;
	var v2y = py - ay;
	var dot00 = v0x * v0x + v0y * v0y;
	var dot01 = v0x * v1x + v0y * v1y;
	var dot02 = v0x * v2x + v0y * v2y;
	var dot11 = v1x * v1x + v1y * v1y;
	var dot12 = v1x * v2x + v1y * v2y;
	var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
	var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
	var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
	if(u >= 0 && v >= 0) {
		return u + v < 1;
	} else {
		return false;
	}
};
hxPolyK_PolyK.rayLineIntersection = function(a1,a2,b1,b2,c) {
	var dax = a1.x - a2.x;
	var dbx = b1.x - b2.x;
	var day = a1.y - a2.y;
	var dby = b1.y - b2.y;
	var Den = dax * dby - day * dbx;
	if(Den == 0) {
		return null;
	}
	var A = a1.x * a2.y - a1.y * a2.x;
	var B = b1.x * b2.y - b1.y * b2.x;
	var I = c;
	var iDen = 1 / Den;
	I.x = (A * dbx - dax * B) * iDen;
	I.y = (A * dby - day * B) * iDen;
	var minx = Math.min(b1.x,b2.x);
	var maxx = Math.max(b1.x,b2.x);
	var miny = Math.min(b1.y,b2.y);
	var maxy = Math.max(b1.y,b2.y);
	if(!(minx == maxx ? miny <= I.y && I.y <= maxy : miny == maxy ? minx <= I.x && I.x <= maxx : minx <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx && miny <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy)) {
		return null;
	}
	if(day > 0 && I.y > a1.y || day < 0 && I.y < a1.y) {
		return null;
	}
	if(dax > 0 && I.x > a1.x || dax < 0 && I.x < a1.x) {
		return null;
	}
	return I;
};
hxPolyK_PolyK.getLineIntersection = function(a1,a2,b1,b2) {
	var dax = a1.x - a2.x;
	var dbx = b1.x - b2.x;
	var day = a1.y - a2.y;
	var dby = b1.y - b2.y;
	var Den = dax * dby - day * dbx;
	if(Den == 0) {
		return null;
	}
	var A = a1.x * a2.y - a1.y * a2.x;
	var B = b1.x * b2.y - b1.y * b2.x;
	var I = { x : (A * dbx - dax * B) / Den, y : (A * dby - day * B) / Den, flag : false};
	var tmp;
	var minx = Math.min(a1.x,a2.x);
	var maxx = Math.max(a1.x,a2.x);
	var miny = Math.min(a1.y,a2.y);
	var maxy = Math.max(a1.y,a2.y);
	if(minx == maxx ? miny <= I.y && I.y <= maxy : miny == maxy ? minx <= I.x && I.x <= maxx : minx <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx && miny <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy) {
		var minx1 = Math.min(b1.x,b2.x);
		var maxx1 = Math.max(b1.x,b2.x);
		var miny1 = Math.min(b1.y,b2.y);
		var maxy1 = Math.max(b1.y,b2.y);
		tmp = minx1 == maxx1 ? miny1 <= I.y && I.y <= maxy1 : miny1 == maxy1 ? minx1 <= I.x && I.x <= maxx1 : minx1 <= I.x + 0.0000000001 && I.x - 0.0000000001 <= maxx1 && miny1 <= I.y + 0.0000000001 && I.y - 0.0000000001 <= maxy1;
	} else {
		tmp = false;
	}
	if(tmp) {
		return I;
	}
	return null;
};
hxPolyK_PolyK.inRect = function(a,b,c) {
	var minx = Math.min(b.x,c.x);
	var maxx = Math.max(b.x,c.x);
	var miny = Math.min(b.y,c.y);
	var maxy = Math.max(b.y,c.y);
	if(minx == maxx) {
		if(miny <= a.y) {
			return a.y <= maxy;
		} else {
			return false;
		}
	}
	if(miny == maxy) {
		if(minx <= a.x) {
			return a.x <= maxx;
		} else {
			return false;
		}
	}
	if(minx <= a.x + 0.0000000001 && a.x - 0.0000000001 <= maxx && miny <= a.y + 0.0000000001) {
		return a.y - 0.0000000001 <= maxy;
	} else {
		return false;
	}
};
hxPolyK_PolyK.convex = function(ax,ay,bx,by,cx,cy) {
	return (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0;
};
hxPolyK_PolyK.dist = function(a,b) {
	var dx = b.x - a.x;
	var dy = b.y - a.y;
	return Math.sqrt(dx * dx + dy * dy);
};
hxPolyK_PolyK.prototype = {
	__class__: hxPolyK_PolyK
};
var iron_App = function(_appReady) {
	_appReady();
	kha_System.notifyOnFrames(iron_App.render);
	kha_Scheduler.addTimeTask(iron_App.update,0,0.0166666666666666664 * iron_system_Time.scale);
};
$hxClasses["iron.App"] = iron_App;
iron_App.__name__ = "iron.App";
iron_App.w = function() {
	return kha_System.windowWidth();
};
iron_App.h = function() {
	return kha_System.windowHeight();
};
iron_App.x = function() {
	return 0;
};
iron_App.y = function() {
	return 0;
};
iron_App.init = function(_appReady) {
	new iron_App(_appReady);
};
iron_App.reset = function() {
	iron_App.traitInits = [];
	iron_App.traitUpdates = [];
	iron_App.traitLateUpdates = [];
	iron_App.traitRenders = [];
	iron_App.traitRenders2D = [];
	if(iron_App.onResets != null) {
		var _g = 0;
		var _g1 = iron_App.onResets;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
	}
};
iron_App.update = function() {
	if(iron_Scene.active == null || !iron_Scene.active.ready) {
		return;
	}
	if(iron_App.pauseUpdates) {
		return;
	}
	iron_system_Time.update();
	iron_Scene.active.updateFrame();
	var i = 0;
	var l = iron_App.traitUpdates.length;
	while(i < l) {
		if(iron_App.traitInits.length > 0) {
			var _g = 0;
			var _g1 = iron_App.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				if(iron_App.traitInits.length > 0) {
					f();
				} else {
					break;
				}
			}
			iron_App.traitInits.splice(0,iron_App.traitInits.length);
		}
		iron_App.traitUpdates[i]();
		if(l <= iron_App.traitUpdates.length) {
			++i;
		} else {
			l = iron_App.traitUpdates.length;
		}
	}
	i = 0;
	l = iron_App.traitLateUpdates.length;
	while(i < l) {
		iron_App.traitLateUpdates[i]();
		if(l <= iron_App.traitLateUpdates.length) {
			++i;
		} else {
			l = iron_App.traitLateUpdates.length;
		}
	}
	if(iron_App.onEndFrames != null) {
		var _g2 = 0;
		var _g11 = iron_App.onEndFrames;
		while(_g2 < _g11.length) {
			var f1 = _g11[_g2];
			++_g2;
			f1();
		}
	}
	if(iron_App.lastw == -1) {
		iron_App.lastw = kha_System.windowWidth();
		iron_App.lasth = kha_System.windowHeight();
	}
	if(iron_App.lastw != kha_System.windowWidth() || iron_App.lasth != kha_System.windowHeight()) {
		if(iron_Scene.active != null && iron_Scene.active.camera != null) {
			iron_Scene.active.camera.buildProjection();
		}
	}
	iron_App.lastw = kha_System.windowWidth();
	iron_App.lasth = kha_System.windowHeight();
};
iron_App.render = function(frames) {
	var frame = frames[0];
	iron_App.framebuffer = frame;
	if(iron_Scene.active == null || !iron_Scene.active.ready) {
		iron_App.render2D(frame);
		return;
	}
	if(iron_App.traitInits.length > 0) {
		var _g = 0;
		var _g1 = iron_App.traitInits;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitInits.length > 0) {
				f();
			} else {
				break;
			}
		}
		iron_App.traitInits.splice(0,iron_App.traitInits.length);
	}
	iron_Scene.active.renderFrame(frame.get_g4());
	var _g2 = 0;
	var _g11 = iron_App.traitRenders;
	while(_g2 < _g11.length) {
		var f1 = _g11[_g2];
		++_g2;
		if(iron_App.traitRenders.length > 0) {
			f1(frame.get_g4());
		} else {
			break;
		}
	}
	iron_App.render2D(frame);
};
iron_App.render2D = function(frame) {
	if(iron_App.traitRenders2D.length > 0) {
		frame.get_g2().begin(false);
		var _g = 0;
		var _g1 = iron_App.traitRenders2D;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitRenders2D.length > 0) {
				f(frame.get_g2());
			} else {
				break;
			}
		}
		frame.get_g2().end();
	}
};
iron_App.notifyOnInit = function(f) {
	iron_App.traitInits.push(f);
};
iron_App.removeInit = function(f) {
	HxOverrides.remove(iron_App.traitInits,f);
};
iron_App.notifyOnUpdate = function(f) {
	iron_App.traitUpdates.push(f);
};
iron_App.removeUpdate = function(f) {
	HxOverrides.remove(iron_App.traitUpdates,f);
};
iron_App.notifyOnLateUpdate = function(f) {
	iron_App.traitLateUpdates.push(f);
};
iron_App.removeLateUpdate = function(f) {
	HxOverrides.remove(iron_App.traitLateUpdates,f);
};
iron_App.notifyOnRender = function(f) {
	iron_App.traitRenders.push(f);
};
iron_App.removeRender = function(f) {
	HxOverrides.remove(iron_App.traitRenders,f);
};
iron_App.notifyOnRender2D = function(f) {
	iron_App.traitRenders2D.push(f);
};
iron_App.removeRender2D = function(f) {
	HxOverrides.remove(iron_App.traitRenders2D,f);
};
iron_App.notifyOnReset = function(f) {
	if(iron_App.onResets == null) {
		iron_App.onResets = [];
	}
	iron_App.onResets.push(f);
};
iron_App.removeReset = function(f) {
	HxOverrides.remove(iron_App.onResets,f);
};
iron_App.notifyOnEndFrame = function(f) {
	if(iron_App.onEndFrames == null) {
		iron_App.onEndFrames = [];
	}
	iron_App.onEndFrames.push(f);
};
iron_App.removeEndFrame = function(f) {
	HxOverrides.remove(iron_App.onEndFrames,f);
};
iron_App.prototype = {
	__class__: iron_App
};
var iron_RenderPath = function() {
	this.depthBuffers = [];
	this.depthToRenderTarget = new haxe_ds_StringMap();
	this.renderTargets = new haxe_ds_StringMap();
	this.commands = null;
	this.cachedShaderContexts = new haxe_ds_StringMap();
	this.loading = 0;
	this.paused = false;
	this.drawOrder = 1;
	this.lastFrameTime = 0.0;
	this.viewportScaled = false;
	this.scissorSet = false;
	this.lastH = 0;
	this.lastW = 0;
	this.isProbe = false;
	this.isProbeCube = false;
	this.isProbePlanar = false;
	this.currentLightIndex = 0;
	this.currentTarget = null;
	this.frameTime = 0.0;
	this.frameScissorH = 0;
	this.frameScissorW = 0;
	this.frameScissorY = 0;
	this.frameScissorX = 0;
	this.frameScissor = false;
};
$hxClasses["iron.RenderPath"] = iron_RenderPath;
iron_RenderPath.__name__ = "iron.RenderPath";
iron_RenderPath.setActive = function(renderPath) {
	iron_RenderPath.active = renderPath;
};
iron_RenderPath.sortMeshesDistance = function(meshes) {
	meshes.sort(function(a,b) {
		if(a.cameraDistance >= b.cameraDistance) {
			return 1;
		} else {
			return -1;
		}
	});
};
iron_RenderPath.sortMeshesShader = function(meshes) {
	meshes.sort(function(a,b) {
		if(a.materials[0].name >= b.materials[0].name) {
			return 1;
		} else {
			return -1;
		}
	});
};
iron_RenderPath.prototype = {
	frameScissor: null
	,frameScissorX: null
	,frameScissorY: null
	,frameScissorW: null
	,frameScissorH: null
	,frameTime: null
	,currentTarget: null
	,currentFace: null
	,currentLightIndex: null
	,isProbePlanar: null
	,isProbeCube: null
	,isProbe: null
	,currentW: null
	,currentH: null
	,currentD: null
	,lastW: null
	,lastH: null
	,bindParams: null
	,meshesSorted: null
	,scissorSet: null
	,viewportScaled: null
	,currentG: null
	,frameG: null
	,lastFrameTime: null
	,drawOrder: null
	,paused: null
	,ready: null
	,get_ready: function() {
		return this.loading == 0;
	}
	,loading: null
	,cachedShaderContexts: null
	,commands: null
	,renderTargets: null
	,depthToRenderTarget: null
	,lightCastShadow: function() {
		return (iron_Scene.active.lights.length > 0 ? iron_Scene.active.lights[this.currentLightIndex] : null).data.raw.cast_shadow;
	}
	,lightIsSun: function() {
		return (iron_Scene.active.lights.length > 0 ? iron_Scene.active.lights[this.currentLightIndex] : null).data.raw.type == "sun";
	}
	,getLight: function(index) {
		if(iron_Scene.active.lights.length > 0) {
			return iron_Scene.active.lights[index];
		} else {
			return null;
		}
	}
	,renderFrame: function(g) {
		if(!this.get_ready() || this.paused || kha_System.windowWidth() == 0 || kha_System.windowHeight() == 0) {
			return;
		}
		if(this.lastW > 0 && (this.lastW != kha_System.windowWidth() || this.lastH != kha_System.windowHeight())) {
			this.resize();
		}
		this.lastW = kha_System.windowWidth();
		this.lastH = kha_System.windowHeight();
		this.frameTime = kha_Scheduler.time() - this.lastFrameTime;
		this.lastFrameTime = kha_Scheduler.time();
		var cam = iron_Scene.active.camera;
		this.isProbePlanar = cam != null && cam.renderTarget != null;
		this.isProbeCube = cam != null && cam.renderTargetCube != null;
		this.isProbe = this.isProbePlanar || this.isProbeCube;
		if(this.isProbePlanar) {
			this.frameG = cam.renderTarget.get_g4();
		} else if(this.isProbeCube) {
			this.frameG = cam.renderTargetCube.get_g4();
		} else {
			this.frameG = g;
		}
		this.currentG = this.frameG;
		this.currentW = kha_System.windowWidth();
		this.currentH = kha_System.windowHeight();
		this.currentD = 1;
		this.currentFace = -1;
		this.meshesSorted = false;
		this.currentLightIndex = 0;
		var _g = 0;
		var _g1 = iron_Scene.active.lights;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.visible) {
				l.buildMatrix(iron_Scene.active.camera);
			}
		}
		this.commands();
	}
	,setTarget: function(target,additional,viewportScale) {
		if(viewportScale == null) {
			viewportScale = 1.0;
		}
		if(target == "") {
			this.currentG = this.frameG;
			this.currentD = 1;
			this.currentTarget = null;
			this.currentFace = -1;
			if(this.isProbeCube) {
				this.currentW = iron_Scene.active.camera.renderTargetCube.get_width();
				this.currentH = iron_Scene.active.camera.renderTargetCube.get_width();
				var g = this.currentG;
				var face = iron_Scene.active.camera.currentFace;
				if(face >= 0) {
					g.beginFace(5 - face);
				} else {
					g.begin(null);
				}
			} else {
				this.currentW = kha_System.windowWidth();
				this.currentH = kha_System.windowHeight();
				if(this.frameScissor) {
					this.setFrameScissor();
				}
				var g1 = this.currentG;
				g1.begin(null);
			}
		} else {
			var _this = this.renderTargets;
			var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
			this.currentTarget = rt;
			var additionalImages = null;
			if(additional != null) {
				additionalImages = [];
				var _g = 0;
				while(_g < additional.length) {
					var s = additional[_g];
					++_g;
					var _this1 = this.renderTargets;
					var t = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
					additionalImages.push(t.image);
				}
			}
			this.currentG = rt.isCubeMap ? rt.cubeMap.get_g4() : rt.image.get_g4();
			this.currentW = rt.isCubeMap ? rt.cubeMap.get_width() : rt.image.get_width();
			this.currentH = rt.isCubeMap ? rt.cubeMap.get_height() : rt.image.get_height();
			if(rt.is3D) {
				this.currentD = rt.image.get_depth();
			}
			var g2 = this.currentG;
			var face1 = this.currentFace;
			if(face1 >= 0) {
				g2.beginFace(5 - face1);
			} else {
				g2.begin(additionalImages);
			}
		}
		if(viewportScale != 1.0) {
			this.viewportScaled = true;
			var viewW = this.currentW * viewportScale | 0;
			var viewH = this.currentH * viewportScale | 0;
			this.currentG.viewport(0,viewH,viewW,viewH);
			this.currentG.scissor(0,viewH,viewW,viewH);
		} else if(this.viewportScaled) {
			this.viewportScaled = false;
			this.setCurrentViewport(this.currentW,this.currentH);
			this.setCurrentScissor(this.currentW,this.currentH);
		}
		this.bindParams = null;
	}
	,begin: function(g,additionalRenderTargets,face) {
		if(face == null) {
			face = -1;
		}
		if(face >= 0) {
			g.beginFace(5 - face);
		} else {
			g.begin(additionalRenderTargets);
		}
	}
	,end: function(g) {
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,setCurrentViewport: function(viewW,viewH) {
		this.currentG.viewport(0,this.currentH - viewH,viewW,viewH);
	}
	,setCurrentScissor: function(viewW,viewH) {
		this.currentG.scissor(0,this.currentH - viewH,viewW,viewH);
		this.scissorSet = true;
	}
	,setFrameScissor: function() {
		this.frameG.scissor(this.frameScissorX,this.currentH - (this.frameScissorH - this.frameScissorY),this.frameScissorW,this.frameScissorH);
	}
	,setViewport: function(viewW,viewH) {
		this.setCurrentViewport(viewW,viewH);
		this.setCurrentScissor(viewW,viewH);
	}
	,clearTarget: function(colorFlag,depthFlag) {
		if(colorFlag == -1) {
			if(iron_Scene.active.world != null) {
				colorFlag = iron_Scene.active.world.raw.background_color;
			} else if(iron_Scene.active.camera != null) {
				var cc = iron_Scene.active.camera.data.raw.clear_color;
				if(cc != null) {
					colorFlag = kha__$Color_Color_$Impl_$.fromFloats(cc[0],cc[1],cc[2]);
				}
			}
		}
		this.currentG.clear(colorFlag,depthFlag,null);
	}
	,clearImage: function(target,color) {
		var _this = this.renderTargets;
		var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
		rt.image.clear(0,0,0,rt.image.get_width(),rt.image.get_height(),rt.image.get_depth(),color);
	}
	,generateMipmaps: function(target) {
		var _this = this.renderTargets;
		var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
		rt.image.generateMipmaps(1000);
	}
	,drawMeshes: function(context) {
		var light = iron_Scene.active.lights.length > 0 ? iron_Scene.active.lights[this.currentLightIndex] : null;
		if(light != null && !light.visible) {
			if(this.currentLightIndex > 0) {
				return;
			}
		}
		var isShadows = context == "shadowmap";
		if(isShadows) {
			if(light == null || !light.data.raw.cast_shadow || light.data.raw.strength == 0) {
				return;
			}
		}
		if(this.currentFace >= 0 && light != null) {
			light.setCubeFace(5 - this.currentFace,iron_Scene.active.camera);
		}
		var g = this.currentG;
		var drawn = false;
		if(!drawn) {
			this.submitDraw(context);
		}
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,submitDraw: function(context) {
		var light = iron_Scene.active.lights.length > 0 ? iron_Scene.active.lights[this.currentLightIndex] : null;
		var camera = iron_Scene.active.camera;
		var meshes = iron_Scene.active.meshes;
		var g = this.currentG;
		iron_object_MeshObject.lastPipeline = null;
		if(!this.meshesSorted && camera != null) {
			var camX = camera.transform.world.self._30;
			var camY = camera.transform.world.self._31;
			var camZ = camera.transform.world.self._32;
			var _g = 0;
			while(_g < meshes.length) {
				var mesh = meshes[_g];
				++_g;
				var vx = camX - mesh.transform.world.self._30;
				var vy = camY - mesh.transform.world.self._31;
				var vz = camZ - mesh.transform.world.self._32;
				mesh.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
			}
			if(this.drawOrder == 1) {
				iron_RenderPath.sortMeshesShader(meshes);
			} else {
				iron_RenderPath.sortMeshesDistance(meshes);
			}
			this.meshesSorted = true;
		}
		var _g1 = 0;
		while(_g1 < meshes.length) {
			var m = meshes[_g1];
			++_g1;
			m.render(g,context,camera,light,this.bindParams);
		}
	}
	,drawSkydome: function(handle) {
		if(iron_data_ConstData.skydomeVB == null) {
			iron_data_ConstData.createSkydomeData();
		}
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(cc.context == null) {
			return;
		}
		var g = this.currentG;
		g.setPipeline(cc.context.pipeState);
		var light = iron_Scene.active.lights.length > 0 ? iron_Scene.active.lights[this.currentLightIndex] : null;
		iron_object_Uniforms.setContextConstants(g,cc.context,iron_Scene.active.camera,light,this.bindParams);
		iron_object_Uniforms.setObjectConstants(g,cc.context,null,iron_Scene.active.camera,light);
		g.setVertexBuffer(iron_data_ConstData.skydomeVB);
		g.setIndexBuffer(iron_data_ConstData.skydomeIB);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,drawLightVolume: function(handle) {
		var vb = null;
		var ib = null;
		var light = iron_Scene.active.lights.length > 0 ? iron_Scene.active.lights[this.currentLightIndex] : null;
		var type = light.data.raw.type;
		if(type == "point" || type == "area") {
			if(iron_data_ConstData.sphereVB == null) {
				iron_data_ConstData.createSphereData();
			}
			vb = iron_data_ConstData.sphereVB;
			ib = iron_data_ConstData.sphereIB;
		} else if(type == "spot") {
			if(iron_data_ConstData.sphereVB == null) {
				iron_data_ConstData.createSphereData();
			}
			vb = iron_data_ConstData.sphereVB;
			ib = iron_data_ConstData.sphereIB;
		}
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		var g = this.currentG;
		g.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setContextConstants(g,cc.context,iron_Scene.active.camera,light,this.bindParams);
		iron_object_Uniforms.setObjectConstants(g,cc.context,null,iron_Scene.active.camera,light);
		g.setVertexBuffer(vb);
		g.setIndexBuffer(ib);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,bindTarget: function(target,uniform) {
		if(this.bindParams != null) {
			this.bindParams.push(target);
			this.bindParams.push(uniform);
		} else {
			this.bindParams = [target,uniform];
		}
	}
	,drawShader: function(handle) {
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(iron_data_ConstData.screenAlignedVB == null) {
			iron_data_ConstData.createScreenAlignedData();
		}
		var g = this.currentG;
		g.setPipeline(cc.context.pipeState);
		var light = iron_Scene.active.lights.length > 0 ? iron_Scene.active.lights[this.currentLightIndex] : null;
		iron_object_Uniforms.setContextConstants(g,cc.context,iron_Scene.active.camera,light,this.bindParams);
		iron_object_Uniforms.setObjectConstants(g,cc.context,null,iron_Scene.active.camera,light);
		g.setVertexBuffer(iron_data_ConstData.screenAlignedVB);
		g.setIndexBuffer(iron_data_ConstData.screenAlignedIB);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
	}
	,getComputeShader: function(handle) {
		return Reflect.field(kha_Shaders,handle + "_comp");
	}
	,loadShader: function(handle) {
		var _gthis = this;
		this.loading++;
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(cc != null) {
			this.loading--;
			return;
		}
		cc = new iron_CachedShaderContext();
		var _this1 = this.cachedShaderContexts;
		if(__map_reserved[handle] != null) {
			_this1.setReserved(handle,cc);
		} else {
			_this1.h[handle] = cc;
		}
		var shaderPath = handle.split("/");
		iron_data_Data.getShader(shaderPath[0],shaderPath[1],function(res) {
			cc.context = res.getContext(shaderPath[2]);
			_gthis.loading--;
		});
	}
	,unload: function() {
		var _this = this.renderTargets;
		var rt = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(rt.hasNext()) {
			var rt1 = rt.next();
			rt1.unload();
		}
	}
	,resize: function() {
		var _this = this.renderTargets;
		var rt = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(rt.hasNext()) {
			var rt1 = rt.next();
			if(rt1.raw.width == 0) {
				rt1.image.unload();
				rt1.image = this.createImage(rt1.raw,rt1.depthStencil);
				if(rt1.depthStencilFrom != "") {
					var key = rt1.depthStencilFrom;
					var _this1 = this.depthToRenderTarget;
					rt1.image.setDepthStencilFrom((__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).image);
				}
			}
		}
	}
	,createRenderTarget: function(t) {
		var rt = this.createTarget(t);
		var key = t.name;
		var _this = this.renderTargets;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,rt);
		} else {
			_this.h[key] = rt;
		}
		return rt;
	}
	,depthBuffers: null
	,createDepthBuffer: function(name,format) {
		this.depthBuffers.push({ name : name, format : format});
	}
	,createTarget: function(t) {
		var rt = new iron_RenderTarget(t);
		if(t.depth_buffer != null) {
			rt.hasDepth = true;
			var key = t.depth_buffer;
			var _this = this.depthToRenderTarget;
			var depthTarget = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(depthTarget == null) {
				var _g = 0;
				var _g1 = this.depthBuffers;
				while(_g < _g1.length) {
					var db = _g1[_g];
					++_g;
					if(db.name == t.depth_buffer) {
						var key1 = db.name;
						var _this1 = this.depthToRenderTarget;
						if(__map_reserved[key1] != null) {
							_this1.setReserved(key1,rt);
						} else {
							_this1.h[key1] = rt;
						}
						var s = db.format;
						var tmp;
						if(s == null || s == "") {
							tmp = 1;
						} else {
							switch(s) {
							case "DEPTH16":
								tmp = 5;
								break;
							case "DEPTH24":
								tmp = 1;
								break;
							default:
								tmp = 1;
							}
						}
						rt.depthStencil = tmp;
						rt.image = this.createImage(t,rt.depthStencil);
						break;
					}
				}
			} else {
				rt.depthStencil = 0;
				rt.depthStencilFrom = t.depth_buffer;
				rt.image = this.createImage(t,rt.depthStencil);
				rt.image.setDepthStencilFrom(depthTarget.image);
			}
		} else {
			rt.hasDepth = false;
			if(t.depth != null && t.depth > 1) {
				rt.is3D = true;
			}
			if(t.is_cubemap) {
				rt.isCubeMap = true;
				rt.depthStencil = 0;
				rt.cubeMap = this.createCubeMap(t,rt.depthStencil);
			} else {
				rt.depthStencil = 0;
				rt.image = this.createImage(t,rt.depthStencil);
			}
		}
		return rt;
	}
	,createImage: function(t,depthStencil) {
		var width = t.width == 0 ? kha_System.windowWidth() : t.width;
		var height = t.height == 0 ? kha_System.windowHeight() : t.height;
		var depth = t.depth != null ? t.depth : 0;
		if(t.displayp != null) {
			if(width > height) {
				width = width * (t.displayp / height) | 0;
				height = t.displayp;
			} else {
				height = height * (t.displayp / width) | 0;
				width = t.displayp;
			}
		}
		if(t.scale != null) {
			width = width * t.scale | 0;
			height = height * t.scale | 0;
			depth = depth * t.scale | 0;
		}
		if(t.depth != null && t.depth > 1) {
			var img;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					img = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					img = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					img = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					img = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "R16":
					img = kha_graphics4_TextureFormat.A16;
					break;
				case "R32":
					img = kha_graphics4_TextureFormat.A32;
					break;
				case "R8":
					img = kha_graphics4_TextureFormat.L8;
					break;
				case "RGBA128":
					img = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					img = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					img = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					img = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				img = kha_graphics4_TextureFormat.RGBA32;
			}
			var img1 = kha_Image.create3D(width,height,depth,img);
			if(t.mipmaps) {
				img1.generateMipmaps(1000);
			}
			return img1;
		} else if(t.is_image != null && t.is_image) {
			var tmp;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "R16":
					tmp = kha_graphics4_TextureFormat.A16;
					break;
				case "R32":
					tmp = kha_graphics4_TextureFormat.A32;
					break;
				case "R8":
					tmp = kha_graphics4_TextureFormat.L8;
					break;
				case "RGBA128":
					tmp = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.create(width,height,tmp);
		} else {
			var tmp1;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp1 = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp1 = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp1 = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp1 = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "R16":
					tmp1 = kha_graphics4_TextureFormat.A16;
					break;
				case "R32":
					tmp1 = kha_graphics4_TextureFormat.A32;
					break;
				case "R8":
					tmp1 = kha_graphics4_TextureFormat.L8;
					break;
				case "RGBA128":
					tmp1 = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp1 = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp1 = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp1 = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp1 = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.createRenderTarget(width,height,tmp1,depthStencil);
		}
	}
	,createCubeMap: function(t,depthStencil) {
		var tmp;
		if(t.format != null) {
			switch(t.format) {
			case "A16":
				tmp = kha_graphics4_TextureFormat.A16;
				break;
			case "A32":
				tmp = kha_graphics4_TextureFormat.A32;
				break;
			case "A8":
				tmp = kha_graphics4_TextureFormat.L8;
				break;
			case "DEPTH16":
				tmp = kha_graphics4_TextureFormat.DEPTH16;
				break;
			case "R16":
				tmp = kha_graphics4_TextureFormat.A16;
				break;
			case "R32":
				tmp = kha_graphics4_TextureFormat.A32;
				break;
			case "R8":
				tmp = kha_graphics4_TextureFormat.L8;
				break;
			case "RGBA128":
				tmp = kha_graphics4_TextureFormat.RGBA128;
				break;
			case "RGBA32":
				tmp = kha_graphics4_TextureFormat.RGBA32;
				break;
			case "RGBA64":
				tmp = kha_graphics4_TextureFormat.RGBA64;
				break;
			default:
				tmp = kha_graphics4_TextureFormat.RGBA32;
			}
		} else {
			tmp = kha_graphics4_TextureFormat.RGBA32;
		}
		return kha_graphics4_CubeMap.createRenderTarget(t.width,tmp,depthStencil);
	}
	,getTextureFormat: function(s) {
		switch(s) {
		case "A16":
			return kha_graphics4_TextureFormat.A16;
		case "A32":
			return kha_graphics4_TextureFormat.A32;
		case "A8":
			return kha_graphics4_TextureFormat.L8;
		case "DEPTH16":
			return kha_graphics4_TextureFormat.DEPTH16;
		case "R16":
			return kha_graphics4_TextureFormat.A16;
		case "R32":
			return kha_graphics4_TextureFormat.A32;
		case "R8":
			return kha_graphics4_TextureFormat.L8;
		case "RGBA128":
			return kha_graphics4_TextureFormat.RGBA128;
		case "RGBA32":
			return kha_graphics4_TextureFormat.RGBA32;
		case "RGBA64":
			return kha_graphics4_TextureFormat.RGBA64;
		default:
			return kha_graphics4_TextureFormat.RGBA32;
		}
	}
	,getDepthStencilFormat: function(s) {
		if(s == null || s == "") {
			return 1;
		}
		switch(s) {
		case "DEPTH16":
			return 5;
		case "DEPTH24":
			return 1;
		default:
			return 1;
		}
	}
	,__class__: iron_RenderPath
	,__properties__: {get_ready:"get_ready"}
};
var iron_RenderTargetRaw = function() {
	this.is_cubemap = null;
	this.is_image = null;
	this.depth = null;
	this.mipmaps = null;
	this.depth_buffer = null;
	this.displayp = null;
	this.scale = null;
	this.format = null;
};
$hxClasses["iron.RenderTargetRaw"] = iron_RenderTargetRaw;
iron_RenderTargetRaw.__name__ = "iron.RenderTargetRaw";
iron_RenderTargetRaw.prototype = {
	name: null
	,width: null
	,height: null
	,format: null
	,scale: null
	,displayp: null
	,depth_buffer: null
	,mipmaps: null
	,depth: null
	,is_image: null
	,is_cubemap: null
	,__class__: iron_RenderTargetRaw
};
var iron_RenderTarget = function(raw) {
	this.isCubeMap = false;
	this.is3D = false;
	this.hasDepth = false;
	this.cubeMap = null;
	this.image = null;
	this.depthStencilFrom = "";
	this.raw = raw;
};
$hxClasses["iron.RenderTarget"] = iron_RenderTarget;
iron_RenderTarget.__name__ = "iron.RenderTarget";
iron_RenderTarget.prototype = {
	raw: null
	,depthStencil: null
	,depthStencilFrom: null
	,image: null
	,cubeMap: null
	,hasDepth: null
	,is3D: null
	,isCubeMap: null
	,unload: function() {
		if(this.image != null) {
			this.image.unload();
		}
		if(this.cubeMap != null) {
			this.cubeMap.unload();
		}
	}
	,__class__: iron_RenderTarget
};
var iron_CachedShaderContext = function() {
};
$hxClasses["iron.CachedShaderContext"] = iron_CachedShaderContext;
iron_CachedShaderContext.__name__ = "iron.CachedShaderContext";
iron_CachedShaderContext.prototype = {
	context: null
	,__class__: iron_CachedShaderContext
};
var iron_Scene = function() {
	this.traitRemoves = [];
	this.traitInits = [];
	this.groups = null;
	this.uid = iron_Scene.uidCounter++;
	this.meshes = [];
	this.lights = [];
	this.cameras = [];
	this.speakers = [];
	this.empties = [];
	this.animations = [];
	this.armatures = [];
	this.embedded = new haxe_ds_StringMap();
	this.root = new iron_object_Object();
	this.root.name = "Root";
	this.traitInits = [];
	this.traitRemoves = [];
	if(iron_Scene.global == null) {
		iron_Scene.global = new iron_object_Object();
	}
};
$hxClasses["iron.Scene"] = iron_Scene;
iron_Scene.__name__ = "iron.Scene";
iron_Scene.create = function(format,done) {
	iron_Scene.active = new iron_Scene();
	iron_Scene.active.ready = false;
	iron_Scene.active.raw = format;
	iron_data_Data.getWorld(format.name,format.world_ref,function(world) {
		iron_Scene.active.world = world;
		iron_Scene.active.addScene(format.name,null,function(sceneObject) {
			if(iron_Scene.active.cameras.length == 0) {
				haxe_Log.trace("No camera found for scene \"" + format.name + "\"",{ fileName : "../iron/Sources/iron/Scene.hx", lineNumber : 91, className : "iron.Scene", methodName : "create"});
			}
			iron_Scene.active.camera = iron_Scene.active.getCamera(format.camera_ref);
			iron_Scene.active.ready = true;
			var _g = 0;
			var _g1 = iron_Scene.active.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			iron_Scene.active.traitInits = [];
			iron_Scene.active.sceneParent = sceneObject;
			done(sceneObject);
		});
	});
};
iron_Scene.setActive = function(sceneName,done) {
	if(!iron_Scene.framePassed) {
		return;
	}
	iron_Scene.framePassed = false;
	if(iron_Scene.active != null) {
		iron_Scene.active.remove();
	}
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		iron_Scene.create(format,function(o) {
			if(done != null) {
				done(o);
			}
		});
	});
};
iron_Scene.generateTransform = function(object,transform) {
	var tmp;
	if(object.transform != null) {
		var a = object.transform.values;
		tmp = new iron_math_Mat4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]);
	} else {
		tmp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	}
	transform.world = tmp;
	var _this = transform.world;
	var loc = transform.loc;
	var quat = transform.rot;
	var scale = transform.scale;
	loc.x = _this.self._30;
	loc.y = _this.self._31;
	loc.z = _this.self._32;
	var _this1 = iron_math_Mat4.helpVec;
	_this1.x = _this.self._00;
	_this1.y = _this.self._01;
	_this1.z = _this.self._02;
	_this1.w = 1.0;
	var _this2 = _this1;
	scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
	var _this3 = iron_math_Mat4.helpVec;
	_this3.x = _this.self._10;
	_this3.y = _this.self._11;
	_this3.z = _this.self._12;
	_this3.w = 1.0;
	var _this4 = _this3;
	scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
	var _this5 = iron_math_Mat4.helpVec;
	_this5.x = _this.self._20;
	_this5.y = _this.self._21;
	_this5.z = _this.self._22;
	_this5.w = 1.0;
	var _this6 = _this5;
	scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
	var _this7 = _this.self;
	var m3 = _this7._12;
	var m4 = _this7._22;
	var m5 = _this7._32;
	var m6 = _this7._13;
	var m7 = _this7._23;
	var m8 = _this7._33;
	var c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
	var m31 = _this7._12;
	var m41 = _this7._22;
	var m51 = _this7._32;
	var m61 = _this7._13;
	var m71 = _this7._23;
	var m81 = _this7._33;
	var c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
	var m32 = _this7._11;
	var m42 = _this7._21;
	var m52 = _this7._31;
	var m62 = _this7._13;
	var m72 = _this7._23;
	var m82 = _this7._33;
	var c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
	var m33 = _this7._11;
	var m43 = _this7._21;
	var m53 = _this7._31;
	var m63 = _this7._12;
	var m73 = _this7._22;
	var m83 = _this7._32;
	var c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
	if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
		scale.x = -scale.x;
	}
	var invs = 1.0 / scale.x;
	iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
	iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
	iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
	invs = 1.0 / scale.y;
	iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
	iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
	iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
	invs = 1.0 / scale.z;
	iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
	iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
	iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
	var m = iron_math_Mat4.helpMat;
	var m11 = m.self._00;
	var m12 = m.self._10;
	var m13 = m.self._20;
	var m21 = m.self._01;
	var m22 = m.self._11;
	var m23 = m.self._21;
	var m311 = m.self._02;
	var m321 = m.self._12;
	var m331 = m.self._22;
	var tr = m11 + m22 + m331;
	var s = 0.0;
	if(tr > 0) {
		s = 0.5 / Math.sqrt(tr + 1.0);
		quat.w = 0.25 / s;
		quat.x = (m321 - m23) * s;
		quat.y = (m13 - m311) * s;
		quat.z = (m21 - m12) * s;
	} else if(m11 > m22 && m11 > m331) {
		s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
		quat.w = (m321 - m23) / s;
		quat.x = 0.25 * s;
		quat.y = (m12 + m21) / s;
		quat.z = (m13 + m311) / s;
	} else if(m22 > m331) {
		s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
		quat.w = (m13 - m311) / s;
		quat.x = (m12 + m21) / s;
		quat.y = 0.25 * s;
		quat.z = (m23 + m321) / s;
	} else {
		s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
		quat.w = (m21 - m12) / s;
		quat.x = (m13 + m311) / s;
		quat.y = (m23 + m321) / s;
		quat.z = 0.25 * s;
	}
	if(object.local_only != null) {
		transform.localOnly = object.local_only;
	}
	if(transform.object.parent != null) {
		transform.update();
	}
};
iron_Scene.createTraits = function(traits,object) {
	if(traits == null) {
		return;
	}
	var _g = 0;
	while(_g < traits.length) {
		var t = traits[_g];
		++_g;
		if(t.type == "Script") {
			var args = [];
			if(t.parameters != null) {
				var _g1 = 0;
				var _g11 = t.parameters;
				while(_g1 < _g11.length) {
					var param = _g11[_g1];
					++_g1;
					args.push(iron_Scene.parseArg(param));
				}
			}
			var traitInst = iron_Scene.createTraitClassInstance(t.class_name,args);
			if(traitInst == null) {
				haxe_Log.trace("Error: Trait '" + t.class_name + "' referenced in object '" + object.name + "' not found",{ fileName : "../iron/Sources/iron/Scene.hx", lineNumber : 609, className : "iron.Scene", methodName : "createTraits"});
				continue;
			}
			if(t.props != null) {
				var _g2 = 0;
				var _g12 = t.props.length / 2 | 0;
				while(_g2 < _g12) {
					var i = _g2++;
					var pname = t.props[i * 2];
					var pval = t.props[i * 2 + 1];
					if(pval != "") {
						Reflect.setProperty(traitInst,pname,iron_Scene.parseArg(pval));
					}
				}
			}
			object.addTrait(traitInst);
		}
	}
};
iron_Scene.parseArg = function(str) {
	if(str == "true") {
		return true;
	} else if(str == "false") {
		return false;
	} else if(str == "null") {
		return null;
	} else if(str.charAt(0) == "'") {
		return StringTools.replace(str,"'","");
	} else if(str.charAt(0) == "\"") {
		return StringTools.replace(str,"\"","");
	} else if(str.charAt(0) == "[") {
		str = StringTools.replace(str,"[","");
		str = StringTools.replace(str,"]","");
		str = StringTools.replace(str," ","");
		var ar = [];
		var s = str.split(",");
		var _g = 0;
		while(_g < s.length) {
			var childStr = s[_g];
			++_g;
			ar.push(iron_Scene.parseArg(childStr));
		}
		return ar;
	} else {
		var f = parseFloat(str);
		var i = Std.parseInt(str);
		if(f == i) {
			return i;
		} else {
			return f;
		}
	}
};
iron_Scene.createConstraints = function(constraints,object) {
	if(constraints == null) {
		return;
	}
	object.constraints = [];
	var _g = 0;
	while(_g < constraints.length) {
		var c = constraints[_g];
		++_g;
		var constr = new iron_object_Constraint(c);
		object.constraints.push(constr);
	}
};
iron_Scene.createTraitClassInstance = function(traitName,args) {
	var cname = $hxClasses[traitName];
	if(cname == null) {
		return null;
	}
	return Type.createInstance(cname,args);
};
iron_Scene.prototype = {
	uid: null
	,raw: null
	,root: null
	,sceneParent: null
	,camera: null
	,world: null
	,meshes: null
	,lights: null
	,cameras: null
	,speakers: null
	,empties: null
	,animations: null
	,armatures: null
	,groups: null
	,embedded: null
	,ready: null
	,traitInits: null
	,traitRemoves: null
	,remove: function() {
		var _g = 0;
		var _g1 = this.traitRemoves;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f();
		}
		var _g2 = 0;
		var _g3 = this.meshes;
		while(_g2 < _g3.length) {
			var o = _g3[_g2];
			++_g2;
			o.remove();
		}
		var _g4 = 0;
		var _g5 = this.lights;
		while(_g4 < _g5.length) {
			var o1 = _g5[_g4];
			++_g4;
			o1.remove();
		}
		var _g6 = 0;
		var _g7 = this.cameras;
		while(_g6 < _g7.length) {
			var o2 = _g7[_g6];
			++_g6;
			o2.remove();
		}
		var _g8 = 0;
		var _g9 = this.speakers;
		while(_g8 < _g9.length) {
			var o3 = _g9[_g8];
			++_g8;
			o3.remove();
		}
		var _g10 = 0;
		var _g11 = this.empties;
		while(_g10 < _g11.length) {
			var o4 = _g11[_g10];
			++_g10;
			o4.remove();
		}
		this.groups = null;
		this.root.remove();
	}
	,updateFrame: function() {
		if(!this.ready) {
			return;
		}
		var _g = 0;
		var _g1 = this.animations;
		while(_g < _g1.length) {
			var anim = _g1[_g];
			++_g;
			anim.update(0.0166666666666666664 * iron_system_Time.scale);
		}
		var _g2 = 0;
		var _g3 = this.empties;
		while(_g2 < _g3.length) {
			var e = _g3[_g2];
			++_g2;
			if(e != null && e.parent != null) {
				e.transform.update();
			}
		}
	}
	,renderFrame: function(g) {
		if(!this.ready || iron_RenderPath.active == null) {
			return;
		}
		iron_Scene.framePassed = true;
		if(this.camera != null) {
			this.camera.renderFrame(g);
		} else {
			iron_RenderPath.active.renderFrame(g);
		}
	}
	,addObject: function(parent) {
		var object = new iron_object_Object();
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,getChild: function(name) {
		return this.root.getChild(name);
	}
	,getTrait: function(c) {
		if(this.root.children.length > 0) {
			return this.root.children[0].getTrait(c);
		} else {
			return null;
		}
	}
	,getMesh: function(name) {
		var _g = 0;
		var _g1 = this.meshes;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			if(m.name == name) {
				return m;
			}
		}
		return null;
	}
	,getLight: function(name) {
		var _g = 0;
		var _g1 = this.lights;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.name == name) {
				return l;
			}
		}
		return null;
	}
	,getCamera: function(name) {
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == name) {
				return c;
			}
		}
		return null;
	}
	,getSpeaker: function(name) {
		var _g = 0;
		var _g1 = this.speakers;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == name) {
				return s;
			}
		}
		return null;
	}
	,getEmpty: function(name) {
		var _g = 0;
		var _g1 = this.empties;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			if(e.name == name) {
				return e;
			}
		}
		return null;
	}
	,addMeshObject: function(data,materials,parent) {
		var object = new iron_object_MeshObject(data,materials);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addLightObject: function(data,parent) {
		var object = new iron_object_LightObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addCameraObject: function(data,parent) {
		var object = new iron_object_CameraObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addSpeakerObject: function(data,parent) {
		var object = new iron_object_SpeakerObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addScene: function(sceneName,parent,done) {
		var _gthis = this;
		if(parent == null) {
			parent = this.addObject();
			parent.name = sceneName;
		}
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			iron_Scene.createTraits(format.traits,parent);
			_gthis.loadEmbeddedData(format.embedded_datas,function() {
				var objectsTraversed = 0;
				var objectsCount = _gthis.getObjectsCount(format.objects);
				var traverseObjects = null;
				traverseObjects = function(parent1,objects,parentObject,done1) {
					if(objects == null) {
						return;
					}
					var _g = 0;
					var _g1 = objects.length;
					while(_g < _g1) {
						var i = _g++;
						var o = [objects[i]];
						if(o[0].spawn != null && o[0].spawn == false) {
							if((objectsTraversed += 1) == objectsCount) {
								done1();
							}
							continue;
						}
						var o1 = o[0];
						var traverseObjects1 = (function(o2) {
							return function(object) {
								if(object != null) {
									traverseObjects(object,o2[0].children,o2[0],done1);
								}
								if((objectsTraversed += 1) == objectsCount) {
									done1();
								}
							};
						})(o);
						_gthis.createObject(o1,format,parent1,parentObject,traverseObjects1);
					}
				};
				if(format.objects == null || format.objects.length == 0) {
					done(parent);
				} else {
					traverseObjects(parent,format.objects,null,function() {
						done(parent);
					});
				}
			});
		});
	}
	,getObjectsCount: function(objects,discardNoSpawn) {
		if(discardNoSpawn == null) {
			discardNoSpawn = true;
		}
		if(objects == null) {
			return 0;
		}
		var result = objects.length;
		var _g = 0;
		while(_g < objects.length) {
			var o = objects[_g];
			++_g;
			if(discardNoSpawn && o.spawn != null && o.spawn == false) {
				continue;
			}
			if(o.children != null) {
				result += this.getObjectsCount(o.children);
			}
		}
		return result;
	}
	,spawnObject: function(name,parent,done,spawnChildren) {
		if(spawnChildren == null) {
			spawnChildren = true;
		}
		var _gthis = this;
		var objectsTraversed = 0;
		var obj = this.getObj(this.raw,name);
		var objectsCount = spawnChildren ? this.getObjectsCount([obj],false) : 1;
		var spawnObjectTree = null;
		spawnObjectTree = function(obj1,parent1,done1) {
			_gthis.createObject(obj1,_gthis.raw,parent1,null,function(object) {
				if(spawnChildren && obj1.children != null) {
					var _g = 0;
					var _g1 = obj1.children;
					while(_g < _g1.length) {
						var child = _g1[_g];
						++_g;
						spawnObjectTree(child,object,done1);
					}
				}
				if((objectsTraversed += 1) == objectsCount && done1 != null) {
					done1(object);
				}
			});
		};
		spawnObjectTree(obj,parent,done);
	}
	,parseObject: function(sceneName,objectName,parent,done) {
		var _gthis = this;
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			var o = _gthis.getObj(format,objectName);
			if(o == null) {
				done(null);
			}
			_gthis.createObject(o,format,parent,null,done);
		});
	}
	,getObj: function(format,name) {
		return this.traverseObjs(format.objects,name);
	}
	,traverseObjs: function(children,name) {
		var _g = 0;
		while(_g < children.length) {
			var o = children[_g];
			++_g;
			if(o.name == name) {
				return o;
			}
			if(o.children != null) {
				var res = this.traverseObjs(o.children,name);
				if(res != null) {
					return res;
				}
			}
		}
		return null;
	}
	,createObject: function(o,format,parent,parentObject,done) {
		var _gthis = this;
		var sceneName = format.name;
		if(o.type == "camera_object") {
			iron_data_Data.getCamera(sceneName,o.data_ref,function(b) {
				var object = _gthis.addCameraObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "light_object") {
			iron_data_Data.getLight(sceneName,o.data_ref,function(b1) {
				var object1 = _gthis.addLightObject(b1,parent);
				_gthis.returnObject(object1,o,done);
			});
		} else if(o.type == "mesh_object") {
			if(o.material_refs == null || o.material_refs.length == 0) {
				var object2 = this.addObject(parent);
				this.returnObject(object2,o,done);
			} else {
				var this1 = new Array(o.material_refs.length);
				var materials = this1;
				var materialsLoaded = 0;
				var _g = 0;
				var _g1 = o.material_refs.length;
				while(_g < _g1) {
					var i = [_g++];
					var ref = o.material_refs[i[0]];
					var tmp = (function(i1) {
						return function(mat) {
							materials[i1[0]] = mat;
							materialsLoaded += 1;
							if(materialsLoaded == o.material_refs.length) {
								var ref1 = o.data_ref.split("/");
								var object_file = "";
								var data_ref = "";
								if(ref1.length == 2) {
									object_file = ref1[0];
									data_ref = ref1[1];
								} else {
									object_file = sceneName;
									data_ref = o.data_ref;
								}
								if(parentObject != null && parentObject.bone_actions != null) {
									var bactions = [];
									var _g2 = 0;
									var _g11 = parentObject.bone_actions;
									while(_g2 < _g11.length) {
										var ref2 = _g11[_g2];
										++_g2;
										iron_data_Data.getSceneRaw(ref2,(function() {
											return function(action) {
												bactions.push(action);
												if(bactions.length == parentObject.bone_actions.length) {
													var armature = new iron_data_Armature(parentObject.name,bactions);
													_gthis.armatures.push(armature);
													_gthis.returnMeshObject(object_file,data_ref,sceneName,armature,materials,parent,o,done);
												}
											};
										})());
									}
								} else {
									_gthis.returnMeshObject(object_file,data_ref,sceneName,null,materials,parent,o,done);
								}
							}
						};
					})(i);
					iron_data_Data.getMaterial(sceneName,ref,tmp);
				}
			}
		} else if(o.type == "speaker_object") {
			var object3 = this.addSpeakerObject(iron_data_Data.getSpeakerRawByName(format.speaker_datas,o.data_ref),parent);
			this.returnObject(object3,o,done);
		} else if(o.type == "object") {
			var object4 = this.addObject(parent);
			this.returnObject(object4,o,function(ro) {
				if(o.group_ref != null) {
					var spawned = 0;
					var object_refs = _gthis.getGroupObjectRefs(o.group_ref);
					if(object_refs.length == 0) {
						done(ro);
					} else {
						var _g3 = 0;
						while(_g3 < object_refs.length) {
							var s = object_refs[_g3];
							++_g3;
							_gthis.spawnObject(s,ro,function(so) {
								if((spawned += 1) == object_refs.length) {
									done(ro);
								}
							});
						}
					}
				} else {
					done(ro);
				}
			});
		} else {
			done(null);
		}
	}
	,getGroupObjectRefs: function(group_ref) {
		var _g = 0;
		var _g1 = this.raw.groups;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.name == group_ref) {
				return g.object_refs;
			}
		}
		return null;
	}
	,isLod: function(raw) {
		if(raw != null && raw.lods != null) {
			return raw.lods.length > 0;
		} else {
			return false;
		}
	}
	,returnMeshObject: function(object_file,data_ref,sceneName,armature,materials,parent,o,done) {
		var _gthis = this;
		iron_data_Data.getMesh(object_file,data_ref,function(mesh) {
			if(mesh.isSkinned) {
				var g = mesh.geom;
				if(armature != null) {
					g.addArmature(armature);
				} else {
					g.addAction(mesh.format.objects,"none");
				}
			}
			var object = _gthis.addMeshObject(mesh,materials,parent);
			if(o.tilesheet_ref != null) {
				(js_Boot.__cast(object , iron_object_MeshObject)).setupTilesheet(sceneName,o.tilesheet_ref,o.tilesheet_action_ref);
			}
			_gthis.returnObject(object,o,done);
		});
	}
	,returnObject: function(object,o,done) {
		var _gthis = this;
		if(object != null && o.object_actions != null) {
			var oactions = [];
			while(oactions.length < o.object_actions.length) oactions.push(null);
			var actionsLoaded = 0;
			var _g = 0;
			var _g1 = o.object_actions.length;
			while(_g < _g1) {
				var i = [_g++];
				var ref = o.object_actions[i[0]];
				if(ref == "null") {
					actionsLoaded += 1;
					continue;
				}
				iron_data_Data.getSceneRaw(ref,(function(i1) {
					return function(action) {
						oactions[i1[0]] = action;
						actionsLoaded += 1;
						if(actionsLoaded == o.object_actions.length) {
							_gthis.returnObjectLoaded(object,o,oactions,done);
						}
					};
				})(i));
			}
		} else {
			this.returnObjectLoaded(object,o,null,done);
		}
	}
	,returnObjectLoaded: function(object,o,oactions,done) {
		if(object != null) {
			object.raw = o;
			object.name = o.name;
			if(o.visible != null) {
				object.visible = o.visible;
			}
			if(o.visible_mesh != null) {
				object.visibleMesh = o.visible_mesh;
			}
			if(o.visible_shadow != null) {
				object.visibleShadow = o.visible_shadow;
			}
			iron_Scene.createConstraints(o.constraints,object);
			iron_Scene.generateTransform(o,object.transform);
			object.setupAnimation(oactions);
			if(o.groups != null) {
				if(this.groups == null) {
					this.groups = new haxe_ds_StringMap();
				}
				var _g = 0;
				var _g1 = o.groups;
				while(_g < _g1.length) {
					var gname = _g1[_g];
					++_g;
					var _this = this.groups;
					var g = __map_reserved[gname] != null ? _this.getReserved(gname) : _this.h[gname];
					if(g == null) {
						g = [];
						var _this1 = this.groups;
						if(__map_reserved[gname] != null) {
							_this1.setReserved(gname,g);
						} else {
							_this1.h[gname] = g;
						}
					}
					g.push(object);
				}
			}
			iron_Scene.createTraits(o.traits,object);
		}
		done(object);
	}
	,loadEmbeddedData: function(datas,done) {
		var _gthis = this;
		if(datas == null) {
			done();
			return;
		}
		var loaded = 0;
		var _g = 0;
		while(_g < datas.length) {
			var file = [datas[_g]];
			++_g;
			iron_data_Data.getImage(file[0],(function(file1) {
				return function(image) {
					var _this = _gthis.embedded;
					if(__map_reserved[file1[0]] != null) {
						_this.setReserved(file1[0],image);
					} else {
						_this.h[file1[0]] = image;
					}
					loaded += 1;
					if(loaded == datas.length) {
						done();
					}
				};
			})(file));
		}
	}
	,notifyOnInit: function(f) {
		if(this.ready) {
			f();
		} else {
			this.traitInits.push(f);
		}
	}
	,removeInit: function(f) {
		HxOverrides.remove(this.traitInits,f);
	}
	,notifyOnRemove: function(f) {
		this.traitRemoves.push(f);
	}
	,__class__: iron_Scene
};
var iron_Trait = function() {
	this._render2D = null;
	this._render = null;
	this._lateUpdate = null;
	this._update = null;
	this._remove = null;
	this._init = null;
	this._add = null;
	this.name = "";
};
$hxClasses["iron.Trait"] = iron_Trait;
iron_Trait.__name__ = "iron.Trait";
iron_Trait.prototype = {
	name: null
	,object: null
	,_add: null
	,_init: null
	,_remove: null
	,_update: null
	,_lateUpdate: null
	,_render: null
	,_render2D: null
	,remove: function() {
		this.object.removeTrait(this);
	}
	,notifyOnAdd: function(f) {
		if(this._add == null) {
			this._add = [];
		}
		this._add.push(f);
	}
	,notifyOnInit: function(f) {
		if(this._init == null) {
			this._init = [];
		}
		this._init.push(f);
		iron_App.notifyOnInit(f);
	}
	,notifyOnRemove: function(f) {
		if(this._remove == null) {
			this._remove = [];
		}
		this._remove.push(f);
	}
	,notifyOnUpdate: function(f) {
		if(this._update == null) {
			this._update = [];
		}
		this._update.push(f);
		iron_App.notifyOnUpdate(f);
	}
	,removeUpdate: function(f) {
		HxOverrides.remove(this._update,f);
		iron_App.removeUpdate(f);
	}
	,notifyOnLateUpdate: function(f) {
		if(this._lateUpdate == null) {
			this._lateUpdate = [];
		}
		this._lateUpdate.push(f);
		iron_App.notifyOnLateUpdate(f);
	}
	,removeLateUpdate: function(f) {
		HxOverrides.remove(this._lateUpdate,f);
		iron_App.removeLateUpdate(f);
	}
	,notifyOnRender: function(f) {
		if(this._render == null) {
			this._render = [];
		}
		this._render.push(f);
		iron_App.notifyOnRender(f);
	}
	,removeRender: function(f) {
		HxOverrides.remove(this._render,f);
		iron_App.removeRender(f);
	}
	,notifyOnRender2D: function(f) {
		if(this._render2D == null) {
			this._render2D = [];
		}
		this._render2D.push(f);
		iron_App.notifyOnRender2D(f);
	}
	,removeRender2D: function(f) {
		HxOverrides.remove(this._render2D,f);
		iron_App.removeRender2D(f);
	}
	,__class__: iron_Trait
};
var iron_data_Armature = function(name,actions) {
	this.matsReady = false;
	this.actions = [];
	this.name = name;
	var _g = 0;
	while(_g < actions.length) {
		var a = actions[_g];
		++_g;
		var _g1 = 0;
		var _g11 = a.objects;
		while(_g1 < _g11.length) {
			var o = _g11[_g1];
			++_g1;
			iron_data_Armature.setParents(o);
		}
		var bones = [[]];
		iron_data_Armature.traverseBones(a.objects,(function(bones1) {
			return function(object) {
				bones1[0].push(object);
			};
		})(bones));
		this.actions.push({ name : a.name, bones : bones[0], mats : null});
	}
};
$hxClasses["iron.data.Armature"] = iron_data_Armature;
iron_data_Armature.__name__ = "iron.data.Armature";
iron_data_Armature.setParents = function(object) {
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children;
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		o.parent = object;
		iron_data_Armature.setParents(o);
	}
};
iron_data_Armature.traverseBones = function(objects,callback) {
	var _g = 0;
	var _g1 = objects.length;
	while(_g < _g1) {
		var i = _g++;
		iron_data_Armature.traverseBonesStep(objects[i],callback);
	}
};
iron_data_Armature.traverseBonesStep = function(object,callback) {
	if(object.type == "bone_object") {
		callback(object);
	}
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children.length;
	while(_g < _g1) {
		var i = _g++;
		iron_data_Armature.traverseBonesStep(object.children[i],callback);
	}
};
iron_data_Armature.prototype = {
	name: null
	,actions: null
	,matsReady: null
	,initMats: function() {
		if(this.matsReady) {
			return;
		}
		this.matsReady = true;
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.mats != null) {
				continue;
			}
			a.mats = [];
			var _g2 = 0;
			var _g11 = a.bones;
			while(_g2 < _g11.length) {
				var b = _g11[_g2];
				++_g2;
				var a1 = b.transform.values;
				a.mats.push(new iron_math_Mat4(a1[0],a1[1],a1[2],a1[3],a1[4],a1[5],a1[6],a1[7],a1[8],a1[9],a1[10],a1[11],a1[12],a1[13],a1[14],a1[15]));
			}
		}
	}
	,getAction: function(name) {
		var _g = 0;
		var _g1 = this.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == name) {
				return a;
			}
		}
		return null;
	}
	,__class__: iron_data_Armature
};
var iron_data_CameraData = function(raw,done) {
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.CameraData"] = iron_data_CameraData;
iron_data_CameraData.__name__ = "iron.data.CameraData";
iron_data_CameraData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getCameraRawByName(format.camera_datas,id);
		if(raw == null) {
			haxe_Log.trace("Camera data \"" + id + "\" not found!",{ fileName : "../iron/Sources/iron/data/CameraData.hx", lineNumber : 20, className : "iron.data.CameraData", methodName : "parse"});
			done(null);
		}
		new iron_data_CameraData(raw,done);
	});
};
iron_data_CameraData.prototype = {
	name: null
	,raw: null
	,__class__: iron_data_CameraData
};
var iron_data_ConstData = function() { };
$hxClasses["iron.data.ConstData"] = iron_data_ConstData;
iron_data_ConstData.__name__ = "iron.data.ConstData";
iron_data_ConstData.createScreenAlignedData = function() {
	var data = [-1.0,-1.0,3.0,-1.0,-1.0,3.0];
	var indices = [0,1,2];
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",1);
	iron_data_ConstData.screenAlignedVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_ConstData.screenAlignedVB.lock();
	var _g = 0;
	var _g1 = vertices.length;
	while(_g < _g1) {
		var i = _g++;
		vertices[i] = data[i];
	}
	iron_data_ConstData.screenAlignedVB.unlock();
	iron_data_ConstData.screenAlignedIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_ConstData.screenAlignedIB.lock();
	var _g2 = 0;
	var _g3 = id.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		id[i1] = indices[i1];
	}
	iron_data_ConstData.screenAlignedIB.unlock();
};
iron_data_ConstData.createSkydomeData = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",2);
	structure.add("nor",2);
	var structLength = structure.byteSize() / 4 | 0;
	var pos = iron_data_ConstData.skydomePos;
	var nor = iron_data_ConstData.skydomeNor;
	iron_data_ConstData.skydomeVB = new kha_graphics4_VertexBuffer(pos.length / 3 | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_ConstData.skydomeVB.lock();
	var _g = 0;
	var _g1 = vertices.length / structLength | 0;
	while(_g < _g1) {
		var i = _g++;
		vertices[i * structLength] = pos[i * 3];
		vertices[i * structLength + 1] = pos[i * 3 + 1];
		vertices[i * structLength + 2] = pos[i * 3 + 2];
		vertices[i * structLength + 3] = -nor[i * 3];
		vertices[i * structLength + 4] = -nor[i * 3 + 1];
		vertices[i * structLength + 5] = -nor[i * 3 + 2];
	}
	iron_data_ConstData.skydomeVB.unlock();
	var indices = iron_data_ConstData.skydomeIndices;
	iron_data_ConstData.skydomeIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_ConstData.skydomeIB.lock();
	var _g2 = 0;
	var _g3 = id.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		id[i1] = indices[i1];
	}
	iron_data_ConstData.skydomeIB.unlock();
};
iron_data_ConstData.createSphereData = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",2);
	var data = iron_data_ConstData.spherePos;
	iron_data_ConstData.sphereVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_ConstData.sphereVB.lock();
	var _g = 0;
	var _g1 = vertices.length;
	while(_g < _g1) {
		var i = _g++;
		vertices[i] = data[i];
	}
	iron_data_ConstData.sphereVB.unlock();
	var indices = iron_data_ConstData.sphereIndices;
	iron_data_ConstData.sphereIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_ConstData.sphereIB.lock();
	var _g2 = 0;
	var _g3 = id.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		id[i1] = indices[i1];
	}
	iron_data_ConstData.sphereIB.unlock();
};
iron_data_ConstData.createConeData = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",2);
	var data = iron_data_ConstData.conePos;
	iron_data_ConstData.coneVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_ConstData.coneVB.lock();
	var _g = 0;
	var _g1 = vertices.length;
	while(_g < _g1) {
		var i = _g++;
		vertices[i] = data[i];
	}
	iron_data_ConstData.coneVB.unlock();
	var indices = iron_data_ConstData.coneIndices;
	iron_data_ConstData.coneIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_ConstData.coneIB.lock();
	var _g2 = 0;
	var _g3 = id.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		id[i1] = indices[i1];
	}
	iron_data_ConstData.coneIB.unlock();
};
var iron_data_Data = function() {
};
$hxClasses["iron.data.Data"] = iron_data_Data;
iron_data_Data.__name__ = "iron.data.Data";
iron_data_Data.deleteAll = function() {
	var _this = iron_data_Data.cachedMeshes;
	var c = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	while(c.hasNext()) {
		var c1 = c.next();
		c1["delete"]();
	}
	iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
	var _this1 = iron_data_Data.cachedShaders;
	var c2 = new haxe_ds__$StringMap_StringMapIterator(_this1,_this1.arrayKeys());
	while(c2.hasNext()) {
		var c3 = c2.next();
		c3["delete"]();
	}
	iron_data_Data.cachedShaders = new haxe_ds_StringMap();
	iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
	iron_data_Data.cachedLights = new haxe_ds_StringMap();
	iron_data_Data.cachedCameras = new haxe_ds_StringMap();
	iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
	iron_data_Data.cachedParticles = new haxe_ds_StringMap();
	iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
	if(iron_RenderPath.active != null) {
		iron_RenderPath.active.unload();
	}
	var _this2 = iron_data_Data.cachedBlobs;
	var c4 = new haxe_ds__$StringMap_StringMapIterator(_this2,_this2.arrayKeys());
	while(c4.hasNext()) {
		var c5 = c4.next();
		c5.unload();
	}
	iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
	var _this3 = iron_data_Data.cachedImages;
	var c6 = new haxe_ds__$StringMap_StringMapIterator(_this3,_this3.arrayKeys());
	while(c6.hasNext()) {
		var c7 = c6.next();
		c7.unload();
	}
	iron_data_Data.cachedImages = new haxe_ds_StringMap();
	var _this4 = iron_data_Data.cachedSounds;
	var c8 = new haxe_ds__$StringMap_StringMapIterator(_this4,_this4.arrayKeys());
	while(c8.hasNext()) {
		var c9 = c8.next();
		c9.unload();
	}
	iron_data_Data.cachedSounds = new haxe_ds_StringMap();
	var _this5 = iron_data_Data.cachedVideos;
	var c10 = new haxe_ds__$StringMap_StringMapIterator(_this5,_this5.arrayKeys());
	while(c10.hasNext()) {
		var c11 = c10.next();
		c11.unload();
	}
	iron_data_Data.cachedVideos = new haxe_ds_StringMap();
	var _this6 = iron_data_Data.cachedFonts;
	var c12 = new haxe_ds__$StringMap_StringMapIterator(_this6,_this6.arrayKeys());
	while(c12.hasNext()) {
		var c13 = c12.next();
		c13.unload();
	}
	iron_data_Data.cachedFonts = new haxe_ds_StringMap();
};
iron_data_Data.clearSceneData = function() {
	iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
	iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
	iron_data_Data.cachedLights = new haxe_ds_StringMap();
	iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
	iron_data_Data.cachedCameras = new haxe_ds_StringMap();
	iron_data_Data.cachedParticles = new haxe_ds_StringMap();
	iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
	iron_data_Data.cachedShaders = new haxe_ds_StringMap();
	iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
};
iron_data_Data.getMesh = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedMeshes;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMeshes;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMeshes;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_MeshData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedMeshes;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		b.handle = handle;
		var _g = 0;
		var _this4 = iron_data_Data.loadingMeshes;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMeshes.remove(handle);
	});
};
iron_data_Data.deleteMesh = function(handle) {
	var _this = iron_data_Data.cachedMeshes;
	var mesh = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(mesh == null) {
		return;
	}
	mesh["delete"]();
	iron_data_Data.cachedMeshes.remove(handle);
};
iron_data_Data.getLight = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedLights;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingLights;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingLights;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_LightData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedLights;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingLights;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingLights.remove(handle);
	});
};
iron_data_Data.getCamera = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedCameras;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingCameras;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingCameras;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_CameraData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedCameras;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingCameras;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingCameras.remove(handle);
	});
};
iron_data_Data.getMaterial = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedMaterials;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMaterials;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMaterials;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_MaterialData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedMaterials;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingMaterials;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMaterials.remove(handle);
	});
};
iron_data_Data.getParticle = function(file,name,done) {
	var handle = file + name;
	var _this = iron_data_Data.cachedParticles;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingParticles;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingParticles;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_ParticleData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedParticles;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingParticles;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingParticles.remove(handle);
	});
};
iron_data_Data.getWorld = function(file,name,done) {
	if(name == null) {
		done(null);
		return;
	}
	var handle = file + name;
	var _this = iron_data_Data.cachedWorlds;
	var cached = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingWorlds;
	var loading = __map_reserved[handle] != null ? _this1.getReserved(handle) : _this1.h[handle];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingWorlds;
	var value = [done];
	if(__map_reserved[handle] != null) {
		_this2.setReserved(handle,value);
	} else {
		_this2.h[handle] = value;
	}
	iron_data_WorldData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedWorlds;
		if(__map_reserved[handle] != null) {
			_this3.setReserved(handle,b);
		} else {
			_this3.h[handle] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingWorlds;
		var _g1 = __map_reserved[handle] != null ? _this4.getReserved(handle) : _this4.h[handle];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingWorlds.remove(handle);
	});
};
iron_data_Data.getShader = function(file,name,done,overrideContext) {
	var cacheName = name;
	if(overrideContext != null) {
		cacheName += "2";
	}
	var _this = iron_data_Data.cachedShaders;
	var cached = __map_reserved[cacheName] != null ? _this.getReserved(cacheName) : _this.h[cacheName];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingShaders;
	var loading = __map_reserved[cacheName] != null ? _this1.getReserved(cacheName) : _this1.h[cacheName];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingShaders;
	var value = [done];
	if(__map_reserved[cacheName] != null) {
		_this2.setReserved(cacheName,value);
	} else {
		_this2.h[cacheName] = value;
	}
	iron_data_ShaderData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedShaders;
		if(__map_reserved[cacheName] != null) {
			_this3.setReserved(cacheName,b);
		} else {
			_this3.h[cacheName] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingShaders;
		var _g1 = __map_reserved[cacheName] != null ? _this4.getReserved(cacheName) : _this4.h[cacheName];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingShaders.remove(cacheName);
	},overrideContext);
};
iron_data_Data.getSceneRaw = function(file,done) {
	var _this = iron_data_Data.cachedSceneRaws;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSceneRaws;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSceneRaws;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var compressed = StringTools.endsWith(file,".zip");
	var isJson = StringTools.endsWith(file,".json");
	var ext = compressed || isJson || StringTools.endsWith(file,".arm") ? "" : ".arm";
	iron_data_Data.getBlob(file + ext,function(b) {
		var compressed1 = compressed;
		var parsed = null;
		if(isJson) {
			var s = b.toString();
			if(s.charAt(0) == "{") {
				parsed = JSON.parse(s);
			} else {
				var i = new haxe_io_BytesInput(b.toBytes());
				i.set_bigEndian(true);
				parsed = iron_system_ArmPack.read(i);
			}
		} else {
			var i1 = new haxe_io_BytesInput(b.toBytes());
			i1.set_bigEndian(true);
			parsed = iron_system_ArmPack.read(i1);
		}
		iron_data_Data.returnSceneRaw(file,parsed);
	});
};
iron_data_Data.returnSceneRaw = function(file,parsed) {
	var _this = iron_data_Data.cachedSceneRaws;
	if(__map_reserved[file] != null) {
		_this.setReserved(file,parsed);
	} else {
		_this.h[file] = parsed;
	}
	var _g = 0;
	var _this1 = iron_data_Data.loadingSceneRaws;
	var _g1 = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		f(parsed);
	}
	iron_data_Data.loadingSceneRaws.remove(file);
};
iron_data_Data.getMeshRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getLightRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getCameraRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getMaterialRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getParticleRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getWorldRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getShaderRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getSpeakerRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getBlob = function(file,done) {
	var _this = iron_data_Data.cachedBlobs;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingBlobs;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingBlobs;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadBlobFromPath(p,function(b) {
		var _this3 = iron_data_Data.cachedBlobs;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingBlobs;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingBlobs.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "../iron/Sources/iron/data/Data.hx", lineNumber : 430, className : "iron.data.Data", methodName : "getBlob"});
};
iron_data_Data.getImage = function(file,done,readable,format) {
	if(format == null) {
		format = "RGBA32";
	}
	if(readable == null) {
		readable = false;
	}
	var _this = iron_data_Data.cachedImages;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingImages;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingImages;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadImageFromPath(p,readable,function(b) {
		var _this3 = iron_data_Data.cachedImages;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingImages;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingImages.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "../iron/Sources/iron/data/Data.hx", lineNumber : 452, className : "iron.data.Data", methodName : "getImage"});
};
iron_data_Data.deleteImage = function(handle) {
	var _this = iron_data_Data.cachedImages;
	var image = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
	if(image == null) {
		return;
	}
	image.unload();
	iron_data_Data.cachedImages.remove(handle);
};
iron_data_Data.getSound = function(file,done) {
	var _this = iron_data_Data.cachedSounds;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSounds;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSounds;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadSoundFromPath(p,function(b) {
		var _this3 = iron_data_Data.cachedSounds;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingSounds;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingSounds.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "../iron/Sources/iron/data/Data.hx", lineNumber : 496, className : "iron.data.Data", methodName : "getSound"});
};
iron_data_Data.getVideo = function(file,done) {
	var _this = iron_data_Data.cachedVideos;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingVideos;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingVideos;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadVideoFromPath(p,function(b) {
		var _this3 = iron_data_Data.cachedVideos;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingVideos;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingVideos.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "../iron/Sources/iron/data/Data.hx", lineNumber : 525, className : "iron.data.Data", methodName : "getVideo"});
};
iron_data_Data.getFont = function(file,done) {
	var _this = iron_data_Data.cachedFonts;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingFonts;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingFonts;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var p = file.charAt(0) == "/" || file.charAt(1) == ":" ? file : iron_data_Data.dataPath + file;
	kha_Assets.loadFontFromPath(p,function(b) {
		var _this3 = iron_data_Data.cachedFonts;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingFonts;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingFonts.remove(file);
		iron_data_Data.assetsLoaded++;
	},null,{ fileName : "../iron/Sources/iron/data/Data.hx", lineNumber : 545, className : "iron.data.Data", methodName : "getFont"});
};
iron_data_Data.prototype = {
	__class__: iron_data_Data
};
var iron_data_Geometry = function(indices,materialIndices,positions,normals,uvs,uvs1,cols,tangents,bones,weights,usage,instancedData,instancedType) {
	this.mats = null;
	this.actions = null;
	this.skeletonBoneLens = null;
	this.skeletonBoneRefs = null;
	this.skeletonTransformsI = null;
	this.skinBoneWeights = null;
	this.skinBoneIndices = null;
	this.skinBoneCounts = null;
	this.aabbMax = null;
	this.aabbMin = null;
	this.aabb = null;
	this.instanceCount = 0;
	this.instanced = false;
	this.instancedVB = null;
	this.numTris = 0;
	this.ready = false;
	this.name = "";
	this.count = -1;
	this.start = 0;
	this.vertexBufferMap = new haxe_ds_StringMap();
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	this.indices = indices;
	this.materialIndices = materialIndices;
	this.usage = usage;
	this.positions = positions;
	this.normals = normals;
	this.uvs = uvs;
	this.uvs1 = uvs1;
	this.cols = cols;
	this.tangents = tangents;
	this.bones = bones;
	this.weights = weights;
	this.instancedData = instancedData;
	this.instancedType = instancedType;
	this.struct = iron_data_Geometry.getVertexStructure(positions != null,normals != null,uvs != null,uvs1 != null,cols != null,tangents != null,bones != null,weights != null);
	this.structLength = this.struct.byteSize() / 4 | 0;
	this.structStr = "";
	var _g = 0;
	var _g1 = this.struct.elements;
	while(_g < _g1.length) {
		var e = _g1[_g];
		++_g;
		this.structStr += e.name;
	}
};
$hxClasses["iron.data.Geometry"] = iron_data_Geometry;
iron_data_Geometry.__name__ = "iron.data.Geometry";
iron_data_Geometry.getVertexStructure = function(pos,nor,tex,tex1,col,tang,bone,weight) {
	if(weight == null) {
		weight = false;
	}
	if(bone == null) {
		bone = false;
	}
	if(tang == null) {
		tang = false;
	}
	if(col == null) {
		col = false;
	}
	if(tex1 == null) {
		tex1 = false;
	}
	if(tex == null) {
		tex = false;
	}
	if(nor == null) {
		nor = false;
	}
	if(pos == null) {
		pos = false;
	}
	var structure = new kha_graphics4_VertexStructure();
	if(pos) {
		structure.add("pos",2);
	}
	if(nor) {
		structure.add("nor",2);
	}
	if(tex) {
		structure.add("tex",1);
	}
	if(tex1) {
		structure.add("tex1",1);
	}
	if(col) {
		structure.add("col",2);
	}
	if(tang) {
		structure.add("tang",2);
	}
	if(bone) {
		structure.add("bone",3);
	}
	if(weight) {
		structure.add("weight",3);
	}
	return structure;
};
iron_data_Geometry.buildVertices = function(vertices,pa,na,uva,uva1,ca,tanga,bonea,weighta,offset,fakeUVs) {
	if(fakeUVs == null) {
		fakeUVs = false;
	}
	if(offset == null) {
		offset = 0;
	}
	var numVertices = pa.length / 3 | 0;
	var di = -1 + offset;
	var _g = 0;
	var _g1 = numVertices;
	while(_g < _g1) {
		var i = _g++;
		vertices[++di] = pa[i * 3];
		vertices[++di] = pa[i * 3 + 1];
		vertices[++di] = pa[i * 3 + 2];
		if(na != null) {
			vertices[++di] = na[i * 3];
			vertices[++di] = na[i * 3 + 1];
			vertices[++di] = na[i * 3 + 2];
		}
		if(uva != null) {
			vertices[++di] = uva[i * 2];
			vertices[++di] = uva[i * 2 + 1];
		} else if(fakeUVs) {
			vertices[++di] = 0.0;
			vertices[++di] = 0.0;
		}
		if(uva1 != null) {
			vertices[++di] = uva1[i * 2];
			vertices[++di] = uva1[i * 2 + 1];
		}
		if(ca != null) {
			vertices[++di] = ca[i * 3];
			vertices[++di] = ca[i * 3 + 1];
			vertices[++di] = ca[i * 3 + 2];
		}
		if(tanga != null) {
			vertices[++di] = tanga[i * 3];
			vertices[++di] = tanga[i * 3 + 1];
			vertices[++di] = tanga[i * 3 + 2];
		}
		if(bonea != null) {
			vertices[++di] = bonea[i * 4];
			vertices[++di] = bonea[i * 4 + 1];
			vertices[++di] = bonea[i * 4 + 2];
			vertices[++di] = bonea[i * 4 + 3];
		}
		if(weighta != null) {
			vertices[++di] = weighta[i * 4];
			vertices[++di] = weighta[i * 4 + 1];
			vertices[++di] = weighta[i * 4 + 2];
			vertices[++di] = weighta[i * 4 + 3];
		}
	}
};
iron_data_Geometry.prototype = {
	vertexBuffer: null
	,vertexBufferMap: null
	,indexBuffers: null
	,start: null
	,count: null
	,name: null
	,ready: null
	,vertices: null
	,indices: null
	,numTris: null
	,materialIndices: null
	,struct: null
	,structLength: null
	,structStr: null
	,usage: null
	,instancedVB: null
	,instanced: null
	,instanceCount: null
	,positions: null
	,normals: null
	,uvs: null
	,uvs1: null
	,cols: null
	,tangents: null
	,bones: null
	,weights: null
	,instancedData: null
	,instancedType: null
	,aabb: null
	,aabbMin: null
	,aabbMax: null
	,skinBoneCounts: null
	,skinBoneIndices: null
	,skinBoneWeights: null
	,skeletonTransformsI: null
	,skeletonBoneRefs: null
	,skeletonBoneLens: null
	,actions: null
	,mats: null
	,'delete': function() {
		this.vertexBuffer["delete"]();
		var _g = 0;
		var _g1 = this.indexBuffers;
		while(_g < _g1.length) {
			var buf = _g1[_g];
			++_g;
			buf["delete"]();
		}
	}
	,applyScale: function(sx,sy,sz) {
		var vertices = this.vertexBuffer.lock();
		var _g = 0;
		var _g1 = vertices.length / this.structLength | 0;
		while(_g < _g1) {
			var i = _g++;
			vertices[i * this.structLength] *= sx;
			vertices[i * this.structLength + 1] *= sy;
			vertices[i * this.structLength + 2] *= sz;
		}
		this.vertexBuffer.unlock();
	}
	,setupInstanced: function(data,instancedType,usage) {
		this.instanced = true;
		this.instanceCount = data.length / 3 | 0;
		var structure = new kha_graphics4_VertexStructure();
		structure.instanced = true;
		structure.add("ipos",2);
		if(instancedType == 2 || instancedType == 4) {
			structure.add("irot",2);
		}
		if(instancedType == 3 || instancedType == 4) {
			structure.add("iscl",2);
		}
		this.instancedVB = new kha_graphics4_VertexBuffer(this.instanceCount,structure,usage,1);
		var vertices = this.instancedVB.lock();
		var _g = 0;
		var _g1 = vertices.length;
		while(_g < _g1) {
			var i = _g++;
			vertices[i] = data[i];
		}
		this.instancedVB.unlock();
	}
	,copyVertices: function(vertices,offset,fakeUVs) {
		if(fakeUVs == null) {
			fakeUVs = false;
		}
		if(offset == null) {
			offset = 0;
		}
		iron_data_Geometry.buildVertices(vertices,this.positions,this.normals,this.uvs,this.uvs1,this.cols,this.tangents,this.bones,this.weights,offset,fakeUVs);
	}
	,getVerticesLength: function() {
		var res = this.positions.length;
		if(this.normals != null) {
			res += this.normals.length;
		}
		if(this.uvs != null) {
			res += this.uvs.length;
		}
		if(this.uvs1 != null) {
			res += this.uvs1.length;
		}
		if(this.cols != null) {
			res += this.cols.length;
		}
		if(this.tangents != null) {
			res += this.tangents.length;
		}
		if(this.bones != null) {
			res += this.bones.length;
		}
		if(this.weights != null) {
			res += this.weights.length;
		}
		return res;
	}
	,hasAttrib: function(s,vs) {
		var _g = 0;
		while(_g < vs.length) {
			var e = vs[_g];
			++_g;
			if(e.name == s) {
				return true;
			}
		}
		return false;
	}
	,get: function(vs) {
		var s = "";
		var _g = 0;
		while(_g < vs.length) {
			var e = vs[_g];
			++_g;
			s += e.name;
		}
		var _this = this.vertexBufferMap;
		var vb = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
		if(vb == null) {
			var apos = this.hasAttrib("pos",vs);
			var anor = this.hasAttrib("nor",vs);
			var atex = this.hasAttrib("tex",vs);
			var atex1 = this.hasAttrib("tex1",vs);
			var acol = this.hasAttrib("col",vs);
			var atang = this.hasAttrib("tang",vs);
			var abone = this.hasAttrib("bone",vs);
			var aweight = this.hasAttrib("weight",vs);
			var struct = iron_data_Geometry.getVertexStructure(apos,anor,atex,atex1,acol,atang,abone,aweight);
			vb = new kha_graphics4_VertexBuffer(this.positions.length / 3 | 0,struct,this.usage);
			this.vertices = vb.lock();
			iron_data_Geometry.buildVertices(this.vertices,apos ? this.positions : null,anor ? this.normals : null,atex ? this.uvs : null,atex1 ? this.uvs1 : null,acol ? this.cols : null,atang ? this.tangents : null,abone ? this.bones : null,aweight ? this.weights : null,0,atex && this.uvs == null);
			vb.unlock();
			var _this1 = this.vertexBufferMap;
			if(__map_reserved[s] != null) {
				_this1.setReserved(s,vb);
			} else {
				_this1.h[s] = vb;
			}
			if(atex && this.uvs == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing UV map",{ fileName : "../iron/Sources/iron/data/Geometry.hx", lineNumber : 322, className : "iron.data.Geometry", methodName : "get"});
			}
			if(acol && this.cols == null) {
				haxe_Log.trace("Armory Warning: Geometry " + this.name + " is missing vertex colors",{ fileName : "../iron/Sources/iron/data/Geometry.hx", lineNumber : 323, className : "iron.data.Geometry", methodName : "get"});
			}
		}
		return vb;
	}
	,build: function() {
		if(this.ready) {
			return;
		}
		this.vertexBuffer = new kha_graphics4_VertexBuffer(this.positions.length / 3 | 0,this.struct,this.usage);
		this.vertices = this.vertexBuffer.lock();
		iron_data_Geometry.buildVertices(this.vertices,this.positions,this.normals,this.uvs,this.uvs1,this.cols,this.tangents,this.bones,this.weights);
		this.vertexBuffer.unlock();
		var key = this.structStr;
		var value = this.vertexBuffer;
		var _this = this.vertexBufferMap;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,value);
		} else {
			_this.h[key] = value;
		}
		this.indexBuffers = [];
		var _g = 0;
		var _g1 = this.indices;
		while(_g < _g1.length) {
			var id = _g1[_g];
			++_g;
			if(id.length == 0) {
				continue;
			}
			var indexBuffer = new kha_graphics4_IndexBuffer(id.length,this.usage);
			this.numTris += id.length / 3 | 0;
			var indicesA = indexBuffer.lock();
			var _g2 = 0;
			var _g11 = indicesA.length;
			while(_g2 < _g11) {
				var i = _g2++;
				indicesA[i] = id[i];
			}
			indexBuffer.unlock();
			this.indexBuffers.push(indexBuffer);
		}
		if(this.instancedData != null) {
			this.setupInstanced(this.instancedData,this.instancedType,this.usage);
		}
		this.ready = true;
	}
	,getVerticesCount: function() {
		return this.positions.length / 3 | 0;
	}
	,addArmature: function(armature) {
		var _g = 0;
		var _g1 = armature.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			this.addAction(a.bones,a.name);
		}
	}
	,addAction: function(bones,name) {
		if(bones == null) {
			return;
		}
		if(this.actions == null) {
			this.actions = new haxe_ds_StringMap();
			this.mats = new haxe_ds_StringMap();
		}
		var _this = this.actions;
		if((__map_reserved[name] != null ? _this.getReserved(name) : _this.h[name]) != null) {
			return;
		}
		var actionBones = [];
		var _g = 0;
		var _g1 = this.skeletonBoneRefs;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < bones.length) {
				var b = bones[_g2];
				++_g2;
				if(b.name == s) {
					actionBones.push(b);
				}
			}
		}
		var _this1 = this.actions;
		if(__map_reserved[name] != null) {
			_this1.setReserved(name,actionBones);
		} else {
			_this1.h[name] = actionBones;
		}
		var actionMats = [];
		var _g21 = 0;
		while(_g21 < actionBones.length) {
			var b1 = actionBones[_g21];
			++_g21;
			var a = b1.transform.values;
			actionMats.push(new iron_math_Mat4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]));
		}
		var _this2 = this.mats;
		if(__map_reserved[name] != null) {
			_this2.setReserved(name,actionMats);
		} else {
			_this2.h[name] = actionMats;
		}
	}
	,initSkeletonTransforms: function(transformsI) {
		this.skeletonTransformsI = [];
		var _g = 0;
		while(_g < transformsI.length) {
			var t = transformsI[_g];
			++_g;
			var mi = new iron_math_Mat4(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]);
			this.skeletonTransformsI.push(mi);
		}
	}
	,calculateAABB: function() {
		this.aabbMin = new iron_math_Vec4(-0.01,-0.01,-0.01);
		this.aabbMax = new iron_math_Vec4(0.01,0.01,0.01);
		this.aabb = new iron_math_Vec4();
		var i = 0;
		while(i < this.positions.length) {
			if(this.positions[i] > this.aabbMax.x) {
				this.aabbMax.x = this.positions[i];
			}
			if(this.positions[i + 1] > this.aabbMax.y) {
				this.aabbMax.y = this.positions[i + 1];
			}
			if(this.positions[i + 2] > this.aabbMax.z) {
				this.aabbMax.z = this.positions[i + 2];
			}
			if(this.positions[i] < this.aabbMin.x) {
				this.aabbMin.x = this.positions[i];
			}
			if(this.positions[i + 1] < this.aabbMin.y) {
				this.aabbMin.y = this.positions[i + 1];
			}
			if(this.positions[i + 2] < this.aabbMin.z) {
				this.aabbMin.z = this.positions[i + 2];
			}
			i += 3;
		}
		this.aabb.x = Math.abs(this.aabbMin.x) + Math.abs(this.aabbMax.x);
		this.aabb.y = Math.abs(this.aabbMin.y) + Math.abs(this.aabbMax.y);
		this.aabb.z = Math.abs(this.aabbMin.z) + Math.abs(this.aabbMax.z);
	}
	,__class__: iron_data_Geometry
};
var iron_data_LightData = function(raw,done) {
	this.colorTexture = null;
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	if(raw.color_texture != null) {
		iron_data_Data.getImage(raw.color_texture,function(image) {
			_gthis.colorTexture = image;
			done(_gthis);
		});
	} else {
		done(this);
	}
};
$hxClasses["iron.data.LightData"] = iron_data_LightData;
iron_data_LightData.__name__ = "iron.data.LightData";
iron_data_LightData.typeToInt = function(s) {
	switch(s) {
	case "area":
		return 3;
	case "point":
		return 1;
	case "spot":
		return 2;
	case "sun":
		return 0;
	default:
		return 0;
	}
};
iron_data_LightData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getLightRawByName(format.light_datas,id);
		if(raw == null) {
			haxe_Log.trace("Light data \"" + id + "\" not found!",{ fileName : "../iron/Sources/iron/data/LightData.hx", lineNumber : 40, className : "iron.data.LightData", methodName : "parse"});
			done(null);
		}
		new iron_data_LightData(raw,done);
	});
};
iron_data_LightData.prototype = {
	name: null
	,raw: null
	,colorTexture: null
	,__class__: iron_data_LightData
};
var iron_data_MaterialData = function(raw,done,file) {
	if(file == null) {
		file = "";
	}
	this.contexts = null;
	var _gthis = this;
	this.uid = ++iron_data_MaterialData.uidCounter;
	this.raw = raw;
	this.name = raw.name;
	var ref = raw.shader.split("/");
	var object_file = "";
	var data_ref = "";
	if(ref.length == 2) {
		object_file = ref[0];
		data_ref = ref[1];
	} else {
		object_file = file;
		data_ref = raw.shader;
	}
	iron_data_Data.getShader(object_file,data_ref,function(b) {
		_gthis.shader = b;
		_gthis.contexts = [];
		while(_gthis.contexts.length < raw.contexts.length) _gthis.contexts.push(null);
		var contextsLoaded = 0;
		var _g = 0;
		var _g1 = raw.contexts.length;
		while(_g < _g1) {
			var i = [_g++];
			var c = raw.contexts[i[0]];
			new iron_data_MaterialContext(c,(function(i1) {
				return function(self) {
					_gthis.contexts[i1[0]] = self;
					contextsLoaded += 1;
					if(contextsLoaded == raw.contexts.length) {
						done(_gthis);
					}
				};
			})(i));
		}
	},raw.override_context);
};
$hxClasses["iron.data.MaterialData"] = iron_data_MaterialData;
iron_data_MaterialData.__name__ = "iron.data.MaterialData";
iron_data_MaterialData.parse = function(file,name,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getMaterialRawByName(format.material_datas,name);
		if(raw == null) {
			haxe_Log.trace("Material data \"" + name + "\" not found!",{ fileName : "../iron/Sources/iron/data/MaterialData.hx", lineNumber : 58, className : "iron.data.MaterialData", methodName : "parse"});
			done(null);
		}
		new iron_data_MaterialData(raw,done,file);
	});
};
iron_data_MaterialData.prototype = {
	uid: null
	,name: null
	,raw: null
	,shader: null
	,contexts: null
	,getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(HxOverrides.substr(c.raw.name,0,name.length) == name) {
				return c;
			}
		}
		return null;
	}
	,__class__: iron_data_MaterialData
};
var iron_data_MaterialContext = function(raw,done) {
	this.id = 0;
	this.textures = null;
	var _gthis = this;
	this.raw = raw;
	this.id = iron_data_MaterialContext.num++;
	if(raw.bind_textures != null && raw.bind_textures.length > 0) {
		var this1 = new Array(raw.bind_textures.length);
		this.textures = this1;
		var texturesLoaded = 0;
		var _g = 0;
		var _g1 = raw.bind_textures.length;
		while(_g < _g1) {
			var i = [_g++];
			var tex = [raw.bind_textures[i[0]]];
			if(tex[0].file == "") {
				texturesLoaded += 1;
				if(texturesLoaded == raw.bind_textures.length) {
					done(this);
				}
				continue;
			}
			iron_data_Data.getImage(tex[0].file,(function(tex1,i1) {
				return function(image) {
					_gthis.textures[i1[0]] = image;
					texturesLoaded += 1;
					if(tex1[0].mipmaps != null) {
						var mipmaps = [];
						while(mipmaps.length < tex1[0].mipmaps.length) mipmaps.push(null);
						var mipmapsLoaded = 0;
						var _g2 = 0;
						var _g11 = tex1[0].mipmaps.length;
						while(_g2 < _g11) {
							var j = [_g2++];
							var name = tex1[0].mipmaps[j[0]];
							iron_data_Data.getImage(name,(function(j1,tex2) {
								return function(mipimg) {
									mipmaps[j1[0]] = mipimg;
									mipmapsLoaded += 1;
									if(mipmapsLoaded == tex2[0].mipmaps.length) {
										image.setMipmaps(mipmaps);
										tex2[0].mipmaps = null;
										tex2[0].generate_mipmaps = false;
										if(texturesLoaded == raw.bind_textures.length) {
											done(_gthis);
										}
									}
								};
							})(j,tex1));
						}
					} else if(tex1[0].generate_mipmaps == true && image != null) {
						image.generateMipmaps(1000);
						tex1[0].mipmaps = null;
						tex1[0].generate_mipmaps = false;
						if(texturesLoaded == raw.bind_textures.length) {
							done(_gthis);
						}
					} else if(texturesLoaded == raw.bind_textures.length) {
						done(_gthis);
					}
				};
			})(tex,i),false,tex[0].format != null ? tex[0].format : "RGBA32");
		}
	} else {
		done(this);
	}
};
$hxClasses["iron.data.MaterialContext"] = iron_data_MaterialContext;
iron_data_MaterialContext.__name__ = "iron.data.MaterialContext";
iron_data_MaterialContext.prototype = {
	raw: null
	,textures: null
	,id: null
	,setTextureParameters: function(g,textureIndex,context,unitIndex) {
		context.setTextureParameters(g,unitIndex,this.raw.bind_textures[textureIndex]);
	}
	,__class__: iron_data_MaterialContext
};
var iron_data_MeshData = function(raw,done) {
	this.refcount = 0;
	this.count = -1;
	this.start = 0;
	this.raw = raw;
	this.name = raw.name;
	var indices = [];
	var materialIndices = [];
	var _g = 0;
	var _g1 = raw.index_arrays;
	while(_g < _g1.length) {
		var ind = _g1[_g];
		++_g;
		indices.push(ind.values);
		materialIndices.push(ind.material);
	}
	var pa = this.getVertexArrayValues("pos");
	var na = this.getVertexArrayValues("nor");
	var uva = this.getVertexArrayValues("tex");
	var uva1 = this.getVertexArrayValues("tex1");
	var ca = this.getVertexArrayValues("col");
	var tanga = this.getVertexArrayValues("tang");
	this.isSkinned = raw.skin != null;
	var parsedUsage = kha_graphics4_Usage.StaticUsage;
	if(raw.dynamic_usage != null && raw.dynamic_usage == true) {
		parsedUsage = kha_graphics4_Usage.DynamicUsage;
	}
	var usage = parsedUsage;
	var bonea = null;
	var weighta = null;
	if(this.isSkinned) {
		var l = (pa.length / 3 | 0) * 4;
		var this1 = new Float32Array(l);
		bonea = this1;
		var this2 = new Float32Array(l);
		weighta = this2;
		var index = 0;
		var ai = 0;
		var _g2 = 0;
		var _g3 = pa.length / 3 | 0;
		while(_g2 < _g3) {
			var i = _g2++;
			var boneCount = raw.skin.bone_count_array[i];
			var _g21 = index;
			var _g31 = index + boneCount;
			while(_g21 < _g31) {
				var j = _g21++;
				bonea[ai] = raw.skin.bone_index_array[j];
				weighta[ai] = raw.skin.bone_weight_array[j];
				++ai;
			}
			var _g4 = boneCount;
			var _g5 = 4;
			while(_g4 < _g5) {
				var j1 = _g4++;
				bonea[ai] = 0.0;
				weighta[ai] = 0.0;
				++ai;
			}
			index += boneCount;
		}
	}
	this.geom = new iron_data_Geometry(indices,materialIndices,pa,na,uva,uva1,ca,tanga,bonea,weighta,usage,raw.instanced_data,raw.instanced_type);
	this.geom.name = this.name;
	done(this);
};
$hxClasses["iron.data.MeshData"] = iron_data_MeshData;
iron_data_MeshData.__name__ = "iron.data.MeshData";
iron_data_MeshData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getMeshRawByName(format.mesh_datas,id);
		if(raw == null) {
			haxe_Log.trace("Mesh data \"" + id + "\" not found!",{ fileName : "../iron/Sources/iron/data/MeshData.hx", lineNumber : 102, className : "iron.data.MeshData", methodName : "parse"});
			done(null);
		}
		new iron_data_MeshData(raw,function(dat) {
			dat.format = format;
			if(raw.skin != null) {
				dat.geom.skinBoneCounts = raw.skin.bone_count_array;
				dat.geom.skinBoneIndices = raw.skin.bone_index_array;
				dat.geom.skinBoneWeights = raw.skin.bone_weight_array;
				dat.geom.skeletonBoneRefs = raw.skin.bone_ref_array;
				dat.geom.skeletonBoneLens = raw.skin.bone_len_array;
				dat.geom.initSkeletonTransforms(raw.skin.transformsI);
			}
			done(dat);
		});
	});
};
iron_data_MeshData.prototype = {
	name: null
	,raw: null
	,format: null
	,geom: null
	,start: null
	,count: null
	,refcount: null
	,handle: null
	,isSkinned: null
	,'delete': function() {
		this.geom["delete"]();
	}
	,getVertexArrayValues: function(attrib) {
		var _g = 0;
		var _g1 = this.raw.vertex_arrays;
		while(_g < _g1.length) {
			var va = _g1[_g];
			++_g;
			if(va.attrib == attrib) {
				return va.values;
			}
		}
		return null;
	}
	,__class__: iron_data_MeshData
};
var iron_data_ParticleData = function(raw,done) {
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.ParticleData"] = iron_data_ParticleData;
iron_data_ParticleData.__name__ = "iron.data.ParticleData";
iron_data_ParticleData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getParticleRawByName(format.particle_datas,id);
		if(raw == null) {
			haxe_Log.trace("Particle data \"" + id + "\" not found!",{ fileName : "../iron/Sources/iron/data/ParticleData.hx", lineNumber : 21, className : "iron.data.ParticleData", methodName : "parse"});
			done(null);
		}
		new iron_data_ParticleData(raw,done);
	});
};
iron_data_ParticleData.prototype = {
	name: null
	,raw: null
	,__class__: iron_data_ParticleData
};
var iron_data_ShaderData = function(raw,done,overrideContext) {
	this.contexts = [];
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	var _g = 0;
	var _g1 = raw.contexts;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		this.contexts.push(null);
	}
	var contextsLoaded = 0;
	var _g2 = 0;
	var _g3 = raw.contexts.length;
	while(_g2 < _g3) {
		var i = [_g2++];
		var c1 = raw.contexts[i[0]];
		new iron_data_ShaderContext(c1,(function(i1) {
			return function(con) {
				_gthis.contexts[i1[0]] = con;
				contextsLoaded += 1;
				if(contextsLoaded == raw.contexts.length) {
					done(_gthis);
				}
			};
		})(i),overrideContext);
	}
};
$hxClasses["iron.data.ShaderData"] = iron_data_ShaderData;
iron_data_ShaderData.__name__ = "iron.data.ShaderData";
iron_data_ShaderData.parse = function(file,name,done,overrideContext) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getShaderRawByName(format.shader_datas,name);
		if(raw == null) {
			haxe_Log.trace("Shader data \"" + name + "\" not found!",{ fileName : "../iron/Sources/iron/data/ShaderData.hx", lineNumber : 47, className : "iron.data.ShaderData", methodName : "parse"});
			done(null);
		}
		new iron_data_ShaderData(raw,done,overrideContext);
	});
};
iron_data_ShaderData.prototype = {
	name: null
	,raw: null
	,contexts: null
	,'delete': function() {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c["delete"]();
		}
	}
	,getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.raw.name == name) {
				return c;
			}
		}
		return null;
	}
	,__class__: iron_data_ShaderData
};
var iron_data_ShaderContext = function(raw,done,overrideContext) {
	this.instancingType = 0;
	this.raw = raw;
	this.overrideContext = overrideContext;
	if(raw.name == "rect") {
		this.structure = iron_data_ShaderContext.getStructureRect();
		this.instancingType = 0;
	} else {
		this.parseVertexStructure();
	}
	this.compile(done);
};
$hxClasses["iron.data.ShaderContext"] = iron_data_ShaderContext;
iron_data_ShaderContext.__name__ = "iron.data.ShaderContext";
iron_data_ShaderContext.getStructureRect = function() {
	if(iron_data_ShaderContext.structureRect == null) {
		iron_data_ShaderContext.structureRect = new kha_graphics4_VertexStructure();
		iron_data_ShaderContext.structureRect.add("pos",1);
	}
	return iron_data_ShaderContext.structureRect;
};
iron_data_ShaderContext.prototype = {
	raw: null
	,pipeState: null
	,constants: null
	,textureUnits: null
	,paramsSet: null
	,structure: null
	,instancingType: null
	,overrideContext: null
	,compile: function(done) {
		if(this.pipeState != null) {
			this.pipeState["delete"]();
		}
		this.pipeState = new kha_graphics4_PipelineState();
		this.constants = [];
		this.textureUnits = [];
		this.paramsSet = [];
		if(this.instancingType > 0) {
			var instStruct = new kha_graphics4_VertexStructure();
			instStruct.add("ipos",2);
			if(this.instancingType == 2 || this.instancingType == 4) {
				instStruct.add("irot",2);
			}
			if(this.instancingType == 3 || this.instancingType == 4) {
				instStruct.add("iscl",2);
			}
			instStruct.instanced = true;
			this.pipeState.inputLayout = [this.structure,instStruct];
		} else {
			this.pipeState.inputLayout = [this.structure];
		}
		this.pipeState.depthWrite = this.raw.depth_write;
		this.pipeState.depthMode = this.getCompareMode(this.raw.compare_mode);
		if(this.raw.stencil_mode != null) {
			if(this.raw.stencil_mode == "always") {
				this.pipeState.stencilMode = kha_graphics4_CompareMode.Always;
			} else if(this.raw.stencil_mode == "equal") {
				this.pipeState.stencilMode = kha_graphics4_CompareMode.Equal;
			} else if(this.raw.stencil_mode == "not_equal") {
				this.pipeState.stencilMode = kha_graphics4_CompareMode.NotEqual;
			}
		}
		if(this.raw.stencil_pass != null) {
			if(this.raw.stencil_pass == "replace") {
				this.pipeState.stencilBothPass = kha_graphics4_StencilAction.Replace;
			} else if(this.raw.stencil_pass == "keep") {
				this.pipeState.stencilBothPass = kha_graphics4_StencilAction.Keep;
			}
		}
		if(this.raw.stencil_fail != null && this.raw.stencil_fail == "keep") {
			this.pipeState.stencilDepthFail = kha_graphics4_StencilAction.Keep;
			this.pipeState.stencilFail = kha_graphics4_StencilAction.Keep;
		}
		if(this.raw.stencil_reference_value != null) {
			this.pipeState.stencilReferenceValue = kha_graphics4_StencilValue.Static(this.raw.stencil_reference_value);
		}
		this.pipeState.cullMode = this.getCullMode(this.raw.cull_mode);
		if(this.raw.blend_source != null) {
			this.pipeState.blendSource = this.getBlendingFactor(this.raw.blend_source);
		}
		if(this.raw.blend_destination != null) {
			this.pipeState.blendDestination = this.getBlendingFactor(this.raw.blend_destination);
		}
		if(this.raw.blend_operation != null) {
			this.pipeState.blendOperation = this.getBlendingOperation(this.raw.blend_operation);
		}
		if(this.raw.alpha_blend_source != null) {
			this.pipeState.alphaBlendSource = this.getBlendingFactor(this.raw.alpha_blend_source);
		}
		if(this.raw.alpha_blend_destination != null) {
			this.pipeState.alphaBlendDestination = this.getBlendingFactor(this.raw.alpha_blend_destination);
		}
		if(this.raw.alpha_blend_operation != null) {
			this.pipeState.alphaBlendOperation = this.getBlendingOperation(this.raw.alpha_blend_operation);
		}
		if(this.raw.color_write_red != null) {
			this.pipeState.colorWriteMasksRed[0] = this.raw.color_write_red;
		}
		if(this.raw.color_write_green != null) {
			this.pipeState.colorWriteMasksGreen[0] = this.raw.color_write_green;
		}
		if(this.raw.color_write_blue != null) {
			this.pipeState.colorWriteMasksBlue[0] = this.raw.color_write_blue;
		}
		if(this.raw.color_write_alpha != null) {
			this.pipeState.colorWriteMasksAlpha[0] = this.raw.color_write_alpha;
		}
		if(this.raw.conservative_raster != null) {
			this.pipeState.conservativeRasterization = this.raw.conservative_raster;
		}
		if(this.raw.shader_from_source) {
			this.pipeState.fragmentShader = kha_graphics4_FragmentShader.fromSource(this.raw.fragment_shader);
			this.pipeState.vertexShader = kha_graphics4_VertexShader.fromSource(this.raw.vertex_shader);
			this.finishCompile(done);
		} else {
			var tmp = StringTools.replace(this.raw.fragment_shader,".","_");
			this.pipeState.fragmentShader = Reflect.field(kha_Shaders,tmp);
			var tmp1 = StringTools.replace(this.raw.vertex_shader,".","_");
			this.pipeState.vertexShader = Reflect.field(kha_Shaders,tmp1);
			if(this.raw.geometry_shader != null) {
				var tmp2 = StringTools.replace(this.raw.geometry_shader,".","_");
				this.pipeState.geometryShader = Reflect.field(kha_Shaders,tmp2);
			}
			if(this.raw.tesscontrol_shader != null) {
				var tmp3 = StringTools.replace(this.raw.tesscontrol_shader,".","_");
				this.pipeState.tessellationControlShader = Reflect.field(kha_Shaders,tmp3);
			}
			if(this.raw.tesseval_shader != null) {
				var tmp4 = StringTools.replace(this.raw.tesseval_shader,".","_");
				this.pipeState.tessellationEvaluationShader = Reflect.field(kha_Shaders,tmp4);
			}
			this.finishCompile(done);
		}
	}
	,finishCompile: function(done) {
		if(this.overrideContext != null) {
			if(this.overrideContext.cull_mode != null) {
				this.pipeState.cullMode = this.getCullMode(this.overrideContext.cull_mode);
			}
		}
		this.pipeState.compile();
		if(this.raw.constants != null) {
			var _g = 0;
			var _g1 = this.raw.constants;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				this.addConstant(c);
			}
		}
		if(this.raw.texture_units != null) {
			var _g2 = 0;
			var _g11 = this.raw.texture_units;
			while(_g2 < _g11.length) {
				var tu = _g11[_g2];
				++_g2;
				this.addTexture(tu);
			}
		}
		done(this);
	}
	,sizeToVD: function(size) {
		if(size == 1) {
			return 0;
		} else if(size == 2) {
			return 1;
		} else if(size == 3) {
			return 2;
		} else if(size == 4) {
			return 3;
		}
		return 0;
	}
	,parseVertexStructure: function() {
		this.structure = new kha_graphics4_VertexStructure();
		var ipos = false;
		var irot = false;
		var iscl = false;
		var _g = 0;
		var _g1 = this.raw.vertex_structure;
		while(_g < _g1.length) {
			var vs = _g1[_g];
			++_g;
			if(vs.name == "ipos") {
				ipos = true;
				continue;
			}
			if(vs.name == "irot") {
				irot = true;
				continue;
			}
			if(vs.name == "iscl") {
				iscl = true;
				continue;
			}
			this.structure.add(vs.name,this.sizeToVD(vs.size));
		}
		if(ipos && !irot && !iscl) {
			this.instancingType = 1;
		} else if(ipos && irot && !iscl) {
			this.instancingType = 2;
		} else if(ipos && !irot && iscl) {
			this.instancingType = 3;
		} else if(ipos && irot && iscl) {
			this.instancingType = 4;
		}
	}
	,'delete': function() {
		if(this.pipeState.fragmentShader != null) {
			this.pipeState.fragmentShader["delete"]();
		}
		if(this.pipeState.vertexShader != null) {
			this.pipeState.vertexShader["delete"]();
		}
		if(this.pipeState.geometryShader != null) {
			this.pipeState.geometryShader["delete"]();
		}
		if(this.pipeState.tessellationControlShader != null) {
			this.pipeState.tessellationControlShader["delete"]();
		}
		if(this.pipeState.tessellationEvaluationShader != null) {
			this.pipeState.tessellationEvaluationShader["delete"]();
		}
		this.pipeState["delete"]();
	}
	,getCompareMode: function(s) {
		switch(s) {
		case "always":
			return kha_graphics4_CompareMode.Always;
		case "equal":
			return kha_graphics4_CompareMode.Equal;
		case "greater":
			return kha_graphics4_CompareMode.Greater;
		case "greater_equal":
			return kha_graphics4_CompareMode.GreaterEqual;
		case "less":
			return kha_graphics4_CompareMode.Less;
		case "less_equal":
			return kha_graphics4_CompareMode.LessEqual;
		case "never":
			return kha_graphics4_CompareMode.Never;
		case "not_equal":
			return kha_graphics4_CompareMode.NotEqual;
		default:
			return kha_graphics4_CompareMode.Less;
		}
	}
	,getCullMode: function(s) {
		switch(s) {
		case "clockwise":
			return kha_graphics4_CullMode.Clockwise;
		case "none":
			return kha_graphics4_CullMode.None;
		default:
			return kha_graphics4_CullMode.CounterClockwise;
		}
	}
	,getBlendingOperation: function(s) {
		switch(s) {
		case "add":
			return kha_graphics4_BlendingOperation.Add;
		case "max":
			return kha_graphics4_BlendingOperation.Max;
		case "min":
			return kha_graphics4_BlendingOperation.Min;
		case "reverse_subtract":
			return kha_graphics4_BlendingOperation.ReverseSubtract;
		case "subtract":
			return kha_graphics4_BlendingOperation.Subtract;
		default:
			return kha_graphics4_BlendingOperation.Add;
		}
	}
	,getBlendingFactor: function(s) {
		switch(s) {
		case "blend_one":
			return kha_graphics4_BlendingFactor.BlendOne;
		case "blend_zero":
			return kha_graphics4_BlendingFactor.BlendZero;
		case "destination_alpha":
			return kha_graphics4_BlendingFactor.DestinationAlpha;
		case "destination_color":
			return kha_graphics4_BlendingFactor.DestinationColor;
		case "inverse_destination_alpha":
			return kha_graphics4_BlendingFactor.InverseDestinationAlpha;
		case "inverse_destination_color":
			return kha_graphics4_BlendingFactor.InverseDestinationColor;
		case "inverse_source_alpha":
			return kha_graphics4_BlendingFactor.InverseSourceAlpha;
		case "inverse_source_color":
			return kha_graphics4_BlendingFactor.InverseSourceColor;
		case "source_alpha":
			return kha_graphics4_BlendingFactor.SourceAlpha;
		case "source_color":
			return kha_graphics4_BlendingFactor.SourceColor;
		default:
			return kha_graphics4_BlendingFactor.Undefined;
		}
	}
	,getTextureAddresing: function(s) {
		switch(s) {
		case "mirror":
			return kha_graphics4_TextureAddressing.Mirror;
		case "repeat":
			return kha_graphics4_TextureAddressing.Repeat;
		default:
			return kha_graphics4_TextureAddressing.Clamp;
		}
	}
	,getTextureFilter: function(s) {
		switch(s) {
		case "linear":
			return kha_graphics4_TextureFilter.LinearFilter;
		case "point":
			return kha_graphics4_TextureFilter.PointFilter;
		default:
			return kha_graphics4_TextureFilter.AnisotropicFilter;
		}
	}
	,getMipmapFilter: function(s) {
		switch(s) {
		case "no":
			return kha_graphics4_MipMapFilter.NoMipFilter;
		case "point":
			return kha_graphics4_MipMapFilter.PointMipFilter;
		default:
			return kha_graphics4_MipMapFilter.LinearMipFilter;
		}
	}
	,addConstant: function(c) {
		this.constants.push(this.pipeState.getConstantLocation(c.name));
	}
	,addTexture: function(tu) {
		var unit = this.pipeState.getTextureUnit(tu.name);
		this.textureUnits.push(unit);
		this.paramsSet.push(false);
	}
	,setTextureParameters: function(g,unitIndex,tex) {
		var unit = this.textureUnits[unitIndex];
		g.setTextureParameters(unit,tex.u_addressing == null ? kha_graphics4_TextureAddressing.Repeat : this.getTextureAddresing(tex.u_addressing),tex.v_addressing == null ? kha_graphics4_TextureAddressing.Repeat : this.getTextureAddresing(tex.v_addressing),tex.min_filter == null ? kha_graphics4_TextureFilter.LinearFilter : this.getTextureFilter(tex.min_filter),tex.mag_filter == null ? kha_graphics4_TextureFilter.LinearFilter : this.getTextureFilter(tex.mag_filter),tex.mipmap_filter == null ? kha_graphics4_MipMapFilter.NoMipFilter : this.getMipmapFilter(tex.mipmap_filter));
	}
	,__class__: iron_data_ShaderContext
};
var iron_data_WorldData = function(raw,done) {
	var _gthis = this;
	this.raw = raw;
	this.name = raw.name;
	if(raw.probe != null) {
		new iron_data_Probe(raw.probe,function(self) {
			_gthis.probe = self;
			_gthis.loadEnvmap(done);
		});
	} else {
		this.loadEnvmap(done);
	}
};
$hxClasses["iron.data.WorldData"] = iron_data_WorldData;
iron_data_WorldData.__name__ = "iron.data.WorldData";
iron_data_WorldData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getWorldRawByName(format.world_datas,id);
		if(raw == null) {
			haxe_Log.trace("World data \"" + id + "\" not found!",{ fileName : "../iron/Sources/iron/data/WorldData.hx", lineNumber : 49, className : "iron.data.WorldData", methodName : "parse"});
			done(null);
		}
		new iron_data_WorldData(raw,done);
	});
};
iron_data_WorldData.getEmptyIrradiance = function() {
	if(iron_data_WorldData.emptyIrr == null) {
		var this1 = new Float32Array(28);
		iron_data_WorldData.emptyIrr = this1;
		var _g = 0;
		var _g1 = iron_data_WorldData.emptyIrr.length;
		while(_g < _g1) {
			var i = _g++;
			iron_data_WorldData.emptyIrr[i] = 0.0;
		}
	}
	return iron_data_WorldData.emptyIrr;
};
iron_data_WorldData.prototype = {
	name: null
	,raw: null
	,envmap: null
	,probe: null
	,loadEnvmap: function(done) {
		var _gthis = this;
		if(this.raw.envmap != null) {
			iron_data_Data.getImage(this.raw.envmap,function(image) {
				_gthis.envmap = image;
				done(_gthis);
			});
		} else {
			done(this);
		}
	}
	,getGlobalProbe: function() {
		return this.probe;
	}
	,__class__: iron_data_WorldData
};
var iron_data_Probe = function(raw,done) {
	this.radianceMipmaps = [];
	var _gthis = this;
	this.raw = raw;
	this.setIrradiance(function(irr) {
		_gthis.irradiance = irr;
		if(raw.radiance != null) {
			iron_data_Data.getImage(raw.radiance,function(rad) {
				_gthis.radiance = rad;
				while(_gthis.radianceMipmaps.length < raw.radiance_mipmaps) _gthis.radianceMipmaps.push(null);
				var ext = raw.radiance.substring(raw.radiance.length - 4);
				var base = raw.radiance.substring(0,raw.radiance.length - 4);
				var mipsLoaded = 0;
				var _g = 0;
				var _g1 = raw.radiance_mipmaps;
				while(_g < _g1) {
					var i = [_g++];
					iron_data_Data.getImage(base + "_" + i[0] + ext,(function(i1) {
						return function(mipimg) {
							_gthis.radianceMipmaps[i1[0]] = mipimg;
							mipsLoaded += 1;
							if(mipsLoaded == raw.radiance_mipmaps) {
								_gthis.radiance.setMipmaps(_gthis.radianceMipmaps);
								done(_gthis);
							}
						};
					})(i),true);
				}
			});
		} else {
			done(_gthis);
		}
	});
};
$hxClasses["iron.data.Probe"] = iron_data_Probe;
iron_data_Probe.__name__ = "iron.data.Probe";
iron_data_Probe.prototype = {
	raw: null
	,radiance: null
	,radianceMipmaps: null
	,irradiance: null
	,setIrradiance: function(done) {
		if(this.raw.irradiance == null) {
			var ar = [0.775966,1.167610,1.498638,0.133694,0.215281,0.056659,-0.022268,-0.019376,-0.010651,0.000279,0.000185,0.0,0.0,-0.000393,-0.000775,0.010973,0.027268,0.043918,0.085267,0.073670,0.038877,0.0,0.0,0.0,0.135177,0.115614,0.060794];
			var this1 = new Float32Array(ar.length);
			var far = this1;
			var _g = 0;
			var _g1 = far.length;
			while(_g < _g1) {
				var i = _g++;
				far[i] = ar[i];
			}
			done(far);
		} else {
			var ext = StringTools.endsWith(this.raw.irradiance,".json") ? "" : ".arm";
			iron_data_Data.getBlob(this.raw.irradiance + ext,function(b) {
				var irradianceParsed;
				if(ext == "") {
					irradianceParsed = JSON.parse(b.toString());
				} else {
					var i1 = new haxe_io_BytesInput(b.toBytes());
					i1.set_bigEndian(true);
					irradianceParsed = iron_system_ArmPack.read(i1);
				}
				var this2 = new Float32Array(28);
				var irr = this2;
				irr[0] = irradianceParsed.irradiance[0];
				irr[1] = irradianceParsed.irradiance[1];
				irr[2] = irradianceParsed.irradiance[2];
				irr[3] = irradianceParsed.irradiance[3];
				irr[4] = irradianceParsed.irradiance[4];
				irr[5] = irradianceParsed.irradiance[5];
				irr[6] = irradianceParsed.irradiance[6];
				irr[7] = irradianceParsed.irradiance[7];
				irr[8] = irradianceParsed.irradiance[8];
				irr[9] = irradianceParsed.irradiance[9];
				irr[10] = irradianceParsed.irradiance[10];
				irr[11] = irradianceParsed.irradiance[11];
				irr[12] = irradianceParsed.irradiance[12];
				irr[13] = irradianceParsed.irradiance[13];
				irr[14] = irradianceParsed.irradiance[14];
				irr[15] = irradianceParsed.irradiance[15];
				irr[16] = irradianceParsed.irradiance[16];
				irr[17] = irradianceParsed.irradiance[17];
				irr[18] = irradianceParsed.irradiance[18];
				irr[19] = irradianceParsed.irradiance[19];
				irr[20] = irradianceParsed.irradiance[20];
				irr[21] = irradianceParsed.irradiance[21];
				irr[22] = irradianceParsed.irradiance[22];
				irr[23] = irradianceParsed.irradiance[23];
				irr[24] = irradianceParsed.irradiance[24];
				irr[25] = irradianceParsed.irradiance[25];
				irr[26] = irradianceParsed.irradiance[26];
				irr[27] = 0.0;
				done(irr);
			});
		}
	}
	,__class__: iron_data_Probe
};
var iron_helper_CameraHelper = function() { };
$hxClasses["iron.helper.CameraHelper"] = iron_helper_CameraHelper;
iron_helper_CameraHelper.__name__ = "iron.helper.CameraHelper";
iron_helper_CameraHelper.cameraData = function(dataName) {
	if(dataName == null) {
		dataName = "MyCameraData";
	}
	return { name : dataName, near_plane : 0.1, aspect : kha_System.windowWidth() / kha_System.windowHeight(), far_plane : 1000.0, fov : Math.PI / 4};
};
iron_helper_CameraHelper.cameraObj = function(name,dataName,transform) {
	if(dataName == null) {
		dataName = "MyCameraData";
	}
	if(name == null) {
		name = "MyCamera";
	}
	return { name : name, type : iron_helper_CameraHelper.camera_object, data_ref : dataName, transform : { values : transform}};
};
iron_helper_CameraHelper.transformIdent = function() {
	return iron_helper_DataHelper.m4to32Arr(new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1));
};
iron_helper_CameraHelper.transform = function() {
	return iron_helper_DataHelper.m4to32Arr(new kha_math_FastMatrix4(2.,0.,0,0.125,0.,1.5,-Math.PI / 2,-1,0.,0.,1,2,0.,0.,0.,1));
};
var iron_helper_DataHelper = function() { };
$hxClasses["iron.helper.DataHelper"] = iron_helper_DataHelper;
iron_helper_DataHelper.__name__ = "iron.helper.DataHelper";
iron_helper_DataHelper.m4to32Arr = function(m) {
	var this1 = new Float32Array(16);
	var f = this1;
	f[0] = m._00;
	f[1] = m._10;
	f[2] = m._20;
	f[3] = m._30;
	f[4] = m._01;
	f[5] = m._11;
	f[6] = m._21;
	f[7] = m._31;
	f[8] = m._02;
	f[9] = m._12;
	f[10] = m._22;
	f[11] = m._32;
	f[12] = m._03;
	f[13] = m._13;
	f[14] = m._23;
	f[15] = m._33;
	return f;
};
iron_helper_DataHelper.toFloat32Array = function(src) {
	var this1 = new Float32Array(src.length);
	var f = this1;
	var _g = 0;
	var _g1 = src.length;
	while(_g < _g1) {
		var i = _g++;
		f[i] = src[i];
	}
	return f;
};
var iron_helper_IronHelper = function(sceneName_,cameraName_,cameraDataName_,meshNames_,bgColor_) {
	this.sceneName = sceneName_;
	this.cameraName = cameraName_;
	this.cameraDataName = cameraDataName_;
	this.meshNames = meshNames_;
	this.bgColor = bgColor_;
};
$hxClasses["iron.helper.IronHelper"] = iron_helper_IronHelper;
iron_helper_IronHelper.__name__ = "iron.helper.IronHelper";
iron_helper_IronHelper.prototype = {
	raw: null
	,sceneName: null
	,ready: null
	,cameraName: null
	,cameraDataName: null
	,meshNames: null
	,bgColor: null
	,create: function() {
		iron_App.init($bind(this,this.init));
	}
	,init: function() {
		this.createPath();
		this.raw = iron_helper_SceneHelper.setup(this.sceneName,this.cameraName,this.cameraDataName);
		iron_Scene.create(this.raw,this.ready);
		return this.raw;
	}
	,createPath: function() {
		var _gthis = this;
		var path = new iron_RenderPath();
		path.commands = function() {
			path.setTarget("");
			path.clearTarget(_gthis.bgColor,1.0);
			var _g = 0;
			var _g1 = _gthis.meshNames;
			while(_g < _g1.length) {
				var meshName = _g1[_g];
				++_g;
				path.drawMeshes(meshName);
			}
		};
		iron_RenderPath.setActive(path);
	}
	,__class__: iron_helper_IronHelper
};
var iron_helper_MaterialMeshHelper = function(raw_,meshWrapper_,triangles_,contours_,colors_,contourColors_,objName_) {
	this.raw = raw_;
	this.meshWrapper = meshWrapper_;
	this.objName = objName_;
	this.triangles = triangles_;
	this.contours = contours_;
	this.colors = colors_;
	this.contourColors = contourColors_;
};
$hxClasses["iron.helper.MaterialMeshHelper"] = iron_helper_MaterialMeshHelper;
iron_helper_MaterialMeshHelper.__name__ = "iron.helper.MaterialMeshHelper";
iron_helper_MaterialMeshHelper.prototype = {
	ready: null
	,raw: null
	,meshWrapper: null
	,colors: null
	,contours: null
	,contourColors: null
	,triangles: null
	,objName: null
	,create: function() {
		if(this.ready == null) {
			return;
		}
		this.meshBuild();
	}
	,meshBuild: function() {
		this.meshWrapper.draw(this.triangles,this.contours,this.colors,this.contourColors);
		var mesh = this.meshWrapper.triangleMeshCreate();
		this.raw.mesh_datas.push(mesh);
		iron_data_MeshData.parse(this.raw.name,mesh.name,$bind(this,this.materialSetup));
	}
	,materialSetup: function(res) {
		this.raw.shader_datas.push(this.meshWrapper.shaderDataCreate());
		var md = this.meshWrapper.materialDataCreate();
		this.raw.material_datas.push(md);
		iron_data_MaterialData.parse(this.raw.name,md.name,$bind(this,this.meshAdd));
	}
	,meshAdd: function(res) {
		var tri = this.meshWrapper.meshObjectCreate(this.objName);
		this.raw.objects[0].children.push(tri);
		iron_Scene.active.parseObject(this.raw.name,tri.name,null,this.ready);
	}
	,__class__: iron_helper_MaterialMeshHelper
};
var iron_helper_MultiColorMesh = function(meshName_,wid_,hi_,depth_,fractionColor_,randomColors_) {
	this.randomColors = false;
	this.z = 0.;
	this.length = 0;
	this.meshName = meshName_;
	this.wid = wid_;
	this.hi = hi_;
	this.depth = depth_;
	this.fractionColor = fractionColor_;
	this.randomColors = randomColors_;
};
$hxClasses["iron.helper.MultiColorMesh"] = iron_helper_MultiColorMesh;
iron_helper_MultiColorMesh.__name__ = "iron.helper.MultiColorMesh";
iron_helper_MultiColorMesh._r = function(int) {
	return (int >> 16 & 255) / 255;
};
iron_helper_MultiColorMesh._g = function(int) {
	return (int >> 8 & 255) / 255;
};
iron_helper_MultiColorMesh._b = function(int) {
	return (int & 255) / 255;
};
iron_helper_MultiColorMesh.prototype = {
	meshName: null
	,vb: null
	,ib: null
	,col: null
	,wid: null
	,hi: null
	,length: null
	,z: null
	,depth: null
	,fractionColor: null
	,randomColors: null
	,draw: function(triangles,contours,colors,contourColors) {
		var tri;
		var clen = 0;
		var _g = 0;
		var _g1 = contours.length;
		while(_g < _g1) {
			var i = _g++;
			clen += contours[i].length * 2 * 2;
		}
		var len = this.length + (triangles.length | 0);
		var this1 = new Float32Array(9 * (len * 2 + clen) | 0);
		this.vb = this1;
		var this2 = new Uint32Array(3 * (len * 2 + clen) | 0);
		this.ib = this2;
		var this3 = new Float32Array(9 * (len * 2 + clen) | 0);
		this.col = this3;
		var j = 0;
		var k = 0;
		var c = 0;
		var scaleX = 1 / this.wid;
		var scaleY = 1 / this.hi;
		var offX = this.wid / 2;
		var offY = this.hi / 2;
		var color;
		var r;
		var g;
		var b;
		var z0 = this.z + this.depth / 2;
		var z1 = this.z - this.depth / 2 - 0.01;
		var _g2 = this.length;
		var _g3 = len;
		while(_g2 < _g3) {
			var i1 = _g2++;
			tri = triangles[i1];
			this.vb[j++] = (tri.ax - offX) * scaleX;
			this.vb[j++] = -(tri.ay - offY) * scaleY;
			this.vb[j++] = z0;
			this.vb[j++] = (tri.bx - offX) * scaleX;
			this.vb[j++] = -(tri.by - offY) * scaleY;
			this.vb[j++] = z0;
			this.vb[j++] = (tri.cx - offX) * scaleX;
			this.vb[j++] = -(tri.cy - offY) * scaleY;
			this.vb[j++] = z0;
			color = colors[tri.colorID];
			r = (color >> 16 & 255) / 255;
			g = (color >> 8 & 255) / 255;
			b = (color & 255) / 255;
			this.col[c++] = r;
			this.col[c++] = g;
			this.col[c++] = b;
			this.col[c++] = r;
			this.col[c++] = g;
			this.col[c++] = b;
			this.col[c++] = r;
			this.col[c++] = g;
			this.col[c++] = b;
			this.ib[k++] = k - 1;
			this.ib[k++] = k - 1;
			this.ib[k++] = k - 1;
			this.vb[j++] = (tri.bx - offX) * scaleX;
			this.vb[j++] = -(tri.by - offY) * scaleY;
			this.vb[j++] = z1;
			this.vb[j++] = (tri.ax - offX) * scaleX;
			this.vb[j++] = -(tri.ay - offY) * scaleY;
			this.vb[j++] = z1;
			this.vb[j++] = (tri.cx - offX) * scaleX;
			this.vb[j++] = -(tri.cy - offY) * scaleY;
			this.vb[j++] = z1;
			color = colors[tri.colorID];
			r = (color >> 16 & 255) / 255;
			g = (color >> 8 & 255) / 255;
			b = (color & 255) / 255;
			this.col[c++] = r;
			this.col[c++] = g;
			this.col[c++] = b;
			this.col[c++] = r;
			this.col[c++] = g;
			this.col[c++] = b;
			this.col[c++] = r;
			this.col[c++] = g;
			this.col[c++] = b;
			this.ib[k++] = k - 1;
			this.ib[k++] = k - 1;
			this.ib[k++] = k - 1;
		}
		r = 1.;
		g = 1.;
		b = 1.;
		var _g4 = 0;
		var _g5 = contours.length;
		while(_g4 < _g5) {
			var contour = _g4++;
			tri = triangles[contour];
			if(!this.randomColors) {
				color = colors[contourColors[contour]];
				r = (color >> 16 & 255) / 255 * this.fractionColor;
				g = (color >> 8 & 255) / 255 * this.fractionColor;
				b = (color & 255) / 255 * this.fractionColor;
			}
			var pairs = trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$._new(contours[contour]);
			var p0_y;
			var p0_x;
			var p1_y;
			var p1_x;
			var count = triangles.length;
			var _g41 = 0;
			var _g51 = (pairs.length / 2 | 0) - 1;
			while(_g41 < _g51) {
				var i2 = _g41++;
				var i3 = i2 * 2 | 0;
				p0_x = pairs[i3];
				p0_y = pairs[i3 + 1];
				var i4 = (i2 + 1) * 2 | 0;
				p1_x = pairs[i4];
				p1_y = pairs[i4 + 1];
				this.vb[j++] = (p0_x - offX) * scaleX;
				this.vb[j++] = -(p0_y - offY) * scaleY;
				this.vb[j++] = z0;
				this.vb[j++] = (p1_x - offX) * scaleX;
				this.vb[j++] = -(p1_y - offY) * scaleY;
				this.vb[j++] = z0;
				this.vb[j++] = (p0_x - offX) * scaleX;
				this.vb[j++] = -(p0_y - offY) * scaleY;
				this.vb[j++] = z1;
				this.vb[j++] = (p1_x - offX) * scaleX;
				this.vb[j++] = -(p1_y - offY) * scaleY;
				this.vb[j++] = z0;
				this.vb[j++] = (p0_x - offX) * scaleX;
				this.vb[j++] = -(p0_y - offY) * scaleY;
				this.vb[j++] = z0;
				this.vb[j++] = (p0_x - offX) * scaleX;
				this.vb[j++] = -(p0_y - offY) * scaleY;
				this.vb[j++] = z1;
				if(this.randomColors) {
					var len1 = colors.length;
					color = colors[Math.round(Math.random() * (len1 - 1)) | 0];
					r = (color >> 16 & 255) / 255 * this.fractionColor;
					g = (color >> 8 & 255) / 255 * this.fractionColor;
					b = (color & 255) / 255 * this.fractionColor;
				}
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
				this.vb[j++] = (p1_x - offX) * scaleX;
				this.vb[j++] = -(p1_y - offY) * scaleY;
				this.vb[j++] = z0;
				this.vb[j++] = (p1_x - offX) * scaleX;
				this.vb[j++] = -(p1_y - offY) * scaleY;
				this.vb[j++] = z1;
				this.vb[j++] = (p0_x - offX) * scaleX;
				this.vb[j++] = -(p0_y - offY) * scaleY;
				this.vb[j++] = z1;
				this.vb[j++] = (p1_x - offX) * scaleX;
				this.vb[j++] = -(p1_y - offY) * scaleY;
				this.vb[j++] = z1;
				this.vb[j++] = (p1_x - offX) * scaleX;
				this.vb[j++] = -(p1_y - offY) * scaleY;
				this.vb[j++] = z0;
				this.vb[j++] = (p0_x - offX) * scaleX;
				this.vb[j++] = -(p0_y - offY) * scaleY;
				this.vb[j++] = z1;
				if(this.randomColors) {
					var len2 = colors.length;
					color = colors[Math.round(Math.random() * (len2 - 1)) | 0];
					r = (color >> 16 & 255) / 255 * this.fractionColor;
					g = (color >> 8 & 255) / 255 * this.fractionColor;
					b = (color & 255) / 255 * this.fractionColor;
				}
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.col[c++] = r;
				this.col[c++] = g;
				this.col[c++] = b;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
				this.ib[k++] = k - 1;
			}
		}
	}
	,randomValue: function(len) {
		return Math.round(Math.random() * (len - 1)) | 0;
	}
	,triangleMeshCreate: function() {
		return { name : this.meshName, vertex_arrays : [{ attrib : "pos", size : 3, values : this.vb},{ attrib : "col", size : 3, values : this.col}], index_arrays : [{ material : 0, values : this.ib}]};
	}
	,materialDataCreate: function() {
		return { name : "MultiColorMaterial", shader : "MultiColorShader", contexts : [{ name : this.meshName, bind_constants : []}]};
	}
	,shaderDataCreate: function() {
		return { name : "MultiColorShader", contexts : [{ name : this.meshName, vertex_shader : "painter_colored_iron.vert", fragment_shader : "painter_colored_iron.frag", compare_mode : "less", cull_mode : "clockwise", depth_write : true, constants : [{ "link" : "_worldViewProjectionMatrix", "name" : "WVP", "type" : "mat4"}], vertex_structure : [{ name : "pos", size : 3},{ name : "col", size : 3}]}]};
	}
	,meshObjectCreate: function(objName) {
		if(objName == null) {
			objName = "Triangles";
		}
		return { name : objName, type : "mesh_object", data_ref : this.meshName, material_refs : ["MultiColorMaterial"], transform : null};
	}
	,__class__: iron_helper_MultiColorMesh
};
var iron_helper_SceneHelper = function() { };
$hxClasses["iron.helper.SceneHelper"] = iron_helper_SceneHelper;
iron_helper_SceneHelper.__name__ = "iron.helper.SceneHelper";
iron_helper_SceneHelper.world = function(name) {
	if(name == null) {
		name = "MyWorld";
	}
	return { name : name, type : "object", data_ref : "", transform : null, children : []};
};
iron_helper_SceneHelper.setup = function(sceneName,cameraName,cameraData) {
	if(cameraData == null) {
		cameraData = "MyCameraData";
	}
	if(cameraName == null) {
		cameraName = "MyCamera";
	}
	if(sceneName == null) {
		sceneName = "MyScene";
	}
	var raw = { name : sceneName, camera_ref : cameraName, camera_datas : [iron_helper_CameraHelper.cameraData(cameraData)], shader_datas : [], material_datas : [], mesh_datas : [], objects : [iron_helper_SceneHelper.world(),iron_helper_CameraHelper.cameraObj(cameraName,cameraData,iron_helper_CameraHelper.transform())]};
	var key = raw.name;
	var _this = iron_data_Data.cachedSceneRaws;
	if(__map_reserved[key] != null) {
		_this.setReserved(key,raw);
	} else {
		_this.h[key] = raw;
	}
	return raw;
};
var iron_math_Mat3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this.self = new kha_math_FastMatrix3(_00,_10,_20,_01,_11,_21,_02,_12,_22);
};
$hxClasses["iron.math.Mat3"] = iron_math_Mat3;
iron_math_Mat3.__name__ = "iron.math.Mat3";
iron_math_Mat3.identity = function() {
	return new iron_math_Mat3(1,0,0,0,1,0,0,0,1);
};
iron_math_Mat3.prototype = {
	self: null
	,setFrom4: function(m) {
		this.self._00 = m.self._00;
		this.self._01 = m.self._01;
		this.self._02 = m.self._02;
		this.self._10 = m.self._10;
		this.self._11 = m.self._11;
		this.self._12 = m.self._12;
		this.self._20 = m.self._20;
		this.self._21 = m.self._21;
		this.self._22 = m.self._22;
	}
	,get__00: function() {
		return this.self._00;
	}
	,set__00: function(f) {
		return this.self._00 = f;
	}
	,get__01: function() {
		return this.self._01;
	}
	,set__01: function(f) {
		return this.self._01 = f;
	}
	,get__02: function() {
		return this.self._02;
	}
	,set__02: function(f) {
		return this.self._02 = f;
	}
	,get__10: function() {
		return this.self._10;
	}
	,set__10: function(f) {
		return this.self._10 = f;
	}
	,get__11: function() {
		return this.self._11;
	}
	,set__11: function(f) {
		return this.self._11 = f;
	}
	,get__12: function() {
		return this.self._12;
	}
	,set__12: function(f) {
		return this.self._12 = f;
	}
	,get__20: function() {
		return this.self._20;
	}
	,set__20: function(f) {
		return this.self._20 = f;
	}
	,get__21: function() {
		return this.self._21;
	}
	,set__21: function(f) {
		return this.self._21 = f;
	}
	,get__22: function() {
		return this.self._22;
	}
	,set__22: function(f) {
		return this.self._22 = f;
	}
	,__class__: iron_math_Mat3
	,__properties__: {set__22:"set__22",get__22:"get__22",set__21:"set__21",get__21:"get__21",set__20:"set__20",get__20:"get__20",set__12:"set__12",get__12:"get__12",set__11:"set__11",get__11:"get__11",set__10:"set__10",get__10:"get__10",set__02:"set__02",get__02:"get__02",set__01:"set__01",get__01:"get__01",set__00:"set__00",get__00:"get__00"}
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = "kha.math.FastMatrix4";
kha_math_FastMatrix4.fromMatrix4 = function(m) {
	return new kha_math_FastMatrix4(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33);
};
kha_math_FastMatrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_FastMatrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_FastMatrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new kha_math_FastMatrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_FastMatrix4.lookAt = function(eye,at,up) {
	var zaxis = new kha_math_FastVector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var _x = zaxis.y * up.z - zaxis.z * up.y;
	var _y = zaxis.z * up.x - zaxis.x * up.z;
	var _z = zaxis.x * up.y - zaxis.y * up.x;
	var xaxis = new kha_math_FastVector3(_x,_y,_z);
	xaxis.set_length(1);
	var _x1 = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y1 = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z1 = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	var yaxis_x = _x1;
	var yaxis_y = _y1;
	var yaxis_z = _z1;
	return new kha_math_FastMatrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
kha_math_FastMatrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_FastMatrix4
};
var iron_math_Vec4 = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Vec4"] = iron_math_Vec4;
iron_math_Vec4.__name__ = "iron.math.Vec4";
iron_math_Vec4.distance = function(v1,v2) {
	var vx = v1.x - v2.x;
	var vy = v1.y - v2.y;
	var vz = v1.z - v2.z;
	return Math.sqrt(vx * vx + vy * vy + vz * vz);
};
iron_math_Vec4.distancef = function(v1x,v1y,v1z,v2x,v2y,v2z) {
	var vx = v1x - v2x;
	var vy = v1y - v2y;
	var vz = v1z - v2z;
	return Math.sqrt(vx * vx + vy * vy + vz * vz);
};
iron_math_Vec4.xAxis = function() {
	return new iron_math_Vec4(1.0,0.0,0.0);
};
iron_math_Vec4.yAxis = function() {
	return new iron_math_Vec4(0.0,1.0,0.0);
};
iron_math_Vec4.zAxis = function() {
	return new iron_math_Vec4(0.0,0.0,1.0);
};
iron_math_Vec4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,cross: function(v) {
		var ax = this.x;
		var ay = this.y;
		var az = this.z;
		var vx = v.x;
		var vy = v.y;
		var vz = v.z;
		this.x = ay * vz - az * vy;
		this.y = az * vx - ax * vz;
		this.z = ax * vy - ay * vx;
		return this;
	}
	,crossvecs: function(a,b) {
		var ax = a.x;
		var ay = a.y;
		var az = a.z;
		var bx = b.x;
		var by = b.y;
		var bz = b.z;
		this.x = ay * bz - az * by;
		this.y = az * bx - ax * bz;
		this.z = ax * by - ay * bx;
		return this;
	}
	,set: function(x,y,z,w) {
		if(w == null) {
			w = 1.0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
		return this;
	}
	,add: function(v) {
		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		return this;
	}
	,addf: function(x,y,z) {
		this.x += x;
		this.y += y;
		this.z += z;
		return this;
	}
	,addvecs: function(a,b) {
		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		return this;
	}
	,subvecs: function(a,b) {
		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		return this;
	}
	,normalize: function() {
		var n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(n > 0.0) {
			var invN = 1.0 / n;
			this.x *= invN;
			this.y *= invN;
			this.z *= invN;
		}
		return this;
	}
	,mult: function(f) {
		this.x *= f;
		this.y *= f;
		this.z *= f;
		return this;
	}
	,dot: function(v) {
		return this.x * v.x + this.y * v.y + this.z * v.z;
	}
	,setFrom: function(v) {
		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = v.w;
		return this;
	}
	,clone: function() {
		return new iron_math_Vec4(this.x,this.y,this.z,this.w);
	}
	,lerp: function(from,to,s) {
		this.x = from.x + (to.x - from.x) * s;
		this.y = from.y + (to.y - from.y) * s;
		this.z = from.z + (to.z - from.z) * s;
		return this;
	}
	,applyproj: function(m) {
		var x = this.x;
		var y = this.y;
		var z = this.z;
		var d = 1.0 / (m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33);
		this.x = (m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30) * d;
		this.y = (m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31) * d;
		this.z = (m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32) * d;
		return this;
	}
	,applymat: function(m) {
		var x = this.x;
		var y = this.y;
		var z = this.z;
		this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
		this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
		this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
		return this;
	}
	,applymat4: function(m) {
		var x = this.x;
		var y = this.y;
		var z = this.z;
		var w = this.w;
		this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30 * w;
		this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31 * w;
		this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32 * w;
		this.w = m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33 * w;
		return this;
	}
	,applyAxisAngle: function(axis,angle) {
		var quat_x = 0.0;
		var quat_y = 0.0;
		var quat_z = 0.0;
		var quat_w = 1.0;
		var s = Math.sin(angle * 0.5);
		quat_x = axis.x * s;
		quat_y = axis.y * s;
		quat_z = axis.z * s;
		quat_w = Math.cos(angle * 0.5);
		var l = Math.sqrt(quat_x * quat_x + quat_y * quat_y + quat_z * quat_z + quat_w * quat_w);
		if(l == 0.0) {
			quat_x = 0;
			quat_y = 0;
			quat_z = 0;
			quat_w = 0;
		} else {
			l = 1.0 / l;
			quat_x *= l;
			quat_y *= l;
			quat_z *= l;
			quat_w *= l;
		}
		var ix = quat_w * this.x + quat_y * this.z - quat_z * this.y;
		var iy = quat_w * this.y + quat_z * this.x - quat_x * this.z;
		var iz = quat_w * this.z + quat_x * this.y - quat_y * this.x;
		var iw = -quat_x * this.x - quat_y * this.y - quat_z * this.z;
		this.x = ix * quat_w + iw * -quat_x + iy * -quat_z - iz * -quat_y;
		this.y = iy * quat_w + iw * -quat_y + iz * -quat_x - ix * -quat_z;
		this.z = iz * quat_w + iw * -quat_z + ix * -quat_y - iy * -quat_x;
		return this;
	}
	,applyQuat: function(q) {
		var ix = q.w * this.x + q.y * this.z - q.z * this.y;
		var iy = q.w * this.y + q.z * this.x - q.x * this.z;
		var iz = q.w * this.z + q.x * this.y - q.y * this.x;
		var iw = -q.x * this.x - q.y * this.y - q.z * this.z;
		this.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;
		this.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;
		this.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;
		return this;
	}
	,equals: function(v) {
		if(this.x == v.x && this.y == v.y) {
			return this.z == v.z;
		} else {
			return false;
		}
	}
	,almostEquals: function(v,prec) {
		if(Math.abs(this.x - v.x) < prec && Math.abs(this.y - v.y) < prec) {
			return Math.abs(this.z - v.z) < prec;
		} else {
			return false;
		}
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,sub: function(v) {
		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		return this;
	}
	,distanceTo: function(p) {
		return Math.sqrt((p.x - this.x) * (p.x - this.x) + (p.y - this.y) * (p.y - this.y) + (p.z - this.z) * (p.z - this.z));
	}
	,reflect: function(n) {
		var d = 2 * (this.x * n.x + this.y * n.y + this.z * n.z);
		this.x -= d * n.x;
		this.y -= d * n.y;
		this.z -= d * n.z;
		return this;
	}
	,clamp: function(min,max) {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(l < min) {
			var n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
			if(n > 0.0) {
				var invN = 1.0 / n;
				this.x *= invN;
				this.y *= invN;
				this.z *= invN;
			}
			var _this = this;
			_this.x *= min;
			_this.y *= min;
			_this.z *= min;
		} else if(l > max) {
			var n1 = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
			if(n1 > 0.0) {
				var invN1 = 1.0 / n1;
				this.x *= invN1;
				this.y *= invN1;
				this.z *= invN1;
			}
			var _this1 = this;
			_this1.x *= max;
			_this1.y *= max;
			_this1.z *= max;
		}
		return this;
	}
	,toString: function() {
		return "(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	,__class__: iron_math_Vec4
};
var iron_math_Mat4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this.self = new kha_math_FastMatrix4(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
};
$hxClasses["iron.math.Mat4"] = iron_math_Mat4;
iron_math_Mat4.__name__ = "iron.math.Mat4";
iron_math_Mat4.fromFloat32Array = function(a,offset) {
	if(offset == null) {
		offset = 0;
	}
	return new iron_math_Mat4(a[offset],a[1 + offset],a[2 + offset],a[3 + offset],a[4 + offset],a[5 + offset],a[6 + offset],a[7 + offset],a[8 + offset],a[9 + offset],a[10 + offset],a[11 + offset],a[12 + offset],a[13 + offset],a[14 + offset],a[15 + offset]);
};
iron_math_Mat4.identity = function() {
	return new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
};
iron_math_Mat4.persp = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
iron_math_Mat4.ortho = function(left,right,bottom,top,near,far) {
	var rl = right - left;
	var tb = top - bottom;
	var fn = far - near;
	var tx = -(right + left) / rl;
	var ty = -(top + bottom) / tb;
	var tz = -(far + near) / fn;
	return new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
};
iron_math_Mat4.prototype = {
	self: null
	,compose: function(loc,quat,sc) {
		var x = quat.x;
		var y = quat.y;
		var z = quat.z;
		var w = quat.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		this.self._00 = 1.0 - (yy + zz);
		this.self._10 = xy - wz;
		this.self._20 = xz + wy;
		this.self._01 = xy + wz;
		this.self._11 = 1.0 - (xx + zz);
		this.self._21 = yz - wx;
		this.self._02 = xz - wy;
		this.self._12 = yz + wx;
		this.self._22 = 1.0 - (xx + yy);
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		var x1 = sc.x;
		var y1 = sc.y;
		var z1 = sc.z;
		this.self._00 *= x1;
		this.self._01 *= x1;
		this.self._02 *= x1;
		this.self._03 *= x1;
		this.self._10 *= y1;
		this.self._11 *= y1;
		this.self._12 *= y1;
		this.self._13 *= y1;
		this.self._20 *= z1;
		this.self._21 *= z1;
		this.self._22 *= z1;
		this.self._23 *= z1;
		this.self._30 = loc.x;
		this.self._31 = loc.y;
		this.self._32 = loc.z;
		return this;
	}
	,decompose: function(loc,quat,scale) {
		loc.x = this.self._30;
		loc.y = this.self._31;
		loc.z = this.self._32;
		var _this = iron_math_Mat4.helpVec;
		_this.x = this.self._00;
		_this.y = this.self._01;
		_this.z = this.self._02;
		_this.w = 1.0;
		var _this1 = _this;
		scale.x = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this2 = iron_math_Mat4.helpVec;
		_this2.x = this.self._10;
		_this2.y = this.self._11;
		_this2.z = this.self._12;
		_this2.w = 1.0;
		var _this3 = _this2;
		scale.y = Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		var _this4 = iron_math_Mat4.helpVec;
		_this4.x = this.self._20;
		_this4.y = this.self._21;
		_this4.z = this.self._22;
		_this4.w = 1.0;
		var _this5 = _this4;
		scale.z = Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		var _this6 = this.self;
		var m3 = _this6._12;
		var m4 = _this6._22;
		var m5 = _this6._32;
		var m6 = _this6._13;
		var m7 = _this6._23;
		var m8 = _this6._33;
		var c00 = _this6._11 * (m4 * m8 - m5 * m7) - _this6._21 * (m3 * m8 - m5 * m6) + _this6._31 * (m3 * m7 - m4 * m6);
		var m31 = _this6._12;
		var m41 = _this6._22;
		var m51 = _this6._32;
		var m61 = _this6._13;
		var m71 = _this6._23;
		var m81 = _this6._33;
		var c01 = _this6._10 * (m41 * m81 - m51 * m71) - _this6._20 * (m31 * m81 - m51 * m61) + _this6._30 * (m31 * m71 - m41 * m61);
		var m32 = _this6._11;
		var m42 = _this6._21;
		var m52 = _this6._31;
		var m62 = _this6._13;
		var m72 = _this6._23;
		var m82 = _this6._33;
		var c02 = _this6._10 * (m42 * m82 - m52 * m72) - _this6._20 * (m32 * m82 - m52 * m62) + _this6._30 * (m32 * m72 - m42 * m62);
		var m33 = _this6._11;
		var m43 = _this6._21;
		var m53 = _this6._31;
		var m63 = _this6._12;
		var m73 = _this6._22;
		var m83 = _this6._32;
		var c03 = _this6._10 * (m43 * m83 - m53 * m73) - _this6._20 * (m33 * m83 - m53 * m63) + _this6._30 * (m33 * m73 - m43 * m63);
		if(_this6._00 * c00 - _this6._01 * c01 + _this6._02 * c02 - _this6._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = this.self._22 * invs;
		var m = iron_math_Mat4.helpMat;
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m311 = m.self._02;
		var m321 = m.self._12;
		var m331 = m.self._22;
		var tr = m11 + m22 + m331;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
		return this;
	}
	,setLoc: function(v) {
		this.self._30 = v.x;
		this.self._31 = v.y;
		this.self._32 = v.z;
		return this;
	}
	,fromQuat: function(q) {
		var x = q.x;
		var y = q.y;
		var z = q.z;
		var w = q.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		this.self._00 = 1.0 - (yy + zz);
		this.self._10 = xy - wz;
		this.self._20 = xz + wy;
		this.self._01 = xy + wz;
		this.self._11 = 1.0 - (xx + zz);
		this.self._21 = yz - wx;
		this.self._02 = xz - wy;
		this.self._12 = yz + wx;
		this.self._22 = 1.0 - (xx + yy);
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,setIdentity: function() {
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,initTranslate: function(x,y,z) {
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = x;
		this.self._31 = y;
		this.self._32 = z;
		this.self._33 = 1.0;
		return this;
	}
	,translate: function(x,y,z) {
		this.self._00 += x * this.self._03;
		this.self._01 += y * this.self._03;
		this.self._02 += z * this.self._03;
		this.self._10 += x * this.self._13;
		this.self._11 += y * this.self._13;
		this.self._12 += z * this.self._13;
		this.self._20 += x * this.self._23;
		this.self._21 += y * this.self._23;
		this.self._22 += z * this.self._23;
		this.self._30 += x * this.self._33;
		this.self._31 += y * this.self._33;
		this.self._32 += z * this.self._33;
		return this;
	}
	,scale: function(v) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		this.self._00 *= x;
		this.self._01 *= x;
		this.self._02 *= x;
		this.self._03 *= x;
		this.self._10 *= y;
		this.self._11 *= y;
		this.self._12 *= y;
		this.self._13 *= y;
		this.self._20 *= z;
		this.self._21 *= z;
		this.self._22 *= z;
		this.self._23 *= z;
		return this;
	}
	,multmats3x4: function(a,b) {
		var a00 = a.self._00;
		var a01 = a.self._01;
		var a02 = a.self._02;
		var a03 = a.self._03;
		var a10 = a.self._10;
		var a11 = a.self._11;
		var a12 = a.self._12;
		var a13 = a.self._13;
		var a20 = a.self._20;
		var a21 = a.self._21;
		var a22 = a.self._22;
		var a23 = a.self._23;
		var a30 = a.self._30;
		var a31 = a.self._31;
		var a32 = a.self._32;
		var a33 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.self._03 = 0;
		this.self._13 = 0;
		this.self._23 = 0;
		this.self._33 = 1;
		return this;
	}
	,multmats: function(b,a) {
		var a00 = a.self._00;
		var a01 = a.self._01;
		var a02 = a.self._02;
		var a03 = a.self._03;
		var a10 = a.self._10;
		var a11 = a.self._11;
		var a12 = a.self._12;
		var a13 = a.self._13;
		var a20 = a.self._20;
		var a21 = a.self._21;
		var a22 = a.self._22;
		var a23 = a.self._23;
		var a30 = a.self._30;
		var a31 = a.self._31;
		var a32 = a.self._32;
		var a33 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		return this;
	}
	,multmat2: function(m) {
		var a00 = this.self._00;
		var a01 = this.self._01;
		var a02 = this.self._02;
		var a03 = this.self._03;
		var a10 = this.self._10;
		var a11 = this.self._11;
		var a12 = this.self._12;
		var a13 = this.self._13;
		var a20 = this.self._20;
		var a21 = this.self._21;
		var a22 = this.self._22;
		var a23 = this.self._23;
		var a30 = this.self._30;
		var a31 = this.self._31;
		var a32 = this.self._32;
		var a33 = this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		return this;
	}
	,multmat: function(m) {
		var a00 = this.self._00;
		var a01 = this.self._01;
		var a02 = this.self._02;
		var a03 = this.self._03;
		var a10 = this.self._10;
		var a11 = this.self._11;
		var a12 = this.self._12;
		var a13 = this.self._13;
		var a20 = this.self._20;
		var a21 = this.self._21;
		var a22 = this.self._22;
		var a23 = this.self._23;
		var a30 = this.self._30;
		var a31 = this.self._31;
		var a32 = this.self._32;
		var a33 = this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		return this;
	}
	,getInverse: function(m) {
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			this.self._00 = 1.0;
			this.self._01 = 0.0;
			this.self._02 = 0.0;
			this.self._03 = 0.0;
			this.self._10 = 0.0;
			this.self._11 = 1.0;
			this.self._12 = 0.0;
			this.self._13 = 0.0;
			this.self._20 = 0.0;
			this.self._21 = 0.0;
			this.self._22 = 1.0;
			this.self._23 = 0.0;
			this.self._30 = 0.0;
			this.self._31 = 0.0;
			this.self._32 = 0.0;
			this.self._33 = 1.0;
			return this;
		}
		det = 1.0 / det;
		this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
		this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
		this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
		this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
		this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
		this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
		this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
		this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
		this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
		this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
		this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
		this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
		this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
		this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
		this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
		this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		return this;
	}
	,transpose: function() {
		var f = this.self._01;
		this.self._01 = this.self._10;
		this.self._10 = f;
		f = this.self._02;
		this.self._02 = this.self._20;
		this.self._20 = f;
		f = this.self._03;
		this.self._03 = this.self._30;
		this.self._30 = f;
		f = this.self._12;
		this.self._12 = this.self._21;
		this.self._21 = f;
		f = this.self._13;
		this.self._13 = this.self._31;
		this.self._31 = f;
		f = this.self._23;
		this.self._23 = this.self._32;
		this.self._32 = f;
		return this;
	}
	,transpose3x3: function() {
		var f = this.self._01;
		this.self._01 = this.self._10;
		this.self._10 = f;
		f = this.self._02;
		this.self._02 = this.self._20;
		this.self._20 = f;
		f = this.self._12;
		this.self._12 = this.self._21;
		this.self._21 = f;
		return this;
	}
	,clone: function() {
		return new iron_math_Mat4(this.self._00,this.self._10,this.self._20,this.self._30,this.self._01,this.self._11,this.self._21,this.self._31,this.self._02,this.self._12,this.self._22,this.self._32,this.self._03,this.self._13,this.self._23,this.self._33);
	}
	,setF32: function(a,offset) {
		if(offset == null) {
			offset = 0;
		}
		this.self._00 = a[offset];
		this.self._10 = a[1 + offset];
		this.self._20 = a[2 + offset];
		this.self._30 = a[3 + offset];
		this.self._01 = a[4 + offset];
		this.self._11 = a[5 + offset];
		this.self._21 = a[6 + offset];
		this.self._31 = a[7 + offset];
		this.self._02 = a[8 + offset];
		this.self._12 = a[9 + offset];
		this.self._22 = a[10 + offset];
		this.self._32 = a[11 + offset];
		this.self._03 = a[12 + offset];
		this.self._13 = a[13 + offset];
		this.self._23 = a[14 + offset];
		this.self._33 = a[15 + offset];
		return this;
	}
	,setFrom: function(m) {
		this.self._00 = m.self._00;
		this.self._01 = m.self._01;
		this.self._02 = m.self._02;
		this.self._03 = m.self._03;
		this.self._10 = m.self._10;
		this.self._11 = m.self._11;
		this.self._12 = m.self._12;
		this.self._13 = m.self._13;
		this.self._20 = m.self._20;
		this.self._21 = m.self._21;
		this.self._22 = m.self._22;
		this.self._23 = m.self._23;
		this.self._30 = m.self._30;
		this.self._31 = m.self._31;
		this.self._32 = m.self._32;
		this.self._33 = m.self._33;
		return this;
	}
	,getLoc: function() {
		return new iron_math_Vec4(this.self._30,this.self._31,this.self._32,this.self._33);
	}
	,getScale: function() {
		return new iron_math_Vec4(Math.sqrt(this.self._00 * this.self._00 + this.self._10 * this.self._10 + this.self._20 * this.self._20),Math.sqrt(this.self._01 * this.self._01 + this.self._11 * this.self._11 + this.self._21 * this.self._21),Math.sqrt(this.self._02 * this.self._02 + this.self._12 * this.self._12 + this.self._22 * this.self._22));
	}
	,mult: function(s) {
		this.self._00 *= s;
		this.self._10 *= s;
		this.self._20 *= s;
		this.self._30 *= s;
		this.self._01 *= s;
		this.self._11 *= s;
		this.self._21 *= s;
		this.self._31 *= s;
		this.self._02 *= s;
		this.self._12 *= s;
		this.self._22 *= s;
		this.self._32 *= s;
		this.self._03 *= s;
		this.self._13 *= s;
		this.self._23 *= s;
		this.self._33 *= s;
		return this;
	}
	,toRotation: function() {
		var _this = iron_math_Mat4.helpVec;
		_this.x = this.self._00;
		_this.y = this.self._01;
		_this.z = this.self._02;
		_this.w = 1.0;
		var _this1 = _this;
		var scale = 1.0 / Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		this.self._00 *= scale;
		this.self._01 *= scale;
		this.self._02 *= scale;
		var _this2 = iron_math_Mat4.helpVec;
		_this2.x = this.self._10;
		_this2.y = this.self._11;
		_this2.z = this.self._12;
		_this2.w = 1.0;
		var _this3 = _this2;
		scale = 1.0 / Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		this.self._10 *= scale;
		this.self._11 *= scale;
		this.self._12 *= scale;
		var _this4 = iron_math_Mat4.helpVec;
		_this4.x = this.self._20;
		_this4.y = this.self._21;
		_this4.z = this.self._22;
		_this4.w = 1.0;
		var _this5 = _this4;
		scale = 1.0 / Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		this.self._20 *= scale;
		this.self._21 *= scale;
		this.self._22 *= scale;
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,setLookAt: function(eye,center,up) {
		var f0 = center.x - eye.x;
		var f1 = center.y - eye.y;
		var f2 = center.z - eye.z;
		var n = 1.0 / Math.sqrt(f0 * f0 + f1 * f1 + f2 * f2);
		f0 *= n;
		f1 *= n;
		f2 *= n;
		var s0 = f1 * up.z - f2 * up.y;
		var s1 = f2 * up.x - f0 * up.z;
		var s2 = f0 * up.y - f1 * up.x;
		n = 1.0 / Math.sqrt(s0 * s0 + s1 * s1 + s2 * s2);
		s0 *= n;
		s1 *= n;
		s2 *= n;
		var u0 = s1 * f2 - s2 * f1;
		var u1 = s2 * f0 - s0 * f2;
		var u2 = s0 * f1 - s1 * f0;
		var d0 = -eye.x * s0 - eye.y * s1 - eye.z * s2;
		var d1 = -eye.x * u0 - eye.y * u1 - eye.z * u2;
		var d2 = eye.x * f0 + eye.y * f1 + eye.z * f2;
		this.self._00 = s0;
		this.self._10 = s1;
		this.self._20 = s2;
		this.self._30 = d0;
		this.self._01 = u0;
		this.self._11 = u1;
		this.self._21 = u2;
		this.self._31 = d1;
		this.self._02 = -f0;
		this.self._12 = -f1;
		this.self._22 = -f2;
		this.self._32 = d2;
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,applyQuat: function(q) {
		var _this = iron_math_Mat4.helpMat;
		var x = q.x;
		var y = q.y;
		var z = q.z;
		var w = q.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		_this.self._00 = 1.0 - (yy + zz);
		_this.self._10 = xy - wz;
		_this.self._20 = xz + wy;
		_this.self._01 = xy + wz;
		_this.self._11 = 1.0 - (xx + zz);
		_this.self._21 = yz - wx;
		_this.self._02 = xz - wy;
		_this.self._12 = yz + wx;
		_this.self._22 = 1.0 - (xx + yy);
		_this.self._03 = 0.0;
		_this.self._13 = 0.0;
		_this.self._23 = 0.0;
		_this.self._30 = 0.0;
		_this.self._31 = 0.0;
		_this.self._32 = 0.0;
		_this.self._33 = 1.0;
		var m = iron_math_Mat4.helpMat;
		var a00 = this.self._00;
		var a01 = this.self._01;
		var a02 = this.self._02;
		var a03 = this.self._03;
		var a10 = this.self._10;
		var a11 = this.self._11;
		var a12 = this.self._12;
		var a13 = this.self._13;
		var a20 = this.self._20;
		var a21 = this.self._21;
		var a22 = this.self._22;
		var a23 = this.self._23;
		var a30 = this.self._30;
		var a31 = this.self._31;
		var a32 = this.self._32;
		var a33 = this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
	}
	,right: function() {
		return new iron_math_Vec4(this.self._00,this.self._01,this.self._02);
	}
	,up: function() {
		return new iron_math_Vec4(this.self._20,this.self._21,this.self._22);
	}
	,look: function() {
		return new iron_math_Vec4(this.self._10,this.self._11,this.self._12);
	}
	,get__00: function() {
		return this.self._00;
	}
	,set__00: function(f) {
		return this.self._00 = f;
	}
	,get__01: function() {
		return this.self._01;
	}
	,set__01: function(f) {
		return this.self._01 = f;
	}
	,get__02: function() {
		return this.self._02;
	}
	,set__02: function(f) {
		return this.self._02 = f;
	}
	,get__03: function() {
		return this.self._03;
	}
	,set__03: function(f) {
		return this.self._03 = f;
	}
	,get__10: function() {
		return this.self._10;
	}
	,set__10: function(f) {
		return this.self._10 = f;
	}
	,get__11: function() {
		return this.self._11;
	}
	,set__11: function(f) {
		return this.self._11 = f;
	}
	,get__12: function() {
		return this.self._12;
	}
	,set__12: function(f) {
		return this.self._12 = f;
	}
	,get__13: function() {
		return this.self._13;
	}
	,set__13: function(f) {
		return this.self._13 = f;
	}
	,get__20: function() {
		return this.self._20;
	}
	,set__20: function(f) {
		return this.self._20 = f;
	}
	,get__21: function() {
		return this.self._21;
	}
	,set__21: function(f) {
		return this.self._21 = f;
	}
	,get__22: function() {
		return this.self._22;
	}
	,set__22: function(f) {
		return this.self._22 = f;
	}
	,get__23: function() {
		return this.self._23;
	}
	,set__23: function(f) {
		return this.self._23 = f;
	}
	,get__30: function() {
		return this.self._30;
	}
	,set__30: function(f) {
		return this.self._30 = f;
	}
	,get__31: function() {
		return this.self._31;
	}
	,set__31: function(f) {
		return this.self._31 = f;
	}
	,get__32: function() {
		return this.self._32;
	}
	,set__32: function(f) {
		return this.self._32 = f;
	}
	,get__33: function() {
		return this.self._33;
	}
	,set__33: function(f) {
		return this.self._33 = f;
	}
	,toString: function() {
		return "[[" + this.self._00 + ", " + this.self._10 + ", " + this.self._20 + ", " + this.self._30 + "], [" + this.self._01 + ", " + this.self._11 + ", " + this.self._21 + ", " + this.self._31 + "], [" + this.self._02 + ", " + this.self._12 + ", " + this.self._22 + ", " + this.self._32 + "], [" + this.self._03 + ", " + this.self._13 + ", " + this.self._23 + ", " + this.self._33 + "]]";
	}
	,__class__: iron_math_Mat4
	,__properties__: {set__33:"set__33",get__33:"get__33",set__32:"set__32",get__32:"get__32",set__31:"set__31",get__31:"get__31",set__30:"set__30",get__30:"get__30",set__23:"set__23",get__23:"get__23",set__22:"set__22",get__22:"get__22",set__21:"set__21",get__21:"get__21",set__20:"set__20",get__20:"get__20",set__13:"set__13",get__13:"get__13",set__12:"set__12",get__12:"get__12",set__11:"set__11",get__11:"get__11",set__10:"set__10",get__10:"get__10",set__03:"set__03",get__03:"get__03",set__02:"set__02",get__02:"get__02",set__01:"set__01",get__01:"get__01",set__00:"set__00",get__00:"get__00"}
};
var iron_math_Math = function() { };
$hxClasses["iron.math.Math"] = iron_math_Math;
iron_math_Math.__name__ = "iron.math.Math";
iron_math_Math.__properties__ = {get_NaN:"get_NaN",get_NEGATIVE_INFINITY:"get_NEGATIVE_INFINITY",get_POSITIVE_INFINITY:"get_POSITIVE_INFINITY"};
iron_math_Math.get_POSITIVE_INFINITY = function() {
	return Infinity;
};
iron_math_Math.get_NEGATIVE_INFINITY = function() {
	return -Infinity;
};
iron_math_Math.get_NaN = function() {
	return NaN;
};
iron_math_Math.abs = function(v) {
	return Math.abs(v);
};
iron_math_Math.acos = function(v) {
	return Math.acos(v);
};
iron_math_Math.asin = function(v) {
	return Math.asin(v);
};
iron_math_Math.atan = function(v) {
	return Math.atan(v);
};
iron_math_Math.atan2 = function(y,x) {
	return Math.atan2(y,x);
};
iron_math_Math.ceil = function(v) {
	return Math.ceil(v);
};
iron_math_Math.cos = function(v) {
	return Math.cos(v);
};
iron_math_Math.exp = function(v) {
	return Math.exp(v);
};
iron_math_Math.floor = function(v) {
	return Math.floor(v);
};
iron_math_Math.log = function(v) {
	return Math.log(v);
};
iron_math_Math.max = function(a,b) {
	return Math.max(a,b);
};
iron_math_Math.min = function(a,b) {
	return Math.min(a,b);
};
iron_math_Math.pow = function(v,exp) {
	return Math.pow(v,exp);
};
iron_math_Math.random = function() {
	return Math.random();
};
iron_math_Math.round = function(v) {
	return Math.round(v);
};
iron_math_Math.sin = function(v) {
	return Math.sin(v);
};
iron_math_Math.sqrt = function(v) {
	return Math.sqrt(v);
};
iron_math_Math.tan = function(v) {
	return Math.tan(v);
};
iron_math_Math.ffloor = function(v) {
	return Math.floor(v);
};
iron_math_Math.fceil = function(v) {
	return Math.ceil(v);
};
iron_math_Math.fround = function(v) {
	return Math.fround(v);
};
iron_math_Math.isFinite = function(f) {
	return isFinite(f);
};
iron_math_Math.isNaN = function(f) {
	return isNaN(f);
};
iron_math_Math.roundfp = function(f,precision) {
	if(precision == null) {
		precision = 2;
	}
	f *= Math.pow(10,precision);
	return Math.round(f) / Math.pow(10,precision);
};
iron_math_Math.clamp = function(f,min,max) {
	if(f < min) {
		return min;
	} else if(f > max) {
		return max;
	} else {
		return f;
	}
};
iron_math_Math.toDegrees = function(radians) {
	return radians * 57.29578;
};
iron_math_Math.toRadians = function(degrees) {
	return degrees * 0.0174532924;
};
iron_math_Math.map = function(value,leftMin,leftMax,rightMin,rightMax) {
	return rightMin + (value - leftMin) / (leftMax - leftMin) * (rightMax - rightMin);
};
iron_math_Math.mapInt = function(value,leftMin,leftMax,rightMin,rightMax) {
	var result = rightMin + (value - leftMin) / (leftMax - leftMin) * (rightMax - rightMin) | 0;
	return result;
};
iron_math_Math.mapClamped = function(value,leftMin,leftMax,rightMin,rightMax) {
	if(value >= leftMax) {
		return rightMax;
	}
	if(value <= leftMin) {
		return rightMin;
	}
	return rightMin + (value - leftMin) / (leftMax - leftMin) * (rightMax - rightMin);
};
iron_math_Math.mod = function(a,b) {
	return a - b * (a / b | 0);
};
iron_math_Math.fract = function(v) {
	return v - (v | 0);
};
var iron_math_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Quat"] = iron_math_Quat;
iron_math_Quat.__name__ = "iron.math.Quat";
iron_math_Quat.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,set: function(x,y,z,w) {
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
		return this;
	}
	,fromAxisAngle: function(axis,angle) {
		var s = Math.sin(angle * 0.5);
		this.x = axis.x * s;
		this.y = axis.y * s;
		this.z = axis.z * s;
		this.w = Math.cos(angle * 0.5);
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		return this;
	}
	,toAxisAngle: function(axis) {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		var angle = 2 * Math.acos(this.w);
		var s = Math.sqrt(1 - this.w * this.w);
		if(s < 0.001) {
			axis.x = this.x;
			axis.y = this.y;
			axis.z = this.z;
		} else {
			axis.x = this.x / s;
			axis.y = this.y / s;
			axis.z = this.z / s;
		}
		return angle;
	}
	,fromMat: function(m) {
		var _this = iron_math_Quat.helpMat;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		var _this1 = iron_math_Quat.helpMat;
		var _this2 = iron_math_Mat4.helpVec;
		_this2.x = _this1.self._00;
		_this2.y = _this1.self._01;
		_this2.z = _this1.self._02;
		_this2.w = 1.0;
		var _this3 = _this2;
		var scale = 1.0 / Math.sqrt(_this3.x * _this3.x + _this3.y * _this3.y + _this3.z * _this3.z);
		_this1.self._00 *= scale;
		_this1.self._01 *= scale;
		_this1.self._02 *= scale;
		var _this4 = iron_math_Mat4.helpVec;
		_this4.x = _this1.self._10;
		_this4.y = _this1.self._11;
		_this4.z = _this1.self._12;
		_this4.w = 1.0;
		var _this5 = _this4;
		scale = 1.0 / Math.sqrt(_this5.x * _this5.x + _this5.y * _this5.y + _this5.z * _this5.z);
		_this1.self._10 *= scale;
		_this1.self._11 *= scale;
		_this1.self._12 *= scale;
		var _this6 = iron_math_Mat4.helpVec;
		_this6.x = _this1.self._20;
		_this6.y = _this1.self._21;
		_this6.z = _this1.self._22;
		_this6.w = 1.0;
		var _this7 = _this6;
		scale = 1.0 / Math.sqrt(_this7.x * _this7.x + _this7.y * _this7.y + _this7.z * _this7.z);
		_this1.self._20 *= scale;
		_this1.self._21 *= scale;
		_this1.self._22 *= scale;
		_this1.self._03 = 0.0;
		_this1.self._13 = 0.0;
		_this1.self._23 = 0.0;
		_this1.self._30 = 0.0;
		_this1.self._31 = 0.0;
		_this1.self._32 = 0.0;
		_this1.self._33 = 1.0;
		var m1 = iron_math_Quat.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m31 = m1.self._02;
		var m32 = m1.self._12;
		var m33 = m1.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			this.w = 0.25 / s;
			this.x = (m32 - m23) * s;
			this.y = (m13 - m31) * s;
			this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			this.w = (m32 - m23) / s;
			this.x = 0.25 * s;
			this.y = (m12 + m21) / s;
			this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			this.w = (m13 - m31) / s;
			this.x = (m12 + m21) / s;
			this.y = 0.25 * s;
			this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			this.w = (m21 - m12) / s;
			this.x = (m13 + m31) / s;
			this.y = (m23 + m32) / s;
			this.z = 0.25 * s;
		}
		return this;
	}
	,fromRotationMat: function(m) {
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m31 = m.self._02;
		var m32 = m.self._12;
		var m33 = m.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			this.w = 0.25 / s;
			this.x = (m32 - m23) * s;
			this.y = (m13 - m31) * s;
			this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			this.w = (m32 - m23) / s;
			this.x = 0.25 * s;
			this.y = (m12 + m21) / s;
			this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			this.w = (m13 - m31) / s;
			this.x = (m12 + m21) / s;
			this.y = 0.25 * s;
			this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			this.w = (m21 - m12) / s;
			this.x = (m13 + m31) / s;
			this.y = (m23 + m32) / s;
			this.z = 0.25 * s;
		}
		return this;
	}
	,mult: function(q) {
		var q1x = this.x;
		var q1y = this.y;
		var q1z = this.z;
		var q1w = this.w;
		var q2x = q.x;
		var q2y = q.y;
		var q2z = q.z;
		var q2w = q.w;
		this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		return this;
	}
	,multquats: function(q1,q2) {
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		this.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		this.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		return this;
	}
	,normalize: function() {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		return this;
	}
	,setFrom: function(q) {
		this.x = q.x;
		this.y = q.y;
		this.z = q.z;
		this.w = q.w;
		return this;
	}
	,getEuler: function() {
		var roll = NaN;
		var yaw = 0.0;
		var pitch = 0.0;
		var test = this.x * this.y + this.z * this.w;
		if(test > 0.499) {
			roll = 2 * Math.atan2(this.x,this.w);
			yaw = 1.57079632679489656;
			pitch = 0;
		}
		if(test < -0.499) {
			roll = -2 * Math.atan2(this.x,this.w);
			yaw = -1.57079632679489656;
			pitch = 0;
		}
		if(isNaN(roll)) {
			var a = 2 * this.z * this.z;
			var b = this.y * this.y;
			roll = Math.atan2(2 * this.y * this.w - 2 * this.x * this.z,1.0 - 2 * b - a);
			b = this.x * this.x;
			pitch = Math.atan2(2 * this.x * this.w - 2 * this.y * this.z,1.0 - 2 * b - a);
			yaw = Math.asin(2 * test);
		}
		return new iron_math_Vec4(pitch,roll,yaw);
	}
	,fromEuler: function(x,y,z) {
		var f = x / 2;
		var c1 = Math.cos(f);
		var s1 = Math.sin(f);
		f = y / 2;
		var c2 = Math.cos(f);
		var s2 = Math.sin(f);
		f = z / 2;
		var c3 = Math.cos(f);
		var s3 = Math.sin(f);
		this.x = s1 * c2 * c3 + c1 * s2 * s3;
		this.y = c1 * s2 * c3 + s1 * c2 * s3;
		this.z = c1 * c2 * s3 - s1 * s2 * c3;
		this.w = c1 * c2 * c3 - s1 * s2 * s3;
		return this;
	}
	,lerp: function(from,to,s) {
		var fromx = from.x;
		var fromy = from.y;
		var fromz = from.z;
		var fromw = from.w;
		var dot = from.x * to.x + from.y * to.y + from.z * to.z + from.w * to.w;
		if(dot < 0.0) {
			fromx = -fromx;
			fromy = -fromy;
			fromz = -fromz;
			fromw = -fromw;
		}
		this.x = fromx + (to.x - fromx) * s;
		this.y = fromy + (to.y - fromy) * s;
		this.z = fromz + (to.z - fromz) * s;
		this.w = fromw + (to.w - fromw) * s;
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
		return this;
	}
	,dot: function(q) {
		return this.x * q.x + this.y * q.y + this.z * q.z + this.w * q.w;
	}
	,fromTo: function(v1,v2) {
		var a = iron_math_Quat.helpVec0;
		var dot = v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;
		if(dot < -0.999999) {
			var a1 = iron_math_Quat.xAxis;
			var ax = a1.x;
			var ay = a1.y;
			var az = a1.z;
			var bx = v1.x;
			var by = v1.y;
			var bz = v1.z;
			a.x = ay * bz - az * by;
			a.y = az * bx - ax * bz;
			a.z = ax * by - ay * bx;
			if(Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z) < 0.000001) {
				var a2 = iron_math_Quat.yAxis;
				var ax1 = a2.x;
				var ay1 = a2.y;
				var az1 = a2.z;
				var bx1 = v1.x;
				var by1 = v1.y;
				var bz1 = v1.z;
				a.x = ay1 * bz1 - az1 * by1;
				a.y = az1 * bx1 - ax1 * bz1;
				a.z = ax1 * by1 - ay1 * bx1;
			}
			var n = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
			if(n > 0.0) {
				var invN = 1.0 / n;
				a.x *= invN;
				a.y *= invN;
				a.z *= invN;
			}
			var s = Math.sin(1.57079632679489656);
			this.x = a.x * s;
			this.y = a.y * s;
			this.z = a.z * s;
			this.w = Math.cos(1.57079632679489656);
			var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
			if(l == 0.0) {
				this.x = 0;
				this.y = 0;
				this.z = 0;
				this.w = 0;
			} else {
				l = 1.0 / l;
				this.x *= l;
				this.y *= l;
				this.z *= l;
				this.w *= l;
			}
		} else if(dot > 0.999999) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 1;
		} else {
			var ax2 = v1.x;
			var ay2 = v1.y;
			var az2 = v1.z;
			var bx2 = v2.x;
			var by2 = v2.y;
			var bz2 = v2.z;
			a.x = ay2 * bz2 - az2 * by2;
			a.y = az2 * bx2 - ax2 * bz2;
			a.z = ax2 * by2 - ay2 * bx2;
			this.x = a.x;
			this.y = a.y;
			this.z = a.z;
			this.w = 1 + dot;
			var l1 = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
			if(l1 == 0.0) {
				this.x = 0;
				this.y = 0;
				this.z = 0;
				this.w = 0;
			} else {
				l1 = 1.0 / l1;
				this.x *= l1;
				this.y *= l1;
				this.z *= l1;
				this.w *= l1;
			}
		}
		return this;
	}
	,toString: function() {
		return this.x + ", " + this.y + ", " + this.z + ", " + this.w;
	}
	,__class__: iron_math_Quat
};
var iron_object_Animation = function() {
	this.markerEvents = null;
	this.lastFrameIndex = -1;
	this.blendFactor = 0.0;
	this.blendAction = "";
	this.blendCurrent = 0.0;
	this.blendTime = 0.0;
	this.paused = false;
	this.onComplete = null;
	this.frameIndex = 0;
	this.loop = true;
	this.speed = 1.0;
	this.time = 0.0;
	this.action = "";
	iron_Scene.active.animations.push(this);
	this.frameTime = iron_Scene.active.raw.frame_time;
	this.play();
};
$hxClasses["iron.object.Animation"] = iron_object_Animation;
iron_object_Animation.__name__ = "iron.object.Animation";
iron_object_Animation.prototype = {
	isSkinned: null
	,isSampled: null
	,action: null
	,armature: null
	,time: null
	,speed: null
	,loop: null
	,frameIndex: null
	,onComplete: null
	,paused: null
	,frameTime: null
	,blendTime: null
	,blendCurrent: null
	,blendAction: null
	,blendFactor: null
	,lastFrameIndex: null
	,markerEvents: null
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		if(blendTime > 0) {
			this.blendTime = blendTime;
			this.blendCurrent = 0.0;
			this.blendAction = this.action;
		} else {
			this.frameIndex = -1;
		}
		this.action = action;
		this.onComplete = onComplete;
		this.speed = speed;
		this.loop = loop;
		this.paused = false;
	}
	,blend: function(action1,action2,factor) {
		this.blendTime = 1.0;
		this.blendFactor = factor;
	}
	,pause: function() {
		this.paused = true;
	}
	,resume: function() {
		this.paused = false;
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.animations,this);
	}
	,update: function(delta) {
		if(this.paused || this.speed == 0.0) {
			return;
		}
		this.time += delta * this.speed;
		if(this.blendTime > 0 && this.blendFactor == 0) {
			this.blendCurrent += delta;
			if(this.blendCurrent >= this.blendTime) {
				this.blendTime = 0.0;
			}
		}
	}
	,isTrackEnd: function(track) {
		if(this.speed > 0) {
			return this.frameIndex >= track.frames.length - 1;
		} else {
			return this.frameIndex <= 0;
		}
	}
	,checkFrameIndex: function(frameValues) {
		if(this.speed > 0) {
			if(this.frameIndex + 1 < frameValues.length) {
				return this.time > frameValues[this.frameIndex + 1] * this.frameTime;
			} else {
				return false;
			}
		} else if(this.frameIndex - 1 > -1) {
			return this.time < frameValues[this.frameIndex - 1] * this.frameTime;
		} else {
			return false;
		}
	}
	,rewind: function(track) {
		this.frameIndex = this.speed > 0 ? 0 : track.frames.length - 1;
		this.time = track.frames[this.frameIndex] * this.frameTime;
	}
	,updateTrack: function(anim) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		if(this.frameIndex == -1) {
			this.rewind(track);
		}
		var sign = this.speed > 0 ? 1 : -1;
		while(true) {
			var frameValues = track.frames;
			if(!(this.speed > 0 ? this.frameIndex + 1 < frameValues.length && this.time > frameValues[this.frameIndex + 1] * this.frameTime : this.frameIndex - 1 > -1 && this.time < frameValues[this.frameIndex - 1] * this.frameTime)) {
				break;
			}
			this.frameIndex += sign;
		}
		if(this.markerEvents != null && anim.marker_names != null && this.frameIndex != this.lastFrameIndex) {
			var _g = 0;
			var _g1 = anim.marker_frames.length;
			while(_g < _g1) {
				var i = _g++;
				if(this.frameIndex == anim.marker_frames[i]) {
					var key = anim.marker_names[i];
					var _this = this.markerEvents;
					var ar = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
					var _g2 = 0;
					while(_g2 < ar.length) {
						var f = ar[_g2];
						++_g2;
						f();
					}
				}
			}
			this.lastFrameIndex = this.frameIndex;
		}
		if(this.isTrackEnd(track)) {
			if(this.loop || this.blendTime > 0) {
				this.rewind(track);
			} else {
				this.frameIndex -= sign;
				this.paused = true;
			}
			if(this.onComplete != null && this.blendTime == 0) {
				this.onComplete();
			}
		}
	}
	,updateAnimSampled: function(anim,m) {
		if(anim == null) {
			return;
		}
		var track = anim.tracks[0];
		var sign = this.speed > 0 ? 1 : -1;
		var t = this.time;
		var ti = this.frameIndex;
		var t1 = track.frames[ti] * this.frameTime;
		var t2 = track.frames[ti + sign] * this.frameTime;
		var s = (t - t1) / (t2 - t1);
		var _this = iron_object_Animation.m1;
		var a = track.values;
		var offset = ti * 16;
		_this.self._00 = a[offset];
		_this.self._10 = a[1 + offset];
		_this.self._20 = a[2 + offset];
		_this.self._30 = a[3 + offset];
		_this.self._01 = a[4 + offset];
		_this.self._11 = a[5 + offset];
		_this.self._21 = a[6 + offset];
		_this.self._31 = a[7 + offset];
		_this.self._02 = a[8 + offset];
		_this.self._12 = a[9 + offset];
		_this.self._22 = a[10 + offset];
		_this.self._32 = a[11 + offset];
		_this.self._03 = a[12 + offset];
		_this.self._13 = a[13 + offset];
		_this.self._23 = a[14 + offset];
		_this.self._33 = a[15 + offset];
		var _this1 = iron_object_Animation.m2;
		var a1 = track.values;
		var offset1 = (ti + sign) * 16;
		_this1.self._00 = a1[offset1];
		_this1.self._10 = a1[1 + offset1];
		_this1.self._20 = a1[2 + offset1];
		_this1.self._30 = a1[3 + offset1];
		_this1.self._01 = a1[4 + offset1];
		_this1.self._11 = a1[5 + offset1];
		_this1.self._21 = a1[6 + offset1];
		_this1.self._31 = a1[7 + offset1];
		_this1.self._02 = a1[8 + offset1];
		_this1.self._12 = a1[9 + offset1];
		_this1.self._22 = a1[10 + offset1];
		_this1.self._32 = a1[11 + offset1];
		_this1.self._03 = a1[12 + offset1];
		_this1.self._13 = a1[13 + offset1];
		_this1.self._23 = a1[14 + offset1];
		_this1.self._33 = a1[15 + offset1];
		var _this2 = iron_object_Animation.m1;
		var loc = iron_object_Animation.vpos;
		var quat = iron_object_Animation.q1;
		var scale = iron_object_Animation.vscl;
		loc.x = _this2.self._30;
		loc.y = _this2.self._31;
		loc.z = _this2.self._32;
		var _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this2.self._00;
		_this3.y = _this2.self._01;
		_this3.z = _this2.self._02;
		_this3.w = 1.0;
		var _this4 = _this3;
		scale.x = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this2.self._10;
		_this5.y = _this2.self._11;
		_this5.z = _this2.self._12;
		_this5.w = 1.0;
		var _this6 = _this5;
		scale.y = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		var _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this2.self._20;
		_this7.y = _this2.self._21;
		_this7.z = _this2.self._22;
		_this7.w = 1.0;
		var _this8 = _this7;
		scale.z = Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		var _this9 = _this2.self;
		var m3 = _this9._12;
		var m4 = _this9._22;
		var m5 = _this9._32;
		var m6 = _this9._13;
		var m7 = _this9._23;
		var m8 = _this9._33;
		var c00 = _this9._11 * (m4 * m8 - m5 * m7) - _this9._21 * (m3 * m8 - m5 * m6) + _this9._31 * (m3 * m7 - m4 * m6);
		var m31 = _this9._12;
		var m41 = _this9._22;
		var m51 = _this9._32;
		var m61 = _this9._13;
		var m71 = _this9._23;
		var m81 = _this9._33;
		var c01 = _this9._10 * (m41 * m81 - m51 * m71) - _this9._20 * (m31 * m81 - m51 * m61) + _this9._30 * (m31 * m71 - m41 * m61);
		var m32 = _this9._11;
		var m42 = _this9._21;
		var m52 = _this9._31;
		var m62 = _this9._13;
		var m72 = _this9._23;
		var m82 = _this9._33;
		var c02 = _this9._10 * (m42 * m82 - m52 * m72) - _this9._20 * (m32 * m82 - m52 * m62) + _this9._30 * (m32 * m72 - m42 * m62);
		var m33 = _this9._11;
		var m43 = _this9._21;
		var m53 = _this9._31;
		var m63 = _this9._12;
		var m73 = _this9._22;
		var m83 = _this9._32;
		var c03 = _this9._10 * (m43 * m83 - m53 * m73) - _this9._20 * (m33 * m83 - m53 * m63) + _this9._30 * (m33 * m73 - m43 * m63);
		if(_this9._00 * c00 - _this9._01 * c01 + _this9._02 * c02 - _this9._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this2.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this2.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this2.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this2.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this2.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this2.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this2.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this2.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this2.self._22 * invs;
		var m1 = iron_math_Mat4.helpMat;
		var m11 = m1.self._00;
		var m12 = m1.self._10;
		var m13 = m1.self._20;
		var m21 = m1.self._01;
		var m22 = m1.self._11;
		var m23 = m1.self._21;
		var m311 = m1.self._02;
		var m321 = m1.self._12;
		var m331 = m1.self._22;
		var tr = m11 + m22 + m331;
		var s1 = 0.0;
		if(tr > 0) {
			s1 = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s1;
			quat.x = (m321 - m23) * s1;
			quat.y = (m13 - m311) * s1;
			quat.z = (m21 - m12) * s1;
		} else if(m11 > m22 && m11 > m331) {
			s1 = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s1;
			quat.x = 0.25 * s1;
			quat.y = (m12 + m21) / s1;
			quat.z = (m13 + m311) / s1;
		} else if(m22 > m331) {
			s1 = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s1;
			quat.x = (m12 + m21) / s1;
			quat.y = 0.25 * s1;
			quat.z = (m23 + m321) / s1;
		} else {
			s1 = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s1;
			quat.x = (m13 + m311) / s1;
			quat.y = (m23 + m321) / s1;
			quat.z = 0.25 * s1;
		}
		var _this10 = iron_object_Animation.m2;
		var loc1 = iron_object_Animation.vpos2;
		var quat1 = iron_object_Animation.q2;
		var scale1 = iron_object_Animation.vscl2;
		loc1.x = _this10.self._30;
		loc1.y = _this10.self._31;
		loc1.z = _this10.self._32;
		var _this11 = iron_math_Mat4.helpVec;
		_this11.x = _this10.self._00;
		_this11.y = _this10.self._01;
		_this11.z = _this10.self._02;
		_this11.w = 1.0;
		var _this12 = _this11;
		scale1.x = Math.sqrt(_this12.x * _this12.x + _this12.y * _this12.y + _this12.z * _this12.z);
		var _this13 = iron_math_Mat4.helpVec;
		_this13.x = _this10.self._10;
		_this13.y = _this10.self._11;
		_this13.z = _this10.self._12;
		_this13.w = 1.0;
		var _this14 = _this13;
		scale1.y = Math.sqrt(_this14.x * _this14.x + _this14.y * _this14.y + _this14.z * _this14.z);
		var _this15 = iron_math_Mat4.helpVec;
		_this15.x = _this10.self._20;
		_this15.y = _this10.self._21;
		_this15.z = _this10.self._22;
		_this15.w = 1.0;
		var _this16 = _this15;
		scale1.z = Math.sqrt(_this16.x * _this16.x + _this16.y * _this16.y + _this16.z * _this16.z);
		var _this17 = _this10.self;
		var m34 = _this17._12;
		var m44 = _this17._22;
		var m54 = _this17._32;
		var m64 = _this17._13;
		var m74 = _this17._23;
		var m84 = _this17._33;
		var c001 = _this17._11 * (m44 * m84 - m54 * m74) - _this17._21 * (m34 * m84 - m54 * m64) + _this17._31 * (m34 * m74 - m44 * m64);
		var m35 = _this17._12;
		var m45 = _this17._22;
		var m55 = _this17._32;
		var m65 = _this17._13;
		var m75 = _this17._23;
		var m85 = _this17._33;
		var c011 = _this17._10 * (m45 * m85 - m55 * m75) - _this17._20 * (m35 * m85 - m55 * m65) + _this17._30 * (m35 * m75 - m45 * m65);
		var m36 = _this17._11;
		var m46 = _this17._21;
		var m56 = _this17._31;
		var m66 = _this17._13;
		var m76 = _this17._23;
		var m86 = _this17._33;
		var c021 = _this17._10 * (m46 * m86 - m56 * m76) - _this17._20 * (m36 * m86 - m56 * m66) + _this17._30 * (m36 * m76 - m46 * m66);
		var m37 = _this17._11;
		var m47 = _this17._21;
		var m57 = _this17._31;
		var m67 = _this17._12;
		var m77 = _this17._22;
		var m87 = _this17._32;
		var c031 = _this17._10 * (m47 * m87 - m57 * m77) - _this17._20 * (m37 * m87 - m57 * m67) + _this17._30 * (m37 * m77 - m47 * m67);
		if(_this17._00 * c001 - _this17._01 * c011 + _this17._02 * c021 - _this17._03 * c031 < 0.0) {
			scale1.x = -scale1.x;
		}
		var invs1 = 1.0 / scale1.x;
		iron_math_Mat4.helpMat.self._00 = _this10.self._00 * invs1;
		iron_math_Mat4.helpMat.self._01 = _this10.self._01 * invs1;
		iron_math_Mat4.helpMat.self._02 = _this10.self._02 * invs1;
		invs1 = 1.0 / scale1.y;
		iron_math_Mat4.helpMat.self._10 = _this10.self._10 * invs1;
		iron_math_Mat4.helpMat.self._11 = _this10.self._11 * invs1;
		iron_math_Mat4.helpMat.self._12 = _this10.self._12 * invs1;
		invs1 = 1.0 / scale1.z;
		iron_math_Mat4.helpMat.self._20 = _this10.self._20 * invs1;
		iron_math_Mat4.helpMat.self._21 = _this10.self._21 * invs1;
		iron_math_Mat4.helpMat.self._22 = _this10.self._22 * invs1;
		var m2 = iron_math_Mat4.helpMat;
		var m111 = m2.self._00;
		var m121 = m2.self._10;
		var m131 = m2.self._20;
		var m211 = m2.self._01;
		var m221 = m2.self._11;
		var m231 = m2.self._21;
		var m312 = m2.self._02;
		var m322 = m2.self._12;
		var m332 = m2.self._22;
		var tr1 = m111 + m221 + m332;
		var s2 = 0.0;
		if(tr1 > 0) {
			s2 = 0.5 / Math.sqrt(tr1 + 1.0);
			quat1.w = 0.25 / s2;
			quat1.x = (m322 - m231) * s2;
			quat1.y = (m131 - m312) * s2;
			quat1.z = (m211 - m121) * s2;
		} else if(m111 > m221 && m111 > m332) {
			s2 = 2.0 * Math.sqrt(1.0 + m111 - m221 - m332);
			quat1.w = (m322 - m231) / s2;
			quat1.x = 0.25 * s2;
			quat1.y = (m121 + m211) / s2;
			quat1.z = (m131 + m312) / s2;
		} else if(m221 > m332) {
			s2 = 2.0 * Math.sqrt(1.0 + m221 - m111 - m332);
			quat1.w = (m131 - m312) / s2;
			quat1.x = (m121 + m211) / s2;
			quat1.y = 0.25 * s2;
			quat1.z = (m231 + m322) / s2;
		} else {
			s2 = 2.0 * Math.sqrt(1.0 + m332 - m111 - m221);
			quat1.w = (m211 - m121) / s2;
			quat1.x = (m131 + m312) / s2;
			quat1.y = (m231 + m322) / s2;
			quat1.z = 0.25 * s2;
		}
		var _this18 = iron_object_Animation.vp;
		var from = iron_object_Animation.vpos;
		var to = iron_object_Animation.vpos2;
		_this18.x = from.x + (to.x - from.x) * s;
		_this18.y = from.y + (to.y - from.y) * s;
		_this18.z = from.z + (to.z - from.z) * s;
		var _this19 = iron_object_Animation.vs;
		var from1 = iron_object_Animation.vscl;
		var to1 = iron_object_Animation.vscl2;
		_this19.x = from1.x + (to1.x - from1.x) * s;
		_this19.y = from1.y + (to1.y - from1.y) * s;
		_this19.z = from1.z + (to1.z - from1.z) * s;
		var _this20 = iron_object_Animation.q3;
		var from2 = iron_object_Animation.q1;
		var to2 = iron_object_Animation.q2;
		var fromx = from2.x;
		var fromy = from2.y;
		var fromz = from2.z;
		var fromw = from2.w;
		var dot = from2.x * to2.x + from2.y * to2.y + from2.z * to2.z + from2.w * to2.w;
		if(dot < 0.0) {
			fromx = -fromx;
			fromy = -fromy;
			fromz = -fromz;
			fromw = -fromw;
		}
		_this20.x = fromx + (to2.x - fromx) * s;
		_this20.y = fromy + (to2.y - fromy) * s;
		_this20.z = fromz + (to2.z - fromz) * s;
		_this20.w = fromw + (to2.w - fromw) * s;
		var l = Math.sqrt(_this20.x * _this20.x + _this20.y * _this20.y + _this20.z * _this20.z + _this20.w * _this20.w);
		if(l == 0.0) {
			_this20.x = 0;
			_this20.y = 0;
			_this20.z = 0;
			_this20.w = 0;
		} else {
			l = 1.0 / l;
			_this20.x *= l;
			_this20.y *= l;
			_this20.z *= l;
			_this20.w *= l;
		}
		var q = iron_object_Animation.q3;
		var x = q.x;
		var y = q.y;
		var z = q.z;
		var w = q.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		m.self._00 = 1.0 - (yy + zz);
		m.self._10 = xy - wz;
		m.self._20 = xz + wy;
		m.self._01 = xy + wz;
		m.self._11 = 1.0 - (xx + zz);
		m.self._21 = yz - wx;
		m.self._02 = xz - wy;
		m.self._12 = yz + wx;
		m.self._22 = 1.0 - (xx + yy);
		m.self._03 = 0.0;
		m.self._13 = 0.0;
		m.self._23 = 0.0;
		m.self._30 = 0.0;
		m.self._31 = 0.0;
		m.self._32 = 0.0;
		m.self._33 = 1.0;
		var v = iron_object_Animation.vs;
		var x1 = v.x;
		var y1 = v.y;
		var z1 = v.z;
		m.self._00 *= x1;
		m.self._01 *= x1;
		m.self._02 *= x1;
		m.self._03 *= x1;
		m.self._10 *= y1;
		m.self._11 *= y1;
		m.self._12 *= y1;
		m.self._13 *= y1;
		m.self._20 *= z1;
		m.self._21 *= z1;
		m.self._22 *= z1;
		m.self._23 *= z1;
		m.self._30 = iron_object_Animation.vp.x;
		m.self._31 = iron_object_Animation.vp.y;
		m.self._32 = iron_object_Animation.vp.z;
	}
	,notifyOnMarker: function(name,onMarker) {
		if(this.markerEvents == null) {
			this.markerEvents = new haxe_ds_StringMap();
		}
		var _this = this.markerEvents;
		var ar = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(ar == null) {
			ar = [];
			var _this1 = this.markerEvents;
			if(__map_reserved[name] != null) {
				_this1.setReserved(name,ar);
			} else {
				_this1.h[name] = ar;
			}
		}
		ar.push(onMarker);
	}
	,removeMarker: function(name,onMarker) {
		var _this = this.markerEvents;
		HxOverrides.remove(__map_reserved[name] != null ? _this.getReserved(name) : _this.h[name],onMarker);
	}
	,currentFrame: function() {
		return this.time / this.frameTime | 0;
	}
	,totalFrames: function() {
		return 0;
	}
	,__class__: iron_object_Animation
};
var iron_object_Object = function() {
	this.isEmpty = false;
	this.properties = null;
	this.culledShadow = false;
	this.culledMesh = false;
	this.culled = false;
	this.visibleShadow = true;
	this.visibleMesh = true;
	this.visible = true;
	this.animation = null;
	this.lods = null;
	this.children = [];
	this.parent = null;
	this.traits = [];
	this.constraints = null;
	this.name = "";
	this.raw = null;
	this.uid = iron_object_Object.uidCounter++;
	this.urandom = iron_object_Object.seededRandom();
	this.transform = new iron_object_Transform(this);
	this.isEmpty = js_Boot.getClass(this) == iron_object_Object;
	if(this.isEmpty && iron_Scene.active != null) {
		iron_Scene.active.empties.push(this);
	}
};
$hxClasses["iron.object.Object"] = iron_object_Object;
iron_object_Object.__name__ = "iron.object.Object";
iron_object_Object.seededRandom = function() {
	iron_object_Object.seed = (iron_object_Object.seed * 9301 + 49297) % 233280;
	return iron_object_Object.seed / 233280.0;
};
iron_object_Object.prototype = {
	uid: null
	,urandom: null
	,raw: null
	,name: null
	,transform: null
	,constraints: null
	,traits: null
	,parent: null
	,children: null
	,lods: null
	,animation: null
	,visible: null
	,visibleMesh: null
	,visibleShadow: null
	,culled: null
	,culledMesh: null
	,culledShadow: null
	,properties: null
	,isEmpty: null
	,addChild: function(o,parentInverse) {
		if(parentInverse == null) {
			parentInverse = false;
		}
		if(o.parent == this) {
			return;
		}
		this.children.push(o);
		o.parent = this;
		if(parentInverse) {
			o.transform.applyParentInverse();
		}
	}
	,removeChild: function(o,keepTransform) {
		if(keepTransform == null) {
			keepTransform = false;
		}
		if(keepTransform) {
			o.transform.applyParent();
		}
		o.parent = null;
		o.transform.buildMatrix();
		HxOverrides.remove(this.children,o);
	}
	,remove: function() {
		if(this.isEmpty && iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.empties,this);
		}
		if(this.animation != null) {
			this.animation.remove();
		}
		while(this.children.length > 0) this.children[0].remove();
		while(this.traits.length > 0) this.traits[0].remove();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
			this.parent = null;
		}
	}
	,getChild: function(name) {
		if(this.name == name) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChild(name);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,getChildOfType: function(type) {
		if(js_Boot.__instanceof(this,type)) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChildOfType(type);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,addTrait: function(t) {
		this.traits.push(t);
		t.object = this;
		if(t._add != null) {
			var _g = 0;
			var _g1 = t._add;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			t._add = null;
		}
	}
	,removeTrait: function(t) {
		if(t._init != null) {
			var _g = 0;
			var _g1 = t._init;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeInit(f);
			}
			t._init = null;
		}
		if(t._update != null) {
			var _g2 = 0;
			var _g11 = t._update;
			while(_g2 < _g11.length) {
				var f1 = _g11[_g2];
				++_g2;
				iron_App.removeUpdate(f1);
			}
			t._update = null;
		}
		if(t._lateUpdate != null) {
			var _g3 = 0;
			var _g12 = t._lateUpdate;
			while(_g3 < _g12.length) {
				var f2 = _g12[_g3];
				++_g3;
				iron_App.removeLateUpdate(f2);
			}
			t._lateUpdate = null;
		}
		if(t._render != null) {
			var _g4 = 0;
			var _g13 = t._render;
			while(_g4 < _g13.length) {
				var f3 = _g13[_g4];
				++_g4;
				iron_App.removeRender(f3);
			}
			t._render = null;
		}
		if(t._render2D != null) {
			var _g5 = 0;
			var _g14 = t._render2D;
			while(_g5 < _g14.length) {
				var f4 = _g14[_g5];
				++_g5;
				iron_App.removeRender2D(f4);
			}
			t._render2D = null;
		}
		if(t._remove != null) {
			var _g6 = 0;
			var _g15 = t._remove;
			while(_g6 < _g15.length) {
				var f5 = _g15[_g6];
				++_g6;
				f5();
			}
			t._remove = null;
		}
		HxOverrides.remove(this.traits,t);
	}
	,getTrait: function(c) {
		var _g = 0;
		var _g1 = this.traits;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if((t == null ? null : js_Boot.getClass(t)) == c) {
				return t;
			}
		}
		return null;
	}
	,setupAnimation: function(oactions) {
		if(oactions == null) {
			return;
		}
		this.animation = new iron_object_ObjectAnimation(this,oactions);
	}
	,__class__: iron_object_Object
};
var iron_object_CameraObject = function(data) {
	this.currentFace = 0;
	this.renderTargetCube = null;
	this.renderTarget = null;
	this.frustumPlanes = null;
	this.prevV = null;
	iron_object_Object.call(this);
	this.data = data;
	this.buildProjection();
	this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	if(data.raw.frustum_culling) {
		this.frustumPlanes = [];
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
		this.frustumPlanes.push(new iron_object_FrustumPlane());
	}
	iron_Scene.active.cameras.push(this);
};
$hxClasses["iron.object.CameraObject"] = iron_object_CameraObject;
iron_object_CameraObject.__name__ = "iron.object.CameraObject";
iron_object_CameraObject.buildViewFrustum = function(VP,frustumPlanes) {
	var _this = frustumPlanes[0];
	var _this1 = _this.normal;
	_this1.x = VP.self._03 + VP.self._00;
	_this1.y = VP.self._13 + VP.self._10;
	_this1.z = VP.self._23 + VP.self._20;
	_this1.w = 1.0;
	_this.constant = VP.self._33 + VP.self._30;
	var _this2 = frustumPlanes[1];
	var _this3 = _this2.normal;
	_this3.x = VP.self._03 - VP.self._00;
	_this3.y = VP.self._13 - VP.self._10;
	_this3.z = VP.self._23 - VP.self._20;
	_this3.w = 1.0;
	_this2.constant = VP.self._33 - VP.self._30;
	var _this4 = frustumPlanes[2];
	var _this5 = _this4.normal;
	_this5.x = VP.self._03 - VP.self._01;
	_this5.y = VP.self._13 - VP.self._11;
	_this5.z = VP.self._23 - VP.self._21;
	_this5.w = 1.0;
	_this4.constant = VP.self._33 - VP.self._31;
	var _this6 = frustumPlanes[3];
	var _this7 = _this6.normal;
	_this7.x = VP.self._03 + VP.self._01;
	_this7.y = VP.self._13 + VP.self._11;
	_this7.z = VP.self._23 + VP.self._21;
	_this7.w = 1.0;
	_this6.constant = VP.self._33 + VP.self._31;
	var _this8 = frustumPlanes[4];
	var _this9 = _this8.normal;
	_this9.x = VP.self._02;
	_this9.y = VP.self._12;
	_this9.z = VP.self._22;
	_this9.w = 1.0;
	_this8.constant = VP.self._32;
	var _this10 = frustumPlanes[5];
	var _this11 = _this10.normal;
	_this11.x = VP.self._03 - VP.self._02;
	_this11.y = VP.self._13 - VP.self._12;
	_this11.z = VP.self._23 - VP.self._22;
	_this11.w = 1.0;
	_this10.constant = VP.self._33 - VP.self._32;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		plane.normalize();
	}
};
iron_object_CameraObject.sphereInFrustum = function(frustumPlanes,t,radiusScale,offsetX,offsetY,offsetZ) {
	if(offsetZ == null) {
		offsetZ = 0.0;
	}
	if(offsetY == null) {
		offsetY = 0.0;
	}
	if(offsetX == null) {
		offsetX = 0.0;
	}
	if(radiusScale == null) {
		radiusScale = 1.0;
	}
	var radius = t.radius * radiusScale;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		var _this = iron_object_CameraObject.sphereCenter;
		_this.x = t.world.self._30 + offsetX;
		_this.y = t.world.self._31 + offsetY;
		_this.z = t.world.self._32 + offsetZ;
		_this.w = 1.0;
		if(plane.distanceToSphere(iron_object_CameraObject.sphereCenter,radius) + radius * 2 < 0) {
			return false;
		}
	}
	return true;
};
iron_object_CameraObject.setCubeFace = function(m,eye,face) {
	var _this = iron_object_CameraObject.vcenter;
	_this.x = eye.x;
	_this.y = eye.y;
	_this.z = eye.z;
	_this.w = eye.w;
	switch(face) {
	case 0:
		var _this1 = iron_object_CameraObject.vcenter;
		_this1.x += 1.0;
		_this1.y += 0.0;
		_this1.z += 0.0;
		var _this2 = iron_object_CameraObject.vup;
		_this2.x = 0.0;
		_this2.y = -1.0;
		_this2.z = 0.0;
		_this2.w = 1.0;
		break;
	case 1:
		var _this3 = iron_object_CameraObject.vcenter;
		_this3.x += -1.0;
		_this3.y += 0.0;
		_this3.z += 0.0;
		var _this4 = iron_object_CameraObject.vup;
		_this4.x = 0.0;
		_this4.y = -1.0;
		_this4.z = 0.0;
		_this4.w = 1.0;
		break;
	case 2:
		var _this5 = iron_object_CameraObject.vcenter;
		_this5.x += 0.0;
		_this5.y += 1.0;
		_this5.z += 0.0;
		var _this6 = iron_object_CameraObject.vup;
		_this6.x = 0.0;
		_this6.y = 0.0;
		_this6.z = 1.0;
		_this6.w = 1.0;
		break;
	case 3:
		var _this7 = iron_object_CameraObject.vcenter;
		_this7.x += 0.0;
		_this7.y += -1.0;
		_this7.z += 0.0;
		var _this8 = iron_object_CameraObject.vup;
		_this8.x = 0.0;
		_this8.y = 0.0;
		_this8.z = -1.0;
		_this8.w = 1.0;
		break;
	case 4:
		var _this9 = iron_object_CameraObject.vcenter;
		_this9.x += 0.0;
		_this9.y += 0.0;
		_this9.z += 1.0;
		var _this10 = iron_object_CameraObject.vup;
		_this10.x = 0.0;
		_this10.y = -1.0;
		_this10.z = 0.0;
		_this10.w = 1.0;
		break;
	case 5:
		var _this11 = iron_object_CameraObject.vcenter;
		_this11.x += 0.0;
		_this11.y += 0.0;
		_this11.z += -1.0;
		var _this12 = iron_object_CameraObject.vup;
		_this12.x = 0.0;
		_this12.y = -1.0;
		_this12.z = 0.0;
		_this12.w = 1.0;
		break;
	}
	var center = iron_object_CameraObject.vcenter;
	var up = iron_object_CameraObject.vup;
	var f0 = center.x - eye.x;
	var f1 = center.y - eye.y;
	var f2 = center.z - eye.z;
	var n = 1.0 / Math.sqrt(f0 * f0 + f1 * f1 + f2 * f2);
	f0 *= n;
	f1 *= n;
	f2 *= n;
	var s0 = f1 * up.z - f2 * up.y;
	var s1 = f2 * up.x - f0 * up.z;
	var s2 = f0 * up.y - f1 * up.x;
	n = 1.0 / Math.sqrt(s0 * s0 + s1 * s1 + s2 * s2);
	s0 *= n;
	s1 *= n;
	s2 *= n;
	var u0 = s1 * f2 - s2 * f1;
	var u1 = s2 * f0 - s0 * f2;
	var u2 = s0 * f1 - s1 * f0;
	var d0 = -eye.x * s0 - eye.y * s1 - eye.z * s2;
	var d1 = -eye.x * u0 - eye.y * u1 - eye.z * u2;
	var d2 = eye.x * f0 + eye.y * f1 + eye.z * f2;
	m.self._00 = s0;
	m.self._10 = s1;
	m.self._20 = s2;
	m.self._30 = d0;
	m.self._01 = u0;
	m.self._11 = u1;
	m.self._21 = u2;
	m.self._31 = d1;
	m.self._02 = -f0;
	m.self._12 = -f1;
	m.self._22 = -f2;
	m.self._32 = d2;
	m.self._03 = 0.0;
	m.self._13 = 0.0;
	m.self._23 = 0.0;
	m.self._33 = 1.0;
};
iron_object_CameraObject.__super__ = iron_object_Object;
iron_object_CameraObject.prototype = $extend(iron_object_Object.prototype,{
	data: null
	,P: null
	,V: null
	,prevV: null
	,VP: null
	,frustumPlanes: null
	,renderTarget: null
	,renderTargetCube: null
	,currentFace: null
	,buildProjection: function(screenAspect) {
		if(screenAspect == null) {
			screenAspect = kha_System.windowWidth() / kha_System.windowHeight();
		}
		var aspect = this.data.raw.aspect != null ? this.data.raw.aspect : screenAspect;
		if(this.data.raw.ortho_scale != null) {
			var sc = this.data.raw.ortho_scale;
			var left = -1 * aspect * sc;
			var right = aspect * sc;
			var bottom = -1 * sc;
			var near = -1 * this.data.raw.far_plane;
			var far = this.data.raw.far_plane;
			var rl = right - left;
			var tb = sc - bottom;
			var fn = far - near;
			var tx = -(right + left) / rl;
			var ty = -(sc + bottom) / tb;
			var tz = -(far + near) / fn;
			this.P = new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
		} else {
			var zn = this.data.raw.near_plane;
			var zf = this.data.raw.far_plane;
			var uh = 1.0 / Math.tan(this.data.raw.fov / 2);
			var uw = uh / aspect;
			this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
		}
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.cameras,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,renderFrame: function(g) {
		this.buildMatrix();
		if(this.prevV == null) {
			this.prevV = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			var _this = this.prevV;
			var m = this.V;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
		}
		iron_RenderPath.active.renderFrame(g);
		var _this1 = this.prevV;
		var m1 = this.V;
		_this1.self._00 = m1.self._00;
		_this1.self._01 = m1.self._01;
		_this1.self._02 = m1.self._02;
		_this1.self._03 = m1.self._03;
		_this1.self._10 = m1.self._10;
		_this1.self._11 = m1.self._11;
		_this1.self._12 = m1.self._12;
		_this1.self._13 = m1.self._13;
		_this1.self._20 = m1.self._20;
		_this1.self._21 = m1.self._21;
		_this1.self._22 = m1.self._22;
		_this1.self._23 = m1.self._23;
		_this1.self._30 = m1.self._30;
		_this1.self._31 = m1.self._31;
		_this1.self._32 = m1.self._32;
		_this1.self._33 = m1.self._33;
	}
	,buildMatrix: function() {
		this.transform.buildMatrix();
		var _this = this.transform.world;
		var sc_x = Math.sqrt(_this.self._00 * _this.self._00 + _this.self._10 * _this.self._10 + _this.self._20 * _this.self._20);
		var sc_y = Math.sqrt(_this.self._01 * _this.self._01 + _this.self._11 * _this.self._11 + _this.self._21 * _this.self._21);
		var sc_z = Math.sqrt(_this.self._02 * _this.self._02 + _this.self._12 * _this.self._12 + _this.self._22 * _this.self._22);
		var sc_w = 1.0;
		if(sc_x != 1.0 || sc_y != 1.0 || sc_z != 1.0) {
			var _this1 = iron_object_CameraObject.temp;
			_this1.x = 1.0 / sc_x;
			_this1.y = 1.0 / sc_y;
			_this1.z = 1.0 / sc_z;
			_this1.w = 1.0;
			var _this2 = this.transform.world;
			var v = iron_object_CameraObject.temp;
			var x = v.x;
			var y = v.y;
			var z = v.z;
			_this2.self._00 *= x;
			_this2.self._01 *= x;
			_this2.self._02 *= x;
			_this2.self._03 *= x;
			_this2.self._10 *= y;
			_this2.self._11 *= y;
			_this2.self._12 *= y;
			_this2.self._13 *= y;
			_this2.self._20 *= z;
			_this2.self._21 *= z;
			_this2.self._22 *= z;
			_this2.self._23 *= z;
		}
		var _this3 = this.V;
		var m = this.transform.world;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this3.self._00 = 1.0;
			_this3.self._01 = 0.0;
			_this3.self._02 = 0.0;
			_this3.self._03 = 0.0;
			_this3.self._10 = 0.0;
			_this3.self._11 = 1.0;
			_this3.self._12 = 0.0;
			_this3.self._13 = 0.0;
			_this3.self._20 = 0.0;
			_this3.self._21 = 0.0;
			_this3.self._22 = 1.0;
			_this3.self._23 = 0.0;
			_this3.self._30 = 0.0;
			_this3.self._31 = 0.0;
			_this3.self._32 = 0.0;
			_this3.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this3.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this3.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this3.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this3.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this3.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this3.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this3.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this3.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this3.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this3.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this3.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this3.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this3.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this3.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this3.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this3.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this4 = this.VP;
		var b = this.P;
		var a = this.V;
		var a001 = a.self._00;
		var a011 = a.self._01;
		var a021 = a.self._02;
		var a031 = a.self._03;
		var a101 = a.self._10;
		var a111 = a.self._11;
		var a121 = a.self._12;
		var a131 = a.self._13;
		var a201 = a.self._20;
		var a211 = a.self._21;
		var a221 = a.self._22;
		var a231 = a.self._23;
		var a301 = a.self._30;
		var a311 = a.self._31;
		var a321 = a.self._32;
		var a331 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		_this4.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this4.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this4.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this4.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this4.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this4.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this4.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		if(this.data.raw.frustum_culling) {
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,right: function() {
		return new iron_math_Vec4(this.transform.local.self._00,this.transform.local.self._01,this.transform.local.self._02);
	}
	,up: function() {
		return new iron_math_Vec4(this.transform.local.self._10,this.transform.local.self._11,this.transform.local.self._12);
	}
	,look: function() {
		return new iron_math_Vec4(-this.transform.local.self._20,-this.transform.local.self._21,-this.transform.local.self._22);
	}
	,rightWorld: function() {
		return new iron_math_Vec4(this.transform.world.self._00,this.transform.world.self._01,this.transform.world.self._02);
	}
	,upWorld: function() {
		return new iron_math_Vec4(this.transform.world.self._10,this.transform.world.self._11,this.transform.world.self._12);
	}
	,lookWorld: function() {
		return new iron_math_Vec4(-this.transform.world.self._20,-this.transform.world.self._21,-this.transform.world.self._22);
	}
	,__class__: iron_object_CameraObject
});
var iron_object_FrustumPlane = function() {
	this.constant = 0.0;
	this.normal = new iron_math_Vec4(1.0,0.0,0.0);
};
$hxClasses["iron.object.FrustumPlane"] = iron_object_FrustumPlane;
iron_object_FrustumPlane.__name__ = "iron.object.FrustumPlane";
iron_object_FrustumPlane.prototype = {
	normal: null
	,constant: null
	,normalize: function() {
		var _this = this.normal;
		var inverseNormalLength = 1.0 / Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		var _this1 = this.normal;
		_this1.x *= inverseNormalLength;
		_this1.y *= inverseNormalLength;
		_this1.z *= inverseNormalLength;
		this.constant *= inverseNormalLength;
	}
	,distanceToSphere: function(sphereCenter,sphereRadius) {
		var _this = this.normal;
		return _this.x * sphereCenter.x + _this.y * sphereCenter.y + _this.z * sphereCenter.z + this.constant - sphereRadius;
	}
	,setComponents: function(x,y,z,w) {
		var _this = this.normal;
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.0;
		this.constant = w;
	}
	,__class__: iron_object_FrustumPlane
};
var iron_object_Constraint = function(constr) {
	this.target = null;
	this.raw = constr;
};
$hxClasses["iron.object.Constraint"] = iron_object_Constraint;
iron_object_Constraint.__name__ = "iron.object.Constraint";
iron_object_Constraint.prototype = {
	raw: null
	,target: null
	,apply: function(transform) {
		if(this.target == null && this.raw.target != null) {
			this.target = iron_Scene.active.getChild(this.raw.target).transform;
		}
		if(this.raw.type == "COPY_LOCATION") {
			if(this.raw.use_x) {
				transform.world.self._30 = this.target.loc.x;
				if(this.raw.use_offset) {
					transform.world.self._30 += transform.loc.x;
				}
			}
			if(this.raw.use_y) {
				transform.world.self._31 = this.target.loc.y;
				if(this.raw.use_offset) {
					transform.world.self._31 += transform.loc.y;
				}
			}
			if(this.raw.use_z) {
				transform.world.self._32 = this.target.loc.z;
				if(this.raw.use_offset) {
					transform.world.self._32 += transform.loc.z;
				}
			}
		}
	}
	,__class__: iron_object_Constraint
};
var iron_object_LightObject = function(data) {
	this.frustumPlanes = null;
	this.VP = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.P = null;
	this.V = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	this.camSlicedP = null;
	iron_object_Object.call(this);
	this.data = data;
	var type = data.raw.type;
	var fov = data.raw.fov;
	if(type == "sun") {
		if(iron_object_LightObject.corners == null) {
			iron_object_LightObject.corners = [];
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
			iron_object_LightObject.corners.push(new iron_math_Vec4());
		}
		this.P = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
	} else if(type == "point" || type == "area") {
		var zn = data.raw.near_plane;
		var zf = data.raw.far_plane;
		var uh = 1.0 / Math.tan(fov / 2);
		var uw = uh / 1;
		this.P = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
	} else if(type == "spot") {
		var zn1 = data.raw.near_plane;
		var zf1 = data.raw.far_plane;
		var uh1 = 1.0 / Math.tan(fov / 2);
		var uw1 = uh1 / 1;
		this.P = new iron_math_Mat4(uw1,0,0,0,0,uh1,0,0,0,0,(zf1 + zn1) / (zn1 - zf1),2 * zf1 * zn1 / (zn1 - zf1),0,0,-1,0);
	}
	iron_Scene.active.lights.push(this);
};
$hxClasses["iron.object.LightObject"] = iron_object_LightObject;
iron_object_LightObject.__name__ = "iron.object.LightObject";
iron_object_LightObject.setCorners = function() {
	var _this = iron_object_LightObject.corners[0];
	_this.x = -1.0;
	_this.y = -1.0;
	_this.z = 1.0;
	_this.w = 1.0;
	var _this1 = iron_object_LightObject.corners[1];
	_this1.x = -1.0;
	_this1.y = -1.0;
	_this1.z = -1.0;
	_this1.w = 1.0;
	var _this2 = iron_object_LightObject.corners[2];
	_this2.x = -1.0;
	_this2.y = 1.0;
	_this2.z = 1.0;
	_this2.w = 1.0;
	var _this3 = iron_object_LightObject.corners[3];
	_this3.x = -1.0;
	_this3.y = 1.0;
	_this3.z = -1.0;
	_this3.w = 1.0;
	var _this4 = iron_object_LightObject.corners[4];
	_this4.x = 1.0;
	_this4.y = -1.0;
	_this4.z = 1.0;
	_this4.w = 1.0;
	var _this5 = iron_object_LightObject.corners[5];
	_this5.x = 1.0;
	_this5.y = -1.0;
	_this5.z = -1.0;
	_this5.w = 1.0;
	var _this6 = iron_object_LightObject.corners[6];
	_this6.x = 1.0;
	_this6.y = 1.0;
	_this6.z = 1.0;
	_this6.w = 1.0;
	var _this7 = iron_object_LightObject.corners[7];
	_this7.x = 1.0;
	_this7.y = 1.0;
	_this7.z = -1.0;
	_this7.w = 1.0;
};
iron_object_LightObject.mix = function(a,b,f) {
	return a * (1 - f) + b * f;
};
iron_object_LightObject.__super__ = iron_object_Object;
iron_object_LightObject.prototype = $extend(iron_object_Object.prototype,{
	camSlicedP: null
	,data: null
	,V: null
	,P: null
	,VP: null
	,frustumPlanes: null
	,remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.lights,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,buildMatrix: function(camera) {
		this.transform.buildMatrix();
		if(this.data.raw.type == "sun") {
			this.setCascade(camera,0);
		} else {
			var _this = this.V;
			var m = this.transform.world;
			var a00 = m.self._00;
			var a01 = m.self._01;
			var a02 = m.self._02;
			var a03 = m.self._03;
			var a10 = m.self._10;
			var a11 = m.self._11;
			var a12 = m.self._12;
			var a13 = m.self._13;
			var a20 = m.self._20;
			var a21 = m.self._21;
			var a22 = m.self._22;
			var a23 = m.self._23;
			var a30 = m.self._30;
			var a31 = m.self._31;
			var a32 = m.self._32;
			var a33 = m.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			this.updateViewFrustum(camera);
		}
	}
	,setCascade: function(camera,cascade) {
		var _this = iron_object_LightObject.m;
		var m = camera.V;
		_this.self._00 = m.self._00;
		_this.self._01 = m.self._01;
		_this.self._02 = m.self._02;
		_this.self._03 = m.self._03;
		_this.self._10 = m.self._10;
		_this.self._11 = m.self._11;
		_this.self._12 = m.self._12;
		_this.self._13 = m.self._13;
		_this.self._20 = m.self._20;
		_this.self._21 = m.self._21;
		_this.self._22 = m.self._22;
		_this.self._23 = m.self._23;
		_this.self._30 = m.self._30;
		_this.self._31 = m.self._31;
		_this.self._32 = m.self._32;
		_this.self._33 = m.self._33;
		if(this.camSlicedP == null) {
			var fov = camera.data.raw.fov;
			var near = this.data.raw.near_plane;
			var far = this.data.raw.far_plane;
			var aspect = camera.data.raw.aspect != null ? camera.data.raw.aspect : kha_System.windowWidth() / kha_System.windowHeight();
			var uh = 1.0 / Math.tan(fov / 2);
			var uw = uh / aspect;
			this.camSlicedP = new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(far + near) / (near - far),2 * far * near / (near - far),0,0,-1,0);
		}
		var _this1 = iron_object_LightObject.m;
		var m1 = this.camSlicedP;
		var a00 = _this1.self._00;
		var a01 = _this1.self._01;
		var a02 = _this1.self._02;
		var a03 = _this1.self._03;
		var a10 = _this1.self._10;
		var a11 = _this1.self._11;
		var a12 = _this1.self._12;
		var a13 = _this1.self._13;
		var a20 = _this1.self._20;
		var a21 = _this1.self._21;
		var a22 = _this1.self._22;
		var a23 = _this1.self._23;
		var a30 = _this1.self._30;
		var a31 = _this1.self._31;
		var a32 = _this1.self._32;
		var a33 = _this1.self._33;
		var b0 = m1.self._00;
		var b1 = m1.self._10;
		var b2 = m1.self._20;
		var b3 = m1.self._30;
		_this1.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this1.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this1.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this1.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		var _this2 = iron_object_LightObject.m;
		var m2 = iron_object_LightObject.m;
		var a001 = m2.self._00;
		var a011 = m2.self._01;
		var a021 = m2.self._02;
		var a031 = m2.self._03;
		var a101 = m2.self._10;
		var a111 = m2.self._11;
		var a121 = m2.self._12;
		var a131 = m2.self._13;
		var a201 = m2.self._20;
		var a211 = m2.self._21;
		var a221 = m2.self._22;
		var a231 = m2.self._23;
		var a301 = m2.self._30;
		var a311 = m2.self._31;
		var a321 = m2.self._32;
		var a331 = m2.self._33;
		var b00 = a001 * a111 - a011 * a101;
		var b01 = a001 * a121 - a021 * a101;
		var b02 = a001 * a131 - a031 * a101;
		var b03 = a011 * a121 - a021 * a111;
		var b04 = a011 * a131 - a031 * a111;
		var b05 = a021 * a131 - a031 * a121;
		var b06 = a201 * a311 - a211 * a301;
		var b07 = a201 * a321 - a221 * a301;
		var b08 = a201 * a331 - a231 * a301;
		var b09 = a211 * a321 - a221 * a311;
		var b10 = a211 * a331 - a231 * a311;
		var b11 = a221 * a331 - a231 * a321;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this2.self._00 = 1.0;
			_this2.self._01 = 0.0;
			_this2.self._02 = 0.0;
			_this2.self._03 = 0.0;
			_this2.self._10 = 0.0;
			_this2.self._11 = 1.0;
			_this2.self._12 = 0.0;
			_this2.self._13 = 0.0;
			_this2.self._20 = 0.0;
			_this2.self._21 = 0.0;
			_this2.self._22 = 1.0;
			_this2.self._23 = 0.0;
			_this2.self._30 = 0.0;
			_this2.self._31 = 0.0;
			_this2.self._32 = 0.0;
			_this2.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this2.self._00 = (a111 * b11 - a121 * b10 + a131 * b09) * det;
			_this2.self._01 = (a021 * b10 - a011 * b11 - a031 * b09) * det;
			_this2.self._02 = (a311 * b05 - a321 * b04 + a331 * b03) * det;
			_this2.self._03 = (a221 * b04 - a211 * b05 - a231 * b03) * det;
			_this2.self._10 = (a121 * b08 - a101 * b11 - a131 * b07) * det;
			_this2.self._11 = (a001 * b11 - a021 * b08 + a031 * b07) * det;
			_this2.self._12 = (a321 * b02 - a301 * b05 - a331 * b01) * det;
			_this2.self._13 = (a201 * b05 - a221 * b02 + a231 * b01) * det;
			_this2.self._20 = (a101 * b10 - a111 * b08 + a131 * b06) * det;
			_this2.self._21 = (a011 * b08 - a001 * b10 - a031 * b06) * det;
			_this2.self._22 = (a301 * b04 - a311 * b02 + a331 * b00) * det;
			_this2.self._23 = (a211 * b02 - a201 * b04 - a231 * b00) * det;
			_this2.self._30 = (a111 * b07 - a101 * b09 - a121 * b06) * det;
			_this2.self._31 = (a001 * b09 - a011 * b07 + a021 * b06) * det;
			_this2.self._32 = (a311 * b01 - a301 * b03 - a321 * b00) * det;
			_this2.self._33 = (a201 * b03 - a211 * b01 + a221 * b00) * det;
		}
		var _this3 = this.V;
		var m3 = this.transform.world;
		var a002 = m3.self._00;
		var a012 = m3.self._01;
		var a022 = m3.self._02;
		var a032 = m3.self._03;
		var a102 = m3.self._10;
		var a112 = m3.self._11;
		var a122 = m3.self._12;
		var a132 = m3.self._13;
		var a202 = m3.self._20;
		var a212 = m3.self._21;
		var a222 = m3.self._22;
		var a232 = m3.self._23;
		var a302 = m3.self._30;
		var a312 = m3.self._31;
		var a322 = m3.self._32;
		var a332 = m3.self._33;
		var b001 = a002 * a112 - a012 * a102;
		var b011 = a002 * a122 - a022 * a102;
		var b021 = a002 * a132 - a032 * a102;
		var b031 = a012 * a122 - a022 * a112;
		var b041 = a012 * a132 - a032 * a112;
		var b051 = a022 * a132 - a032 * a122;
		var b061 = a202 * a312 - a212 * a302;
		var b071 = a202 * a322 - a222 * a302;
		var b081 = a202 * a332 - a232 * a302;
		var b091 = a212 * a322 - a222 * a312;
		var b101 = a212 * a332 - a232 * a312;
		var b111 = a222 * a332 - a232 * a322;
		var det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
		if(det1 == 0.0) {
			_this3.self._00 = 1.0;
			_this3.self._01 = 0.0;
			_this3.self._02 = 0.0;
			_this3.self._03 = 0.0;
			_this3.self._10 = 0.0;
			_this3.self._11 = 1.0;
			_this3.self._12 = 0.0;
			_this3.self._13 = 0.0;
			_this3.self._20 = 0.0;
			_this3.self._21 = 0.0;
			_this3.self._22 = 1.0;
			_this3.self._23 = 0.0;
			_this3.self._30 = 0.0;
			_this3.self._31 = 0.0;
			_this3.self._32 = 0.0;
			_this3.self._33 = 1.0;
		} else {
			det1 = 1.0 / det1;
			_this3.self._00 = (a112 * b111 - a122 * b101 + a132 * b091) * det1;
			_this3.self._01 = (a022 * b101 - a012 * b111 - a032 * b091) * det1;
			_this3.self._02 = (a312 * b051 - a322 * b041 + a332 * b031) * det1;
			_this3.self._03 = (a222 * b041 - a212 * b051 - a232 * b031) * det1;
			_this3.self._10 = (a122 * b081 - a102 * b111 - a132 * b071) * det1;
			_this3.self._11 = (a002 * b111 - a022 * b081 + a032 * b071) * det1;
			_this3.self._12 = (a322 * b021 - a302 * b051 - a332 * b011) * det1;
			_this3.self._13 = (a202 * b051 - a222 * b021 + a232 * b011) * det1;
			_this3.self._20 = (a102 * b101 - a112 * b081 + a132 * b061) * det1;
			_this3.self._21 = (a012 * b081 - a002 * b101 - a032 * b061) * det1;
			_this3.self._22 = (a302 * b041 - a312 * b021 + a332 * b001) * det1;
			_this3.self._23 = (a212 * b021 - a202 * b041 - a232 * b001) * det1;
			_this3.self._30 = (a112 * b071 - a102 * b091 - a122 * b061) * det1;
			_this3.self._31 = (a002 * b091 - a012 * b071 + a022 * b061) * det1;
			_this3.self._32 = (a312 * b011 - a302 * b031 - a322 * b001) * det1;
			_this3.self._33 = (a202 * b031 - a212 * b011 + a222 * b001) * det1;
		}
		var _this4 = this.V;
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this4.self._00;
		_this5.y = _this4.self._01;
		_this5.z = _this4.self._02;
		_this5.w = 1.0;
		var _this6 = _this5;
		var scale = 1.0 / Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		_this4.self._00 *= scale;
		_this4.self._01 *= scale;
		_this4.self._02 *= scale;
		var _this7 = iron_math_Mat4.helpVec;
		_this7.x = _this4.self._10;
		_this7.y = _this4.self._11;
		_this7.z = _this4.self._12;
		_this7.w = 1.0;
		var _this8 = _this7;
		scale = 1.0 / Math.sqrt(_this8.x * _this8.x + _this8.y * _this8.y + _this8.z * _this8.z);
		_this4.self._10 *= scale;
		_this4.self._11 *= scale;
		_this4.self._12 *= scale;
		var _this9 = iron_math_Mat4.helpVec;
		_this9.x = _this4.self._20;
		_this9.y = _this4.self._21;
		_this9.z = _this4.self._22;
		_this9.w = 1.0;
		var _this10 = _this9;
		scale = 1.0 / Math.sqrt(_this10.x * _this10.x + _this10.y * _this10.y + _this10.z * _this10.z);
		_this4.self._20 *= scale;
		_this4.self._21 *= scale;
		_this4.self._22 *= scale;
		_this4.self._03 = 0.0;
		_this4.self._13 = 0.0;
		_this4.self._23 = 0.0;
		_this4.self._30 = 0.0;
		_this4.self._31 = 0.0;
		_this4.self._32 = 0.0;
		_this4.self._33 = 1.0;
		var _this11 = iron_object_LightObject.m;
		var m4 = this.V;
		var a003 = _this11.self._00;
		var a013 = _this11.self._01;
		var a023 = _this11.self._02;
		var a033 = _this11.self._03;
		var a103 = _this11.self._10;
		var a113 = _this11.self._11;
		var a123 = _this11.self._12;
		var a133 = _this11.self._13;
		var a203 = _this11.self._20;
		var a213 = _this11.self._21;
		var a223 = _this11.self._22;
		var a233 = _this11.self._23;
		var a303 = _this11.self._30;
		var a313 = _this11.self._31;
		var a323 = _this11.self._32;
		var a333 = _this11.self._33;
		var b010 = m4.self._00;
		var b12 = m4.self._10;
		var b21 = m4.self._20;
		var b31 = m4.self._30;
		_this11.self._00 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._10 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._20 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._30 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._01;
		b12 = m4.self._11;
		b21 = m4.self._21;
		b31 = m4.self._31;
		_this11.self._01 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._11 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._21 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._31 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._02;
		b12 = m4.self._12;
		b21 = m4.self._22;
		b31 = m4.self._32;
		_this11.self._02 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._12 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._22 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._32 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		b010 = m4.self._03;
		b12 = m4.self._13;
		b21 = m4.self._23;
		b31 = m4.self._33;
		_this11.self._03 = a003 * b010 + a013 * b12 + a023 * b21 + a033 * b31;
		_this11.self._13 = a103 * b010 + a113 * b12 + a123 * b21 + a133 * b31;
		_this11.self._23 = a203 * b010 + a213 * b12 + a223 * b21 + a233 * b31;
		_this11.self._33 = a303 * b010 + a313 * b12 + a323 * b21 + a333 * b31;
		iron_object_LightObject.setCorners();
		var _g = 0;
		var _g1 = iron_object_LightObject.corners;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var m5 = iron_object_LightObject.m;
			var x = v.x;
			var y = v.y;
			var z = v.z;
			var w = v.w;
			v.x = m5.self._00 * x + m5.self._10 * y + m5.self._20 * z + m5.self._30 * w;
			v.y = m5.self._01 * x + m5.self._11 * y + m5.self._21 * z + m5.self._31 * w;
			v.z = m5.self._02 * x + m5.self._12 * y + m5.self._22 * z + m5.self._32 * w;
			v.w = m5.self._03 * x + m5.self._13 * y + m5.self._23 * z + m5.self._33 * w;
			v.x /= v.w;
			v.y /= v.w;
			v.z /= v.w;
			v.w = 1.0;
		}
		var minx = iron_object_LightObject.corners[0].x;
		var miny = iron_object_LightObject.corners[0].y;
		var minz = iron_object_LightObject.corners[0].z;
		var maxx = iron_object_LightObject.corners[0].x;
		var maxy = iron_object_LightObject.corners[0].y;
		var maxz = iron_object_LightObject.corners[0].z;
		var _g2 = 0;
		var _g3 = iron_object_LightObject.corners;
		while(_g2 < _g3.length) {
			var v1 = _g3[_g2];
			++_g2;
			if(v1.x < minx) {
				minx = v1.x;
			}
			if(v1.x > maxx) {
				maxx = v1.x;
			}
			if(v1.y < miny) {
				miny = v1.y;
			}
			if(v1.y > maxy) {
				maxy = v1.y;
			}
			if(v1.z < minz) {
				minz = v1.z;
			}
			if(v1.z > maxz) {
				maxz = v1.z;
			}
		}
		var v11 = iron_object_LightObject.corners[0];
		var v2 = iron_object_LightObject.corners[7];
		var vx = v11.x - v2.x;
		var vy = v11.y - v2.y;
		var vz = v11.z - v2.z;
		var diag0 = Math.sqrt(vx * vx + vy * vy + vz * vz);
		var offx = (diag0 - (maxx - minx)) * 0.5;
		var offy = (diag0 - (maxy - miny)) * 0.5;
		minx -= offx;
		maxx += offx;
		miny -= offy;
		maxy += offy;
		var smsize = this.data.raw.shadowmap_size;
		var worldPerTexelX = (maxx - minx) / smsize;
		var worldPerTexelY = (maxy - miny) / smsize;
		var worldPerTexelZ = (maxz - minz) / smsize;
		minx = Math.floor(minx / worldPerTexelX) * worldPerTexelX;
		miny = Math.floor(miny / worldPerTexelY) * worldPerTexelY;
		minz = Math.floor(minz / worldPerTexelZ) * worldPerTexelZ;
		maxx = Math.floor(maxx / worldPerTexelX) * worldPerTexelX;
		maxy = Math.floor(maxy / worldPerTexelY) * worldPerTexelY;
		maxz = Math.floor(maxz / worldPerTexelZ) * worldPerTexelZ;
		var hx = (maxx - minx) / 2 * iron_object_LightObject.cascadeBounds;
		var hy = (maxy - miny) / 2 * iron_object_LightObject.cascadeBounds;
		var hz = (maxz - minz) / 2 * iron_object_LightObject.cascadeBounds;
		this.V.self._30 = -(minx + hx);
		this.V.self._31 = -(miny + hy);
		this.V.self._32 = -(minz + hz);
		var left = -hx;
		var bottom = -hy;
		var near1 = -hz * 4;
		var rl = hx - left;
		var tb = hy - bottom;
		var fn = hz - near1;
		var tx = -(hx + left) / rl;
		var ty = -(hy + bottom) / tb;
		var tz = -(hz + near1) / fn;
		iron_object_LightObject.m = new iron_math_Mat4(2 / rl,0,0,tx,0,2 / tb,0,ty,0,0,-2 / fn,tz,0,0,0,1);
		var _this12 = this.P;
		var m6 = iron_object_LightObject.m;
		_this12.self._00 = m6.self._00;
		_this12.self._01 = m6.self._01;
		_this12.self._02 = m6.self._02;
		_this12.self._03 = m6.self._03;
		_this12.self._10 = m6.self._10;
		_this12.self._11 = m6.self._11;
		_this12.self._12 = m6.self._12;
		_this12.self._13 = m6.self._13;
		_this12.self._20 = m6.self._20;
		_this12.self._21 = m6.self._21;
		_this12.self._22 = m6.self._22;
		_this12.self._23 = m6.self._23;
		_this12.self._30 = m6.self._30;
		_this12.self._31 = m6.self._31;
		_this12.self._32 = m6.self._32;
		_this12.self._33 = m6.self._33;
		this.updateViewFrustum(camera);
	}
	,updateViewFrustum: function(camera) {
		var _this = this.VP;
		var b = this.P;
		var a = this.V;
		var a00 = a.self._00;
		var a01 = a.self._01;
		var a02 = a.self._02;
		var a03 = a.self._03;
		var a10 = a.self._10;
		var a11 = a.self._11;
		var a12 = a.self._12;
		var a13 = a.self._13;
		var a20 = a.self._20;
		var a21 = a.self._21;
		var a22 = a.self._22;
		var a23 = a.self._23;
		var a30 = a.self._30;
		var a31 = a.self._31;
		var a32 = a.self._32;
		var a33 = a.self._33;
		var b0 = b.self._00;
		var b1 = b.self._10;
		var b2 = b.self._20;
		var b3 = b.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._01;
		b1 = b.self._11;
		b2 = b.self._21;
		b3 = b.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._02;
		b1 = b.self._12;
		b2 = b.self._22;
		b3 = b.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = b.self._03;
		b1 = b.self._13;
		b2 = b.self._23;
		b3 = b.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		if(camera.data.raw.frustum_culling) {
			if(this.frustumPlanes == null) {
				this.frustumPlanes = [];
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
				this.frustumPlanes.push(new iron_object_FrustumPlane());
			}
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,setCubeFace: function(face,camera) {
		var _this = iron_object_LightObject.eye;
		_this.x = this.transform.world.self._30;
		_this.y = this.transform.world.self._31;
		_this.z = this.transform.world.self._32;
		_this.w = 1.0;
		iron_object_CameraObject.setCubeFace(this.V,iron_object_LightObject.eye,face);
		this.updateViewFrustum(camera);
	}
	,right: function() {
		return new iron_math_Vec4(this.V.self._00,this.V.self._10,this.V.self._20);
	}
	,up: function() {
		return new iron_math_Vec4(this.V.self._01,this.V.self._11,this.V.self._21);
	}
	,look: function() {
		return new iron_math_Vec4(this.V.self._02,this.V.self._12,this.V.self._22);
	}
	,__class__: iron_object_LightObject
});
var iron_object_MeshObject = function(data,materials) {
	this.force_context = null;
	this.skip_context = null;
	this.tilesheet = null;
	this.frustumCulling = true;
	this.screenSize = 0.0;
	this.data = null;
	iron_object_Object.call(this);
	this.materials = materials;
	this.setData(data);
	iron_Scene.active.meshes.push(this);
};
$hxClasses["iron.object.MeshObject"] = iron_object_MeshObject;
iron_object_MeshObject.__name__ = "iron.object.MeshObject";
iron_object_MeshObject.__super__ = iron_object_Object;
iron_object_MeshObject.prototype = $extend(iron_object_Object.prototype,{
	data: null
	,materials: null
	,cameraDistance: null
	,screenSize: null
	,frustumCulling: null
	,tilesheet: null
	,skip_context: null
	,force_context: null
	,setData: function(data) {
		this.data = data;
		data.refcount++;
		data.geom.build();
	}
	,remove: function() {
		if(this.tilesheet != null) {
			this.tilesheet.remove();
		}
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.meshes,this);
		}
		this.data.refcount--;
		iron_object_Object.prototype.remove.call(this);
	}
	,setupAnimation: function(oactions) {
		iron_object_Object.prototype.setupAnimation.call(this,oactions);
	}
	,setupTilesheet: function(sceneName,tilesheet_ref,tilesheet_action_ref) {
		this.tilesheet = new iron_object_Tilesheet(sceneName,tilesheet_ref,tilesheet_action_ref);
	}
	,isLodMaterial: function() {
		if(this.raw != null && this.raw.lod_material != null) {
			return this.raw.lod_material == true;
		} else {
			return false;
		}
	}
	,setCulled: function(isShadow,b) {
		if(isShadow) {
			this.culledShadow = b;
		} else {
			this.culledMesh = b;
		}
		this.culled = this.culledMesh && this.culledShadow;
		return b;
	}
	,cullMaterial: function(context) {
		var mats = this.materials;
		if(!(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) && mats[0].getContext(context) == null) {
			return true;
		}
		var isShadow = context == "shadowmap";
		if(!this.visibleMesh && !isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(!this.visibleShadow && isShadow) {
			return this.setCulled(isShadow,true);
		}
		if(this.skipContext(context)) {
			return this.setCulled(isShadow,true);
		}
		return this.setCulled(isShadow,false);
	}
	,cullMesh: function(context,camera,light) {
		if(camera == null) {
			return false;
		}
		if(camera.data.raw.frustum_culling && this.frustumCulling) {
			var radiusScale = this.data.isSkinned ? 2.0 : 1.0;
			if(context == "voxel") {
				radiusScale *= 100;
			}
			var isShadow = context == "shadowmap";
			var frustumPlanes = isShadow ? light.frustumPlanes : camera.frustumPlanes;
			if(isShadow && light.data.raw.type != "sun") {
				light.transform.radius = light.data.raw.far_plane;
				if(!iron_object_CameraObject.sphereInFrustum(camera.frustumPlanes,light.transform)) {
					return this.setCulled(isShadow,true);
				}
			}
			if(!this.data.geom.instanced) {
				if(!iron_object_CameraObject.sphereInFrustum(frustumPlanes,this.transform,radiusScale)) {
					return this.setCulled(isShadow,true);
				}
			}
		}
		this.culled = false;
		return this.culled;
	}
	,skipContext: function(context) {
		if(this.skip_context == context) {
			return true;
		}
		if(this.force_context != null && this.force_context != context) {
			return true;
		}
		var _g = 0;
		var _g1 = this.materials;
		while(_g < _g1.length) {
			var mat = _g1[_g];
			++_g;
			if(mat.raw.skip_context != null && mat.raw.skip_context == context) {
				return true;
			}
		}
		if(context == "voxel" && this.raw.mobile == true) {
			return true;
		}
		return false;
	}
	,getContexts: function(context,materials,materialContexts,shaderContexts) {
		var _g = 0;
		while(_g < materials.length) {
			var mat = materials[_g];
			++_g;
			var _g1 = 0;
			var _g11 = mat.raw.contexts.length;
			while(_g1 < _g11) {
				var i = _g1++;
				if(HxOverrides.substr(mat.raw.contexts[i].name,0,context.length) == context) {
					materialContexts.push(mat.contexts[i]);
					shaderContexts.push(mat.shader.getContext(context));
					break;
				}
			}
		}
	}
	,render: function(g,context,camera,light,bindParams) {
		if(this.data == null || !this.data.geom.ready) {
			return;
		}
		if(!this.visible) {
			return;
		}
		if(this.cullMesh(context,camera,light)) {
			return;
		}
		var meshContext = this.raw != null && "mesh" == context;
		if(this.tilesheet != null) {
			this.tilesheet.update();
		}
		if(this.cullMaterial(context)) {
			return;
		}
		var mats = this.materials;
		var lod = this;
		if(this.raw != null && this.raw.lods != null && this.raw.lods.length > 0) {
			var tr = this.transform;
			var volume = tr.dim.x * tr.dim.y * tr.dim.z;
			this.screenSize = volume * (1.0 / this.cameraDistance);
			this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
			if(this.lods == null) {
				this.lods = [];
				var _g = 0;
				var _g1 = this.raw.lods;
				while(_g < _g1.length) {
					var l = _g1[_g];
					++_g;
					if(l.object_ref == "") {
						this.lods.push(null);
					} else {
						this.lods.push(iron_Scene.active.getChild(l.object_ref));
					}
				}
			}
			if(context == "voxel") {
				lod = this.lods[this.lods.length - 1];
			} else {
				var _g2 = 0;
				var _g11 = this.raw.lods.length;
				while(_g2 < _g11) {
					var i = _g2++;
					if(this.screenSize > this.raw.lods[i].screen_size) {
						break;
					}
					lod = this.lods[i];
					if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) {
						mats = lod.materials;
					}
				}
			}
			if(lod == null) {
				return;
			}
		}
		if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true && mats[0].getContext(context) == null) {
			return;
		}
		var materialContexts = [];
		var shaderContexts = [];
		this.getContexts(context,mats,materialContexts,shaderContexts);
		this.transform.update();
		var ldata = lod.data;
		var _g3 = 0;
		var _g12 = ldata.geom.indexBuffers.length;
		while(_g3 < _g12) {
			var i1 = _g3++;
			var mi = ldata.geom.materialIndices[i1];
			if(shaderContexts.length <= mi) {
				continue;
			}
			var scontext = shaderContexts[mi];
			var vs = scontext.raw.vertex_structure;
			if(scontext.pipeState != iron_object_MeshObject.lastPipeline) {
				g.setPipeline(scontext.pipeState);
				iron_object_MeshObject.lastPipeline = scontext.pipeState;
				iron_object_Uniforms.setContextConstants(g,scontext,camera,light,bindParams);
			}
			iron_object_Uniforms.setObjectConstants(g,scontext,this,camera,light);
			if(materialContexts.length > mi) {
				iron_object_Uniforms.setMaterialConstants(g,scontext,materialContexts[mi]);
			}
			if(ldata.geom.instanced) {
				g.setVertexBuffers([ldata.geom.get(vs),ldata.geom.instancedVB]);
			} else {
				g.setVertexBuffer(ldata.geom.get(vs));
			}
			g.setIndexBuffer(ldata.geom.indexBuffers[i1]);
			if(ldata.geom.instanced) {
				g.drawIndexedVerticesInstanced(ldata.geom.instanceCount,ldata.geom.start,ldata.geom.count);
			} else {
				g.drawIndexedVertices(ldata.geom.start,ldata.geom.count);
			}
		}
	}
	,validContext: function(mat,context) {
		return mat.getContext(context) != null;
	}
	,computeCameraDistance: function(camX,camY,camZ) {
		var vx = camX - this.transform.world.self._30;
		var vy = camY - this.transform.world.self._31;
		var vz = camZ - this.transform.world.self._32;
		this.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	,computeScreenSize: function(camera) {
		var tr = this.transform;
		var volume = tr.dim.x * tr.dim.y * tr.dim.z;
		this.screenSize = volume * (1.0 / this.cameraDistance);
		this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
	}
	,initLods: function() {
		if(this.lods == null) {
			this.lods = [];
			var _g = 0;
			var _g1 = this.raw.lods;
			while(_g < _g1.length) {
				var l = _g1[_g];
				++_g;
				if(l.object_ref == "") {
					this.lods.push(null);
				} else {
					this.lods.push(iron_Scene.active.getChild(l.object_ref));
				}
			}
		}
	}
	,__class__: iron_object_MeshObject
});
var iron_object_ObjectAnimation = function(object,oactions) {
	this.bezierFrameIndex = -1;
	this.s0 = 0.0;
	this.object = object;
	this.oactions = oactions;
	this.isSkinned = false;
	iron_object_Animation.call(this);
};
$hxClasses["iron.object.ObjectAnimation"] = iron_object_ObjectAnimation;
iron_object_ObjectAnimation.__name__ = "iron.object.ObjectAnimation";
iron_object_ObjectAnimation.__super__ = iron_object_Animation;
iron_object_ObjectAnimation.prototype = $extend(iron_object_Animation.prototype,{
	object: null
	,oactions: null
	,oaction: null
	,getAction: function(action) {
		var _g = 0;
		var _g1 = this.oactions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a != null && a.objects[0].name == action) {
				return a.objects[0];
			}
		}
		return null;
	}
	,play: function(action,onComplete,blendTime,speed,loop) {
		if(loop == null) {
			loop = true;
		}
		if(speed == null) {
			speed = 1.0;
		}
		if(blendTime == null) {
			blendTime = 0.0;
		}
		if(action == null) {
			action = "";
		}
		iron_object_Animation.prototype.play.call(this,action,onComplete,blendTime,speed,loop);
		if(this.action == "" && this.oactions[0] != null) {
			this.action = this.oactions[0].objects[0].name;
		}
		this.oaction = this.getAction(this.action);
		if(this.oaction != null) {
			this.isSampled = this.oaction.sampled != null && this.oaction.sampled;
		}
	}
	,update: function(delta) {
		if(!this.object.visible || this.object.culled || this.oaction == null) {
			return;
		}
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.paused) {
			return;
		}
		if(!this.isSkinned) {
			this.updateObjectAnim();
		}
	}
	,updateObjectAnim: function() {
		if(this.isSampled) {
			this.updateTrack(this.oaction.anim);
			this.updateAnimSampled(this.oaction.anim,this.object.transform.world);
			var _this = this.object.transform.world;
			var loc = this.object.transform.loc;
			var quat = this.object.transform.rot;
			var scale = this.object.transform.scale;
			loc.x = _this.self._30;
			loc.y = _this.self._31;
			loc.z = _this.self._32;
			var _this1 = iron_math_Mat4.helpVec;
			_this1.x = _this.self._00;
			_this1.y = _this.self._01;
			_this1.z = _this.self._02;
			_this1.w = 1.0;
			var _this2 = _this1;
			scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
			var _this3 = iron_math_Mat4.helpVec;
			_this3.x = _this.self._10;
			_this3.y = _this.self._11;
			_this3.z = _this.self._12;
			_this3.w = 1.0;
			var _this4 = _this3;
			scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
			var _this5 = iron_math_Mat4.helpVec;
			_this5.x = _this.self._20;
			_this5.y = _this.self._21;
			_this5.z = _this.self._22;
			_this5.w = 1.0;
			var _this6 = _this5;
			scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
			var _this7 = _this.self;
			var m3 = _this7._12;
			var m4 = _this7._22;
			var m5 = _this7._32;
			var m6 = _this7._13;
			var m7 = _this7._23;
			var m8 = _this7._33;
			var c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
			var m31 = _this7._12;
			var m41 = _this7._22;
			var m51 = _this7._32;
			var m61 = _this7._13;
			var m71 = _this7._23;
			var m81 = _this7._33;
			var c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
			var m32 = _this7._11;
			var m42 = _this7._21;
			var m52 = _this7._31;
			var m62 = _this7._13;
			var m72 = _this7._23;
			var m82 = _this7._33;
			var c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
			var m33 = _this7._11;
			var m43 = _this7._21;
			var m53 = _this7._31;
			var m63 = _this7._12;
			var m73 = _this7._22;
			var m83 = _this7._32;
			var c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
			if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
				scale.x = -scale.x;
			}
			var invs = 1.0 / scale.x;
			iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
			iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
			iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
			invs = 1.0 / scale.y;
			iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
			iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
			iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
			invs = 1.0 / scale.z;
			iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
			iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
			iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
			var m = iron_math_Mat4.helpMat;
			var m11 = m.self._00;
			var m12 = m.self._10;
			var m13 = m.self._20;
			var m21 = m.self._01;
			var m22 = m.self._11;
			var m23 = m.self._21;
			var m311 = m.self._02;
			var m321 = m.self._12;
			var m331 = m.self._22;
			var tr = m11 + m22 + m331;
			var s = 0.0;
			if(tr > 0) {
				s = 0.5 / Math.sqrt(tr + 1.0);
				quat.w = 0.25 / s;
				quat.x = (m321 - m23) * s;
				quat.y = (m13 - m311) * s;
				quat.z = (m21 - m12) * s;
			} else if(m11 > m22 && m11 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
				quat.w = (m321 - m23) / s;
				quat.x = 0.25 * s;
				quat.y = (m12 + m21) / s;
				quat.z = (m13 + m311) / s;
			} else if(m22 > m331) {
				s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
				quat.w = (m13 - m311) / s;
				quat.x = (m12 + m21) / s;
				quat.y = 0.25 * s;
				quat.z = (m23 + m321) / s;
			} else {
				s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
				quat.w = (m21 - m12) / s;
				quat.x = (m13 + m311) / s;
				quat.y = (m23 + m321) / s;
				quat.z = 0.25 * s;
			}
			var _g = 0;
			var _g1 = this.object.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.transform.buildMatrix();
			}
		} else {
			this.updateAnimNonSampled(this.oaction.anim,this.object.transform);
			this.object.transform.buildMatrix();
		}
	}
	,interpolateLinear: function(t,t1,t2,v1,v2) {
		var s = (t - t1) / (t2 - t1);
		return (1.0 - s) * v1 + s * v2;
	}
	,s0: null
	,bezierFrameIndex: null
	,interpolateBezier: function(t,t1,t2,v1,v2,c1,c2,p1,p2) {
		if(this.frameIndex != this.bezierFrameIndex) {
			this.bezierFrameIndex = this.frameIndex;
			this.s0 = (t - t1) / (t2 - t1);
		}
		var a = (t2 - 3 * c2 + 3 * c1 - t1) * (this.s0 * this.s0 * this.s0) + 3 * (c2 - 2 * c1 + t1) * (this.s0 * this.s0) + 3 * (c1 - t1) * this.s0 + t1 - t;
		var b = 3 * (t2 - 3 * c2 + 3 * c1 - t1) * (this.s0 * this.s0) + 6 * (c2 - 2 * c1 + t1) * this.s0 + 3 * (c1 - t1);
		var s = this.s0 - a / b;
		this.s0 = s;
		return (1 - s) * (1 - s) * (1 - s) * v1 + 3 * s * (1 - s) * (1 - s) * p1 + 3 * (s * s) * (1 - s) * p2 + s * s * s * v2;
	}
	,isTrackEnd: function(track) {
		if(this.speed > 0) {
			return this.frameIndex >= track.frames.length - 2;
		} else {
			return this.frameIndex <= 0;
		}
	}
	,checkFrameIndexT: function(frameValues,t) {
		if(this.speed > 0) {
			if(this.frameIndex < frameValues.length - 2) {
				return t > frameValues[this.frameIndex + 1] * this.frameTime;
			} else {
				return false;
			}
		} else if(this.frameIndex > 1) {
			return t > frameValues[this.frameIndex - 1] * this.frameTime;
		} else {
			return false;
		}
	}
	,updateAnimNonSampled: function(anim,transform) {
		if(anim == null) {
			return;
		}
		var total = anim.end * this.frameTime - anim.begin * this.frameTime;
		if(anim.has_delta) {
			var t = transform;
			if(t.dloc == null) {
				t.dloc = new iron_math_Vec4();
				t.drot = new iron_math_Quat();
				t.dscale = new iron_math_Vec4();
			}
			var _this = t.dloc;
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 1.0;
			var _this1 = t.dscale;
			_this1.x = 0;
			_this1.y = 0;
			_this1.z = 0;
			_this1.w = 1.0;
			t._deulerX = t._deulerY = t._deulerZ = 0.0;
		}
		var _g = 0;
		var _g1 = anim.tracks;
		while(_g < _g1.length) {
			var track = _g1[_g];
			++_g;
			if(this.frameIndex == -1) {
				this.rewind(track);
			}
			var sign = this.speed > 0 ? 1 : -1;
			var t1 = this.time + anim.begin * this.frameTime;
			while(true) {
				var frameValues = track.frames;
				if(!(this.speed > 0 ? this.frameIndex < frameValues.length - 2 && t1 > frameValues[this.frameIndex + 1] * this.frameTime : this.frameIndex > 1 && t1 > frameValues[this.frameIndex - 1] * this.frameTime)) {
					break;
				}
				this.frameIndex += sign;
			}
			if(this.frameIndex >= track.frames.length) {
				continue;
			}
			if(this.time > total) {
				if(this.onComplete != null) {
					this.onComplete();
				}
				this.rewind(track);
				return;
			}
			var ti = this.frameIndex;
			var t11 = track.frames[ti] * this.frameTime;
			var t2 = track.frames[ti + sign] * this.frameTime;
			var v1 = track.values[ti];
			var v2 = track.values[ti + sign];
			var v = 0.0;
			switch(track.curve) {
			case "bezier":
				var c1 = track.frames_control_plus[ti] * this.frameTime;
				var c2 = track.frames_control_minus[ti + sign] * this.frameTime;
				var p1 = track.values_control_plus[ti];
				var p2 = track.values_control_minus[ti + sign];
				if(this.frameIndex != this.bezierFrameIndex) {
					this.bezierFrameIndex = this.frameIndex;
					this.s0 = (t1 - t11) / (t2 - t11);
				}
				var a = (t2 - 3 * c2 + 3 * c1 - t11) * (this.s0 * this.s0 * this.s0) + 3 * (c2 - 2 * c1 + t11) * (this.s0 * this.s0) + 3 * (c1 - t11) * this.s0 + t11 - t1;
				var b = 3 * (t2 - 3 * c2 + 3 * c1 - t11) * (this.s0 * this.s0) + 6 * (c2 - 2 * c1 + t11) * this.s0 + 3 * (c1 - t11);
				var s = this.s0 - a / b;
				this.s0 = s;
				v = (1 - s) * (1 - s) * (1 - s) * v1 + 3 * s * (1 - s) * (1 - s) * p1 + 3 * (s * s) * (1 - s) * p2 + s * s * s * v2;
				break;
			case "linear":
				var s1 = (t1 - t11) / (t2 - t11);
				v = (1.0 - s1) * v1 + s1 * v2;
				break;
			}
			switch(track.target) {
			case "dxloc":
				transform.dloc.x = v;
				break;
			case "dxrot":
				transform._deulerX = v;
				break;
			case "dxscl":
				transform.dscale.x = v;
				break;
			case "dyloc":
				transform.dloc.y = v;
				break;
			case "dyrot":
				transform._deulerY = v;
				break;
			case "dyscl":
				transform.dscale.y = v;
				break;
			case "dzloc":
				transform.dloc.z = v;
				break;
			case "dzrot":
				transform._deulerZ = v;
				break;
			case "dzscl":
				transform.dscale.z = v;
				break;
			case "xloc":
				transform.loc.x = v;
				break;
			case "xrot":
				transform.setRotation(v,transform._eulerY,transform._eulerZ);
				break;
			case "xscl":
				transform.scale.x = v;
				break;
			case "yloc":
				transform.loc.y = v;
				break;
			case "yrot":
				transform.setRotation(transform._eulerX,v,transform._eulerZ);
				break;
			case "yscl":
				transform.scale.y = v;
				break;
			case "zloc":
				transform.loc.z = v;
				break;
			case "zrot":
				transform.setRotation(transform._eulerX,transform._eulerY,v);
				break;
			case "zscl":
				transform.scale.z = v;
				break;
			}
		}
	}
	,totalFrames: function() {
		if(this.oaction == null || this.oaction.anim == null) {
			return 0;
		}
		return this.oaction.anim.end - this.oaction.anim.begin;
	}
	,__class__: iron_object_ObjectAnimation
});
var iron_object_SpeakerObject = function(data) {
	this.paused = false;
	this.channels = [];
	this.sound = null;
	var _gthis = this;
	iron_object_Object.call(this);
	this.data = data;
	iron_Scene.active.speakers.push(this);
	if(data.sound == "") {
		return;
	}
	iron_data_Data.getSound(data.sound,function(sound) {
		_gthis.sound = sound;
		iron_App.notifyOnInit($bind(_gthis,_gthis.init));
	});
};
$hxClasses["iron.object.SpeakerObject"] = iron_object_SpeakerObject;
iron_object_SpeakerObject.__name__ = "iron.object.SpeakerObject";
iron_object_SpeakerObject.__super__ = iron_object_Object;
iron_object_SpeakerObject.prototype = $extend(iron_object_Object.prototype,{
	data: null
	,sound: null
	,channels: null
	,paused: null
	,init: function() {
		if(this.visible && this.data.play_on_start) {
			this.play();
		}
	}
	,play: function() {
		if(this.sound == null || this.data.muted) {
			return;
		}
		if(this.paused) {
			var _g = 0;
			var _g1 = this.channels;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.play();
			}
			this.paused = false;
			return;
		}
		var channel = iron_system_Audio.play(this.sound,this.data.loop,this.data.stream);
		this.channels.push(channel);
		if(this.data.attenuation > 0 && this.channels.length == 1) {
			iron_App.notifyOnUpdate($bind(this,this.update));
		}
	}
	,pause: function() {
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.pause();
		}
		this.paused = true;
	}
	,stop: function() {
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.stop();
		}
		this.channels.splice(0,this.channels.length);
	}
	,update: function() {
		if(this.paused) {
			return;
		}
		var _g = 0;
		var _g1 = this.channels;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_finished()) {
				HxOverrides.remove(this.channels,c);
			}
		}
		if(this.channels.length == 0) {
			iron_App.removeUpdate($bind(this,this.update));
			return;
		}
		var cam = iron_Scene.active.camera;
		var _this = cam.transform.world;
		var loc1_x = _this.self._30;
		var loc1_y = _this.self._31;
		var loc1_z = _this.self._32;
		var loc1_w = _this.self._33;
		var _this1 = this.transform.world;
		var loc2_x = _this1.self._30;
		var loc2_y = _this1.self._31;
		var loc2_z = _this1.self._32;
		var loc2_w = _this1.self._33;
		var vx = loc1_x - loc2_x;
		var vy = loc1_y - loc2_y;
		var vz = loc1_z - loc2_z;
		var d = Math.sqrt(vx * vx + vy * vy + vz * vz);
		d *= this.data.attenuation;
		var vol = 1.0 - Math.min(d / 100,1);
		var _g2 = 0;
		var _g3 = this.channels;
		while(_g2 < _g3.length) {
			var c1 = _g3[_g2];
			++_g2;
			c1.set_volume(vol * this.data.volume);
		}
	}
	,remove: function() {
		if(iron_Scene.active != null) {
			HxOverrides.remove(iron_Scene.active.speakers,this);
		}
		iron_object_Object.prototype.remove.call(this);
	}
	,__class__: iron_object_SpeakerObject
});
var iron_object_Tilesheet = function(sceneName,tilesheet_ref,tilesheet_action_ref) {
	this.onActionComplete = null;
	this.time = 0.0;
	this.frame = 0;
	this.paused = false;
	this.action = null;
	this.tileY = 0.0;
	this.tileX = 0.0;
	var _gthis = this;
	this.ready = false;
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		var _g = 0;
		var _g1 = format.tilesheet_datas;
		while(_g < _g1.length) {
			var ts = _g1[_g];
			++_g;
			if(ts.name == tilesheet_ref) {
				_gthis.raw = ts;
				_gthis.play(tilesheet_action_ref);
				_gthis.ready = true;
				break;
			}
		}
	});
};
$hxClasses["iron.object.Tilesheet"] = iron_object_Tilesheet;
iron_object_Tilesheet.__name__ = "iron.object.Tilesheet";
iron_object_Tilesheet.prototype = {
	tileX: null
	,tileY: null
	,raw: null
	,action: null
	,ready: null
	,paused: null
	,frame: null
	,time: null
	,onActionComplete: null
	,play: function(action_ref,onActionComplete) {
		this.onActionComplete = onActionComplete;
		var _g = 0;
		var _g1 = this.raw.actions;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.name == action_ref) {
				this.action = a;
				break;
			}
		}
		this.setFrame(this.action.start);
		this.paused = false;
	}
	,pause: function() {
		this.paused = true;
	}
	,resume: function() {
		this.paused = false;
	}
	,remove: function() {
	}
	,update: function() {
		if(!this.ready || this.paused || this.action.start >= this.action.end) {
			return;
		}
		this.time += 0.0166666666666666664 * iron_system_Time.scale;
		if(this.time >= 1 / this.raw.framerate) {
			this.setFrame(this.frame + 1);
		}
	}
	,setFrame: function(f) {
		this.frame = f;
		this.time = 0;
		var tx = this.frame % this.raw.tilesx;
		var ty = this.frame / this.raw.tilesx | 0;
		this.tileX = tx * (1 / this.raw.tilesx);
		this.tileY = ty * (1 / this.raw.tilesy);
		if(this.frame >= this.action.end && this.action.start < this.action.end) {
			if(this.onActionComplete != null) {
				this.onActionComplete();
			}
			if(this.action.loop) {
				this.setFrame(this.action.start);
			} else {
				this.paused = true;
			}
		}
	}
	,__class__: iron_object_Tilesheet
};
var iron_object_Transform = function(object) {
	this.dscale = null;
	this.drot = null;
	this.dloc = null;
	this.lastWorld = null;
	this.boneParent = null;
	this.appendMats = null;
	this.prependMats = null;
	this.localOnly = false;
	this.object = object;
	this.reset();
};
$hxClasses["iron.object.Transform"] = iron_object_Transform;
iron_object_Transform.__name__ = "iron.object.Transform";
iron_object_Transform.prototype = {
	world: null
	,localOnly: null
	,local: null
	,loc: null
	,rot: null
	,scale: null
	,dirty: null
	,object: null
	,dim: null
	,radius: null
	,prependMats: null
	,appendMats: null
	,boneParent: null
	,reset: function() {
		this.world = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.local = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
		this.loc = new iron_math_Vec4();
		this.rot = new iron_math_Quat();
		this.scale = new iron_math_Vec4(1.0,1.0,1.0);
		this.dim = new iron_math_Vec4(2.0,2.0,2.0);
		this.radius = 1.0;
		this.dirty = true;
	}
	,update: function() {
		if(this.dirty) {
			this.buildMatrix();
		}
	}
	,prependMatrix: function(m) {
		if(this.prependMats == null) {
			this.prependMats = [];
		}
		this.prependMats.push(m);
	}
	,popPrependMatrix: function() {
		if(this.prependMats != null) {
			this.prependMats.pop();
			if(this.prependMats.length == 0) {
				this.prependMats = null;
			}
		}
	}
	,appendMatrix: function(m) {
		if(this.appendMats == null) {
			this.appendMats = [];
		}
		this.appendMats.push(m);
	}
	,popAppendMatrix: function() {
		if(this.appendMats != null) {
			this.appendMats.pop();
			if(this.appendMats.length == 0) {
				this.appendMats = null;
			}
		}
	}
	,composeDelta: function() {
		var _this = this.dloc;
		var a = this.loc;
		var b = this.dloc;
		_this.x = a.x + b.x;
		_this.y = a.y + b.y;
		_this.z = a.z + b.z;
		var _this1 = this.dscale;
		var a1 = this.dscale;
		var b1 = this.scale;
		_this1.x = a1.x + b1.x;
		_this1.y = a1.y + b1.y;
		_this1.z = a1.z + b1.z;
		var _this2 = this.drot;
		var f = this._deulerX / 2;
		var c1 = Math.cos(f);
		var s1 = Math.sin(f);
		f = this._deulerY / 2;
		var c2 = Math.cos(f);
		var s2 = Math.sin(f);
		f = this._deulerZ / 2;
		var c3 = Math.cos(f);
		var s3 = Math.sin(f);
		_this2.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this2.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this2.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this2.w = c1 * c2 * c3 - s1 * s2 * s3;
		var _this3 = this.drot;
		var q1 = this.rot;
		var q2 = this.drot;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this3.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this3.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this3.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this3.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		var _this4 = this.local;
		var loc = this.dloc;
		var quat = this.drot;
		var sc = this.dscale;
		var x = quat.x;
		var y = quat.y;
		var z = quat.z;
		var w = quat.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		_this4.self._00 = 1.0 - (yy + zz);
		_this4.self._10 = xy - wz;
		_this4.self._20 = xz + wy;
		_this4.self._01 = xy + wz;
		_this4.self._11 = 1.0 - (xx + zz);
		_this4.self._21 = yz - wx;
		_this4.self._02 = xz - wy;
		_this4.self._12 = yz + wx;
		_this4.self._22 = 1.0 - (xx + yy);
		_this4.self._03 = 0.0;
		_this4.self._13 = 0.0;
		_this4.self._23 = 0.0;
		_this4.self._30 = 0.0;
		_this4.self._31 = 0.0;
		_this4.self._32 = 0.0;
		_this4.self._33 = 1.0;
		var x1 = sc.x;
		var y1 = sc.y;
		var z1 = sc.z;
		_this4.self._00 *= x1;
		_this4.self._01 *= x1;
		_this4.self._02 *= x1;
		_this4.self._03 *= x1;
		_this4.self._10 *= y1;
		_this4.self._11 *= y1;
		_this4.self._12 *= y1;
		_this4.self._13 *= y1;
		_this4.self._20 *= z1;
		_this4.self._21 *= z1;
		_this4.self._22 *= z1;
		_this4.self._23 *= z1;
		_this4.self._30 = loc.x;
		_this4.self._31 = loc.y;
		_this4.self._32 = loc.z;
	}
	,buildMatrix: function() {
		if(this.dloc == null) {
			var _this = this.local;
			var loc = this.loc;
			var quat = this.rot;
			var sc = this.scale;
			var x = quat.x;
			var y = quat.y;
			var z = quat.z;
			var w = quat.w;
			var x2 = x + x;
			var y2 = y + y;
			var z2 = z + z;
			var xx = x * x2;
			var xy = x * y2;
			var xz = x * z2;
			var yy = y * y2;
			var yz = y * z2;
			var zz = z * z2;
			var wx = w * x2;
			var wy = w * y2;
			var wz = w * z2;
			_this.self._00 = 1.0 - (yy + zz);
			_this.self._10 = xy - wz;
			_this.self._20 = xz + wy;
			_this.self._01 = xy + wz;
			_this.self._11 = 1.0 - (xx + zz);
			_this.self._21 = yz - wx;
			_this.self._02 = xz - wy;
			_this.self._12 = yz + wx;
			_this.self._22 = 1.0 - (xx + yy);
			_this.self._03 = 0.0;
			_this.self._13 = 0.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
			var x1 = sc.x;
			var y1 = sc.y;
			var z1 = sc.z;
			_this.self._00 *= x1;
			_this.self._01 *= x1;
			_this.self._02 *= x1;
			_this.self._03 *= x1;
			_this.self._10 *= y1;
			_this.self._11 *= y1;
			_this.self._12 *= y1;
			_this.self._13 *= y1;
			_this.self._20 *= z1;
			_this.self._21 *= z1;
			_this.self._22 *= z1;
			_this.self._23 *= z1;
			_this.self._30 = loc.x;
			_this.self._31 = loc.y;
			_this.self._32 = loc.z;
		} else {
			this.composeDelta();
		}
		if(this.prependMats != null) {
			var _this1 = iron_object_Transform.temp;
			_this1.self._00 = 1.0;
			_this1.self._01 = 0.0;
			_this1.self._02 = 0.0;
			_this1.self._03 = 0.0;
			_this1.self._10 = 0.0;
			_this1.self._11 = 1.0;
			_this1.self._12 = 0.0;
			_this1.self._13 = 0.0;
			_this1.self._20 = 0.0;
			_this1.self._21 = 0.0;
			_this1.self._22 = 1.0;
			_this1.self._23 = 0.0;
			_this1.self._30 = 0.0;
			_this1.self._31 = 0.0;
			_this1.self._32 = 0.0;
			_this1.self._33 = 1.0;
			var _g = 0;
			var _g1 = this.prependMats;
			while(_g < _g1.length) {
				var m = _g1[_g];
				++_g;
				var _this2 = iron_object_Transform.temp;
				var a00 = _this2.self._00;
				var a01 = _this2.self._01;
				var a02 = _this2.self._02;
				var a03 = _this2.self._03;
				var a10 = _this2.self._10;
				var a11 = _this2.self._11;
				var a12 = _this2.self._12;
				var a13 = _this2.self._13;
				var a20 = _this2.self._20;
				var a21 = _this2.self._21;
				var a22 = _this2.self._22;
				var a23 = _this2.self._23;
				var a30 = _this2.self._30;
				var a31 = _this2.self._31;
				var a32 = _this2.self._32;
				var a33 = _this2.self._33;
				var b0 = m.self._00;
				var b1 = m.self._10;
				var b2 = m.self._20;
				var b3 = m.self._30;
				_this2.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m.self._01;
				b1 = m.self._11;
				b2 = m.self._21;
				b3 = m.self._31;
				_this2.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m.self._02;
				b1 = m.self._12;
				b2 = m.self._22;
				b3 = m.self._32;
				_this2.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
				b0 = m.self._03;
				b1 = m.self._13;
				b2 = m.self._23;
				b3 = m.self._33;
				_this2.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
				_this2.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
				_this2.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
				_this2.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
			}
			var _this3 = iron_object_Transform.temp;
			var m1 = this.local;
			var a001 = _this3.self._00;
			var a011 = _this3.self._01;
			var a021 = _this3.self._02;
			var a031 = _this3.self._03;
			var a101 = _this3.self._10;
			var a111 = _this3.self._11;
			var a121 = _this3.self._12;
			var a131 = _this3.self._13;
			var a201 = _this3.self._20;
			var a211 = _this3.self._21;
			var a221 = _this3.self._22;
			var a231 = _this3.self._23;
			var a301 = _this3.self._30;
			var a311 = _this3.self._31;
			var a321 = _this3.self._32;
			var a331 = _this3.self._33;
			var b01 = m1.self._00;
			var b11 = m1.self._10;
			var b21 = m1.self._20;
			var b31 = m1.self._30;
			_this3.self._00 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._10 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._20 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._30 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			b01 = m1.self._01;
			b11 = m1.self._11;
			b21 = m1.self._21;
			b31 = m1.self._31;
			_this3.self._01 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._11 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._21 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._31 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			b01 = m1.self._02;
			b11 = m1.self._12;
			b21 = m1.self._22;
			b31 = m1.self._32;
			_this3.self._02 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._12 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._22 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._32 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			b01 = m1.self._03;
			b11 = m1.self._13;
			b21 = m1.self._23;
			b31 = m1.self._33;
			_this3.self._03 = a001 * b01 + a011 * b11 + a021 * b21 + a031 * b31;
			_this3.self._13 = a101 * b01 + a111 * b11 + a121 * b21 + a131 * b31;
			_this3.self._23 = a201 * b01 + a211 * b11 + a221 * b21 + a231 * b31;
			_this3.self._33 = a301 * b01 + a311 * b11 + a321 * b21 + a331 * b31;
			var _this4 = this.local;
			var m2 = iron_object_Transform.temp;
			_this4.self._00 = m2.self._00;
			_this4.self._01 = m2.self._01;
			_this4.self._02 = m2.self._02;
			_this4.self._03 = m2.self._03;
			_this4.self._10 = m2.self._10;
			_this4.self._11 = m2.self._11;
			_this4.self._12 = m2.self._12;
			_this4.self._13 = m2.self._13;
			_this4.self._20 = m2.self._20;
			_this4.self._21 = m2.self._21;
			_this4.self._22 = m2.self._22;
			_this4.self._23 = m2.self._23;
			_this4.self._30 = m2.self._30;
			_this4.self._31 = m2.self._31;
			_this4.self._32 = m2.self._32;
			_this4.self._33 = m2.self._33;
		}
		if(this.appendMats != null) {
			var _g2 = 0;
			var _g11 = this.appendMats;
			while(_g2 < _g11.length) {
				var m3 = _g11[_g2];
				++_g2;
				var _this5 = this.local;
				var a002 = _this5.self._00;
				var a012 = _this5.self._01;
				var a022 = _this5.self._02;
				var a032 = _this5.self._03;
				var a102 = _this5.self._10;
				var a112 = _this5.self._11;
				var a122 = _this5.self._12;
				var a132 = _this5.self._13;
				var a202 = _this5.self._20;
				var a212 = _this5.self._21;
				var a222 = _this5.self._22;
				var a232 = _this5.self._23;
				var a302 = _this5.self._30;
				var a312 = _this5.self._31;
				var a322 = _this5.self._32;
				var a332 = _this5.self._33;
				var b02 = m3.self._00;
				var b12 = m3.self._10;
				var b22 = m3.self._20;
				var b32 = m3.self._30;
				_this5.self._00 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._10 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._20 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._30 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
				b02 = m3.self._01;
				b12 = m3.self._11;
				b22 = m3.self._21;
				b32 = m3.self._31;
				_this5.self._01 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._11 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._21 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._31 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
				b02 = m3.self._02;
				b12 = m3.self._12;
				b22 = m3.self._22;
				b32 = m3.self._32;
				_this5.self._02 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._12 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._22 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._32 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
				b02 = m3.self._03;
				b12 = m3.self._13;
				b22 = m3.self._23;
				b32 = m3.self._33;
				_this5.self._03 = a002 * b02 + a012 * b12 + a022 * b22 + a032 * b32;
				_this5.self._13 = a102 * b02 + a112 * b12 + a122 * b22 + a132 * b32;
				_this5.self._23 = a202 * b02 + a212 * b12 + a222 * b22 + a232 * b32;
				_this5.self._33 = a302 * b02 + a312 * b12 + a322 * b22 + a332 * b32;
			}
		}
		if(this.boneParent != null) {
			var _this6 = this.local;
			var b = this.boneParent;
			var a = this.local;
			var a003 = a.self._00;
			var a013 = a.self._01;
			var a023 = a.self._02;
			var a033 = a.self._03;
			var a103 = a.self._10;
			var a113 = a.self._11;
			var a123 = a.self._12;
			var a133 = a.self._13;
			var a203 = a.self._20;
			var a213 = a.self._21;
			var a223 = a.self._22;
			var a233 = a.self._23;
			var a303 = a.self._30;
			var a313 = a.self._31;
			var a323 = a.self._32;
			var a333 = a.self._33;
			var b03 = b.self._00;
			var b13 = b.self._10;
			var b23 = b.self._20;
			var b33 = b.self._30;
			_this6.self._00 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._10 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._20 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._30 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
			b03 = b.self._01;
			b13 = b.self._11;
			b23 = b.self._21;
			b33 = b.self._31;
			_this6.self._01 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._11 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._21 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._31 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
			b03 = b.self._02;
			b13 = b.self._12;
			b23 = b.self._22;
			b33 = b.self._32;
			_this6.self._02 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._12 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._22 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._32 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
			b03 = b.self._03;
			b13 = b.self._13;
			b23 = b.self._23;
			b33 = b.self._33;
			_this6.self._03 = a003 * b03 + a013 * b13 + a023 * b23 + a033 * b33;
			_this6.self._13 = a103 * b03 + a113 * b13 + a123 * b23 + a133 * b33;
			_this6.self._23 = a203 * b03 + a213 * b13 + a223 * b23 + a233 * b33;
			_this6.self._33 = a303 * b03 + a313 * b13 + a323 * b23 + a333 * b33;
		}
		if(this.object.parent != null && !this.localOnly) {
			var _this7 = this.world;
			var a1 = this.local;
			var b4 = this.object.parent.transform.world;
			var a004 = a1.self._00;
			var a014 = a1.self._01;
			var a024 = a1.self._02;
			var a034 = a1.self._03;
			var a104 = a1.self._10;
			var a114 = a1.self._11;
			var a124 = a1.self._12;
			var a134 = a1.self._13;
			var a204 = a1.self._20;
			var a214 = a1.self._21;
			var a224 = a1.self._22;
			var a234 = a1.self._23;
			var a304 = a1.self._30;
			var a314 = a1.self._31;
			var a324 = a1.self._32;
			var a334 = a1.self._33;
			var b04 = b4.self._00;
			var b14 = b4.self._10;
			var b24 = b4.self._20;
			var b34 = b4.self._30;
			_this7.self._00 = a004 * b04 + a014 * b14 + a024 * b24 + a034 * b34;
			_this7.self._10 = a104 * b04 + a114 * b14 + a124 * b24 + a134 * b34;
			_this7.self._20 = a204 * b04 + a214 * b14 + a224 * b24 + a234 * b34;
			_this7.self._30 = a304 * b04 + a314 * b14 + a324 * b24 + a334 * b34;
			b04 = b4.self._01;
			b14 = b4.self._11;
			b24 = b4.self._21;
			b34 = b4.self._31;
			_this7.self._01 = a004 * b04 + a014 * b14 + a024 * b24 + a034 * b34;
			_this7.self._11 = a104 * b04 + a114 * b14 + a124 * b24 + a134 * b34;
			_this7.self._21 = a204 * b04 + a214 * b14 + a224 * b24 + a234 * b34;
			_this7.self._31 = a304 * b04 + a314 * b14 + a324 * b24 + a334 * b34;
			b04 = b4.self._02;
			b14 = b4.self._12;
			b24 = b4.self._22;
			b34 = b4.self._32;
			_this7.self._02 = a004 * b04 + a014 * b14 + a024 * b24 + a034 * b34;
			_this7.self._12 = a104 * b04 + a114 * b14 + a124 * b24 + a134 * b34;
			_this7.self._22 = a204 * b04 + a214 * b14 + a224 * b24 + a234 * b34;
			_this7.self._32 = a304 * b04 + a314 * b14 + a324 * b24 + a334 * b34;
			_this7.self._03 = 0;
			_this7.self._13 = 0;
			_this7.self._23 = 0;
			_this7.self._33 = 1;
		} else {
			var _this8 = this.world;
			var m4 = this.local;
			_this8.self._00 = m4.self._00;
			_this8.self._01 = m4.self._01;
			_this8.self._02 = m4.self._02;
			_this8.self._03 = m4.self._03;
			_this8.self._10 = m4.self._10;
			_this8.self._11 = m4.self._11;
			_this8.self._12 = m4.self._12;
			_this8.self._13 = m4.self._13;
			_this8.self._20 = m4.self._20;
			_this8.self._21 = m4.self._21;
			_this8.self._22 = m4.self._22;
			_this8.self._23 = m4.self._23;
			_this8.self._30 = m4.self._30;
			_this8.self._31 = m4.self._31;
			_this8.self._32 = m4.self._32;
			_this8.self._33 = m4.self._33;
		}
		if(this.object.constraints != null) {
			var _g3 = 0;
			var _g12 = this.object.constraints;
			while(_g3 < _g12.length) {
				var c = _g12[_g3];
				++_g3;
				c.apply(this);
			}
		}
		this.computeDim();
		var _g4 = 0;
		var _g13 = this.object.children;
		while(_g4 < _g13.length) {
			var n = _g13[_g4];
			++_g4;
			n.transform.buildMatrix();
		}
		this.dirty = false;
	}
	,translate: function(x,y,z) {
		this.loc.x += x;
		this.loc.y += y;
		this.loc.z += z;
		this.buildMatrix();
	}
	,setMatrix: function(mat) {
		var _this = this.local;
		_this.self._00 = mat.self._00;
		_this.self._01 = mat.self._01;
		_this.self._02 = mat.self._02;
		_this.self._03 = mat.self._03;
		_this.self._10 = mat.self._10;
		_this.self._11 = mat.self._11;
		_this.self._12 = mat.self._12;
		_this.self._13 = mat.self._13;
		_this.self._20 = mat.self._20;
		_this.self._21 = mat.self._21;
		_this.self._22 = mat.self._22;
		_this.self._23 = mat.self._23;
		_this.self._30 = mat.self._30;
		_this.self._31 = mat.self._31;
		_this.self._32 = mat.self._32;
		_this.self._33 = mat.self._33;
		this.decompose();
		this.buildMatrix();
	}
	,multMatrix: function(mat) {
		var _this = this.local;
		var a00 = _this.self._00;
		var a01 = _this.self._01;
		var a02 = _this.self._02;
		var a03 = _this.self._03;
		var a10 = _this.self._10;
		var a11 = _this.self._11;
		var a12 = _this.self._12;
		var a13 = _this.self._13;
		var a20 = _this.self._20;
		var a21 = _this.self._21;
		var a22 = _this.self._22;
		var a23 = _this.self._23;
		var a30 = _this.self._30;
		var a31 = _this.self._31;
		var a32 = _this.self._32;
		var a33 = _this.self._33;
		var b0 = mat.self._00;
		var b1 = mat.self._10;
		var b2 = mat.self._20;
		var b3 = mat.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = mat.self._01;
		b1 = mat.self._11;
		b2 = mat.self._21;
		b3 = mat.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = mat.self._02;
		b1 = mat.self._12;
		b2 = mat.self._22;
		b3 = mat.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = mat.self._03;
		b1 = mat.self._13;
		b2 = mat.self._23;
		b3 = mat.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.decompose();
		this.buildMatrix();
	}
	,decompose: function() {
		var _this = this.local;
		var loc = this.loc;
		var quat = this.rot;
		var scale = this.scale;
		loc.x = _this.self._30;
		loc.y = _this.self._31;
		loc.z = _this.self._32;
		var _this1 = iron_math_Mat4.helpVec;
		_this1.x = _this.self._00;
		_this1.y = _this.self._01;
		_this1.z = _this.self._02;
		_this1.w = 1.0;
		var _this2 = _this1;
		scale.x = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this3 = iron_math_Mat4.helpVec;
		_this3.x = _this.self._10;
		_this3.y = _this.self._11;
		_this3.z = _this.self._12;
		_this3.w = 1.0;
		var _this4 = _this3;
		scale.y = Math.sqrt(_this4.x * _this4.x + _this4.y * _this4.y + _this4.z * _this4.z);
		var _this5 = iron_math_Mat4.helpVec;
		_this5.x = _this.self._20;
		_this5.y = _this.self._21;
		_this5.z = _this.self._22;
		_this5.w = 1.0;
		var _this6 = _this5;
		scale.z = Math.sqrt(_this6.x * _this6.x + _this6.y * _this6.y + _this6.z * _this6.z);
		var _this7 = _this.self;
		var m3 = _this7._12;
		var m4 = _this7._22;
		var m5 = _this7._32;
		var m6 = _this7._13;
		var m7 = _this7._23;
		var m8 = _this7._33;
		var c00 = _this7._11 * (m4 * m8 - m5 * m7) - _this7._21 * (m3 * m8 - m5 * m6) + _this7._31 * (m3 * m7 - m4 * m6);
		var m31 = _this7._12;
		var m41 = _this7._22;
		var m51 = _this7._32;
		var m61 = _this7._13;
		var m71 = _this7._23;
		var m81 = _this7._33;
		var c01 = _this7._10 * (m41 * m81 - m51 * m71) - _this7._20 * (m31 * m81 - m51 * m61) + _this7._30 * (m31 * m71 - m41 * m61);
		var m32 = _this7._11;
		var m42 = _this7._21;
		var m52 = _this7._31;
		var m62 = _this7._13;
		var m72 = _this7._23;
		var m82 = _this7._33;
		var c02 = _this7._10 * (m42 * m82 - m52 * m72) - _this7._20 * (m32 * m82 - m52 * m62) + _this7._30 * (m32 * m72 - m42 * m62);
		var m33 = _this7._11;
		var m43 = _this7._21;
		var m53 = _this7._31;
		var m63 = _this7._12;
		var m73 = _this7._22;
		var m83 = _this7._32;
		var c03 = _this7._10 * (m43 * m83 - m53 * m73) - _this7._20 * (m33 * m83 - m53 * m63) + _this7._30 * (m33 * m73 - m43 * m63);
		if(_this7._00 * c00 - _this7._01 * c01 + _this7._02 * c02 - _this7._03 * c03 < 0.0) {
			scale.x = -scale.x;
		}
		var invs = 1.0 / scale.x;
		iron_math_Mat4.helpMat.self._00 = _this.self._00 * invs;
		iron_math_Mat4.helpMat.self._01 = _this.self._01 * invs;
		iron_math_Mat4.helpMat.self._02 = _this.self._02 * invs;
		invs = 1.0 / scale.y;
		iron_math_Mat4.helpMat.self._10 = _this.self._10 * invs;
		iron_math_Mat4.helpMat.self._11 = _this.self._11 * invs;
		iron_math_Mat4.helpMat.self._12 = _this.self._12 * invs;
		invs = 1.0 / scale.z;
		iron_math_Mat4.helpMat.self._20 = _this.self._20 * invs;
		iron_math_Mat4.helpMat.self._21 = _this.self._21 * invs;
		iron_math_Mat4.helpMat.self._22 = _this.self._22 * invs;
		var m = iron_math_Mat4.helpMat;
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m311 = m.self._02;
		var m321 = m.self._12;
		var m331 = m.self._22;
		var tr = m11 + m22 + m331;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			quat.w = 0.25 / s;
			quat.x = (m321 - m23) * s;
			quat.y = (m13 - m311) * s;
			quat.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m331);
			quat.w = (m321 - m23) / s;
			quat.x = 0.25 * s;
			quat.y = (m12 + m21) / s;
			quat.z = (m13 + m311) / s;
		} else if(m22 > m331) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m331);
			quat.w = (m13 - m311) / s;
			quat.x = (m12 + m21) / s;
			quat.y = 0.25 * s;
			quat.z = (m23 + m321) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m331 - m11 - m22);
			quat.w = (m21 - m12) / s;
			quat.x = (m13 + m311) / s;
			quat.y = (m23 + m321) / s;
			quat.z = 0.25 * s;
		}
	}
	,rotate: function(axis,f) {
		var _this = iron_object_Transform.q;
		var s = Math.sin(f * 0.5);
		_this.x = axis.x * s;
		_this.y = axis.y * s;
		_this.z = axis.z * s;
		_this.w = Math.cos(f * 0.5);
		var l = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z + _this.w * _this.w);
		if(l == 0.0) {
			_this.x = 0;
			_this.y = 0;
			_this.z = 0;
			_this.w = 0;
		} else {
			l = 1.0 / l;
			_this.x *= l;
			_this.y *= l;
			_this.z *= l;
			_this.w *= l;
		}
		var _this1 = this.rot;
		var q1 = iron_object_Transform.q;
		var q2 = this.rot;
		var q1x = q1.x;
		var q1y = q1.y;
		var q1z = q1.z;
		var q1w = q1.w;
		var q2x = q2.x;
		var q2y = q2.y;
		var q2z = q2.z;
		var q2w = q2.w;
		_this1.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;
		_this1.y = q1w * q2y - q1x * q2z + q1y * q2w + q1z * q2x;
		_this1.z = q1w * q2z + q1x * q2y - q1y * q2x + q1z * q2w;
		_this1.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;
		this.buildMatrix();
	}
	,move: function(axis,f) {
		if(f == null) {
			f = 1.0;
		}
		var _this = this.loc;
		_this.x += axis.x * f;
		_this.y += axis.y * f;
		_this.z += axis.z * f;
		this.buildMatrix();
	}
	,setRotation: function(x,y,z) {
		var _this = this.rot;
		var f = x / 2;
		var c1 = Math.cos(f);
		var s1 = Math.sin(f);
		f = y / 2;
		var c2 = Math.cos(f);
		var s2 = Math.sin(f);
		f = z / 2;
		var c3 = Math.cos(f);
		var s3 = Math.sin(f);
		_this.x = s1 * c2 * c3 + c1 * s2 * s3;
		_this.y = c1 * s2 * c3 + s1 * c2 * s3;
		_this.z = c1 * c2 * s3 - s1 * s2 * c3;
		_this.w = c1 * c2 * c3 - s1 * s2 * s3;
		this._eulerX = x;
		this._eulerY = y;
		this._eulerZ = z;
		this.dirty = true;
	}
	,computeRadius: function() {
		this.radius = Math.sqrt(this.dim.x * this.dim.x + this.dim.y * this.dim.y + this.dim.z * this.dim.z);
	}
	,computeDim: function() {
		if(this.object.raw == null) {
			this.computeRadius();
			return;
		}
		var d = this.object.raw.dimensions;
		if(d == null) {
			var _this = this.dim;
			_this.x = 2 * this.scale.x;
			_this.y = 2 * this.scale.y;
			_this.z = 2 * this.scale.z;
			_this.w = 1.0;
		} else {
			var _this1 = this.dim;
			var y = d[1] * this.scale.y;
			var z = d[2] * this.scale.z;
			_this1.x = d[0] * this.scale.x;
			_this1.y = y;
			_this1.z = z;
			_this1.w = 1.0;
		}
		this.computeRadius();
	}
	,applyParentInverse: function() {
		var pt = this.object.parent.transform;
		pt.buildMatrix();
		var _this = iron_object_Transform.temp;
		var m = pt.world;
		var a00 = m.self._00;
		var a01 = m.self._01;
		var a02 = m.self._02;
		var a03 = m.self._03;
		var a10 = m.self._10;
		var a11 = m.self._11;
		var a12 = m.self._12;
		var a13 = m.self._13;
		var a20 = m.self._20;
		var a21 = m.self._21;
		var a22 = m.self._22;
		var a23 = m.self._23;
		var a30 = m.self._30;
		var a31 = m.self._31;
		var a32 = m.self._32;
		var a33 = m.self._33;
		var b00 = a00 * a11 - a01 * a10;
		var b01 = a00 * a12 - a02 * a10;
		var b02 = a00 * a13 - a03 * a10;
		var b03 = a01 * a12 - a02 * a11;
		var b04 = a01 * a13 - a03 * a11;
		var b05 = a02 * a13 - a03 * a12;
		var b06 = a20 * a31 - a21 * a30;
		var b07 = a20 * a32 - a22 * a30;
		var b08 = a20 * a33 - a23 * a30;
		var b09 = a21 * a32 - a22 * a31;
		var b10 = a21 * a33 - a23 * a31;
		var b11 = a22 * a33 - a23 * a32;
		var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		if(det == 0.0) {
			_this.self._00 = 1.0;
			_this.self._01 = 0.0;
			_this.self._02 = 0.0;
			_this.self._03 = 0.0;
			_this.self._10 = 0.0;
			_this.self._11 = 1.0;
			_this.self._12 = 0.0;
			_this.self._13 = 0.0;
			_this.self._20 = 0.0;
			_this.self._21 = 0.0;
			_this.self._22 = 1.0;
			_this.self._23 = 0.0;
			_this.self._30 = 0.0;
			_this.self._31 = 0.0;
			_this.self._32 = 0.0;
			_this.self._33 = 1.0;
		} else {
			det = 1.0 / det;
			_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
			_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
			_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
			_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
			_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
			_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
			_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
			_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
			_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
			_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
			_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
			_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
			_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
			_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
			_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
			_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		}
		var _this1 = this.local;
		var m1 = iron_object_Transform.temp;
		var a001 = _this1.self._00;
		var a011 = _this1.self._01;
		var a021 = _this1.self._02;
		var a031 = _this1.self._03;
		var a101 = _this1.self._10;
		var a111 = _this1.self._11;
		var a121 = _this1.self._12;
		var a131 = _this1.self._13;
		var a201 = _this1.self._20;
		var a211 = _this1.self._21;
		var a221 = _this1.self._22;
		var a231 = _this1.self._23;
		var a301 = _this1.self._30;
		var a311 = _this1.self._31;
		var a321 = _this1.self._32;
		var a331 = _this1.self._33;
		var b0 = m1.self._00;
		var b1 = m1.self._10;
		var b2 = m1.self._20;
		var b3 = m1.self._30;
		_this1.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._01;
		b1 = m1.self._11;
		b2 = m1.self._21;
		b3 = m1.self._31;
		_this1.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._02;
		b1 = m1.self._12;
		b2 = m1.self._22;
		b3 = m1.self._32;
		_this1.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		b0 = m1.self._03;
		b1 = m1.self._13;
		b2 = m1.self._23;
		b3 = m1.self._33;
		_this1.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
		_this1.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
		_this1.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
		_this1.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
		this.decompose();
		this.buildMatrix();
	}
	,applyParent: function() {
		var pt = this.object.parent.transform;
		var _this = this.local;
		var m = pt.world;
		var a00 = _this.self._00;
		var a01 = _this.self._01;
		var a02 = _this.self._02;
		var a03 = _this.self._03;
		var a10 = _this.self._10;
		var a11 = _this.self._11;
		var a12 = _this.self._12;
		var a13 = _this.self._13;
		var a20 = _this.self._20;
		var a21 = _this.self._21;
		var a22 = _this.self._22;
		var a23 = _this.self._23;
		var a30 = _this.self._30;
		var a31 = _this.self._31;
		var a32 = _this.self._32;
		var a33 = _this.self._33;
		var b0 = m.self._00;
		var b1 = m.self._10;
		var b2 = m.self._20;
		var b3 = m.self._30;
		_this.self._00 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._10 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._20 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._30 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._01;
		b1 = m.self._11;
		b2 = m.self._21;
		b3 = m.self._31;
		_this.self._01 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._11 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._21 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._31 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._02;
		b1 = m.self._12;
		b2 = m.self._22;
		b3 = m.self._32;
		_this.self._02 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._12 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._22 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._32 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		b0 = m.self._03;
		b1 = m.self._13;
		b2 = m.self._23;
		b3 = m.self._33;
		_this.self._03 = a00 * b0 + a01 * b1 + a02 * b2 + a03 * b3;
		_this.self._13 = a10 * b0 + a11 * b1 + a12 * b2 + a13 * b3;
		_this.self._23 = a20 * b0 + a21 * b1 + a22 * b2 + a23 * b3;
		_this.self._33 = a30 * b0 + a31 * b1 + a32 * b2 + a33 * b3;
		this.decompose();
	}
	,lastWorld: null
	,diff: function() {
		if(this.lastWorld == null) {
			var _this = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
			var m = this.world;
			_this.self._00 = m.self._00;
			_this.self._01 = m.self._01;
			_this.self._02 = m.self._02;
			_this.self._03 = m.self._03;
			_this.self._10 = m.self._10;
			_this.self._11 = m.self._11;
			_this.self._12 = m.self._12;
			_this.self._13 = m.self._13;
			_this.self._20 = m.self._20;
			_this.self._21 = m.self._21;
			_this.self._22 = m.self._22;
			_this.self._23 = m.self._23;
			_this.self._30 = m.self._30;
			_this.self._31 = m.self._31;
			_this.self._32 = m.self._32;
			_this.self._33 = m.self._33;
			this.lastWorld = _this;
			return false;
		}
		var a = this.world;
		var b = this.lastWorld;
		var r = a.self._00 != b.self._00 || a.self._01 != b.self._01 || a.self._02 != b.self._02 || a.self._03 != b.self._03 || a.self._10 != b.self._10 || a.self._11 != b.self._11 || a.self._12 != b.self._12 || a.self._13 != b.self._13 || a.self._20 != b.self._20 || a.self._21 != b.self._21 || a.self._22 != b.self._22 || a.self._23 != b.self._23 || a.self._30 != b.self._30 || a.self._31 != b.self._31 || a.self._32 != b.self._32 || a.self._33 != b.self._33;
		if(r) {
			var _this1 = this.lastWorld;
			var m1 = this.world;
			_this1.self._00 = m1.self._00;
			_this1.self._01 = m1.self._01;
			_this1.self._02 = m1.self._02;
			_this1.self._03 = m1.self._03;
			_this1.self._10 = m1.self._10;
			_this1.self._11 = m1.self._11;
			_this1.self._12 = m1.self._12;
			_this1.self._13 = m1.self._13;
			_this1.self._20 = m1.self._20;
			_this1.self._21 = m1.self._21;
			_this1.self._22 = m1.self._22;
			_this1.self._23 = m1.self._23;
			_this1.self._30 = m1.self._30;
			_this1.self._31 = m1.self._31;
			_this1.self._32 = m1.self._32;
			_this1.self._33 = m1.self._33;
		}
		return r;
	}
	,overlap: function(t2) {
		var t1 = this;
		if(t1.world.self._30 + t1.dim.x / 2 > t2.world.self._30 - t2.dim.x / 2 && t1.world.self._30 - t1.dim.x / 2 < t2.world.self._30 + t2.dim.x / 2 && t1.world.self._31 + t1.dim.y / 2 > t2.world.self._31 - t2.dim.y / 2 && t1.world.self._31 - t1.dim.y / 2 < t2.world.self._31 + t2.dim.y / 2 && t1.world.self._32 + t1.dim.z / 2 > t2.world.self._32 - t2.dim.z / 2) {
			return t1.world.self._32 - t1.dim.z / 2 < t2.world.self._32 + t2.dim.z / 2;
		} else {
			return false;
		}
	}
	,_eulerX: null
	,_eulerY: null
	,_eulerZ: null
	,look: function() {
		var _this = this.world;
		return new iron_math_Vec4(_this.self._10,_this.self._11,_this.self._12);
	}
	,right: function() {
		var _this = this.world;
		return new iron_math_Vec4(_this.self._00,_this.self._01,_this.self._02);
	}
	,up: function() {
		var _this = this.world;
		return new iron_math_Vec4(_this.self._20,_this.self._21,_this.self._22);
	}
	,worldx: function() {
		return this.world.self._30;
	}
	,worldy: function() {
		return this.world.self._31;
	}
	,worldz: function() {
		return this.world.self._32;
	}
	,dloc: null
	,drot: null
	,dscale: null
	,_deulerX: null
	,_deulerY: null
	,_deulerZ: null
	,__class__: iron_object_Transform
};
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = "kha.math.FastMatrix3";
kha_math_FastMatrix3.fromMatrix3 = function(m) {
	return new kha_math_FastMatrix3(m._00,m._10,m._20,m._01,m._11,m._21,m._02,m._12,m._22);
};
kha_math_FastMatrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_FastMatrix3
};
var iron_object_Uniforms = function() { };
$hxClasses["iron.object.Uniforms"] = iron_object_Uniforms;
iron_object_Uniforms.__name__ = "iron.object.Uniforms";
iron_object_Uniforms.setContextConstants = function(g,context,camera,light,bindParams) {
	if(context.raw.constants != null) {
		var _g = 0;
		var _g1 = context.raw.constants.length;
		while(_g < _g1) {
			var i = _g++;
			var c = context.raw.constants[i];
			iron_object_Uniforms.setContextConstant(g,camera,light,context.constants[i],c);
		}
	}
	if(bindParams != null) {
		var _g2 = 0;
		var _g11 = bindParams.length / 2 | 0;
		while(_g2 < _g11) {
			var i1 = _g2++;
			var pos = i1 * 2;
			var rtID = bindParams[pos];
			var samplerID = bindParams[pos + 1];
			var attachDepth = false;
			var char = rtID.charAt(0);
			if(char == "_") {
				attachDepth = true;
				rtID = HxOverrides.substr(rtID,1,null);
			}
			var rt;
			if(attachDepth) {
				var _this = iron_RenderPath.active.depthToRenderTarget;
				rt = __map_reserved[rtID] != null ? _this.getReserved(rtID) : _this.h[rtID];
			} else {
				var _this1 = iron_RenderPath.active.renderTargets;
				rt = __map_reserved[rtID] != null ? _this1.getReserved(rtID) : _this1.h[rtID];
			}
			iron_object_Uniforms.bindRenderTarget(g,rt,context,samplerID,attachDepth);
		}
	}
	if(context.raw.texture_units != null) {
		var _g3 = 0;
		var _g12 = context.raw.texture_units.length;
		while(_g3 < _g12) {
			var j = _g3++;
			var tulink = context.raw.texture_units[j].link;
			if(tulink == null) {
				continue;
			}
			if(tulink == "_envmapRadiance") {
				var w = iron_Scene.active.world;
				if(w != null) {
					g.setTexture(context.textureUnits[j],w.probe.radiance);
					g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.LinearMipFilter);
				}
			} else if(tulink == "_envmap") {
				var w1 = iron_Scene.active.world;
				if(w1 != null) {
					g.setTexture(context.textureUnits[j],w1.envmap);
				}
			} else if(tulink == "_envmapBrdf") {
				var _this2 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["brdf.png"] != null ? _this2.getReserved("brdf.png") : _this2.h["brdf.png"]);
			} else if(tulink == "_noise8") {
				var _this3 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise8.png"] != null ? _this3.getReserved("noise8.png") : _this3.h["noise8.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else if(tulink == "_noise64") {
				var _this4 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise64.png"] != null ? _this4.getReserved("noise64.png") : _this4.h["noise64.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else if(tulink == "_blueNoise64") {
				var _this5 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["blue_noise64.png"] != null ? _this5.getReserved("blue_noise64.png") : _this5.h["blue_noise64.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else if(tulink == "_noise256") {
				var _this6 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise256.png"] != null ? _this6.getReserved("noise256.png") : _this6.h["noise256.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else if(tulink == "_lightColorTexture") {
				if(light != null) {
					g.setTexture(context.textureUnits[j],light.data.colorTexture);
					g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
				}
			} else if(tulink == "_iesTexture") {
				var _this7 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["iestexture.png"] != null ? _this7.getReserved("iestexture.png") : _this7.h["iestexture.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else {
				var tmp = tulink == "_sdfTexture";
			}
		}
	}
};
iron_object_Uniforms.setObjectConstants = function(g,context,object,camera,light) {
	if(context.raw.constants != null) {
		var _g = 0;
		var _g1 = context.raw.constants.length;
		while(_g < _g1) {
			var i = _g++;
			var c = context.raw.constants[i];
			iron_object_Uniforms.setObjectConstant(g,object,camera,light,context.constants[i],c);
		}
	}
	if(iron_object_Uniforms.externalTextureLinks != null) {
		if(context.raw.texture_units != null) {
			var _g2 = 0;
			var _g11 = context.raw.texture_units.length;
			while(_g2 < _g11) {
				var j = _g2++;
				var tulink = context.raw.texture_units[j].link;
				if(tulink == null) {
					continue;
				}
				var _g3 = 0;
				var _g12 = iron_object_Uniforms.externalTextureLinks;
				while(_g3 < _g12.length) {
					var f = _g12[_g3];
					++_g3;
					var image = f(object,iron_object_Uniforms.currentMat(object),tulink);
					if(image != null) {
						g.setTexture(context.textureUnits[j],image);
						break;
					}
				}
			}
		}
	}
};
iron_object_Uniforms.bindRenderTarget = function(g,rt,context,samplerID,attachDepth) {
	if(rt != null) {
		var tus = context.raw.texture_units;
		var _g = 0;
		var _g1 = tus.length;
		while(_g < _g1) {
			var j = _g++;
			if(samplerID == tus[j].name) {
				var isImage = tus[j].is_image != null && tus[j].is_image;
				if(rt.raw.depth > 1) {
					g.setTexture3DParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.LinearMipFilter);
					context.paramsSet[j] = true;
				}
				if(isImage) {
					g.setImageTexture(context.textureUnits[j],rt.image);
					g.setTexture3DParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.LinearMipFilter);
					context.paramsSet[j] = true;
				} else if(rt.isCubeMap) {
					if(attachDepth) {
						g.setCubeMapDepth(context.textureUnits[j],rt.cubeMap);
					} else {
						g.setCubeMap(context.textureUnits[j],rt.cubeMap);
					}
				} else if(attachDepth) {
					g.setTextureDepth(context.textureUnits[j],rt.image);
				} else {
					g.setTexture(context.textureUnits[j],rt.image);
				}
				if(!context.paramsSet[j] && rt.raw.mipmaps != null && rt.raw.mipmaps == true && !isImage) {
					g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.LinearMipFilter);
					context.paramsSet[j] = true;
				}
				if(!context.paramsSet[j]) {
					if(samplerID == "shadowMap" || attachDepth) {
						g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureFilter.PointFilter,kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.NoMipFilter);
						context.paramsSet[j] = true;
					}
					if(samplerID == "shadowMapCube") {
						context.paramsSet[j] = true;
					}
				}
				if(!context.paramsSet[j]) {
					g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
					context.paramsSet[j] = true;
				}
			}
		}
	}
};
iron_object_Uniforms.setContextConstant = function(g,camera,light,location,c) {
	if(c.link == null) {
		return true;
	}
	if(c.type == "mat4") {
		var m = null;
		if(c.link == "_viewMatrix") {
			m = camera.V;
		} else if(c.link == "_transposeInverseViewMatrix") {
			var _this = iron_object_Uniforms.helpMat;
			var m1 = camera.V;
			_this.self._00 = m1.self._00;
			_this.self._01 = m1.self._01;
			_this.self._02 = m1.self._02;
			_this.self._03 = m1.self._03;
			_this.self._10 = m1.self._10;
			_this.self._11 = m1.self._11;
			_this.self._12 = m1.self._12;
			_this.self._13 = m1.self._13;
			_this.self._20 = m1.self._20;
			_this.self._21 = m1.self._21;
			_this.self._22 = m1.self._22;
			_this.self._23 = m1.self._23;
			_this.self._30 = m1.self._30;
			_this.self._31 = m1.self._31;
			_this.self._32 = m1.self._32;
			_this.self._33 = m1.self._33;
			var _this1 = iron_object_Uniforms.helpMat;
			var m2 = iron_object_Uniforms.helpMat;
			var a00 = m2.self._00;
			var a01 = m2.self._01;
			var a02 = m2.self._02;
			var a03 = m2.self._03;
			var a10 = m2.self._10;
			var a11 = m2.self._11;
			var a12 = m2.self._12;
			var a13 = m2.self._13;
			var a20 = m2.self._20;
			var a21 = m2.self._21;
			var a22 = m2.self._22;
			var a23 = m2.self._23;
			var a30 = m2.self._30;
			var a31 = m2.self._31;
			var a32 = m2.self._32;
			var a33 = m2.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this1.self._00 = 1.0;
				_this1.self._01 = 0.0;
				_this1.self._02 = 0.0;
				_this1.self._03 = 0.0;
				_this1.self._10 = 0.0;
				_this1.self._11 = 1.0;
				_this1.self._12 = 0.0;
				_this1.self._13 = 0.0;
				_this1.self._20 = 0.0;
				_this1.self._21 = 0.0;
				_this1.self._22 = 1.0;
				_this1.self._23 = 0.0;
				_this1.self._30 = 0.0;
				_this1.self._31 = 0.0;
				_this1.self._32 = 0.0;
				_this1.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this1.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this1.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this1.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this1.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this1.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this1.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this1.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this1.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this1.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this1.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this1.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this1.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this1.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this1.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this1.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this1.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			var _this2 = iron_object_Uniforms.helpMat;
			var f = _this2.self._01;
			_this2.self._01 = _this2.self._10;
			_this2.self._10 = f;
			f = _this2.self._02;
			_this2.self._02 = _this2.self._20;
			_this2.self._20 = f;
			f = _this2.self._03;
			_this2.self._03 = _this2.self._30;
			_this2.self._30 = f;
			f = _this2.self._12;
			_this2.self._12 = _this2.self._21;
			_this2.self._21 = f;
			f = _this2.self._13;
			_this2.self._13 = _this2.self._31;
			_this2.self._31 = f;
			f = _this2.self._23;
			_this2.self._23 = _this2.self._32;
			_this2.self._32 = f;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_inverseViewMatrix") {
			var _this3 = iron_object_Uniforms.helpMat;
			var m3 = camera.V;
			var a001 = m3.self._00;
			var a011 = m3.self._01;
			var a021 = m3.self._02;
			var a031 = m3.self._03;
			var a101 = m3.self._10;
			var a111 = m3.self._11;
			var a121 = m3.self._12;
			var a131 = m3.self._13;
			var a201 = m3.self._20;
			var a211 = m3.self._21;
			var a221 = m3.self._22;
			var a231 = m3.self._23;
			var a301 = m3.self._30;
			var a311 = m3.self._31;
			var a321 = m3.self._32;
			var a331 = m3.self._33;
			var b001 = a001 * a111 - a011 * a101;
			var b011 = a001 * a121 - a021 * a101;
			var b021 = a001 * a131 - a031 * a101;
			var b031 = a011 * a121 - a021 * a111;
			var b041 = a011 * a131 - a031 * a111;
			var b051 = a021 * a131 - a031 * a121;
			var b061 = a201 * a311 - a211 * a301;
			var b071 = a201 * a321 - a221 * a301;
			var b081 = a201 * a331 - a231 * a301;
			var b091 = a211 * a321 - a221 * a311;
			var b101 = a211 * a331 - a231 * a311;
			var b111 = a221 * a331 - a231 * a321;
			var det1 = b001 * b111 - b011 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
			if(det1 == 0.0) {
				_this3.self._00 = 1.0;
				_this3.self._01 = 0.0;
				_this3.self._02 = 0.0;
				_this3.self._03 = 0.0;
				_this3.self._10 = 0.0;
				_this3.self._11 = 1.0;
				_this3.self._12 = 0.0;
				_this3.self._13 = 0.0;
				_this3.self._20 = 0.0;
				_this3.self._21 = 0.0;
				_this3.self._22 = 1.0;
				_this3.self._23 = 0.0;
				_this3.self._30 = 0.0;
				_this3.self._31 = 0.0;
				_this3.self._32 = 0.0;
				_this3.self._33 = 1.0;
			} else {
				det1 = 1.0 / det1;
				_this3.self._00 = (a111 * b111 - a121 * b101 + a131 * b091) * det1;
				_this3.self._01 = (a021 * b101 - a011 * b111 - a031 * b091) * det1;
				_this3.self._02 = (a311 * b051 - a321 * b041 + a331 * b031) * det1;
				_this3.self._03 = (a221 * b041 - a211 * b051 - a231 * b031) * det1;
				_this3.self._10 = (a121 * b081 - a101 * b111 - a131 * b071) * det1;
				_this3.self._11 = (a001 * b111 - a021 * b081 + a031 * b071) * det1;
				_this3.self._12 = (a321 * b021 - a301 * b051 - a331 * b011) * det1;
				_this3.self._13 = (a201 * b051 - a221 * b021 + a231 * b011) * det1;
				_this3.self._20 = (a101 * b101 - a111 * b081 + a131 * b061) * det1;
				_this3.self._21 = (a011 * b081 - a001 * b101 - a031 * b061) * det1;
				_this3.self._22 = (a301 * b041 - a311 * b021 + a331 * b001) * det1;
				_this3.self._23 = (a211 * b021 - a201 * b041 - a231 * b001) * det1;
				_this3.self._30 = (a111 * b071 - a101 * b091 - a121 * b061) * det1;
				_this3.self._31 = (a001 * b091 - a011 * b071 + a021 * b061) * det1;
				_this3.self._32 = (a311 * b011 - a301 * b031 - a321 * b001) * det1;
				_this3.self._33 = (a201 * b031 - a211 * b011 + a221 * b001) * det1;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_transposeViewMatrix") {
			var _this4 = iron_object_Uniforms.helpMat;
			var m4 = camera.V;
			_this4.self._00 = m4.self._00;
			_this4.self._01 = m4.self._01;
			_this4.self._02 = m4.self._02;
			_this4.self._03 = m4.self._03;
			_this4.self._10 = m4.self._10;
			_this4.self._11 = m4.self._11;
			_this4.self._12 = m4.self._12;
			_this4.self._13 = m4.self._13;
			_this4.self._20 = m4.self._20;
			_this4.self._21 = m4.self._21;
			_this4.self._22 = m4.self._22;
			_this4.self._23 = m4.self._23;
			_this4.self._30 = m4.self._30;
			_this4.self._31 = m4.self._31;
			_this4.self._32 = m4.self._32;
			_this4.self._33 = m4.self._33;
			var _this5 = iron_object_Uniforms.helpMat;
			var f1 = _this5.self._01;
			_this5.self._01 = _this5.self._10;
			_this5.self._10 = f1;
			f1 = _this5.self._02;
			_this5.self._02 = _this5.self._20;
			_this5.self._20 = f1;
			f1 = _this5.self._12;
			_this5.self._12 = _this5.self._21;
			_this5.self._21 = f1;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_projectionMatrix") {
			m = camera.P;
		} else if(c.link == "_inverseProjectionMatrix") {
			var _this6 = iron_object_Uniforms.helpMat;
			var m5 = camera.P;
			var a002 = m5.self._00;
			var a012 = m5.self._01;
			var a022 = m5.self._02;
			var a032 = m5.self._03;
			var a102 = m5.self._10;
			var a112 = m5.self._11;
			var a122 = m5.self._12;
			var a132 = m5.self._13;
			var a202 = m5.self._20;
			var a212 = m5.self._21;
			var a222 = m5.self._22;
			var a232 = m5.self._23;
			var a302 = m5.self._30;
			var a312 = m5.self._31;
			var a322 = m5.self._32;
			var a332 = m5.self._33;
			var b002 = a002 * a112 - a012 * a102;
			var b012 = a002 * a122 - a022 * a102;
			var b022 = a002 * a132 - a032 * a102;
			var b032 = a012 * a122 - a022 * a112;
			var b042 = a012 * a132 - a032 * a112;
			var b052 = a022 * a132 - a032 * a122;
			var b062 = a202 * a312 - a212 * a302;
			var b072 = a202 * a322 - a222 * a302;
			var b082 = a202 * a332 - a232 * a302;
			var b092 = a212 * a322 - a222 * a312;
			var b102 = a212 * a332 - a232 * a312;
			var b112 = a222 * a332 - a232 * a322;
			var det2 = b002 * b112 - b012 * b102 + b022 * b092 + b032 * b082 - b042 * b072 + b052 * b062;
			if(det2 == 0.0) {
				_this6.self._00 = 1.0;
				_this6.self._01 = 0.0;
				_this6.self._02 = 0.0;
				_this6.self._03 = 0.0;
				_this6.self._10 = 0.0;
				_this6.self._11 = 1.0;
				_this6.self._12 = 0.0;
				_this6.self._13 = 0.0;
				_this6.self._20 = 0.0;
				_this6.self._21 = 0.0;
				_this6.self._22 = 1.0;
				_this6.self._23 = 0.0;
				_this6.self._30 = 0.0;
				_this6.self._31 = 0.0;
				_this6.self._32 = 0.0;
				_this6.self._33 = 1.0;
			} else {
				det2 = 1.0 / det2;
				_this6.self._00 = (a112 * b112 - a122 * b102 + a132 * b092) * det2;
				_this6.self._01 = (a022 * b102 - a012 * b112 - a032 * b092) * det2;
				_this6.self._02 = (a312 * b052 - a322 * b042 + a332 * b032) * det2;
				_this6.self._03 = (a222 * b042 - a212 * b052 - a232 * b032) * det2;
				_this6.self._10 = (a122 * b082 - a102 * b112 - a132 * b072) * det2;
				_this6.self._11 = (a002 * b112 - a022 * b082 + a032 * b072) * det2;
				_this6.self._12 = (a322 * b022 - a302 * b052 - a332 * b012) * det2;
				_this6.self._13 = (a202 * b052 - a222 * b022 + a232 * b012) * det2;
				_this6.self._20 = (a102 * b102 - a112 * b082 + a132 * b062) * det2;
				_this6.self._21 = (a012 * b082 - a002 * b102 - a032 * b062) * det2;
				_this6.self._22 = (a302 * b042 - a312 * b022 + a332 * b002) * det2;
				_this6.self._23 = (a212 * b022 - a202 * b042 - a232 * b002) * det2;
				_this6.self._30 = (a112 * b072 - a102 * b092 - a122 * b062) * det2;
				_this6.self._31 = (a002 * b092 - a012 * b072 + a022 * b062) * det2;
				_this6.self._32 = (a312 * b012 - a302 * b032 - a322 * b002) * det2;
				_this6.self._33 = (a202 * b032 - a212 * b012 + a222 * b002) * det2;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_inverseViewProjectionMatrix") {
			var _this7 = iron_object_Uniforms.helpMat;
			var m6 = camera.V;
			_this7.self._00 = m6.self._00;
			_this7.self._01 = m6.self._01;
			_this7.self._02 = m6.self._02;
			_this7.self._03 = m6.self._03;
			_this7.self._10 = m6.self._10;
			_this7.self._11 = m6.self._11;
			_this7.self._12 = m6.self._12;
			_this7.self._13 = m6.self._13;
			_this7.self._20 = m6.self._20;
			_this7.self._21 = m6.self._21;
			_this7.self._22 = m6.self._22;
			_this7.self._23 = m6.self._23;
			_this7.self._30 = m6.self._30;
			_this7.self._31 = m6.self._31;
			_this7.self._32 = m6.self._32;
			_this7.self._33 = m6.self._33;
			var _this8 = iron_object_Uniforms.helpMat;
			var m7 = camera.P;
			var a003 = _this8.self._00;
			var a013 = _this8.self._01;
			var a023 = _this8.self._02;
			var a033 = _this8.self._03;
			var a103 = _this8.self._10;
			var a113 = _this8.self._11;
			var a123 = _this8.self._12;
			var a133 = _this8.self._13;
			var a203 = _this8.self._20;
			var a213 = _this8.self._21;
			var a223 = _this8.self._22;
			var a233 = _this8.self._23;
			var a303 = _this8.self._30;
			var a313 = _this8.self._31;
			var a323 = _this8.self._32;
			var a333 = _this8.self._33;
			var b0 = m7.self._00;
			var b1 = m7.self._10;
			var b2 = m7.self._20;
			var b3 = m7.self._30;
			_this8.self._00 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._10 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._20 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._30 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			b0 = m7.self._01;
			b1 = m7.self._11;
			b2 = m7.self._21;
			b3 = m7.self._31;
			_this8.self._01 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._11 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._21 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._31 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			b0 = m7.self._02;
			b1 = m7.self._12;
			b2 = m7.self._22;
			b3 = m7.self._32;
			_this8.self._02 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._12 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._22 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._32 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			b0 = m7.self._03;
			b1 = m7.self._13;
			b2 = m7.self._23;
			b3 = m7.self._33;
			_this8.self._03 = a003 * b0 + a013 * b1 + a023 * b2 + a033 * b3;
			_this8.self._13 = a103 * b0 + a113 * b1 + a123 * b2 + a133 * b3;
			_this8.self._23 = a203 * b0 + a213 * b1 + a223 * b2 + a233 * b3;
			_this8.self._33 = a303 * b0 + a313 * b1 + a323 * b2 + a333 * b3;
			var _this9 = iron_object_Uniforms.helpMat;
			var m8 = iron_object_Uniforms.helpMat;
			var a004 = m8.self._00;
			var a014 = m8.self._01;
			var a024 = m8.self._02;
			var a034 = m8.self._03;
			var a104 = m8.self._10;
			var a114 = m8.self._11;
			var a124 = m8.self._12;
			var a134 = m8.self._13;
			var a204 = m8.self._20;
			var a214 = m8.self._21;
			var a224 = m8.self._22;
			var a234 = m8.self._23;
			var a304 = m8.self._30;
			var a314 = m8.self._31;
			var a324 = m8.self._32;
			var a334 = m8.self._33;
			var b003 = a004 * a114 - a014 * a104;
			var b013 = a004 * a124 - a024 * a104;
			var b023 = a004 * a134 - a034 * a104;
			var b033 = a014 * a124 - a024 * a114;
			var b043 = a014 * a134 - a034 * a114;
			var b053 = a024 * a134 - a034 * a124;
			var b063 = a204 * a314 - a214 * a304;
			var b073 = a204 * a324 - a224 * a304;
			var b083 = a204 * a334 - a234 * a304;
			var b093 = a214 * a324 - a224 * a314;
			var b103 = a214 * a334 - a234 * a314;
			var b113 = a224 * a334 - a234 * a324;
			var det3 = b003 * b113 - b013 * b103 + b023 * b093 + b033 * b083 - b043 * b073 + b053 * b063;
			if(det3 == 0.0) {
				_this9.self._00 = 1.0;
				_this9.self._01 = 0.0;
				_this9.self._02 = 0.0;
				_this9.self._03 = 0.0;
				_this9.self._10 = 0.0;
				_this9.self._11 = 1.0;
				_this9.self._12 = 0.0;
				_this9.self._13 = 0.0;
				_this9.self._20 = 0.0;
				_this9.self._21 = 0.0;
				_this9.self._22 = 1.0;
				_this9.self._23 = 0.0;
				_this9.self._30 = 0.0;
				_this9.self._31 = 0.0;
				_this9.self._32 = 0.0;
				_this9.self._33 = 1.0;
			} else {
				det3 = 1.0 / det3;
				_this9.self._00 = (a114 * b113 - a124 * b103 + a134 * b093) * det3;
				_this9.self._01 = (a024 * b103 - a014 * b113 - a034 * b093) * det3;
				_this9.self._02 = (a314 * b053 - a324 * b043 + a334 * b033) * det3;
				_this9.self._03 = (a224 * b043 - a214 * b053 - a234 * b033) * det3;
				_this9.self._10 = (a124 * b083 - a104 * b113 - a134 * b073) * det3;
				_this9.self._11 = (a004 * b113 - a024 * b083 + a034 * b073) * det3;
				_this9.self._12 = (a324 * b023 - a304 * b053 - a334 * b013) * det3;
				_this9.self._13 = (a204 * b053 - a224 * b023 + a234 * b013) * det3;
				_this9.self._20 = (a104 * b103 - a114 * b083 + a134 * b063) * det3;
				_this9.self._21 = (a014 * b083 - a004 * b103 - a034 * b063) * det3;
				_this9.self._22 = (a304 * b043 - a314 * b023 + a334 * b003) * det3;
				_this9.self._23 = (a214 * b023 - a204 * b043 - a234 * b003) * det3;
				_this9.self._30 = (a114 * b073 - a104 * b093 - a124 * b063) * det3;
				_this9.self._31 = (a004 * b093 - a014 * b073 + a024 * b063) * det3;
				_this9.self._32 = (a314 * b013 - a304 * b033 - a324 * b003) * det3;
				_this9.self._33 = (a204 * b033 - a214 * b013 + a224 * b003) * det3;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_viewProjectionMatrix") {
			m = camera.VP;
		} else if(c.link == "_prevViewProjectionMatrix") {
			var _this10 = iron_object_Uniforms.helpMat;
			var m9 = camera.prevV;
			_this10.self._00 = m9.self._00;
			_this10.self._01 = m9.self._01;
			_this10.self._02 = m9.self._02;
			_this10.self._03 = m9.self._03;
			_this10.self._10 = m9.self._10;
			_this10.self._11 = m9.self._11;
			_this10.self._12 = m9.self._12;
			_this10.self._13 = m9.self._13;
			_this10.self._20 = m9.self._20;
			_this10.self._21 = m9.self._21;
			_this10.self._22 = m9.self._22;
			_this10.self._23 = m9.self._23;
			_this10.self._30 = m9.self._30;
			_this10.self._31 = m9.self._31;
			_this10.self._32 = m9.self._32;
			_this10.self._33 = m9.self._33;
			var _this11 = iron_object_Uniforms.helpMat;
			var m10 = camera.P;
			var a005 = _this11.self._00;
			var a015 = _this11.self._01;
			var a025 = _this11.self._02;
			var a035 = _this11.self._03;
			var a105 = _this11.self._10;
			var a115 = _this11.self._11;
			var a125 = _this11.self._12;
			var a135 = _this11.self._13;
			var a205 = _this11.self._20;
			var a215 = _this11.self._21;
			var a225 = _this11.self._22;
			var a235 = _this11.self._23;
			var a305 = _this11.self._30;
			var a315 = _this11.self._31;
			var a325 = _this11.self._32;
			var a335 = _this11.self._33;
			var b010 = m10.self._00;
			var b12 = m10.self._10;
			var b21 = m10.self._20;
			var b31 = m10.self._30;
			_this11.self._00 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._10 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._20 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._30 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			b010 = m10.self._01;
			b12 = m10.self._11;
			b21 = m10.self._21;
			b31 = m10.self._31;
			_this11.self._01 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._11 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._21 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._31 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			b010 = m10.self._02;
			b12 = m10.self._12;
			b21 = m10.self._22;
			b31 = m10.self._32;
			_this11.self._02 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._12 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._22 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._32 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			b010 = m10.self._03;
			b12 = m10.self._13;
			b21 = m10.self._23;
			b31 = m10.self._33;
			_this11.self._03 = a005 * b010 + a015 * b12 + a025 * b21 + a035 * b31;
			_this11.self._13 = a105 * b010 + a115 * b12 + a125 * b21 + a135 * b31;
			_this11.self._23 = a205 * b010 + a215 * b12 + a225 * b21 + a235 * b31;
			_this11.self._33 = a305 * b010 + a315 * b12 + a325 * b21 + a335 * b31;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lightViewProjectionMatrix") {
			if(light != null) {
				m = light.VP;
			}
		} else if(c.link == "_biasLightViewProjectionMatrix") {
			if(light != null) {
				var _this12 = iron_object_Uniforms.helpMat;
				var m11 = light.VP;
				_this12.self._00 = m11.self._00;
				_this12.self._01 = m11.self._01;
				_this12.self._02 = m11.self._02;
				_this12.self._03 = m11.self._03;
				_this12.self._10 = m11.self._10;
				_this12.self._11 = m11.self._11;
				_this12.self._12 = m11.self._12;
				_this12.self._13 = m11.self._13;
				_this12.self._20 = m11.self._20;
				_this12.self._21 = m11.self._21;
				_this12.self._22 = m11.self._22;
				_this12.self._23 = m11.self._23;
				_this12.self._30 = m11.self._30;
				_this12.self._31 = m11.self._31;
				_this12.self._32 = m11.self._32;
				_this12.self._33 = m11.self._33;
				var _this13 = iron_object_Uniforms.helpMat;
				var m12 = iron_object_Uniforms.biasMat;
				var a006 = _this13.self._00;
				var a016 = _this13.self._01;
				var a026 = _this13.self._02;
				var a036 = _this13.self._03;
				var a106 = _this13.self._10;
				var a116 = _this13.self._11;
				var a126 = _this13.self._12;
				var a136 = _this13.self._13;
				var a206 = _this13.self._20;
				var a216 = _this13.self._21;
				var a226 = _this13.self._22;
				var a236 = _this13.self._23;
				var a306 = _this13.self._30;
				var a316 = _this13.self._31;
				var a326 = _this13.self._32;
				var a336 = _this13.self._33;
				var b014 = m12.self._00;
				var b13 = m12.self._10;
				var b22 = m12.self._20;
				var b32 = m12.self._30;
				_this13.self._00 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._10 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._20 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._30 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				b014 = m12.self._01;
				b13 = m12.self._11;
				b22 = m12.self._21;
				b32 = m12.self._31;
				_this13.self._01 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._11 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._21 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._31 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				b014 = m12.self._02;
				b13 = m12.self._12;
				b22 = m12.self._22;
				b32 = m12.self._32;
				_this13.self._02 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._12 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._22 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._32 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				b014 = m12.self._03;
				b13 = m12.self._13;
				b22 = m12.self._23;
				b32 = m12.self._33;
				_this13.self._03 = a006 * b014 + a016 * b13 + a026 * b22 + a036 * b32;
				_this13.self._13 = a106 * b014 + a116 * b13 + a126 * b22 + a136 * b32;
				_this13.self._23 = a206 * b014 + a216 * b13 + a226 * b22 + a236 * b32;
				_this13.self._33 = a306 * b014 + a316 * b13 + a326 * b22 + a336 * b32;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lightVolumeWorldViewProjectionMatrix") {
			if(light != null) {
				var tr = light.transform;
				var type = light.data.raw.type;
				if(type == "spot") {
					var _this14 = iron_object_Uniforms.helpVec;
					_this14.x = tr.world.self._30;
					_this14.y = tr.world.self._31;
					_this14.z = tr.world.self._32;
					_this14.w = 1.0;
					var f2 = 2.0;
					var _this15 = iron_object_Uniforms.helpVec2;
					_this15.x = light.data.raw.far_plane;
					_this15.y = light.data.raw.far_plane * f2;
					_this15.z = light.data.raw.far_plane * f2;
					_this15.w = 1.0;
					var _this16 = iron_object_Uniforms.helpMat;
					var loc = iron_object_Uniforms.helpVec;
					var quat = iron_object_Uniforms.helpQuat;
					var sc = iron_object_Uniforms.helpVec2;
					var x = quat.x;
					var y = quat.y;
					var z = quat.z;
					var w = quat.w;
					var x2 = x + x;
					var y2 = y + y;
					var z2 = z + z;
					var xx = x * x2;
					var xy = x * y2;
					var xz = x * z2;
					var yy = y * y2;
					var yz = y * z2;
					var zz = z * z2;
					var wx = w * x2;
					var wy = w * y2;
					var wz = w * z2;
					_this16.self._00 = 1.0 - (yy + zz);
					_this16.self._10 = xy - wz;
					_this16.self._20 = xz + wy;
					_this16.self._01 = xy + wz;
					_this16.self._11 = 1.0 - (xx + zz);
					_this16.self._21 = yz - wx;
					_this16.self._02 = xz - wy;
					_this16.self._12 = yz + wx;
					_this16.self._22 = 1.0 - (xx + yy);
					_this16.self._03 = 0.0;
					_this16.self._13 = 0.0;
					_this16.self._23 = 0.0;
					_this16.self._30 = 0.0;
					_this16.self._31 = 0.0;
					_this16.self._32 = 0.0;
					_this16.self._33 = 1.0;
					var x1 = sc.x;
					var y1 = sc.y;
					var z1 = sc.z;
					_this16.self._00 *= x1;
					_this16.self._01 *= x1;
					_this16.self._02 *= x1;
					_this16.self._03 *= x1;
					_this16.self._10 *= y1;
					_this16.self._11 *= y1;
					_this16.self._12 *= y1;
					_this16.self._13 *= y1;
					_this16.self._20 *= z1;
					_this16.self._21 *= z1;
					_this16.self._22 *= z1;
					_this16.self._23 *= z1;
					_this16.self._30 = loc.x;
					_this16.self._31 = loc.y;
					_this16.self._32 = loc.z;
				} else if(type == "point" || type == "area") {
					var _this17 = iron_object_Uniforms.helpVec;
					_this17.x = tr.world.self._30;
					_this17.y = tr.world.self._31;
					_this17.z = tr.world.self._32;
					_this17.w = 1.0;
					var f21 = 2.0;
					var _this18 = iron_object_Uniforms.helpVec2;
					_this18.x = light.data.raw.far_plane;
					_this18.y = light.data.raw.far_plane * f21;
					_this18.z = light.data.raw.far_plane * f21;
					_this18.w = 1.0;
					var _this19 = iron_object_Uniforms.helpMat;
					var loc1 = iron_object_Uniforms.helpVec;
					var quat1 = iron_object_Uniforms.helpQuat;
					var sc1 = iron_object_Uniforms.helpVec2;
					var x3 = quat1.x;
					var y3 = quat1.y;
					var z3 = quat1.z;
					var w1 = quat1.w;
					var x21 = x3 + x3;
					var y21 = y3 + y3;
					var z21 = z3 + z3;
					var xx1 = x3 * x21;
					var xy1 = x3 * y21;
					var xz1 = x3 * z21;
					var yy1 = y3 * y21;
					var yz1 = y3 * z21;
					var zz1 = z3 * z21;
					var wx1 = w1 * x21;
					var wy1 = w1 * y21;
					var wz1 = w1 * z21;
					_this19.self._00 = 1.0 - (yy1 + zz1);
					_this19.self._10 = xy1 - wz1;
					_this19.self._20 = xz1 + wy1;
					_this19.self._01 = xy1 + wz1;
					_this19.self._11 = 1.0 - (xx1 + zz1);
					_this19.self._21 = yz1 - wx1;
					_this19.self._02 = xz1 - wy1;
					_this19.self._12 = yz1 + wx1;
					_this19.self._22 = 1.0 - (xx1 + yy1);
					_this19.self._03 = 0.0;
					_this19.self._13 = 0.0;
					_this19.self._23 = 0.0;
					_this19.self._30 = 0.0;
					_this19.self._31 = 0.0;
					_this19.self._32 = 0.0;
					_this19.self._33 = 1.0;
					var x4 = sc1.x;
					var y4 = sc1.y;
					var z4 = sc1.z;
					_this19.self._00 *= x4;
					_this19.self._01 *= x4;
					_this19.self._02 *= x4;
					_this19.self._03 *= x4;
					_this19.self._10 *= y4;
					_this19.self._11 *= y4;
					_this19.self._12 *= y4;
					_this19.self._13 *= y4;
					_this19.self._20 *= z4;
					_this19.self._21 *= z4;
					_this19.self._22 *= z4;
					_this19.self._23 *= z4;
					_this19.self._30 = loc1.x;
					_this19.self._31 = loc1.y;
					_this19.self._32 = loc1.z;
				}
				var _this20 = iron_object_Uniforms.helpMat;
				var m13 = camera.V;
				var a007 = _this20.self._00;
				var a017 = _this20.self._01;
				var a027 = _this20.self._02;
				var a037 = _this20.self._03;
				var a107 = _this20.self._10;
				var a117 = _this20.self._11;
				var a127 = _this20.self._12;
				var a137 = _this20.self._13;
				var a207 = _this20.self._20;
				var a217 = _this20.self._21;
				var a227 = _this20.self._22;
				var a237 = _this20.self._23;
				var a307 = _this20.self._30;
				var a317 = _this20.self._31;
				var a327 = _this20.self._32;
				var a337 = _this20.self._33;
				var b015 = m13.self._00;
				var b14 = m13.self._10;
				var b23 = m13.self._20;
				var b33 = m13.self._30;
				_this20.self._00 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._10 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._20 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._30 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				b015 = m13.self._01;
				b14 = m13.self._11;
				b23 = m13.self._21;
				b33 = m13.self._31;
				_this20.self._01 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._11 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._21 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._31 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				b015 = m13.self._02;
				b14 = m13.self._12;
				b23 = m13.self._22;
				b33 = m13.self._32;
				_this20.self._02 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._12 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._22 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._32 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				b015 = m13.self._03;
				b14 = m13.self._13;
				b23 = m13.self._23;
				b33 = m13.self._33;
				_this20.self._03 = a007 * b015 + a017 * b14 + a027 * b23 + a037 * b33;
				_this20.self._13 = a107 * b015 + a117 * b14 + a127 * b23 + a137 * b33;
				_this20.self._23 = a207 * b015 + a217 * b14 + a227 * b23 + a237 * b33;
				_this20.self._33 = a307 * b015 + a317 * b14 + a327 * b23 + a337 * b33;
				var _this21 = iron_object_Uniforms.helpMat;
				var m14 = camera.P;
				var a008 = _this21.self._00;
				var a018 = _this21.self._01;
				var a028 = _this21.self._02;
				var a038 = _this21.self._03;
				var a108 = _this21.self._10;
				var a118 = _this21.self._11;
				var a128 = _this21.self._12;
				var a138 = _this21.self._13;
				var a208 = _this21.self._20;
				var a218 = _this21.self._21;
				var a228 = _this21.self._22;
				var a238 = _this21.self._23;
				var a308 = _this21.self._30;
				var a318 = _this21.self._31;
				var a328 = _this21.self._32;
				var a338 = _this21.self._33;
				var b016 = m14.self._00;
				var b15 = m14.self._10;
				var b24 = m14.self._20;
				var b34 = m14.self._30;
				_this21.self._00 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._10 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._20 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._30 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				b016 = m14.self._01;
				b15 = m14.self._11;
				b24 = m14.self._21;
				b34 = m14.self._31;
				_this21.self._01 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._11 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._21 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._31 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				b016 = m14.self._02;
				b15 = m14.self._12;
				b24 = m14.self._22;
				b34 = m14.self._32;
				_this21.self._02 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._12 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._22 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._32 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				b016 = m14.self._03;
				b15 = m14.self._13;
				b24 = m14.self._23;
				b34 = m14.self._33;
				_this21.self._03 = a008 * b016 + a018 * b15 + a028 * b24 + a038 * b34;
				_this21.self._13 = a108 * b016 + a118 * b15 + a128 * b24 + a138 * b34;
				_this21.self._23 = a208 * b016 + a218 * b15 + a228 * b24 + a238 * b34;
				_this21.self._33 = a308 * b016 + a318 * b15 + a328 * b24 + a338 * b34;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_skydomeMatrix") {
			var tr1 = camera.transform;
			var _this22 = iron_object_Uniforms.helpVec;
			_this22.x = tr1.world.self._30;
			_this22.y = tr1.world.self._31;
			_this22.z = tr1.world.self._32 - 3.5;
			_this22.w = 1.0;
			var bounds = camera.data.raw.far_plane * 0.95;
			var _this23 = iron_object_Uniforms.helpVec2;
			_this23.x = bounds;
			_this23.y = bounds;
			_this23.z = bounds;
			_this23.w = 1.0;
			var _this24 = iron_object_Uniforms.helpMat;
			var loc2 = iron_object_Uniforms.helpVec;
			var quat2 = iron_object_Uniforms.helpQuat;
			var sc2 = iron_object_Uniforms.helpVec2;
			var x5 = quat2.x;
			var y5 = quat2.y;
			var z5 = quat2.z;
			var w2 = quat2.w;
			var x22 = x5 + x5;
			var y22 = y5 + y5;
			var z22 = z5 + z5;
			var xx2 = x5 * x22;
			var xy2 = x5 * y22;
			var xz2 = x5 * z22;
			var yy2 = y5 * y22;
			var yz2 = y5 * z22;
			var zz2 = z5 * z22;
			var wx2 = w2 * x22;
			var wy2 = w2 * y22;
			var wz2 = w2 * z22;
			_this24.self._00 = 1.0 - (yy2 + zz2);
			_this24.self._10 = xy2 - wz2;
			_this24.self._20 = xz2 + wy2;
			_this24.self._01 = xy2 + wz2;
			_this24.self._11 = 1.0 - (xx2 + zz2);
			_this24.self._21 = yz2 - wx2;
			_this24.self._02 = xz2 - wy2;
			_this24.self._12 = yz2 + wx2;
			_this24.self._22 = 1.0 - (xx2 + yy2);
			_this24.self._03 = 0.0;
			_this24.self._13 = 0.0;
			_this24.self._23 = 0.0;
			_this24.self._30 = 0.0;
			_this24.self._31 = 0.0;
			_this24.self._32 = 0.0;
			_this24.self._33 = 1.0;
			var x6 = sc2.x;
			var y6 = sc2.y;
			var z6 = sc2.z;
			_this24.self._00 *= x6;
			_this24.self._01 *= x6;
			_this24.self._02 *= x6;
			_this24.self._03 *= x6;
			_this24.self._10 *= y6;
			_this24.self._11 *= y6;
			_this24.self._12 *= y6;
			_this24.self._13 *= y6;
			_this24.self._20 *= z6;
			_this24.self._21 *= z6;
			_this24.self._22 *= z6;
			_this24.self._23 *= z6;
			_this24.self._30 = loc2.x;
			_this24.self._31 = loc2.y;
			_this24.self._32 = loc2.z;
			var _this25 = iron_object_Uniforms.helpMat;
			var m15 = camera.V;
			var a009 = _this25.self._00;
			var a019 = _this25.self._01;
			var a029 = _this25.self._02;
			var a039 = _this25.self._03;
			var a109 = _this25.self._10;
			var a119 = _this25.self._11;
			var a129 = _this25.self._12;
			var a139 = _this25.self._13;
			var a209 = _this25.self._20;
			var a219 = _this25.self._21;
			var a229 = _this25.self._22;
			var a239 = _this25.self._23;
			var a309 = _this25.self._30;
			var a319 = _this25.self._31;
			var a329 = _this25.self._32;
			var a339 = _this25.self._33;
			var b017 = m15.self._00;
			var b16 = m15.self._10;
			var b25 = m15.self._20;
			var b35 = m15.self._30;
			_this25.self._00 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._10 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._20 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._30 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			b017 = m15.self._01;
			b16 = m15.self._11;
			b25 = m15.self._21;
			b35 = m15.self._31;
			_this25.self._01 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._11 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._21 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._31 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			b017 = m15.self._02;
			b16 = m15.self._12;
			b25 = m15.self._22;
			b35 = m15.self._32;
			_this25.self._02 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._12 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._22 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._32 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			b017 = m15.self._03;
			b16 = m15.self._13;
			b25 = m15.self._23;
			b35 = m15.self._33;
			_this25.self._03 = a009 * b017 + a019 * b16 + a029 * b25 + a039 * b35;
			_this25.self._13 = a109 * b017 + a119 * b16 + a129 * b25 + a139 * b35;
			_this25.self._23 = a209 * b017 + a219 * b16 + a229 * b25 + a239 * b35;
			_this25.self._33 = a309 * b017 + a319 * b16 + a329 * b25 + a339 * b35;
			var _this26 = iron_object_Uniforms.helpMat;
			var m16 = camera.P;
			var a0010 = _this26.self._00;
			var a0110 = _this26.self._01;
			var a0210 = _this26.self._02;
			var a0310 = _this26.self._03;
			var a1010 = _this26.self._10;
			var a1110 = _this26.self._11;
			var a1210 = _this26.self._12;
			var a1310 = _this26.self._13;
			var a2010 = _this26.self._20;
			var a2110 = _this26.self._21;
			var a2210 = _this26.self._22;
			var a2310 = _this26.self._23;
			var a3010 = _this26.self._30;
			var a3110 = _this26.self._31;
			var a3210 = _this26.self._32;
			var a3310 = _this26.self._33;
			var b018 = m16.self._00;
			var b17 = m16.self._10;
			var b26 = m16.self._20;
			var b36 = m16.self._30;
			_this26.self._00 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._10 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._20 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._30 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			b018 = m16.self._01;
			b17 = m16.self._11;
			b26 = m16.self._21;
			b36 = m16.self._31;
			_this26.self._01 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._11 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._21 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._31 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			b018 = m16.self._02;
			b17 = m16.self._12;
			b26 = m16.self._22;
			b36 = m16.self._32;
			_this26.self._02 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._12 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._22 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._32 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			b018 = m16.self._03;
			b17 = m16.self._13;
			b26 = m16.self._23;
			b36 = m16.self._33;
			_this26.self._03 = a0010 * b018 + a0110 * b17 + a0210 * b26 + a0310 * b36;
			_this26.self._13 = a1010 * b018 + a1110 * b17 + a1210 * b26 + a1310 * b36;
			_this26.self._23 = a2010 * b018 + a2110 * b17 + a2210 * b26 + a2310 * b36;
			_this26.self._33 = a3010 * b018 + a3110 * b17 + a3210 * b26 + a3310 * b36;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lightViewMatrix") {
			if(light != null) {
				m = light.V;
			}
		} else if(c.link == "_lightProjectionMatrix") {
			if(light != null) {
				m = light.P;
			}
		}
		if(m != null) {
			g.setMatrix(location,m.self);
			return true;
		}
	} else if(c.type == "vec4") {
		var v = null;
		var _this27 = iron_object_Uniforms.helpVec;
		_this27.x = 0;
		_this27.y = 0;
		_this27.z = 0;
		_this27.w = 1.0;
		if(v != null) {
			g.setFloat4(location,v.x,v.y,v.z,v.w);
			return true;
		}
	} else if(c.type == "vec3") {
		var v1 = null;
		var _this28 = iron_object_Uniforms.helpVec;
		_this28.x = 0;
		_this28.y = 0;
		_this28.z = 0;
		_this28.w = 1.0;
		if(c.link == "_lightPosition") {
			if(light != null) {
				var _this29 = iron_object_Uniforms.helpVec;
				_this29.x = light.transform.world.self._30;
				_this29.y = light.transform.world.self._31;
				_this29.z = light.transform.world.self._32;
				_this29.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightDirection") {
			if(light != null) {
				iron_object_Uniforms.helpVec = new iron_math_Vec4(light.V.self._02,light.V.self._12,light.V.self._22);
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightColor") {
			if(light != null) {
				var str = light.data.raw.strength;
				var _this30 = iron_object_Uniforms.helpVec;
				var y7 = light.data.raw.color[1] * str;
				var z7 = light.data.raw.color[2] * str;
				_this30.x = light.data.raw.color[0] * str;
				_this30.y = y7;
				_this30.z = z7;
				_this30.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightArea0") {
			if(light != null && light.data.raw.size != null) {
				var f22 = 0.5;
				var sx = light.data.raw.size * f22;
				var sy = light.data.raw.size_y * f22;
				var _this31 = iron_object_Uniforms.helpVec;
				_this31.x = -sx;
				_this31.y = sy;
				_this31.z = 0.0;
				_this31.w = 1.0;
				var _this32 = iron_object_Uniforms.helpVec;
				var m17 = light.transform.world;
				var x7 = _this32.x;
				var y8 = _this32.y;
				var z8 = _this32.z;
				_this32.x = m17.self._00 * x7 + m17.self._10 * y8 + m17.self._20 * z8 + m17.self._30;
				_this32.y = m17.self._01 * x7 + m17.self._11 * y8 + m17.self._21 * z8 + m17.self._31;
				_this32.z = m17.self._02 * x7 + m17.self._12 * y8 + m17.self._22 * z8 + m17.self._32;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightArea1") {
			if(light != null && light.data.raw.size != null) {
				var f23 = 0.5;
				var sx1 = light.data.raw.size * f23;
				var sy1 = light.data.raw.size_y * f23;
				var _this33 = iron_object_Uniforms.helpVec;
				_this33.x = sx1;
				_this33.y = sy1;
				_this33.z = 0.0;
				_this33.w = 1.0;
				var _this34 = iron_object_Uniforms.helpVec;
				var m18 = light.transform.world;
				var x8 = _this34.x;
				var y9 = _this34.y;
				var z9 = _this34.z;
				_this34.x = m18.self._00 * x8 + m18.self._10 * y9 + m18.self._20 * z9 + m18.self._30;
				_this34.y = m18.self._01 * x8 + m18.self._11 * y9 + m18.self._21 * z9 + m18.self._31;
				_this34.z = m18.self._02 * x8 + m18.self._12 * y9 + m18.self._22 * z9 + m18.self._32;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightArea2") {
			if(light != null && light.data.raw.size != null) {
				var f24 = 0.5;
				var sx2 = light.data.raw.size * f24;
				var sy2 = light.data.raw.size_y * f24;
				var _this35 = iron_object_Uniforms.helpVec;
				_this35.x = sx2;
				_this35.y = -sy2;
				_this35.z = 0.0;
				_this35.w = 1.0;
				var _this36 = iron_object_Uniforms.helpVec;
				var m19 = light.transform.world;
				var x9 = _this36.x;
				var y10 = _this36.y;
				var z10 = _this36.z;
				_this36.x = m19.self._00 * x9 + m19.self._10 * y10 + m19.self._20 * z10 + m19.self._30;
				_this36.y = m19.self._01 * x9 + m19.self._11 * y10 + m19.self._21 * z10 + m19.self._31;
				_this36.z = m19.self._02 * x9 + m19.self._12 * y10 + m19.self._22 * z10 + m19.self._32;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lightArea3") {
			if(light != null && light.data.raw.size != null) {
				var f25 = 0.5;
				var sx3 = light.data.raw.size * f25;
				var sy3 = light.data.raw.size_y * f25;
				var _this37 = iron_object_Uniforms.helpVec;
				_this37.x = -sx3;
				_this37.y = -sy3;
				_this37.z = 0.0;
				_this37.w = 1.0;
				var _this38 = iron_object_Uniforms.helpVec;
				var m20 = light.transform.world;
				var x10 = _this38.x;
				var y11 = _this38.y;
				var z11 = _this38.z;
				_this38.x = m20.self._00 * x10 + m20.self._10 * y11 + m20.self._20 * z11 + m20.self._30;
				_this38.y = m20.self._01 * x10 + m20.self._11 * y11 + m20.self._21 * z11 + m20.self._31;
				_this38.z = m20.self._02 * x10 + m20.self._12 * y11 + m20.self._22 * z11 + m20.self._32;
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_cameraPosition") {
			var _this39 = iron_object_Uniforms.helpVec;
			_this39.x = camera.transform.world.self._30;
			_this39.y = camera.transform.world.self._31;
			_this39.z = camera.transform.world.self._32;
			_this39.w = 1.0;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_cameraLook") {
			iron_object_Uniforms.helpVec = new iron_math_Vec4(-camera.transform.world.self._20,-camera.transform.world.self._21,-camera.transform.world.self._22);
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_cameraUp") {
			iron_object_Uniforms.helpVec = new iron_math_Vec4(camera.transform.world.self._10,camera.transform.world.self._11,camera.transform.world.self._12);
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_cameraRight") {
			iron_object_Uniforms.helpVec = new iron_math_Vec4(camera.transform.world.self._00,camera.transform.world.self._01,camera.transform.world.self._02);
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_backgroundCol") {
			if(camera.data.raw.clear_color != null) {
				var _this40 = iron_object_Uniforms.helpVec;
				var y12 = camera.data.raw.clear_color[1];
				var z12 = camera.data.raw.clear_color[2];
				_this40.x = camera.data.raw.clear_color[0];
				_this40.y = y12;
				_this40.z = z12;
				_this40.w = 1.0;
			}
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_sunDirection") {
			var w3 = iron_Scene.active.world;
			if(w3 != null) {
				var _this41 = iron_object_Uniforms.helpVec;
				var y13 = w3.raw.sun_direction[1];
				var z13 = w3.raw.sun_direction[2];
				_this41.x = w3.raw.sun_direction[0];
				_this41.y = y13;
				_this41.z = z13;
				_this41.w = 1.0;
				v1 = iron_object_Uniforms.helpVec;
			}
		}
		if(v1 != null) {
			g.setFloat3(location,v1.x,v1.y,v1.z);
			return true;
		}
	} else if(c.type == "vec2") {
		var v2 = null;
		var _this42 = iron_object_Uniforms.helpVec;
		_this42.x = 0;
		_this42.y = 0;
		_this42.z = 0;
		_this42.w = 1.0;
		if(c.link == "_vec2x") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0;
			v2.y = 0.0;
		} else if(c.link == "_vec2xInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0 / iron_RenderPath.active.currentW;
			v2.y = 0.0;
		} else if(c.link == "_vec2x2") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 2.0;
			v2.y = 0.0;
		} else if(c.link == "_vec2x2Inv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 2.0 / iron_RenderPath.active.currentW;
			v2.y = 0.0;
		} else if(c.link == "_vec2y") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 1.0;
		} else if(c.link == "_vec2yInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 1.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_vec2y2") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 2.0;
		} else if(c.link == "_vec2y2Inv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 2.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_vec2y3") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 3.0;
		} else if(c.link == "_vec2y3Inv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 0.0;
			v2.y = 3.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_windowSize") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = kha_System.windowWidth();
			v2.y = kha_System.windowHeight();
		} else if(c.link == "_windowSizeInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0 / kha_System.windowWidth();
			v2.y = 1.0 / kha_System.windowHeight();
		} else if(c.link == "_screenSize") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = iron_RenderPath.active.currentW;
			v2.y = iron_RenderPath.active.currentH;
		} else if(c.link == "_screenSizeInv") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = 1.0 / iron_RenderPath.active.currentW;
			v2.y = 1.0 / iron_RenderPath.active.currentH;
		} else if(c.link == "_aspectRatio") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = iron_RenderPath.active.currentH / iron_RenderPath.active.currentW;
			v2.y = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
			v2.x = v2.x > 1.0 ? 1.0 : v2.x;
			v2.y = v2.y > 1.0 ? 1.0 : v2.y;
		} else if(c.link == "_cameraPlane") {
			v2 = iron_object_Uniforms.helpVec;
			v2.x = camera.data.raw.near_plane;
			v2.y = camera.data.raw.far_plane;
		} else if(c.link == "_cameraPlaneProj") {
			var near = camera.data.raw.near_plane;
			var far = camera.data.raw.far_plane;
			v2 = iron_object_Uniforms.helpVec;
			v2.x = far / (far - near);
			v2.y = -far * near / (far - near);
		} else if(c.link == "_lightPlane") {
			if(light != null) {
				v2 = iron_object_Uniforms.helpVec;
				v2.x = light.data.raw.near_plane;
				v2.y = light.data.raw.far_plane;
			}
		} else if(c.link == "_lightPlaneProj") {
			if(light != null) {
				var near1 = light.data.raw.near_plane;
				var far1 = light.data.raw.far_plane;
				var a = far1 + near1;
				var b = far1 - near1;
				var f26 = 2.0;
				var c1 = f26 * far1 * near1;
				v2 = iron_object_Uniforms.helpVec;
				v2.x = a / b;
				v2.y = c1 / b;
			}
		} else if(c.link == "_spotlightData") {
			if(light != null) {
				v2 = iron_object_Uniforms.helpVec;
				v2.x = light.data.raw.spot_size;
				v2.y = v2.x - light.data.raw.spot_blend;
			}
		} else if(c.link == "_shadowMapSize") {
			if(light != null && light.data.raw.cast_shadow) {
				v2 = iron_object_Uniforms.helpVec;
				v2.x = v2.y = light.data.raw.shadowmap_size;
			}
		}
		if(v2 != null) {
			g.setFloat2(location,v2.x,v2.y);
			return true;
		}
	} else if(c.type == "float") {
		var f3 = null;
		if(c.link == "_time") {
			f3 = kha_Scheduler.time();
		} else if(c.link == "_deltaTime") {
			f3 = 0.0166666666666666664 * iron_system_Time.scale;
		} else if(c.link == "_lightRadius") {
			f3 = light == null ? 0.0 : light.data.raw.far_plane;
		} else if(c.link == "_lightShadowsBias") {
			f3 = light == null ? 0.0 : light.data.raw.shadows_bias;
		} else if(c.link == "_lightSize") {
			if(light != null && light.data.raw.light_size != null) {
				f3 = light.data.raw.light_size;
			}
		} else if(c.link == "_envmapStrength") {
			f3 = iron_Scene.active.world == null ? 0.0 : iron_Scene.active.world.probe.raw.strength;
		} else if(c.link == "_aspectRatioF") {
			f3 = iron_RenderPath.active.currentW / iron_RenderPath.active.currentH;
		} else if(c.link == "_aspectRatioWindowF") {
			f3 = kha_System.windowWidth() / kha_System.windowHeight();
		} else if(c.link == "_frameScale") {
			f3 = iron_RenderPath.active.frameTime / (0.0166666666666666664 * iron_system_Time.scale);
		}
		if(f3 != null) {
			g.setFloat(location,f3);
			return true;
		}
	} else if(c.type == "floats") {
		var fa = null;
		if(c.link == "_envmapIrradiance") {
			fa = iron_Scene.active.world == null ? iron_data_WorldData.getEmptyIrradiance() : iron_Scene.active.world.probe.irradiance;
		}
		if(fa != null) {
			g.setFloats(location,fa);
			return true;
		}
	} else if(c.type == "int") {
		var i = null;
		if(c.link == "_lightType") {
			if(light == null) {
				i = 0;
			} else {
				switch(light.data.raw.type) {
				case "area":
					i = 3;
					break;
				case "point":
					i = 1;
					break;
				case "spot":
					i = 2;
					break;
				case "sun":
					i = 0;
					break;
				default:
					i = 0;
				}
			}
		} else if(c.link == "_lightIndex") {
			i = iron_RenderPath.active.currentLightIndex;
		} else if(c.link == "_lightCastShadow") {
			if(light != null && light.data.raw.cast_shadow) {
				i = light.data.raw.shadowmap_cube ? 2 : 1;
			} else {
				i = 0;
			}
		} else if(c.link == "_envmapNumMipmaps") {
			var w4 = iron_Scene.active.world;
			i = w4 != null ? w4.probe.raw.radiance_mipmaps + 1 - 2 : 1;
		}
		if(i != null) {
			g.setInt(location,i);
			return true;
		}
	}
	return false;
};
iron_object_Uniforms.setObjectConstant = function(g,object,camera,light,location,c) {
	if(c.link == null) {
		return;
	}
	if(c.type == "mat4") {
		var m = null;
		if(c.link == "_worldMatrix") {
			m = object.transform.world;
		} else if(c.link == "_inverseWorldMatrix") {
			var _this = iron_object_Uniforms.helpMat;
			var m1 = object.transform.world;
			var a00 = m1.self._00;
			var a01 = m1.self._01;
			var a02 = m1.self._02;
			var a03 = m1.self._03;
			var a10 = m1.self._10;
			var a11 = m1.self._11;
			var a12 = m1.self._12;
			var a13 = m1.self._13;
			var a20 = m1.self._20;
			var a21 = m1.self._21;
			var a22 = m1.self._22;
			var a23 = m1.self._23;
			var a30 = m1.self._30;
			var a31 = m1.self._31;
			var a32 = m1.self._32;
			var a33 = m1.self._33;
			var b00 = a00 * a11 - a01 * a10;
			var b01 = a00 * a12 - a02 * a10;
			var b02 = a00 * a13 - a03 * a10;
			var b03 = a01 * a12 - a02 * a11;
			var b04 = a01 * a13 - a03 * a11;
			var b05 = a02 * a13 - a03 * a12;
			var b06 = a20 * a31 - a21 * a30;
			var b07 = a20 * a32 - a22 * a30;
			var b08 = a20 * a33 - a23 * a30;
			var b09 = a21 * a32 - a22 * a31;
			var b10 = a21 * a33 - a23 * a31;
			var b11 = a22 * a33 - a23 * a32;
			var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
			if(det == 0.0) {
				_this.self._00 = 1.0;
				_this.self._01 = 0.0;
				_this.self._02 = 0.0;
				_this.self._03 = 0.0;
				_this.self._10 = 0.0;
				_this.self._11 = 1.0;
				_this.self._12 = 0.0;
				_this.self._13 = 0.0;
				_this.self._20 = 0.0;
				_this.self._21 = 0.0;
				_this.self._22 = 1.0;
				_this.self._23 = 0.0;
				_this.self._30 = 0.0;
				_this.self._31 = 0.0;
				_this.self._32 = 0.0;
				_this.self._33 = 1.0;
			} else {
				det = 1.0 / det;
				_this.self._00 = (a11 * b11 - a12 * b10 + a13 * b09) * det;
				_this.self._01 = (a02 * b10 - a01 * b11 - a03 * b09) * det;
				_this.self._02 = (a31 * b05 - a32 * b04 + a33 * b03) * det;
				_this.self._03 = (a22 * b04 - a21 * b05 - a23 * b03) * det;
				_this.self._10 = (a12 * b08 - a10 * b11 - a13 * b07) * det;
				_this.self._11 = (a00 * b11 - a02 * b08 + a03 * b07) * det;
				_this.self._12 = (a32 * b02 - a30 * b05 - a33 * b01) * det;
				_this.self._13 = (a20 * b05 - a22 * b02 + a23 * b01) * det;
				_this.self._20 = (a10 * b10 - a11 * b08 + a13 * b06) * det;
				_this.self._21 = (a01 * b08 - a00 * b10 - a03 * b06) * det;
				_this.self._22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;
				_this.self._23 = (a21 * b02 - a20 * b04 - a23 * b00) * det;
				_this.self._30 = (a11 * b07 - a10 * b09 - a12 * b06) * det;
				_this.self._31 = (a00 * b09 - a01 * b07 + a02 * b06) * det;
				_this.self._32 = (a31 * b01 - a30 * b03 - a32 * b00) * det;
				_this.self._33 = (a20 * b03 - a21 * b01 + a22 * b00) * det;
			}
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewProjectionMatrix") {
			var _this1 = iron_object_Uniforms.helpMat;
			var m2 = object.transform.world;
			_this1.self._00 = m2.self._00;
			_this1.self._01 = m2.self._01;
			_this1.self._02 = m2.self._02;
			_this1.self._03 = m2.self._03;
			_this1.self._10 = m2.self._10;
			_this1.self._11 = m2.self._11;
			_this1.self._12 = m2.self._12;
			_this1.self._13 = m2.self._13;
			_this1.self._20 = m2.self._20;
			_this1.self._21 = m2.self._21;
			_this1.self._22 = m2.self._22;
			_this1.self._23 = m2.self._23;
			_this1.self._30 = m2.self._30;
			_this1.self._31 = m2.self._31;
			_this1.self._32 = m2.self._32;
			_this1.self._33 = m2.self._33;
			var _this2 = iron_object_Uniforms.helpMat;
			var m3 = camera.V;
			var a001 = _this2.self._00;
			var a011 = _this2.self._01;
			var a021 = _this2.self._02;
			var a031 = _this2.self._03;
			var a101 = _this2.self._10;
			var a111 = _this2.self._11;
			var a121 = _this2.self._12;
			var a131 = _this2.self._13;
			var a201 = _this2.self._20;
			var a211 = _this2.self._21;
			var a221 = _this2.self._22;
			var a231 = _this2.self._23;
			var a301 = _this2.self._30;
			var a311 = _this2.self._31;
			var a321 = _this2.self._32;
			var a331 = _this2.self._33;
			var b0 = m3.self._00;
			var b1 = m3.self._10;
			var b2 = m3.self._20;
			var b3 = m3.self._30;
			_this2.self._00 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._10 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._20 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._30 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = m3.self._01;
			b1 = m3.self._11;
			b2 = m3.self._21;
			b3 = m3.self._31;
			_this2.self._01 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._11 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._21 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._31 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = m3.self._02;
			b1 = m3.self._12;
			b2 = m3.self._22;
			b3 = m3.self._32;
			_this2.self._02 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._12 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._22 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._32 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			b0 = m3.self._03;
			b1 = m3.self._13;
			b2 = m3.self._23;
			b3 = m3.self._33;
			_this2.self._03 = a001 * b0 + a011 * b1 + a021 * b2 + a031 * b3;
			_this2.self._13 = a101 * b0 + a111 * b1 + a121 * b2 + a131 * b3;
			_this2.self._23 = a201 * b0 + a211 * b1 + a221 * b2 + a231 * b3;
			_this2.self._33 = a301 * b0 + a311 * b1 + a321 * b2 + a331 * b3;
			var _this3 = iron_object_Uniforms.helpMat;
			var m4 = camera.P;
			var a002 = _this3.self._00;
			var a012 = _this3.self._01;
			var a022 = _this3.self._02;
			var a032 = _this3.self._03;
			var a102 = _this3.self._10;
			var a112 = _this3.self._11;
			var a122 = _this3.self._12;
			var a132 = _this3.self._13;
			var a202 = _this3.self._20;
			var a212 = _this3.self._21;
			var a222 = _this3.self._22;
			var a232 = _this3.self._23;
			var a302 = _this3.self._30;
			var a312 = _this3.self._31;
			var a322 = _this3.self._32;
			var a332 = _this3.self._33;
			var b010 = m4.self._00;
			var b12 = m4.self._10;
			var b21 = m4.self._20;
			var b31 = m4.self._30;
			_this3.self._00 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._10 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._20 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._30 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			b010 = m4.self._01;
			b12 = m4.self._11;
			b21 = m4.self._21;
			b31 = m4.self._31;
			_this3.self._01 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._11 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._21 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._31 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			b010 = m4.self._02;
			b12 = m4.self._12;
			b21 = m4.self._22;
			b31 = m4.self._32;
			_this3.self._02 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._12 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._22 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._32 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			b010 = m4.self._03;
			b12 = m4.self._13;
			b21 = m4.self._23;
			b31 = m4.self._33;
			_this3.self._03 = a002 * b010 + a012 * b12 + a022 * b21 + a032 * b31;
			_this3.self._13 = a102 * b010 + a112 * b12 + a122 * b21 + a132 * b31;
			_this3.self._23 = a202 * b010 + a212 * b12 + a222 * b21 + a232 * b31;
			_this3.self._33 = a302 * b010 + a312 * b12 + a322 * b21 + a332 * b31;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewProjectionMatrixSphere") {
			var _this4 = iron_object_Uniforms.helpMat;
			var m5 = object.transform.world;
			_this4.self._00 = m5.self._00;
			_this4.self._01 = m5.self._01;
			_this4.self._02 = m5.self._02;
			_this4.self._03 = m5.self._03;
			_this4.self._10 = m5.self._10;
			_this4.self._11 = m5.self._11;
			_this4.self._12 = m5.self._12;
			_this4.self._13 = m5.self._13;
			_this4.self._20 = m5.self._20;
			_this4.self._21 = m5.self._21;
			_this4.self._22 = m5.self._22;
			_this4.self._23 = m5.self._23;
			_this4.self._30 = m5.self._30;
			_this4.self._31 = m5.self._31;
			_this4.self._32 = m5.self._32;
			_this4.self._33 = m5.self._33;
			var _this5 = iron_object_Uniforms.helpMat;
			var m6 = camera.V;
			var a003 = _this5.self._00;
			var a013 = _this5.self._01;
			var a023 = _this5.self._02;
			var a033 = _this5.self._03;
			var a103 = _this5.self._10;
			var a113 = _this5.self._11;
			var a123 = _this5.self._12;
			var a133 = _this5.self._13;
			var a203 = _this5.self._20;
			var a213 = _this5.self._21;
			var a223 = _this5.self._22;
			var a233 = _this5.self._23;
			var a303 = _this5.self._30;
			var a313 = _this5.self._31;
			var a323 = _this5.self._32;
			var a333 = _this5.self._33;
			var b011 = m6.self._00;
			var b13 = m6.self._10;
			var b22 = m6.self._20;
			var b32 = m6.self._30;
			_this5.self._00 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._10 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._20 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._30 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			b011 = m6.self._01;
			b13 = m6.self._11;
			b22 = m6.self._21;
			b32 = m6.self._31;
			_this5.self._01 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._11 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._21 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._31 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			b011 = m6.self._02;
			b13 = m6.self._12;
			b22 = m6.self._22;
			b32 = m6.self._32;
			_this5.self._02 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._12 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._22 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._32 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			b011 = m6.self._03;
			b13 = m6.self._13;
			b22 = m6.self._23;
			b32 = m6.self._33;
			_this5.self._03 = a003 * b011 + a013 * b13 + a023 * b22 + a033 * b32;
			_this5.self._13 = a103 * b011 + a113 * b13 + a123 * b22 + a133 * b32;
			_this5.self._23 = a203 * b011 + a213 * b13 + a223 * b22 + a233 * b32;
			_this5.self._33 = a303 * b011 + a313 * b13 + a323 * b22 + a333 * b32;
			iron_object_Uniforms.helpMat.self._00 = 1.0;
			iron_object_Uniforms.helpMat.self._10 = 0.0;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._11 = 1.0;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._12 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = 1.0;
			var _this6 = iron_object_Uniforms.helpMat;
			var m7 = camera.P;
			var a004 = _this6.self._00;
			var a014 = _this6.self._01;
			var a024 = _this6.self._02;
			var a034 = _this6.self._03;
			var a104 = _this6.self._10;
			var a114 = _this6.self._11;
			var a124 = _this6.self._12;
			var a134 = _this6.self._13;
			var a204 = _this6.self._20;
			var a214 = _this6.self._21;
			var a224 = _this6.self._22;
			var a234 = _this6.self._23;
			var a304 = _this6.self._30;
			var a314 = _this6.self._31;
			var a324 = _this6.self._32;
			var a334 = _this6.self._33;
			var b012 = m7.self._00;
			var b14 = m7.self._10;
			var b23 = m7.self._20;
			var b33 = m7.self._30;
			_this6.self._00 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._10 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._20 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._30 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			b012 = m7.self._01;
			b14 = m7.self._11;
			b23 = m7.self._21;
			b33 = m7.self._31;
			_this6.self._01 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._11 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._21 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._31 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			b012 = m7.self._02;
			b14 = m7.self._12;
			b23 = m7.self._22;
			b33 = m7.self._32;
			_this6.self._02 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._12 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._22 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._32 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			b012 = m7.self._03;
			b14 = m7.self._13;
			b23 = m7.self._23;
			b33 = m7.self._33;
			_this6.self._03 = a004 * b012 + a014 * b14 + a024 * b23 + a034 * b33;
			_this6.self._13 = a104 * b012 + a114 * b14 + a124 * b23 + a134 * b33;
			_this6.self._23 = a204 * b012 + a214 * b14 + a224 * b23 + a234 * b33;
			_this6.self._33 = a304 * b012 + a314 * b14 + a324 * b23 + a334 * b33;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewProjectionMatrixCylinder") {
			var _this7 = iron_object_Uniforms.helpMat;
			var m8 = object.transform.world;
			_this7.self._00 = m8.self._00;
			_this7.self._01 = m8.self._01;
			_this7.self._02 = m8.self._02;
			_this7.self._03 = m8.self._03;
			_this7.self._10 = m8.self._10;
			_this7.self._11 = m8.self._11;
			_this7.self._12 = m8.self._12;
			_this7.self._13 = m8.self._13;
			_this7.self._20 = m8.self._20;
			_this7.self._21 = m8.self._21;
			_this7.self._22 = m8.self._22;
			_this7.self._23 = m8.self._23;
			_this7.self._30 = m8.self._30;
			_this7.self._31 = m8.self._31;
			_this7.self._32 = m8.self._32;
			_this7.self._33 = m8.self._33;
			var _this8 = iron_object_Uniforms.helpMat;
			var m9 = camera.V;
			var a005 = _this8.self._00;
			var a015 = _this8.self._01;
			var a025 = _this8.self._02;
			var a035 = _this8.self._03;
			var a105 = _this8.self._10;
			var a115 = _this8.self._11;
			var a125 = _this8.self._12;
			var a135 = _this8.self._13;
			var a205 = _this8.self._20;
			var a215 = _this8.self._21;
			var a225 = _this8.self._22;
			var a235 = _this8.self._23;
			var a305 = _this8.self._30;
			var a315 = _this8.self._31;
			var a325 = _this8.self._32;
			var a335 = _this8.self._33;
			var b013 = m9.self._00;
			var b15 = m9.self._10;
			var b24 = m9.self._20;
			var b34 = m9.self._30;
			_this8.self._00 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._10 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._20 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._30 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			b013 = m9.self._01;
			b15 = m9.self._11;
			b24 = m9.self._21;
			b34 = m9.self._31;
			_this8.self._01 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._11 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._21 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._31 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			b013 = m9.self._02;
			b15 = m9.self._12;
			b24 = m9.self._22;
			b34 = m9.self._32;
			_this8.self._02 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._12 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._22 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._32 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			b013 = m9.self._03;
			b15 = m9.self._13;
			b24 = m9.self._23;
			b34 = m9.self._33;
			_this8.self._03 = a005 * b013 + a015 * b15 + a025 * b24 + a035 * b34;
			_this8.self._13 = a105 * b013 + a115 * b15 + a125 * b24 + a135 * b34;
			_this8.self._23 = a205 * b013 + a215 * b15 + a225 * b24 + a235 * b34;
			_this8.self._33 = a305 * b013 + a315 * b15 + a325 * b24 + a335 * b34;
			iron_object_Uniforms.helpMat.self._00 = 1.0;
			iron_object_Uniforms.helpMat.self._20 = 0.0;
			iron_object_Uniforms.helpMat.self._01 = 0.0;
			iron_object_Uniforms.helpMat.self._21 = 0.0;
			iron_object_Uniforms.helpMat.self._02 = 0.0;
			iron_object_Uniforms.helpMat.self._22 = 1.0;
			var _this9 = iron_object_Uniforms.helpMat;
			var m10 = camera.P;
			var a006 = _this9.self._00;
			var a016 = _this9.self._01;
			var a026 = _this9.self._02;
			var a036 = _this9.self._03;
			var a106 = _this9.self._10;
			var a116 = _this9.self._11;
			var a126 = _this9.self._12;
			var a136 = _this9.self._13;
			var a206 = _this9.self._20;
			var a216 = _this9.self._21;
			var a226 = _this9.self._22;
			var a236 = _this9.self._23;
			var a306 = _this9.self._30;
			var a316 = _this9.self._31;
			var a326 = _this9.self._32;
			var a336 = _this9.self._33;
			var b014 = m10.self._00;
			var b16 = m10.self._10;
			var b25 = m10.self._20;
			var b35 = m10.self._30;
			_this9.self._00 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._10 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._20 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._30 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			b014 = m10.self._01;
			b16 = m10.self._11;
			b25 = m10.self._21;
			b35 = m10.self._31;
			_this9.self._01 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._11 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._21 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._31 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			b014 = m10.self._02;
			b16 = m10.self._12;
			b25 = m10.self._22;
			b35 = m10.self._32;
			_this9.self._02 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._12 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._22 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._32 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			b014 = m10.self._03;
			b16 = m10.self._13;
			b25 = m10.self._23;
			b35 = m10.self._33;
			_this9.self._03 = a006 * b014 + a016 * b16 + a026 * b25 + a036 * b35;
			_this9.self._13 = a106 * b014 + a116 * b16 + a126 * b25 + a136 * b35;
			_this9.self._23 = a206 * b014 + a216 * b16 + a226 * b25 + a236 * b35;
			_this9.self._33 = a306 * b014 + a316 * b16 + a326 * b25 + a336 * b35;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewMatrix") {
			var _this10 = iron_object_Uniforms.helpMat;
			var m11 = object.transform.world;
			_this10.self._00 = m11.self._00;
			_this10.self._01 = m11.self._01;
			_this10.self._02 = m11.self._02;
			_this10.self._03 = m11.self._03;
			_this10.self._10 = m11.self._10;
			_this10.self._11 = m11.self._11;
			_this10.self._12 = m11.self._12;
			_this10.self._13 = m11.self._13;
			_this10.self._20 = m11.self._20;
			_this10.self._21 = m11.self._21;
			_this10.self._22 = m11.self._22;
			_this10.self._23 = m11.self._23;
			_this10.self._30 = m11.self._30;
			_this10.self._31 = m11.self._31;
			_this10.self._32 = m11.self._32;
			_this10.self._33 = m11.self._33;
			var _this11 = iron_object_Uniforms.helpMat;
			var m12 = camera.V;
			var a007 = _this11.self._00;
			var a017 = _this11.self._01;
			var a027 = _this11.self._02;
			var a037 = _this11.self._03;
			var a107 = _this11.self._10;
			var a117 = _this11.self._11;
			var a127 = _this11.self._12;
			var a137 = _this11.self._13;
			var a207 = _this11.self._20;
			var a217 = _this11.self._21;
			var a227 = _this11.self._22;
			var a237 = _this11.self._23;
			var a307 = _this11.self._30;
			var a317 = _this11.self._31;
			var a327 = _this11.self._32;
			var a337 = _this11.self._33;
			var b015 = m12.self._00;
			var b17 = m12.self._10;
			var b26 = m12.self._20;
			var b36 = m12.self._30;
			_this11.self._00 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._10 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._20 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._30 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			b015 = m12.self._01;
			b17 = m12.self._11;
			b26 = m12.self._21;
			b36 = m12.self._31;
			_this11.self._01 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._11 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._21 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._31 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			b015 = m12.self._02;
			b17 = m12.self._12;
			b26 = m12.self._22;
			b36 = m12.self._32;
			_this11.self._02 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._12 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._22 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._32 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			b015 = m12.self._03;
			b17 = m12.self._13;
			b26 = m12.self._23;
			b36 = m12.self._33;
			_this11.self._03 = a007 * b015 + a017 * b17 + a027 * b26 + a037 * b36;
			_this11.self._13 = a107 * b015 + a117 * b17 + a127 * b26 + a137 * b36;
			_this11.self._23 = a207 * b015 + a217 * b17 + a227 * b26 + a237 * b36;
			_this11.self._33 = a307 * b015 + a317 * b17 + a327 * b26 + a337 * b36;
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lightWorldViewProjectionMatrix") {
			if(light != null) {
				if(object == null) {
					var _this12 = iron_object_Uniforms.helpMat;
					_this12.self._00 = 1.0;
					_this12.self._01 = 0.0;
					_this12.self._02 = 0.0;
					_this12.self._03 = 0.0;
					_this12.self._10 = 0.0;
					_this12.self._11 = 1.0;
					_this12.self._12 = 0.0;
					_this12.self._13 = 0.0;
					_this12.self._20 = 0.0;
					_this12.self._21 = 0.0;
					_this12.self._22 = 1.0;
					_this12.self._23 = 0.0;
					_this12.self._30 = 0.0;
					_this12.self._31 = 0.0;
					_this12.self._32 = 0.0;
					_this12.self._33 = 1.0;
				} else {
					var _this13 = iron_object_Uniforms.helpMat;
					var m13 = object.transform.world;
					_this13.self._00 = m13.self._00;
					_this13.self._01 = m13.self._01;
					_this13.self._02 = m13.self._02;
					_this13.self._03 = m13.self._03;
					_this13.self._10 = m13.self._10;
					_this13.self._11 = m13.self._11;
					_this13.self._12 = m13.self._12;
					_this13.self._13 = m13.self._13;
					_this13.self._20 = m13.self._20;
					_this13.self._21 = m13.self._21;
					_this13.self._22 = m13.self._22;
					_this13.self._23 = m13.self._23;
					_this13.self._30 = m13.self._30;
					_this13.self._31 = m13.self._31;
					_this13.self._32 = m13.self._32;
					_this13.self._33 = m13.self._33;
				}
				var _this14 = iron_object_Uniforms.helpMat;
				var m14 = light.VP;
				var a008 = _this14.self._00;
				var a018 = _this14.self._01;
				var a028 = _this14.self._02;
				var a038 = _this14.self._03;
				var a108 = _this14.self._10;
				var a118 = _this14.self._11;
				var a128 = _this14.self._12;
				var a138 = _this14.self._13;
				var a208 = _this14.self._20;
				var a218 = _this14.self._21;
				var a228 = _this14.self._22;
				var a238 = _this14.self._23;
				var a308 = _this14.self._30;
				var a318 = _this14.self._31;
				var a328 = _this14.self._32;
				var a338 = _this14.self._33;
				var b016 = m14.self._00;
				var b18 = m14.self._10;
				var b27 = m14.self._20;
				var b37 = m14.self._30;
				_this14.self._00 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._10 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._20 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._30 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				b016 = m14.self._01;
				b18 = m14.self._11;
				b27 = m14.self._21;
				b37 = m14.self._31;
				_this14.self._01 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._11 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._21 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._31 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				b016 = m14.self._02;
				b18 = m14.self._12;
				b27 = m14.self._22;
				b37 = m14.self._32;
				_this14.self._02 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._12 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._22 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._32 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				b016 = m14.self._03;
				b18 = m14.self._13;
				b27 = m14.self._23;
				b37 = m14.self._33;
				_this14.self._03 = a008 * b016 + a018 * b18 + a028 * b27 + a038 * b37;
				_this14.self._13 = a108 * b016 + a118 * b18 + a128 * b27 + a138 * b37;
				_this14.self._23 = a208 * b016 + a218 * b18 + a228 * b27 + a238 * b37;
				_this14.self._33 = a308 * b016 + a318 * b18 + a328 * b27 + a338 * b37;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lightWorldViewProjectionMatrixSphere") {
			if(light != null) {
				var _this15 = iron_object_Uniforms.helpMat;
				var m15 = object.transform.world;
				_this15.self._00 = m15.self._00;
				_this15.self._01 = m15.self._01;
				_this15.self._02 = m15.self._02;
				_this15.self._03 = m15.self._03;
				_this15.self._10 = m15.self._10;
				_this15.self._11 = m15.self._11;
				_this15.self._12 = m15.self._12;
				_this15.self._13 = m15.self._13;
				_this15.self._20 = m15.self._20;
				_this15.self._21 = m15.self._21;
				_this15.self._22 = m15.self._22;
				_this15.self._23 = m15.self._23;
				_this15.self._30 = m15.self._30;
				_this15.self._31 = m15.self._31;
				_this15.self._32 = m15.self._32;
				_this15.self._33 = m15.self._33;
				var _this16 = iron_object_Uniforms.helpMat;
				var m16 = camera.V;
				var a009 = _this16.self._00;
				var a019 = _this16.self._01;
				var a029 = _this16.self._02;
				var a039 = _this16.self._03;
				var a109 = _this16.self._10;
				var a119 = _this16.self._11;
				var a129 = _this16.self._12;
				var a139 = _this16.self._13;
				var a209 = _this16.self._20;
				var a219 = _this16.self._21;
				var a229 = _this16.self._22;
				var a239 = _this16.self._23;
				var a309 = _this16.self._30;
				var a319 = _this16.self._31;
				var a329 = _this16.self._32;
				var a339 = _this16.self._33;
				var b017 = m16.self._00;
				var b19 = m16.self._10;
				var b28 = m16.self._20;
				var b38 = m16.self._30;
				_this16.self._00 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._10 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._20 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._30 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				b017 = m16.self._01;
				b19 = m16.self._11;
				b28 = m16.self._21;
				b38 = m16.self._31;
				_this16.self._01 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._11 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._21 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._31 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				b017 = m16.self._02;
				b19 = m16.self._12;
				b28 = m16.self._22;
				b38 = m16.self._32;
				_this16.self._02 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._12 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._22 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._32 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				b017 = m16.self._03;
				b19 = m16.self._13;
				b28 = m16.self._23;
				b38 = m16.self._33;
				_this16.self._03 = a009 * b017 + a019 * b19 + a029 * b28 + a039 * b38;
				_this16.self._13 = a109 * b017 + a119 * b19 + a129 * b28 + a139 * b38;
				_this16.self._23 = a209 * b017 + a219 * b19 + a229 * b28 + a239 * b38;
				_this16.self._33 = a309 * b017 + a319 * b19 + a329 * b28 + a339 * b38;
				iron_object_Uniforms.helpMat.self._00 = 1.0;
				iron_object_Uniforms.helpMat.self._10 = 0.0;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._11 = 1.0;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._12 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = 1.0;
				var _this17 = iron_object_Uniforms.helpMat2;
				var m17 = camera.V;
				var a0010 = m17.self._00;
				var a0110 = m17.self._01;
				var a0210 = m17.self._02;
				var a0310 = m17.self._03;
				var a1010 = m17.self._10;
				var a1110 = m17.self._11;
				var a1210 = m17.self._12;
				var a1310 = m17.self._13;
				var a2010 = m17.self._20;
				var a2110 = m17.self._21;
				var a2210 = m17.self._22;
				var a2310 = m17.self._23;
				var a3010 = m17.self._30;
				var a3110 = m17.self._31;
				var a3210 = m17.self._32;
				var a3310 = m17.self._33;
				var b001 = a0010 * a1110 - a0110 * a1010;
				var b018 = a0010 * a1210 - a0210 * a1010;
				var b021 = a0010 * a1310 - a0310 * a1010;
				var b031 = a0110 * a1210 - a0210 * a1110;
				var b041 = a0110 * a1310 - a0310 * a1110;
				var b051 = a0210 * a1310 - a0310 * a1210;
				var b061 = a2010 * a3110 - a2110 * a3010;
				var b071 = a2010 * a3210 - a2210 * a3010;
				var b081 = a2010 * a3310 - a2310 * a3010;
				var b091 = a2110 * a3210 - a2210 * a3110;
				var b101 = a2110 * a3310 - a2310 * a3110;
				var b111 = a2210 * a3310 - a2310 * a3210;
				var det1 = b001 * b111 - b018 * b101 + b021 * b091 + b031 * b081 - b041 * b071 + b051 * b061;
				if(det1 == 0.0) {
					_this17.self._00 = 1.0;
					_this17.self._01 = 0.0;
					_this17.self._02 = 0.0;
					_this17.self._03 = 0.0;
					_this17.self._10 = 0.0;
					_this17.self._11 = 1.0;
					_this17.self._12 = 0.0;
					_this17.self._13 = 0.0;
					_this17.self._20 = 0.0;
					_this17.self._21 = 0.0;
					_this17.self._22 = 1.0;
					_this17.self._23 = 0.0;
					_this17.self._30 = 0.0;
					_this17.self._31 = 0.0;
					_this17.self._32 = 0.0;
					_this17.self._33 = 1.0;
				} else {
					det1 = 1.0 / det1;
					_this17.self._00 = (a1110 * b111 - a1210 * b101 + a1310 * b091) * det1;
					_this17.self._01 = (a0210 * b101 - a0110 * b111 - a0310 * b091) * det1;
					_this17.self._02 = (a3110 * b051 - a3210 * b041 + a3310 * b031) * det1;
					_this17.self._03 = (a2210 * b041 - a2110 * b051 - a2310 * b031) * det1;
					_this17.self._10 = (a1210 * b081 - a1010 * b111 - a1310 * b071) * det1;
					_this17.self._11 = (a0010 * b111 - a0210 * b081 + a0310 * b071) * det1;
					_this17.self._12 = (a3210 * b021 - a3010 * b051 - a3310 * b018) * det1;
					_this17.self._13 = (a2010 * b051 - a2210 * b021 + a2310 * b018) * det1;
					_this17.self._20 = (a1010 * b101 - a1110 * b081 + a1310 * b061) * det1;
					_this17.self._21 = (a0110 * b081 - a0010 * b101 - a0310 * b061) * det1;
					_this17.self._22 = (a3010 * b041 - a3110 * b021 + a3310 * b001) * det1;
					_this17.self._23 = (a2110 * b021 - a2010 * b041 - a2310 * b001) * det1;
					_this17.self._30 = (a1110 * b071 - a1010 * b091 - a1210 * b061) * det1;
					_this17.self._31 = (a0010 * b091 - a0110 * b071 + a0210 * b061) * det1;
					_this17.self._32 = (a3110 * b018 - a3010 * b031 - a3210 * b001) * det1;
					_this17.self._33 = (a2010 * b031 - a2110 * b018 + a2210 * b001) * det1;
				}
				var _this18 = iron_object_Uniforms.helpMat;
				var m18 = iron_object_Uniforms.helpMat2;
				var a0011 = _this18.self._00;
				var a0111 = _this18.self._01;
				var a0211 = _this18.self._02;
				var a0311 = _this18.self._03;
				var a1011 = _this18.self._10;
				var a1111 = _this18.self._11;
				var a1211 = _this18.self._12;
				var a1311 = _this18.self._13;
				var a2011 = _this18.self._20;
				var a2111 = _this18.self._21;
				var a2211 = _this18.self._22;
				var a2311 = _this18.self._23;
				var a3011 = _this18.self._30;
				var a3111 = _this18.self._31;
				var a3211 = _this18.self._32;
				var a3311 = _this18.self._33;
				var b019 = m18.self._00;
				var b110 = m18.self._10;
				var b29 = m18.self._20;
				var b39 = m18.self._30;
				_this18.self._00 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._10 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._20 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._30 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				b019 = m18.self._01;
				b110 = m18.self._11;
				b29 = m18.self._21;
				b39 = m18.self._31;
				_this18.self._01 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._11 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._21 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._31 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				b019 = m18.self._02;
				b110 = m18.self._12;
				b29 = m18.self._22;
				b39 = m18.self._32;
				_this18.self._02 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._12 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._22 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._32 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				b019 = m18.self._03;
				b110 = m18.self._13;
				b29 = m18.self._23;
				b39 = m18.self._33;
				_this18.self._03 = a0011 * b019 + a0111 * b110 + a0211 * b29 + a0311 * b39;
				_this18.self._13 = a1011 * b019 + a1111 * b110 + a1211 * b29 + a1311 * b39;
				_this18.self._23 = a2011 * b019 + a2111 * b110 + a2211 * b29 + a2311 * b39;
				_this18.self._33 = a3011 * b019 + a3111 * b110 + a3211 * b29 + a3311 * b39;
				var _this19 = iron_object_Uniforms.helpMat;
				var m19 = light.VP;
				var a0012 = _this19.self._00;
				var a0112 = _this19.self._01;
				var a0212 = _this19.self._02;
				var a0312 = _this19.self._03;
				var a1012 = _this19.self._10;
				var a1112 = _this19.self._11;
				var a1212 = _this19.self._12;
				var a1312 = _this19.self._13;
				var a2012 = _this19.self._20;
				var a2112 = _this19.self._21;
				var a2212 = _this19.self._22;
				var a2312 = _this19.self._23;
				var a3012 = _this19.self._30;
				var a3112 = _this19.self._31;
				var a3212 = _this19.self._32;
				var a3312 = _this19.self._33;
				var b020 = m19.self._00;
				var b112 = m19.self._10;
				var b210 = m19.self._20;
				var b310 = m19.self._30;
				_this19.self._00 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._10 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._20 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._30 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				b020 = m19.self._01;
				b112 = m19.self._11;
				b210 = m19.self._21;
				b310 = m19.self._31;
				_this19.self._01 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._11 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._21 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._31 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				b020 = m19.self._02;
				b112 = m19.self._12;
				b210 = m19.self._22;
				b310 = m19.self._32;
				_this19.self._02 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._12 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._22 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._32 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				b020 = m19.self._03;
				b112 = m19.self._13;
				b210 = m19.self._23;
				b310 = m19.self._33;
				_this19.self._03 = a0012 * b020 + a0112 * b112 + a0212 * b210 + a0312 * b310;
				_this19.self._13 = a1012 * b020 + a1112 * b112 + a1212 * b210 + a1312 * b310;
				_this19.self._23 = a2012 * b020 + a2112 * b112 + a2212 * b210 + a2312 * b310;
				_this19.self._33 = a3012 * b020 + a3112 * b112 + a3212 * b210 + a3312 * b310;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lightWorldViewProjectionMatrixCylinder") {
			if(light != null) {
				var _this20 = iron_object_Uniforms.helpMat;
				var m20 = object.transform.world;
				_this20.self._00 = m20.self._00;
				_this20.self._01 = m20.self._01;
				_this20.self._02 = m20.self._02;
				_this20.self._03 = m20.self._03;
				_this20.self._10 = m20.self._10;
				_this20.self._11 = m20.self._11;
				_this20.self._12 = m20.self._12;
				_this20.self._13 = m20.self._13;
				_this20.self._20 = m20.self._20;
				_this20.self._21 = m20.self._21;
				_this20.self._22 = m20.self._22;
				_this20.self._23 = m20.self._23;
				_this20.self._30 = m20.self._30;
				_this20.self._31 = m20.self._31;
				_this20.self._32 = m20.self._32;
				_this20.self._33 = m20.self._33;
				var _this21 = iron_object_Uniforms.helpMat;
				var m21 = camera.V;
				var a0013 = _this21.self._00;
				var a0113 = _this21.self._01;
				var a0213 = _this21.self._02;
				var a0313 = _this21.self._03;
				var a1013 = _this21.self._10;
				var a1113 = _this21.self._11;
				var a1213 = _this21.self._12;
				var a1313 = _this21.self._13;
				var a2013 = _this21.self._20;
				var a2113 = _this21.self._21;
				var a2213 = _this21.self._22;
				var a2313 = _this21.self._23;
				var a3013 = _this21.self._30;
				var a3113 = _this21.self._31;
				var a3213 = _this21.self._32;
				var a3313 = _this21.self._33;
				var b022 = m21.self._00;
				var b113 = m21.self._10;
				var b211 = m21.self._20;
				var b311 = m21.self._30;
				_this21.self._00 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._10 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._20 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._30 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				b022 = m21.self._01;
				b113 = m21.self._11;
				b211 = m21.self._21;
				b311 = m21.self._31;
				_this21.self._01 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._11 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._21 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._31 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				b022 = m21.self._02;
				b113 = m21.self._12;
				b211 = m21.self._22;
				b311 = m21.self._32;
				_this21.self._02 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._12 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._22 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._32 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				b022 = m21.self._03;
				b113 = m21.self._13;
				b211 = m21.self._23;
				b311 = m21.self._33;
				_this21.self._03 = a0013 * b022 + a0113 * b113 + a0213 * b211 + a0313 * b311;
				_this21.self._13 = a1013 * b022 + a1113 * b113 + a1213 * b211 + a1313 * b311;
				_this21.self._23 = a2013 * b022 + a2113 * b113 + a2213 * b211 + a2313 * b311;
				_this21.self._33 = a3013 * b022 + a3113 * b113 + a3213 * b211 + a3313 * b311;
				iron_object_Uniforms.helpMat.self._00 = 1.0;
				iron_object_Uniforms.helpMat.self._20 = 0.0;
				iron_object_Uniforms.helpMat.self._01 = 0.0;
				iron_object_Uniforms.helpMat.self._21 = 0.0;
				iron_object_Uniforms.helpMat.self._02 = 0.0;
				iron_object_Uniforms.helpMat.self._22 = 1.0;
				var _this22 = iron_object_Uniforms.helpMat2;
				var m22 = camera.V;
				var a0014 = m22.self._00;
				var a0114 = m22.self._01;
				var a0214 = m22.self._02;
				var a0314 = m22.self._03;
				var a1014 = m22.self._10;
				var a1114 = m22.self._11;
				var a1214 = m22.self._12;
				var a1314 = m22.self._13;
				var a2014 = m22.self._20;
				var a2114 = m22.self._21;
				var a2214 = m22.self._22;
				var a2314 = m22.self._23;
				var a3014 = m22.self._30;
				var a3114 = m22.self._31;
				var a3214 = m22.self._32;
				var a3314 = m22.self._33;
				var b002 = a0014 * a1114 - a0114 * a1014;
				var b0110 = a0014 * a1214 - a0214 * a1014;
				var b023 = a0014 * a1314 - a0314 * a1014;
				var b032 = a0114 * a1214 - a0214 * a1114;
				var b042 = a0114 * a1314 - a0314 * a1114;
				var b052 = a0214 * a1314 - a0314 * a1214;
				var b062 = a2014 * a3114 - a2114 * a3014;
				var b072 = a2014 * a3214 - a2214 * a3014;
				var b082 = a2014 * a3314 - a2314 * a3014;
				var b092 = a2114 * a3214 - a2214 * a3114;
				var b102 = a2114 * a3314 - a2314 * a3114;
				var b114 = a2214 * a3314 - a2314 * a3214;
				var det2 = b002 * b114 - b0110 * b102 + b023 * b092 + b032 * b082 - b042 * b072 + b052 * b062;
				if(det2 == 0.0) {
					_this22.self._00 = 1.0;
					_this22.self._01 = 0.0;
					_this22.self._02 = 0.0;
					_this22.self._03 = 0.0;
					_this22.self._10 = 0.0;
					_this22.self._11 = 1.0;
					_this22.self._12 = 0.0;
					_this22.self._13 = 0.0;
					_this22.self._20 = 0.0;
					_this22.self._21 = 0.0;
					_this22.self._22 = 1.0;
					_this22.self._23 = 0.0;
					_this22.self._30 = 0.0;
					_this22.self._31 = 0.0;
					_this22.self._32 = 0.0;
					_this22.self._33 = 1.0;
				} else {
					det2 = 1.0 / det2;
					_this22.self._00 = (a1114 * b114 - a1214 * b102 + a1314 * b092) * det2;
					_this22.self._01 = (a0214 * b102 - a0114 * b114 - a0314 * b092) * det2;
					_this22.self._02 = (a3114 * b052 - a3214 * b042 + a3314 * b032) * det2;
					_this22.self._03 = (a2214 * b042 - a2114 * b052 - a2314 * b032) * det2;
					_this22.self._10 = (a1214 * b082 - a1014 * b114 - a1314 * b072) * det2;
					_this22.self._11 = (a0014 * b114 - a0214 * b082 + a0314 * b072) * det2;
					_this22.self._12 = (a3214 * b023 - a3014 * b052 - a3314 * b0110) * det2;
					_this22.self._13 = (a2014 * b052 - a2214 * b023 + a2314 * b0110) * det2;
					_this22.self._20 = (a1014 * b102 - a1114 * b082 + a1314 * b062) * det2;
					_this22.self._21 = (a0114 * b082 - a0014 * b102 - a0314 * b062) * det2;
					_this22.self._22 = (a3014 * b042 - a3114 * b023 + a3314 * b002) * det2;
					_this22.self._23 = (a2114 * b023 - a2014 * b042 - a2314 * b002) * det2;
					_this22.self._30 = (a1114 * b072 - a1014 * b092 - a1214 * b062) * det2;
					_this22.self._31 = (a0014 * b092 - a0114 * b072 + a0214 * b062) * det2;
					_this22.self._32 = (a3114 * b0110 - a3014 * b032 - a3214 * b002) * det2;
					_this22.self._33 = (a2014 * b032 - a2114 * b0110 + a2214 * b002) * det2;
				}
				var _this23 = iron_object_Uniforms.helpMat;
				var m23 = iron_object_Uniforms.helpMat2;
				var a0015 = _this23.self._00;
				var a0115 = _this23.self._01;
				var a0215 = _this23.self._02;
				var a0315 = _this23.self._03;
				var a1015 = _this23.self._10;
				var a1115 = _this23.self._11;
				var a1215 = _this23.self._12;
				var a1315 = _this23.self._13;
				var a2015 = _this23.self._20;
				var a2115 = _this23.self._21;
				var a2215 = _this23.self._22;
				var a2315 = _this23.self._23;
				var a3015 = _this23.self._30;
				var a3115 = _this23.self._31;
				var a3215 = _this23.self._32;
				var a3315 = _this23.self._33;
				var b024 = m23.self._00;
				var b115 = m23.self._10;
				var b212 = m23.self._20;
				var b312 = m23.self._30;
				_this23.self._00 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._10 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._20 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._30 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				b024 = m23.self._01;
				b115 = m23.self._11;
				b212 = m23.self._21;
				b312 = m23.self._31;
				_this23.self._01 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._11 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._21 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._31 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				b024 = m23.self._02;
				b115 = m23.self._12;
				b212 = m23.self._22;
				b312 = m23.self._32;
				_this23.self._02 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._12 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._22 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._32 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				b024 = m23.self._03;
				b115 = m23.self._13;
				b212 = m23.self._23;
				b312 = m23.self._33;
				_this23.self._03 = a0015 * b024 + a0115 * b115 + a0215 * b212 + a0315 * b312;
				_this23.self._13 = a1015 * b024 + a1115 * b115 + a1215 * b212 + a1315 * b312;
				_this23.self._23 = a2015 * b024 + a2115 * b115 + a2215 * b212 + a2315 * b312;
				_this23.self._33 = a3015 * b024 + a3115 * b115 + a3215 * b212 + a3315 * b312;
				var _this24 = iron_object_Uniforms.helpMat;
				var m24 = light.VP;
				var a0016 = _this24.self._00;
				var a0116 = _this24.self._01;
				var a0216 = _this24.self._02;
				var a0316 = _this24.self._03;
				var a1016 = _this24.self._10;
				var a1116 = _this24.self._11;
				var a1216 = _this24.self._12;
				var a1316 = _this24.self._13;
				var a2016 = _this24.self._20;
				var a2116 = _this24.self._21;
				var a2216 = _this24.self._22;
				var a2316 = _this24.self._23;
				var a3016 = _this24.self._30;
				var a3116 = _this24.self._31;
				var a3216 = _this24.self._32;
				var a3316 = _this24.self._33;
				var b025 = m24.self._00;
				var b116 = m24.self._10;
				var b213 = m24.self._20;
				var b313 = m24.self._30;
				_this24.self._00 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._10 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._20 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._30 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				b025 = m24.self._01;
				b116 = m24.self._11;
				b213 = m24.self._21;
				b313 = m24.self._31;
				_this24.self._01 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._11 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._21 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._31 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				b025 = m24.self._02;
				b116 = m24.self._12;
				b213 = m24.self._22;
				b313 = m24.self._32;
				_this24.self._02 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._12 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._22 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._32 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				b025 = m24.self._03;
				b116 = m24.self._13;
				b213 = m24.self._23;
				b313 = m24.self._33;
				_this24.self._03 = a0016 * b025 + a0116 * b116 + a0216 * b213 + a0316 * b313;
				_this24.self._13 = a1016 * b025 + a1116 * b116 + a1216 * b213 + a1316 * b313;
				_this24.self._23 = a2016 * b025 + a2116 * b116 + a2216 * b213 + a2316 * b313;
				_this24.self._33 = a3016 * b025 + a3116 * b116 + a3216 * b213 + a3316 * b313;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_biasLightWorldViewProjectionMatrix") {
			if(light != null) {
				if(object == null) {
					var _this25 = iron_object_Uniforms.helpMat;
					_this25.self._00 = 1.0;
					_this25.self._01 = 0.0;
					_this25.self._02 = 0.0;
					_this25.self._03 = 0.0;
					_this25.self._10 = 0.0;
					_this25.self._11 = 1.0;
					_this25.self._12 = 0.0;
					_this25.self._13 = 0.0;
					_this25.self._20 = 0.0;
					_this25.self._21 = 0.0;
					_this25.self._22 = 1.0;
					_this25.self._23 = 0.0;
					_this25.self._30 = 0.0;
					_this25.self._31 = 0.0;
					_this25.self._32 = 0.0;
					_this25.self._33 = 1.0;
				} else {
					var _this26 = iron_object_Uniforms.helpMat;
					var m25 = object.transform.world;
					_this26.self._00 = m25.self._00;
					_this26.self._01 = m25.self._01;
					_this26.self._02 = m25.self._02;
					_this26.self._03 = m25.self._03;
					_this26.self._10 = m25.self._10;
					_this26.self._11 = m25.self._11;
					_this26.self._12 = m25.self._12;
					_this26.self._13 = m25.self._13;
					_this26.self._20 = m25.self._20;
					_this26.self._21 = m25.self._21;
					_this26.self._22 = m25.self._22;
					_this26.self._23 = m25.self._23;
					_this26.self._30 = m25.self._30;
					_this26.self._31 = m25.self._31;
					_this26.self._32 = m25.self._32;
					_this26.self._33 = m25.self._33;
				}
				var _this27 = iron_object_Uniforms.helpMat;
				var m26 = light.VP;
				var a0017 = _this27.self._00;
				var a0117 = _this27.self._01;
				var a0217 = _this27.self._02;
				var a0317 = _this27.self._03;
				var a1017 = _this27.self._10;
				var a1117 = _this27.self._11;
				var a1217 = _this27.self._12;
				var a1317 = _this27.self._13;
				var a2017 = _this27.self._20;
				var a2117 = _this27.self._21;
				var a2217 = _this27.self._22;
				var a2317 = _this27.self._23;
				var a3017 = _this27.self._30;
				var a3117 = _this27.self._31;
				var a3217 = _this27.self._32;
				var a3317 = _this27.self._33;
				var b026 = m26.self._00;
				var b117 = m26.self._10;
				var b214 = m26.self._20;
				var b314 = m26.self._30;
				_this27.self._00 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._10 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._20 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._30 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				b026 = m26.self._01;
				b117 = m26.self._11;
				b214 = m26.self._21;
				b314 = m26.self._31;
				_this27.self._01 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._11 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._21 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._31 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				b026 = m26.self._02;
				b117 = m26.self._12;
				b214 = m26.self._22;
				b314 = m26.self._32;
				_this27.self._02 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._12 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._22 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._32 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				b026 = m26.self._03;
				b117 = m26.self._13;
				b214 = m26.self._23;
				b314 = m26.self._33;
				_this27.self._03 = a0017 * b026 + a0117 * b117 + a0217 * b214 + a0317 * b314;
				_this27.self._13 = a1017 * b026 + a1117 * b117 + a1217 * b214 + a1317 * b314;
				_this27.self._23 = a2017 * b026 + a2117 * b117 + a2217 * b214 + a2317 * b314;
				_this27.self._33 = a3017 * b026 + a3117 * b117 + a3217 * b214 + a3317 * b314;
				var _this28 = iron_object_Uniforms.helpMat;
				var m27 = iron_object_Uniforms.biasMat;
				var a0018 = _this28.self._00;
				var a0118 = _this28.self._01;
				var a0218 = _this28.self._02;
				var a0318 = _this28.self._03;
				var a1018 = _this28.self._10;
				var a1118 = _this28.self._11;
				var a1218 = _this28.self._12;
				var a1318 = _this28.self._13;
				var a2018 = _this28.self._20;
				var a2118 = _this28.self._21;
				var a2218 = _this28.self._22;
				var a2318 = _this28.self._23;
				var a3018 = _this28.self._30;
				var a3118 = _this28.self._31;
				var a3218 = _this28.self._32;
				var a3318 = _this28.self._33;
				var b027 = m27.self._00;
				var b118 = m27.self._10;
				var b215 = m27.self._20;
				var b315 = m27.self._30;
				_this28.self._00 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._10 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._20 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._30 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				b027 = m27.self._01;
				b118 = m27.self._11;
				b215 = m27.self._21;
				b315 = m27.self._31;
				_this28.self._01 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._11 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._21 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._31 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				b027 = m27.self._02;
				b118 = m27.self._12;
				b215 = m27.self._22;
				b315 = m27.self._32;
				_this28.self._02 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._12 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._22 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._32 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				b027 = m27.self._03;
				b118 = m27.self._13;
				b215 = m27.self._23;
				b315 = m27.self._33;
				_this28.self._03 = a0018 * b027 + a0118 * b118 + a0218 * b215 + a0318 * b315;
				_this28.self._13 = a1018 * b027 + a1118 * b118 + a1218 * b215 + a1318 * b315;
				_this28.self._23 = a2018 * b027 + a2118 * b118 + a2218 * b215 + a2318 * b315;
				_this28.self._33 = a3018 * b027 + a3118 * b118 + a3218 * b215 + a3318 * b315;
				m = iron_object_Uniforms.helpMat;
			}
		} else if(iron_object_Uniforms.externalMat4Links != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalMat4Links;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				m = fn(object,iron_object_Uniforms.currentMat(object),c.link);
				if(m != null) {
					break;
				}
			}
		}
		if(m == null) {
			return;
		}
		g.setMatrix(location,m.self);
	} else if(c.type == "mat3") {
		var m28 = null;
		if(c.link == "_normalMatrix") {
			var _this29 = iron_object_Uniforms.helpMat;
			var m29 = object.transform.world;
			_this29.self._00 = m29.self._00;
			_this29.self._01 = m29.self._01;
			_this29.self._02 = m29.self._02;
			_this29.self._03 = m29.self._03;
			_this29.self._10 = m29.self._10;
			_this29.self._11 = m29.self._11;
			_this29.self._12 = m29.self._12;
			_this29.self._13 = m29.self._13;
			_this29.self._20 = m29.self._20;
			_this29.self._21 = m29.self._21;
			_this29.self._22 = m29.self._22;
			_this29.self._23 = m29.self._23;
			_this29.self._30 = m29.self._30;
			_this29.self._31 = m29.self._31;
			_this29.self._32 = m29.self._32;
			_this29.self._33 = m29.self._33;
			var _this30 = iron_object_Uniforms.helpMat;
			var m30 = iron_object_Uniforms.helpMat;
			var a0019 = m30.self._00;
			var a0119 = m30.self._01;
			var a0219 = m30.self._02;
			var a0319 = m30.self._03;
			var a1019 = m30.self._10;
			var a1119 = m30.self._11;
			var a1219 = m30.self._12;
			var a1319 = m30.self._13;
			var a2019 = m30.self._20;
			var a2119 = m30.self._21;
			var a2219 = m30.self._22;
			var a2319 = m30.self._23;
			var a3019 = m30.self._30;
			var a3119 = m30.self._31;
			var a3219 = m30.self._32;
			var a3319 = m30.self._33;
			var b003 = a0019 * a1119 - a0119 * a1019;
			var b0111 = a0019 * a1219 - a0219 * a1019;
			var b028 = a0019 * a1319 - a0319 * a1019;
			var b033 = a0119 * a1219 - a0219 * a1119;
			var b043 = a0119 * a1319 - a0319 * a1119;
			var b053 = a0219 * a1319 - a0319 * a1219;
			var b063 = a2019 * a3119 - a2119 * a3019;
			var b073 = a2019 * a3219 - a2219 * a3019;
			var b083 = a2019 * a3319 - a2319 * a3019;
			var b093 = a2119 * a3219 - a2219 * a3119;
			var b103 = a2119 * a3319 - a2319 * a3119;
			var b119 = a2219 * a3319 - a2319 * a3219;
			var det3 = b003 * b119 - b0111 * b103 + b028 * b093 + b033 * b083 - b043 * b073 + b053 * b063;
			if(det3 == 0.0) {
				_this30.self._00 = 1.0;
				_this30.self._01 = 0.0;
				_this30.self._02 = 0.0;
				_this30.self._03 = 0.0;
				_this30.self._10 = 0.0;
				_this30.self._11 = 1.0;
				_this30.self._12 = 0.0;
				_this30.self._13 = 0.0;
				_this30.self._20 = 0.0;
				_this30.self._21 = 0.0;
				_this30.self._22 = 1.0;
				_this30.self._23 = 0.0;
				_this30.self._30 = 0.0;
				_this30.self._31 = 0.0;
				_this30.self._32 = 0.0;
				_this30.self._33 = 1.0;
			} else {
				det3 = 1.0 / det3;
				_this30.self._00 = (a1119 * b119 - a1219 * b103 + a1319 * b093) * det3;
				_this30.self._01 = (a0219 * b103 - a0119 * b119 - a0319 * b093) * det3;
				_this30.self._02 = (a3119 * b053 - a3219 * b043 + a3319 * b033) * det3;
				_this30.self._03 = (a2219 * b043 - a2119 * b053 - a2319 * b033) * det3;
				_this30.self._10 = (a1219 * b083 - a1019 * b119 - a1319 * b073) * det3;
				_this30.self._11 = (a0019 * b119 - a0219 * b083 + a0319 * b073) * det3;
				_this30.self._12 = (a3219 * b028 - a3019 * b053 - a3319 * b0111) * det3;
				_this30.self._13 = (a2019 * b053 - a2219 * b028 + a2319 * b0111) * det3;
				_this30.self._20 = (a1019 * b103 - a1119 * b083 + a1319 * b063) * det3;
				_this30.self._21 = (a0119 * b083 - a0019 * b103 - a0319 * b063) * det3;
				_this30.self._22 = (a3019 * b043 - a3119 * b028 + a3319 * b003) * det3;
				_this30.self._23 = (a2119 * b028 - a2019 * b043 - a2319 * b003) * det3;
				_this30.self._30 = (a1119 * b073 - a1019 * b093 - a1219 * b063) * det3;
				_this30.self._31 = (a0019 * b093 - a0119 * b073 + a0219 * b063) * det3;
				_this30.self._32 = (a3119 * b0111 - a3019 * b033 - a3219 * b003) * det3;
				_this30.self._33 = (a2019 * b033 - a2119 * b0111 + a2219 * b003) * det3;
			}
			var _this31 = iron_object_Uniforms.helpMat;
			var f = _this31.self._01;
			_this31.self._01 = _this31.self._10;
			_this31.self._10 = f;
			f = _this31.self._02;
			_this31.self._02 = _this31.self._20;
			_this31.self._20 = f;
			f = _this31.self._12;
			_this31.self._12 = _this31.self._21;
			_this31.self._21 = f;
			var _this32 = iron_object_Uniforms.helpMat3;
			var m31 = iron_object_Uniforms.helpMat;
			_this32.self._00 = m31.self._00;
			_this32.self._01 = m31.self._01;
			_this32.self._02 = m31.self._02;
			_this32.self._10 = m31.self._10;
			_this32.self._11 = m31.self._11;
			_this32.self._12 = m31.self._12;
			_this32.self._20 = m31.self._20;
			_this32.self._21 = m31.self._21;
			_this32.self._22 = m31.self._22;
			m28 = iron_object_Uniforms.helpMat3;
		}
		if(m28 == null) {
			return;
		}
		g.setMatrix3(location,m28.self);
	} else if(c.type == "vec4") {
		var v = null;
		var _this33 = iron_object_Uniforms.helpVec;
		_this33.x = 0;
		_this33.y = 0;
		_this33.z = 0;
		_this33.w = 1.0;
		if(iron_object_Uniforms.externalVec4Links != null) {
			var _g2 = 0;
			var _g11 = iron_object_Uniforms.externalVec4Links;
			while(_g2 < _g11.length) {
				var fn1 = _g11[_g2];
				++_g2;
				v = fn1(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v != null) {
					break;
				}
			}
		}
		if(v == null) {
			return;
		}
		g.setFloat4(location,v.x,v.y,v.z,v.w);
	} else if(c.type == "vec3") {
		var v1 = null;
		var _this34 = iron_object_Uniforms.helpVec;
		_this34.x = 0;
		_this34.y = 0;
		_this34.z = 0;
		_this34.w = 1.0;
		if(c.link == "_dim") {
			var d = object.transform.dim;
			var s = object.transform.scale;
			var _this35 = iron_object_Uniforms.helpVec;
			_this35.x = d.x / s.x;
			_this35.y = d.y / s.y;
			_this35.z = d.z / s.z;
			_this35.w = 1.0;
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_halfDim") {
			var d1 = object.transform.dim;
			var s1 = object.transform.scale;
			var _this36 = iron_object_Uniforms.helpVec;
			_this36.x = d1.x / s1.x / 2;
			_this36.y = d1.y / s1.y / 2;
			_this36.z = d1.z / s1.z / 2;
			_this36.w = 1.0;
			v1 = iron_object_Uniforms.helpVec;
		} else if(iron_object_Uniforms.externalVec3Links != null) {
			var _g3 = 0;
			var _g12 = iron_object_Uniforms.externalVec3Links;
			while(_g3 < _g12.length) {
				var f1 = _g12[_g3];
				++_g3;
				v1 = f1(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v1 != null) {
					break;
				}
			}
		}
		if(v1 == null) {
			return;
		}
		g.setFloat3(location,v1.x,v1.y,v1.z);
	} else if(c.type == "vec2") {
		var vx = null;
		var vy = 0;
		if(c.link == "_tilesheetOffset") {
			var ts = (js_Boot.__cast(object , iron_object_MeshObject)).tilesheet;
			vx = ts.tileX;
			vy = ts.tileY;
		} else if(iron_object_Uniforms.externalVec2Links != null) {
			var _g4 = 0;
			var _g13 = iron_object_Uniforms.externalVec2Links;
			while(_g4 < _g13.length) {
				var fn2 = _g13[_g4];
				++_g4;
				var v2 = fn2(object,iron_object_Uniforms.currentMat(object),c.link);
				if(v2 != null) {
					vx = v2.x;
					vy = v2.y;
					break;
				}
			}
		}
		if(vx == null) {
			return;
		}
		g.setFloat2(location,vx,vy);
	} else if(c.type == "float") {
		var f2 = null;
		if(c.link == "_objectInfoIndex") {
			f2 = object.uid;
		} else if(c.link == "_objectInfoMaterialIndex") {
			f2 = iron_object_Uniforms.currentMat(object).uid;
		} else if(c.link == "_objectInfoRandom") {
			f2 = object.urandom;
		} else if(iron_object_Uniforms.externalFloatLinks != null) {
			var _g5 = 0;
			var _g14 = iron_object_Uniforms.externalFloatLinks;
			while(_g5 < _g14.length) {
				var fn3 = _g14[_g5];
				++_g5;
				var res = fn3(object,iron_object_Uniforms.currentMat(object),c.link);
				if(res != null) {
					f2 = res;
					break;
				}
			}
		}
		if(f2 == null) {
			return;
		}
		g.setFloat(location,f2);
	} else if(c.type == "floats") {
		var fa = null;
		if(fa == null && iron_object_Uniforms.externalFloatsLinks != null) {
			var _g6 = 0;
			var _g15 = iron_object_Uniforms.externalFloatsLinks;
			while(_g6 < _g15.length) {
				var fn4 = _g15[_g6];
				++_g6;
				fa = fn4(object,iron_object_Uniforms.currentMat(object),c.link);
				if(fa != null) {
					break;
				}
			}
		}
		if(fa == null) {
			return;
		}
		g.setFloats(location,fa);
	} else if(c.type == "int") {
		var i = null;
		if(c.link == "_uid") {
			i = object.uid;
		} else if(iron_object_Uniforms.externalIntLinks != null) {
			var _g7 = 0;
			var _g16 = iron_object_Uniforms.externalIntLinks;
			while(_g7 < _g16.length) {
				var fn5 = _g16[_g7];
				++_g7;
				var res1 = fn5(object,iron_object_Uniforms.currentMat(object),c.link);
				if(res1 != null) {
					i = res1;
					break;
				}
			}
		}
		if(i == null) {
			return;
		}
		g.setInt(location,i);
	}
};
iron_object_Uniforms.setMaterialConstants = function(g,context,materialContext) {
	if(materialContext.raw.bind_constants != null) {
		var _g = 0;
		var _g1 = materialContext.raw.bind_constants.length;
		while(_g < _g1) {
			var i = _g++;
			var matc = materialContext.raw.bind_constants[i];
			var pos = -1;
			var _g2 = 0;
			var _g11 = context.raw.constants.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				if(context.raw.constants[i1].name == matc.name) {
					pos = i1;
					break;
				}
			}
			if(pos == -1) {
				continue;
			}
			var c = context.raw.constants[pos];
			iron_object_Uniforms.setMaterialConstant(g,context.constants[pos],c,matc);
		}
	}
	if(materialContext.textures != null) {
		var _g3 = 0;
		var _g12 = materialContext.textures.length;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var mname = materialContext.raw.bind_textures[i2].name;
			var _g4 = 0;
			var _g13 = context.textureUnits.length;
			while(_g4 < _g13) {
				var j = _g4++;
				var sname = context.raw.texture_units[j].name;
				if(mname == sname) {
					g.setTexture(context.textureUnits[j],materialContext.textures[i2]);
					materialContext.setTextureParameters(g,i2,context,j);
					break;
				}
			}
		}
	}
};
iron_object_Uniforms.currentMat = function(object) {
	if(object != null && (object instanceof iron_object_MeshObject)) {
		return (js_Boot.__cast(object , iron_object_MeshObject)).materials[0];
	}
	return null;
};
iron_object_Uniforms.setMaterialConstant = function(g,location,c,matc) {
	switch(c.type) {
	case "bool":
		g.setBool(location,matc.bool);
		break;
	case "float":
		g.setFloat(location,matc.float);
		break;
	case "int":
		g.setInt(location,matc.int);
		break;
	case "vec2":
		g.setFloat2(location,matc.vec2[0],matc.vec2[1]);
		break;
	case "vec3":
		g.setFloat3(location,matc.vec3[0],matc.vec3[1],matc.vec3[2]);
		break;
	case "vec4":
		g.setFloat4(location,matc.vec4[0],matc.vec4[1],matc.vec4[2],matc.vec4[3]);
		break;
	}
};
var iron_system_ArmPack = function() { };
$hxClasses["iron.system.ArmPack"] = iron_system_ArmPack;
iron_system_ArmPack.__name__ = "iron.system.ArmPack";
iron_system_ArmPack.decode = function(b) {
	var i = new haxe_io_BytesInput(b);
	i.set_bigEndian(true);
	return iron_system_ArmPack.read(i);
};
iron_system_ArmPack.read = function(i,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	try {
		var b = i.readByte();
		switch(b) {
		case 192:
			return null;
		case 194:
			return false;
		case 195:
			return true;
		case 196:
			return i.read(i.readByte());
		case 197:
			return i.read(i.readUInt16());
		case 198:
			return i.read(i.readInt32());
		case 202:
			return i.readFloat();
		case 204:
			return i.readByte();
		case 205:
			return i.readUInt16();
		case 206:
			return i.readInt32();
		case 208:
			return i.readInt8();
		case 209:
			return i.readInt16();
		case 210:
			return i.readInt32();
		case 217:
			return i.readString(i.readByte());
		case 218:
			return i.readString(i.readUInt16());
		case 219:
			return i.readString(i.readInt32());
		case 220:
			return iron_system_ArmPack.readArray(i,i.readUInt16(),key,parentKey);
		case 221:
			return iron_system_ArmPack.readArray(i,i.readInt32(),key,parentKey);
		case 222:
			return iron_system_ArmPack.readMap(i,i.readUInt16(),key,parentKey);
		case 223:
			return iron_system_ArmPack.readMap(i,i.readInt32(),key,parentKey);
		default:
			if(b < 128) {
				return b;
			} else if(b < 144) {
				return iron_system_ArmPack.readMap(i,15 & b,key,parentKey);
			} else if(b < 160) {
				return iron_system_ArmPack.readArray(i,15 & b,key,parentKey);
			} else if(b < 192) {
				return i.readString(31 & b);
			} else if(b > 223) {
				return -256 | b;
			}
		}
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		if((e1 instanceof haxe_io_Eof)) {
			var e2 = e1;
		} else {
			throw e;
		}
	}
	return null;
};
iron_system_ArmPack.readArray = function(i,length,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	var b = i.readByte();
	var _g = i;
	_g.set_position(_g.pos - 1);
	if(b == 202) {
		var _g1 = i;
		_g1.set_position(_g1.pos + 1);
		var this1 = new Float32Array(length);
		var a = this1;
		var _g2 = 0;
		var _g11 = length;
		while(_g2 < _g11) {
			var x = _g2++;
			a[x] = i.readFloat();
		}
		return a;
	} else if(b == 210) {
		var _g3 = i;
		_g3.set_position(_g3.pos + 1);
		var this2 = new Uint32Array(length);
		var a1 = this2;
		var _g4 = 0;
		var _g12 = length;
		while(_g4 < _g12) {
			var x1 = _g4++;
			a1[x1] = i.readInt32();
		}
		return a1;
	} else {
		var a2 = [];
		var _g5 = 0;
		var _g13 = length;
		while(_g5 < _g13) {
			var x2 = _g5++;
			a2.push(iron_system_ArmPack.read(i,key,parentKey));
		}
		return a2;
	}
};
iron_system_ArmPack.readMap = function(i,length,key,parentKey) {
	if(parentKey == null) {
		parentKey = "";
	}
	if(key == null) {
		key = "";
	}
	var out = { };
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var n = _g++;
		var k = Std.string(iron_system_ArmPack.read(i));
		var v = iron_system_ArmPack.read(i,k,key);
		out[k] = v;
	}
	return out;
};
iron_system_ArmPack.encode = function(d) {
	var o = new haxe_io_BytesOutput();
	o.set_bigEndian(true);
	iron_system_ArmPack.write(o,d);
	return o.getBytes();
};
iron_system_ArmPack.write = function(o,d) {
	var _g = Type["typeof"](d);
	switch(_g._hx_index) {
	case 0:
		o.writeByte(192);
		break;
	case 1:
		o.writeByte(210);
		o.writeInt32(d);
		break;
	case 2:
		o.writeByte(202);
		o.writeFloat(d);
		break;
	case 3:
		o.writeByte(d ? 195 : 194);
		break;
	case 4:
		var f = Reflect.fields(d);
		o.writeByte(223);
		o.writeInt32(f.length);
		var _g1 = 0;
		while(_g1 < f.length) {
			var k = f[_g1];
			++_g1;
			o.writeByte(219);
			o.writeInt32(k.length);
			o.writeString(k);
			iron_system_ArmPack.write(o,Reflect.field(d,k));
		}
		break;
	case 6:
		var c = _g.c;
		var _g2 = c.__name__;
		if(_g2 == null) {
			o.writeByte(221);
			o.writeInt32(d.length);
			var isInt = js_Boot.__instanceof(d[0],Int);
			var isFloat = typeof(d[0]) == "number";
			if(isFloat && !isInt) {
				o.writeByte(202);
				var _g3 = 0;
				var _g11 = d.length;
				while(_g3 < _g11) {
					var i = _g3++;
					o.writeFloat(d[i]);
				}
			} else if(isInt) {
				o.writeByte(210);
				var _g4 = 0;
				var _g12 = d.length;
				while(_g4 < _g12) {
					var i1 = _g4++;
					o.writeInt32(d[i1]);
				}
			} else {
				var _g5 = 0;
				var _g13 = d.length;
				while(_g5 < _g13) {
					var i2 = _g5++;
					iron_system_ArmPack.write(o,d[i2]);
				}
			}
		} else {
			switch(_g2) {
			case "Array":
				o.writeByte(221);
				o.writeInt32(d.length);
				var isInt1 = js_Boot.__instanceof(d[0],Int);
				var isFloat1 = typeof(d[0]) == "number";
				if(isFloat1 && !isInt1) {
					o.writeByte(202);
					var _g6 = 0;
					var _g14 = d.length;
					while(_g6 < _g14) {
						var i3 = _g6++;
						o.writeFloat(d[i3]);
					}
				} else if(isInt1) {
					o.writeByte(210);
					var _g7 = 0;
					var _g15 = d.length;
					while(_g7 < _g15) {
						var i4 = _g7++;
						o.writeInt32(d[i4]);
					}
				} else {
					var _g8 = 0;
					var _g16 = d.length;
					while(_g8 < _g16) {
						var i5 = _g8++;
						iron_system_ArmPack.write(o,d[i5]);
					}
				}
				break;
			case "String":
				o.writeByte(219);
				o.writeInt32(d.length);
				o.writeString(d);
				break;
			case "haxe.io.Bytes":
				o.writeByte(198);
				o.writeInt32(d.length);
				o.write(d);
				break;
			default:
			}
		}
		break;
	default:
	}
};
var iron_system_Audio = function() {
};
$hxClasses["iron.system.Audio"] = iron_system_Audio;
iron_system_Audio.__name__ = "iron.system.Audio";
iron_system_Audio.play = function(sound,loop,stream) {
	if(stream == null) {
		stream = false;
	}
	if(loop == null) {
		loop = false;
	}
	if(stream && sound.compressedData != null) {
		return kha_audio2_Audio1.stream(sound,loop);
	} else if(sound.uncompressedData != null) {
		return kha_audio2_Audio1.play(sound,loop);
	} else {
		return null;
	}
};
iron_system_Audio.prototype = {
	__class__: iron_system_Audio
};
var iron_system_Time = function() { };
$hxClasses["iron.system.Time"] = iron_system_Time;
iron_system_Time.__name__ = "iron.system.Time";
iron_system_Time.__properties__ = {get_delta:"get_delta",get_step:"get_step"};
iron_system_Time.get_step = function() {
	return 0.0166666666666666664;
};
iron_system_Time.get_delta = function() {
	return 0.0166666666666666664 * iron_system_Time.scale;
};
iron_system_Time.time = function() {
	return kha_Scheduler.time();
};
iron_system_Time.realTime = function() {
	return kha_Scheduler.realTime();
};
iron_system_Time.update = function() {
	iron_system_Time.realDelta = kha_Scheduler.realTime() - iron_system_Time.last;
	iron_system_Time.last = kha_Scheduler.realTime();
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if((o instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if((o instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return $hxEnums[o.__enum__] == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.html._ArrayBuffer.ArrayBufferCompat"] = js_html__$ArrayBuffer_ArrayBufferCompat;
js_html__$ArrayBuffer_ArrayBufferCompat.__name__ = "js.html._ArrayBuffer.ArrayBufferCompat";
js_html__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var kha__$Assets_ImageList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.ImageList"] = kha__$Assets_ImageList;
kha__$Assets_ImageList.__name__ = "kha._Assets.ImageList";
kha__$Assets_ImageList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_ImageList
};
var kha__$Assets_SoundList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.SoundList"] = kha__$Assets_SoundList;
kha__$Assets_SoundList.__name__ = "kha._Assets.SoundList";
kha__$Assets_SoundList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_SoundList
};
var kha__$Assets_BlobList = function() {
	this.names = ["salsaLogo_svg"];
	this.salsaLogo_svgDescription = { name : "salsaLogo_svg", files : ["salsaLogo.svg"], type : "blob"};
	this.salsaLogo_svgName = "salsaLogo_svg";
	this.salsaLogo_svg = null;
};
$hxClasses["kha._Assets.BlobList"] = kha__$Assets_BlobList;
kha__$Assets_BlobList.__name__ = "kha._Assets.BlobList";
kha__$Assets_BlobList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,salsaLogo_svg: null
	,salsaLogo_svgName: null
	,salsaLogo_svgDescription: null
	,salsaLogo_svgLoad: function(done,failure) {
		var tmp;
		if(failure != null) {
			tmp = failure;
		} else {
			var f = haxe_Log.trace;
			var infos = { fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "salsaLogo_svgLoad"};
			tmp = function(v) {
				f(v,infos);
			};
		}
		kha_Assets.loadBlob("salsaLogo_svg",function(blob) {
			done();
		},tmp,{ fileName : "kha/internal/AssetsBuilder.hx", lineNumber : 138, className : "kha._Assets.BlobList", methodName : "salsaLogo_svgLoad"});
	}
	,salsaLogo_svgUnload: function() {
		this.salsaLogo_svg.unload();
		this.salsaLogo_svg = null;
	}
	,names: null
	,__class__: kha__$Assets_BlobList
};
var kha__$Assets_FontList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.FontList"] = kha__$Assets_FontList;
kha__$Assets_FontList.__name__ = "kha._Assets.FontList";
kha__$Assets_FontList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_FontList
};
var kha__$Assets_VideoList = function() {
	this.names = [];
};
$hxClasses["kha._Assets.VideoList"] = kha__$Assets_VideoList;
kha__$Assets_VideoList.__name__ = "kha._Assets.VideoList";
kha__$Assets_VideoList.prototype = {
	get: function(name) {
		return Reflect.field(this,name);
	}
	,names: null
	,__class__: kha__$Assets_VideoList
};
var kha_Assets = function() { };
$hxClasses["kha.Assets"] = kha_Assets;
kha_Assets.__name__ = "kha.Assets";
kha_Assets.__properties__ = {get_videoFormats:"get_videoFormats",get_fontFormats:"get_fontFormats",get_soundFormats:"get_soundFormats",get_imageFormats:"get_imageFormats"};
kha_Assets.loadEverything = function(callback,filter,uncompressSoundsFilter,failed) {
	var fileCount = 0;
	var _g = 0;
	var _g1 = Type.getInstanceFields(kha__$Assets_BlobList);
	while(_g < _g1.length) {
		var blob = _g1[_g];
		++_g;
		if(StringTools.endsWith(blob,"Load")) {
			fileCount += 1;
		}
	}
	var _g2 = 0;
	var _g3 = Type.getInstanceFields(kha__$Assets_ImageList);
	while(_g2 < _g3.length) {
		var image = _g3[_g2];
		++_g2;
		if(StringTools.endsWith(image,"Load")) {
			fileCount += 1;
		}
	}
	var _g4 = 0;
	var _g5 = Type.getInstanceFields(kha__$Assets_SoundList);
	while(_g4 < _g5.length) {
		var sound = _g5[_g4];
		++_g4;
		if(StringTools.endsWith(sound,"Load")) {
			fileCount += 1;
		}
	}
	var _g6 = 0;
	var _g7 = Type.getInstanceFields(kha__$Assets_FontList);
	while(_g6 < _g7.length) {
		var font = _g7[_g6];
		++_g6;
		if(StringTools.endsWith(font,"Load")) {
			fileCount += 1;
		}
	}
	var _g8 = 0;
	var _g9 = Type.getInstanceFields(kha__$Assets_VideoList);
	while(_g8 < _g9.length) {
		var video = _g9[_g8];
		++_g8;
		if(StringTools.endsWith(video,"Load")) {
			fileCount += 1;
		}
	}
	if(fileCount == 0) {
		callback();
		return;
	}
	var filesLeft = fileCount;
	var onLoaded = function() {
		filesLeft -= 1;
		kha_Assets.progress = 1 - filesLeft / fileCount;
		if(filesLeft == 0) {
			callback();
		}
	};
	var _g10 = 0;
	var _g11 = Type.getInstanceFields(kha__$Assets_BlobList);
	while(_g10 < _g11.length) {
		var blob1 = _g11[_g10];
		++_g10;
		if(StringTools.endsWith(blob1,"Load")) {
			var name = HxOverrides.substr(blob1,0,blob1.length - 4);
			var description = Reflect.field(kha_Assets.blobs,name + "Description");
			if(filter == null || filter(description)) {
				(Reflect.field(kha_Assets.blobs,blob1))(onLoaded,function(err) {
					if(failed == null) {
						var f = haxe_Log.trace;
						var infos = { fileName : "kha/Assets.hx", lineNumber : 134, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
	var _g12 = 0;
	var _g13 = Type.getInstanceFields(kha__$Assets_ImageList);
	while(_g12 < _g13.length) {
		var image1 = _g13[_g12];
		++_g12;
		if(StringTools.endsWith(image1,"Load")) {
			var name1 = HxOverrides.substr(image1,0,image1.length - 4);
			var description1 = Reflect.field(kha_Assets.images,name1 + "Description");
			if(filter == null || filter(description1)) {
				(Reflect.field(kha_Assets.images,image1))(onLoaded,function(err1) {
					if(failed == null) {
						var f1 = haxe_Log.trace;
						var infos1 = { fileName : "kha/Assets.hx", lineNumber : 150, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
	var _g14 = 0;
	var _g15 = Type.getInstanceFields(kha__$Assets_SoundList);
	while(_g14 < _g15.length) {
		var sound1 = [_g15[_g14]];
		++_g14;
		if(StringTools.endsWith(sound1[0],"Load")) {
			var name2 = HxOverrides.substr(sound1[0],0,sound1[0].length - 4);
			var description2 = [Reflect.field(kha_Assets.sounds,name2 + "Description")];
			if(filter == null || filter(description2[0])) {
				(Reflect.field(kha_Assets.sounds,sound1[0]))((function(description3,sound2) {
					return function() {
						if(uncompressSoundsFilter == null || uncompressSoundsFilter(description3[0])) {
							var sound3 = Reflect.field(kha_Assets.sounds,sound2[0].substring(0,sound2[0].length - 4));
							sound3.uncompress(onLoaded);
						} else {
							onLoaded();
						}
					};
				})(description2,sound1),failed != null ? failed : (function(infos2,f2) {
					return function(v) {
						f2[0](v,infos2[0]);
					};
				})([{ fileName : "kha/Assets.hx", lineNumber : 172, className : "kha.Assets", methodName : "loadEverything"}],[haxe_Log.trace]));
			} else {
				onLoaded();
			}
		}
	}
	var _g16 = 0;
	var _g17 = Type.getInstanceFields(kha__$Assets_FontList);
	while(_g16 < _g17.length) {
		var font1 = _g17[_g16];
		++_g16;
		if(StringTools.endsWith(font1,"Load")) {
			var name3 = HxOverrides.substr(font1,0,font1.length - 4);
			var description4 = Reflect.field(kha_Assets.fonts,name3 + "Description");
			if(filter == null || filter(description4)) {
				(Reflect.field(kha_Assets.fonts,font1))(onLoaded,function(err2) {
					if(failed == null) {
						var f3 = haxe_Log.trace;
						var infos3 = { fileName : "kha/Assets.hx", lineNumber : 185, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
	var _g18 = 0;
	var _g19 = Type.getInstanceFields(kha__$Assets_VideoList);
	while(_g18 < _g19.length) {
		var video1 = _g19[_g18];
		++_g18;
		if(StringTools.endsWith(video1,"Load")) {
			var name4 = HxOverrides.substr(video1,0,video1.length - 4);
			var description5 = Reflect.field(kha_Assets.videos,name4 + "Description");
			if(filter == null || filter(description5)) {
				(Reflect.field(kha_Assets.videos,video1))(onLoaded,function(err3) {
					if(failed == null) {
						var f4 = haxe_Log.trace;
						var infos4 = { fileName : "kha/Assets.hx", lineNumber : 200, className : "kha.Assets", methodName : "loadEverything"};
					}
					onLoaded();
				});
			} else {
				onLoaded();
			}
		}
	}
};
kha_Assets.loadImage = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.images,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadImageFromDescription(description,function(image) {
		kha_Assets.images[name] = image;
		done(image);
	},tmp);
};
kha_Assets.loadImageFromPath = function(path,readable,done,failed,pos) {
	var description = { files : [path], readable : readable};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadImageFromDescription(description,done,tmp);
};
kha_Assets.get_imageFormats = function() {
	return kha_LoaderImpl.getImageFormats();
};
kha_Assets.loadBlob = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.blobs,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadBlobFromDescription(description,function(blob) {
		kha_Assets.blobs[name] = blob;
		done(blob);
	},tmp);
};
kha_Assets.loadBlobFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadBlobFromDescription(description,done,tmp);
};
kha_Assets.loadSound = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.sounds,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadSoundFromDescription(description,function(sound) {
		kha_Assets.sounds[name] = sound;
		done(sound);
	},tmp);
	return;
};
kha_Assets.loadSoundFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadSoundFromDescription(description,done,tmp);
	return;
};
kha_Assets.get_soundFormats = function() {
	return kha_LoaderImpl.getSoundFormats();
};
kha_Assets.loadFont = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.fonts,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadFontFromDescription(description,function(font) {
		kha_Assets.fonts[name] = font;
		done(font);
	},tmp);
	return;
};
kha_Assets.loadFontFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadFontFromDescription(description,done,tmp);
	return;
};
kha_Assets.get_fontFormats = function() {
	return ["ttf"];
};
kha_Assets.loadVideo = function(name,done,failed,pos) {
	var description = Reflect.field(kha_Assets.videos,name + "Description");
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadVideoFromDescription(description,function(video) {
		kha_Assets.videos[name] = video;
		done(video);
	},tmp);
	return;
};
kha_Assets.loadVideoFromPath = function(path,done,failed,pos) {
	var description = { files : [path]};
	var tmp;
	if(failed != null) {
		tmp = failed;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		tmp = function(v) {
			f(v,infos);
		};
	}
	kha_LoaderImpl.loadVideoFromDescription(description,done,tmp);
	return;
};
kha_Assets.get_videoFormats = function() {
	return kha_LoaderImpl.getVideoFormats();
};
kha_Assets.reporter = function(custom,pos) {
	if(custom != null) {
		return custom;
	} else {
		var f = haxe_Log.trace;
		var infos = pos;
		return function(v) {
			f(v,infos);
		};
	}
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = "kha.Canvas";
kha_Canvas.prototype = {
	get_g4: null
	,get_g2: null
	,get_g1: null
	,get_height: null
	,get_width: null
	,width: null
	,height: null
	,g1: null
	,g2: null
	,g4: null
	,__class__: kha_Canvas
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_height:"get_height",get_width:"get_width"}
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = "kha.Resource";
kha_Resource.prototype = {
	unload: null
	,__class__: kha_Resource
};
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = "kha.Image";
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported:"get_nonPow2Supported",get_maxSize:"get_maxSize"};
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0,1);
	}
};
kha_Image.create3D = function(width,height,depth,format,usage) {
	return null;
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil,antiAliasingSamples);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false,0,1);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0,1);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	return null;
};
kha_Image.fromBytes3D = function(bytes,width,height,depth,format,usage) {
	return null;
};
kha_Image.fromEncodedBytes = function(bytes,fileExtention,doneCallback,errorCallback,readable) {
	if(readable == null) {
		readable = false;
	}
	var dataUrl = "data:image;base64," + haxe_crypto_Base64.encode(bytes);
	var imageElement = js_Boot.__cast(window.document.createElement("img") , HTMLImageElement);
	imageElement.onload = function() {
		var tmp = kha_Image.fromImage(imageElement,readable);
		doneCallback(tmp);
	};
	imageElement.onerror = function() {
		errorCallback("Image was not created");
	};
	imageElement.src = dataUrl;
};
kha_Image.fromVideo = function(video) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false);
		img.video = video.element;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false,0,1);
		img1.video = video.element;
		img1.createTexture();
		return img1;
	}
};
kha_Image.get_maxSize = function() {
	if(kha_SystemImpl.gl == null) {
		return 8192;
	} else {
		return kha_SystemImpl.gl.getParameter(3379);
	}
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.prototype = {
	isOpaque: function(x,y) {
		return false;
	}
	,at: function(x,y) {
		return -16777216;
	}
	,unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,getPixels: function() {
		return null;
	}
	,generateMipmaps: function(levels) {
	}
	,setMipmaps: function(mipmaps) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,clear: function(x,y,z,width,height,depth,color) {
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,depth: null
	,get_depth: function() {
		return 1;
	}
	,realWidth: null
	,get_realWidth: function() {
		return 0;
	}
	,realHeight: null
	,get_realHeight: function() {
		return 0;
	}
	,g1: null
	,get_g1: function() {
		return null;
	}
	,g2: null
	,get_g2: function() {
		return null;
	}
	,g4: null
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_realHeight:"get_realHeight",get_realWidth:"get_realWidth",get_depth:"get_depth",get_height:"get_height",get_width:"get_width"}
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = "kha.CanvasImage";
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,frameBuffer: null
	,graphics1: null
	,g2canvas: null
	,get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return -16777216;
			} else {
				this.createImageData();
			}
		}
		return kha__$Color_Color_$Impl_$._new(this.data.data[y * (this.image.width | 0) * 4 + x * 4]);
	}
	,createImageData: function() {
		kha_CanvasImage.context.strokeStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillRect(0,0,this.image.width,this.image.height);
		kha_CanvasImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
		this.data = kha_CanvasImage.context.getImageData(0,0,this.image.width,this.image.height);
	}
	,texture: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == kha_graphics4_TextureFormat.RGBA32 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g = 0;
				var _g1 = this.get_height();
				while(_g < _g1) {
					var y = _g++;
					var _g2 = 0;
					var _g11 = this.get_width();
					while(_g2 < _g11) {
						var x = _g2++;
						var _this = this.bytes;
						var pos = y * this.get_width() + x;
						var value = _this.b[pos];
						var pos1 = y * this.get_width() * 4 + x * 4;
						rgbaBytes.b[pos1] = value;
						var pos2 = y * this.get_width() * 4 + x * 4 + 1;
						rgbaBytes.b[pos2] = value;
						var pos3 = y * this.get_width() * 4 + x * 4 + 2;
						rgbaBytes.b[pos3] = value;
						var pos4 = y * this.get_width() * 4 + x * 4 + 3;
						rgbaBytes.b[pos4] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = $hx_exports["kha"]["_Color"]["Color_Impl_"] = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = "kha._Color.Color_Impl_";
kha__$Color_Color_$Impl_$.__properties__ = {set_value:"set_value",get_value:"get_value",set_A:"set_A",get_A:"get_A",set_B:"set_B",get_B:"get_B",set_G:"set_G",get_G:"get_G",set_R:"set_R",get_R:"get_R",set_Ab:"set_Ab",get_Ab:"get_Ab",set_Bb:"set_Bb",get_Bb:"get_Bb",set_Gb:"set_Gb",get_Gb:"get_Gb",set_Rb:"set_Rb",get_Rb:"get_Rb"};
kha__$Color_Color_$Impl_$.fromValue = function(value) {
	return kha__$Color_Color_$Impl_$._new(value);
};
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha__$Color_Color_$Impl_$._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha__$Color_Color_$Impl_$.fromString = function(value) {
	if((value.length == 7 || value.length == 9) && value.charCodeAt(0) == 35) {
		var colorValue = Std.parseInt("0x" + HxOverrides.substr(value,1,null));
		if(value.length == 7) {
			colorValue += -16777216;
		}
		return kha__$Color_Color_$Impl_$._new(colorValue);
	} else {
		throw new js__$Boot_HaxeError("Invalid Color string: '" + value + "'");
	}
};
kha__$Color_Color_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_value = function(this1) {
	return this1;
};
kha__$Color_Color_$Impl_$.set_value = function(this1,value) {
	this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_Rb = function(this1) {
	return (this1 & 16711680) >>> 16;
};
kha__$Color_Color_$Impl_$.get_Gb = function(this1) {
	return (this1 & 65280) >>> 8;
};
kha__$Color_Color_$Impl_$.get_Bb = function(this1) {
	return this1 & 255;
};
kha__$Color_Color_$Impl_$.get_Ab = function(this1) {
	return this1 >>> 24;
};
kha__$Color_Color_$Impl_$.set_Rb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | i << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Gb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | i << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Bb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | i;
	return i;
};
kha__$Color_Color_$Impl_$.set_Ab = function(this1,i) {
	this1 = i << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.get_R = function(this1) {
	return ((this1 & 16711680) >>> 16) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_G = function(this1) {
	return ((this1 & 65280) >>> 8) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_B = function(this1) {
	return (this1 & 255) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_A = function(this1) {
	return (this1 >>> 24) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.set_R = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_G = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (f * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_B = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | (f * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_A = function(this1,f) {
	this1 = (f * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
var kha_CompilerDefines = function() { };
$hxClasses["kha.CompilerDefines"] = kha_CompilerDefines;
kha_CompilerDefines.__name__ = "kha.CompilerDefines";
var kha_Display = function() {
};
$hxClasses["kha.Display"] = kha_Display;
kha_Display.__name__ = "kha.Display";
kha_Display.__properties__ = {get_all:"get_all",get_primary:"get_primary"};
kha_Display.get_primary = function() {
	return kha_Display.instance;
};
kha_Display.get_all = function() {
	return [kha_Display.get_primary()];
};
kha_Display.prototype = {
	get_available: function() {
		return true;
	}
	,get_name: function() {
		return "Display";
	}
	,get_x: function() {
		return window.screen.left;
	}
	,get_y: function() {
		return window.screen.top;
	}
	,get_width: function() {
		return window.screen.width;
	}
	,get_height: function() {
		return window.screen.height;
	}
	,get_frequency: function() {
		return 60;
	}
	,get_pixelsPerInch: function() {
		var dpiElement = window.document.createElement("div");
		dpiElement.style.position = "absolute";
		dpiElement.style.width = "1in";
		dpiElement.style.height = "1in";
		dpiElement.style.left = "-100%";
		dpiElement.style.top = "-100%";
		window.document.body.appendChild(dpiElement);
		var dpi = dpiElement.offsetHeight;
		dpiElement.remove();
		return dpi;
	}
	,get_modes: function() {
		return [];
	}
	,__class__: kha_Display
	,__properties__: {get_modes:"get_modes",get_pixelsPerInch:"get_pixelsPerInch",get_frequency:"get_frequency",get_height:"get_height",get_width:"get_width",get_y:"get_y",get_x:"get_x",get_name:"get_name",get_available:"get_available"}
};
var kha_DisplayMode = function(width,height,frequency,bitsPerPixel) {
	this.width = width;
	this.height = height;
	this.frequency = frequency;
	this.bitsPerPixel = bitsPerPixel;
};
$hxClasses["kha.DisplayMode"] = kha_DisplayMode;
kha_DisplayMode.__name__ = "kha.DisplayMode";
kha_DisplayMode.prototype = {
	width: null
	,height: null
	,frequency: null
	,bitsPerPixel: null
	,__class__: kha_DisplayMode
};
var kha_Framebuffer = function($window,g1,g2,g4,g5) {
	this.window = $window;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
	this.graphics5 = g5;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = "kha.Framebuffer";
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	window: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,graphics5: null
	,init: function(g1,g2,g4,g5) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
		this.graphics5 = g5;
	}
	,get_g1: function() {
		return this.graphics1;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,get_g5: function() {
		return this.graphics5;
	}
	,width: null
	,get_width: function() {
		return kha_System.windowWidth(this.window);
	}
	,height: null
	,get_height: function() {
		return kha_System.windowHeight(this.window);
	}
	,__class__: kha_Framebuffer
	,__properties__: {get_height:"get_height",get_width:"get_width",get_g5:"get_g5",get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1"}
};
var kha_FramebufferOptions = function(frequency,verticalSync,colorBufferBits,depthBufferBits,stencilBufferBits,samplesPerPixel) {
	if(samplesPerPixel == null) {
		samplesPerPixel = 1;
	}
	if(stencilBufferBits == null) {
		stencilBufferBits = 8;
	}
	if(depthBufferBits == null) {
		depthBufferBits = 16;
	}
	if(colorBufferBits == null) {
		colorBufferBits = 32;
	}
	if(verticalSync == null) {
		verticalSync = true;
	}
	if(frequency == null) {
		frequency = 60;
	}
	this.samplesPerPixel = 1;
	this.stencilBufferBits = 8;
	this.depthBufferBits = 16;
	this.colorBufferBits = 32;
	this.verticalSync = true;
	this.frequency = 60;
	this.frequency = frequency;
	this.verticalSync = verticalSync;
	this.colorBufferBits = colorBufferBits;
	this.depthBufferBits = depthBufferBits;
	this.stencilBufferBits = stencilBufferBits;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.FramebufferOptions"] = kha_FramebufferOptions;
kha_FramebufferOptions.__name__ = "kha.FramebufferOptions";
kha_FramebufferOptions.prototype = {
	frequency: null
	,verticalSync: null
	,colorBufferBits: null
	,depthBufferBits: null
	,stencilBufferBits: null
	,samplesPerPixel: null
	,__class__: kha_FramebufferOptions
};
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = "kha.AlignedQuad";
kha_AlignedQuad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,xadvance: null
	,__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) {
		var char = chars[_g];
		++_g;
		char.yoff += this.baseline;
	}
	this.texture = kha_Image.create(width,height,kha_graphics4_TextureFormat.L8);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	var _g2 = height;
	while(_g1 < _g2) {
		var y = _g1++;
		var _g11 = 0;
		var _g21 = width;
		while(_g11 < _g21) {
			var x = _g11++;
			var v = pixels.readU8(pos);
			bytes.b[pos] = v;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = "kha.KravurImage";
kha_KravurImage.prototype = {
	mySize: null
	,chars: null
	,texture: null
	,width: null
	,height: null
	,baseline: null
	,getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(q,char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,getCharWidth: function(charIndex) {
		if(this.chars.length == 0) {
			return 0;
		}
		var offset = kha_KravurImage.charBlocks[0];
		if(charIndex < offset) {
			return this.chars[0].xadvance;
		}
		var _g = 1;
		var _g1 = kha_KravurImage.charBlocks.length / 2 | 0;
		while(_g < _g1) {
			var i = _g++;
			var prevEnd = kha_KravurImage.charBlocks[i * 2 - 1];
			var start = kha_KravurImage.charBlocks[i * 2];
			if(charIndex > start - 1) {
				offset += start - 1 - prevEnd;
			}
		}
		if(charIndex - offset >= this.chars.length) {
			return this.chars[0].xadvance;
		}
		return this.chars[charIndex - offset].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(string) {
		var str = new String(string);
		var width = 0;
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var c = _g++;
			width += this.getCharWidth(HxOverrides.cca(str,c));
		}
		return width;
	}
	,charactersWidth: function(characters,start,length) {
		var width = 0;
		var _g = start;
		var _g1 = start + length;
		while(_g < _g1) {
			var i = _g++;
			width += this.getCharWidth(characters[i]);
		}
		return width;
	}
	,getBaselinePosition: function() {
		return this.baseline;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = "kha.Kravur";
kha_Kravur.__interfaces__ = [kha_Resource];
kha_Kravur.fromBytes = function(bytes) {
	return new kha_Kravur(kha_internal_BytesBlob.fromBytes(bytes));
};
kha_Kravur.prototype = {
	oldGlyphs: null
	,blob: null
	,images: null
	,_get: function(fontSize) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		if(glyphs != this.oldGlyphs) {
			this.oldGlyphs = glyphs;
			kha_KravurImage.charBlocks = [glyphs[0]];
			var nextChar = kha_KravurImage.charBlocks[0] + 1;
			var _g = 1;
			var _g1 = glyphs.length;
			while(_g < _g1) {
				var i = _g++;
				if(glyphs[i] != nextChar) {
					kha_KravurImage.charBlocks.push(glyphs[i - 1]);
					kha_KravurImage.charBlocks.push(glyphs[i]);
					nextChar = glyphs[i] + 1;
				} else {
					++nextChar;
				}
			}
			kha_KravurImage.charBlocks.push(glyphs[glyphs.length - 1]);
		}
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var width = 64;
			var height = 32;
			var this1 = new Array(glyphs.length);
			var baked = this1;
			var _g2 = 0;
			var _g11 = baked.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				baked[i1] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			}
			var pixels = null;
			var status = -1;
			while(status <= 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var ascent = Math.round(metrics.ascent * scale);
			var descent = Math.round(metrics.descent * scale);
			var lineGap = Math.round(metrics.lineGap * scale);
			var image = new kha_KravurImage(fontSize | 0,ascent,descent,lineGap,width,height,baked,pixels);
			this.images.h[imageIndex] = image;
			return image;
		}
		return this.images.h[imageIndex];
	}
	,height: function(fontSize) {
		return this._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	,widthOfCharacters: function(fontSize,characters,start,length) {
		return this._get(fontSize).charactersWidth(characters,start,length);
	}
	,baseline: function(fontSize) {
		return this._get(fontSize).getBaselinePosition();
	}
	,unload: function() {
		this.blob = null;
		this.images = null;
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = "kha.LoaderImpl";
kha_LoaderImpl.getImageFormats = function() {
	return ["png","jpg","hdr"];
};
kha_LoaderImpl.loadImageFromDescription = function(desc,done,failed) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			var tmp = kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,kha_graphics4_TextureFormat.RGBA128,readable ? kha_graphics4_Usage.DynamicUsage : kha_graphics4_Usage.StaticUsage);
			done(tmp);
		},failed);
	} else {
		var img = window.document.createElement("img");
		img.onerror = function(event) {
			failed({ url : desc.files[0], error : event});
		};
		img.onload = function(event1) {
			var tmp1 = kha_Image.fromImage(img,readable);
			done(tmp1);
		};
		img.src = desc.files[0];
		img.crossOrigin = "";
	}
};
kha_LoaderImpl.getSoundFormats = function() {
	var element = window.document.createElement("audio");
	var formats = [];
	if(element.canPlayType("audio/mp4") != "") {
		formats.push("mp4");
	}
	if(element.canPlayType("audio/mp3") != "") {
		formats.push("mp3");
	}
	if(kha_SystemImpl._hasWebAudio || element.canPlayType("audio/ogg") != "") {
		formats.push("ogg");
	}
	return formats;
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done,failed) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g = 0;
			var _g1 = desc.files.length;
			while(_g < _g1) {
				var i = _g++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done,failed);
					return;
				}
			}
		}
		if(element.canPlayType("audio/mp3") != "") {
			var _g2 = 0;
			var _g11 = desc.files.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var file1 = desc.files[i1];
				if(StringTools.endsWith(file1,".mp3")) {
					new kha_js_WebAudioSound(file1,done,failed);
					return;
				}
			}
		}
		var _g3 = 0;
		var _g12 = desc.files.length;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var file2 = desc.files[i2];
			if(StringTools.endsWith(file2,".ogg")) {
				new kha_js_WebAudioSound(file2,done,failed);
				return;
			}
		}
	} else if(kha_SystemImpl.mobile) {
		var element1 = window.document.createElement("audio");
		if(element1.canPlayType("audio/mp4") != "") {
			var _g4 = 0;
			var _g13 = desc.files.length;
			while(_g4 < _g13) {
				var i3 = _g4++;
				var file3 = desc.files[i3];
				if(StringTools.endsWith(file3,".mp4")) {
					new kha_js_MobileWebAudioSound(file3,done,failed);
					return;
				}
			}
		}
		if(element1.canPlayType("audio/mp3") != "") {
			var _g5 = 0;
			var _g14 = desc.files.length;
			while(_g5 < _g14) {
				var i4 = _g5++;
				var file4 = desc.files[i4];
				if(StringTools.endsWith(file4,".mp3")) {
					new kha_js_MobileWebAudioSound(file4,done,failed);
					return;
				}
			}
		}
		var _g6 = 0;
		var _g15 = desc.files.length;
		while(_g6 < _g15) {
			var i5 = _g6++;
			var file5 = desc.files[i5];
			if(StringTools.endsWith(file5,".ogg")) {
				new kha_js_MobileWebAudioSound(file5,done,failed);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done,failed);
	}
};
kha_LoaderImpl.getVideoFormats = function() {
	return ["mp4","webm"];
};
kha_LoaderImpl.loadVideoFromDescription = function(desc,done,failed) {
	kha_js_Video.fromFile(desc.files,done);
};
kha_LoaderImpl.loadRemote = function(desc,done,failed) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = haxe_io_Bytes.ofData(byteArray);
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g = 0;
				var _g1 = data.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[i] = data[i];
				}
			} else {
				failed({ url : desc.files[0]});
				return;
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			failed({ url : desc.files[0]});
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadRemote(desc,done,failed);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done,failed) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		done(new kha_Kravur(blob));
	},failed);
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = "kha.TimeTask";
kha_TimeTask.prototype = {
	task: null
	,start: null
	,period: null
	,duration: null
	,next: null
	,id: null
	,groupId: null
	,active: null
	,paused: null
	,__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = "kha.FrameTask";
kha_FrameTask.prototype = {
	task: null
	,priority: null
	,id: null
	,active: null
	,paused: null
	,__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = "kha.Scheduler";
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_Window.get(0).get_vSynced();
	var hz = kha_Display.get_primary().get_frequency();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g = 0;
	var _g1 = kha_Scheduler.DIF_COUNT;
	while(_g < _g1) {
		var i = _g++;
		kha_Scheduler.deltas[i] = 0;
	}
	if(restartTimers) {
		var _g2 = 0;
		var _g3 = kha_Scheduler.timeTasks;
		while(_g2 < _g3.length) {
			var timeTask = _g3[_g2];
			++_g2;
			timeTask.paused = false;
		}
		var _g4 = 0;
		var _g5 = kha_Scheduler.frameTasks;
		while(_g4 < _g5.length) {
			var frameTask = _g5[_g4];
			++_g4;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.stop = function() {
	kha_Scheduler.stopped = true;
};
kha_Scheduler.isStopped = function() {
	return kha_Scheduler.stopped;
};
kha_Scheduler.warpTimeTasksBack = function(time,tasks) {
	var _g = 0;
	while(_g < tasks.length) {
		var timeTask = tasks[_g];
		++_g;
		if(timeTask.start >= time) {
			timeTask.next = timeTask.start;
		} else if(timeTask.period > 0) {
			var sinceStart = time - timeTask.start;
			var times = Math.ceil(sinceStart / timeTask.period);
			timeTask.next = timeTask.start + times * timeTask.period;
		}
	}
};
kha_Scheduler.warp = function(time) {
	if(time < kha_Scheduler.lastTime) {
		kha_Scheduler.current = time;
		kha_Scheduler.lastTime = time;
		kha_Scheduler.warpTimeTasksBack(time,kha_Scheduler.outdatedTimeTasks);
		kha_Scheduler.warpTimeTasksBack(time,kha_Scheduler.timeTasks);
		var _g = 0;
		var _g1 = kha_Scheduler.outdatedTimeTasks;
		while(_g < _g1.length) {
			var task = _g1[_g];
			++_g;
			if(task.next >= time) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g2 = 0;
		var _g3 = kha_Scheduler.timeTasksScratchpad;
		while(_g2 < _g3.length) {
			var task1 = _g3[_g2];
			++_g2;
			HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
		}
		var _g4 = 0;
		var _g5 = kha_Scheduler.timeTasksScratchpad;
		while(_g4 < _g5.length) {
			var task2 = _g5[_g4];
			++_g4;
			kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,task2);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	} else if(time > kha_Scheduler.lastTime) {
		kha_Scheduler.startTime -= time - kha_Scheduler.lastTime;
		kha_Scheduler.current = time;
		kha_Scheduler.lastTime = time;
		kha_Scheduler.executeTimeTasks(time);
	}
};
kha_Scheduler.executeFrame = function() {
	var now = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta >= 0) {
		if(kha_network_Session.the() == null) {
			if(delta > kha_Scheduler.maxframetime) {
				kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
				delta = kha_Scheduler.maxframetime;
				frameEnd += delta;
			} else if(kha_Scheduler.vsync) {
				var realdif = kha_Scheduler.onedifhz;
				while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
				delta = realdif;
				var _g = 0;
				var _g1 = kha_Scheduler.DIF_COUNT - 2;
				while(_g < _g1) {
					var i = _g++;
					delta += kha_Scheduler.deltas[i];
					kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
				}
				delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
				delta /= kha_Scheduler.DIF_COUNT;
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
				frameEnd += delta;
			} else {
				var _g2 = 0;
				var _g11 = kha_Scheduler.DIF_COUNT - 1;
				while(_g2 < _g11) {
					var i1 = _g2++;
					kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
				}
				kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
				var next = 0;
				var _g21 = 0;
				var _g3 = kha_Scheduler.DIF_COUNT;
				while(_g21 < _g3) {
					var i2 = _g21++;
					next += kha_Scheduler.deltas[i2];
				}
				next /= kha_Scheduler.DIF_COUNT;
				frameEnd += next;
			}
		} else {
			frameEnd += delta;
		}
		kha_Scheduler.lastTime = frameEnd;
		if(!kha_Scheduler.stopped) {
			kha_Scheduler.current = frameEnd;
		}
		var _g4 = 0;
		var _g12 = kha_Scheduler.pausedTimeTasks;
		while(_g4 < _g12.length) {
			var pausedTask = _g12[_g4];
			++_g4;
			pausedTask.next += delta;
		}
		if(kha_Scheduler.stopped) {
			var _g22 = 0;
			var _g31 = kha_Scheduler.timeTasks;
			while(_g22 < _g31.length) {
				var timeTask = _g31[_g22];
				++_g22;
				timeTask.next += delta;
			}
		}
		kha_Scheduler.executeTimeTasks(frameEnd);
		var _g23 = 0;
		var _g32 = kha_Scheduler.outdatedTimeTasks;
		while(_g23 < _g32.length) {
			var task = _g32[_g23];
			++_g23;
			if(task.next < frameEnd - 10.0) {
				kha_Scheduler.timeTasksScratchpad.push(task);
			}
		}
		var _g41 = 0;
		var _g5 = kha_Scheduler.timeTasksScratchpad;
		while(_g41 < _g5.length) {
			var task1 = _g5[_g41];
			++_g41;
			HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
		}
		while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	}
	kha_Scheduler.sortFrameTasks();
	var _g6 = 0;
	var _g13 = kha_Scheduler.frameTasks;
	while(_g6 < _g13.length) {
		var frameTask = _g13[_g6];
		++_g6;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g24 = 0;
	var _g33 = kha_Scheduler.frameTasks;
	while(_g24 < _g33.length) {
		var frameTask1 = _g33[_g24];
		++_g24;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.executeTimeTasks = function(until) {
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= until) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,until);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.DIF_COUNT;
	while(_g2 < _g3) {
		var i = _g2++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableFrameTask = function(task,priority) {
	kha_Scheduler.frameTasks.push(new kha_FrameTask(task,priority,++kha_Scheduler.currentFrameTaskId));
	kha_Scheduler.frame_tasks_sorted = false;
	return kha_Scheduler.currentFrameTaskId;
};
kha_Scheduler.addFrameTask = function(task,priority) {
	return kha_Scheduler.addBreakableFrameTask(function() {
		task();
		return true;
	},priority);
};
kha_Scheduler.pauseFrameTask = function(id,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.paused = paused;
			break;
		}
	}
};
kha_Scheduler.removeFrameTask = function(id) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.active = false;
			break;
		}
	}
};
kha_Scheduler.generateGroupId = function() {
	return ++kha_Scheduler.currentGroupId;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addBreakableTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.getTimeTask = function(id) {
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		return kha_Scheduler.activeTimeTask;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.id == id) {
			return timeTask;
		}
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.pausedTimeTasks;
	while(_g2 < _g3.length) {
		var timeTask1 = _g3[_g2];
		++_g2;
		if(timeTask1.id == id) {
			return timeTask1;
		}
	}
	return null;
};
kha_Scheduler.pauseTimeTask = function(id,paused) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.pauseRunningTimeTask = function(timeTask,paused) {
	timeTask.paused = paused;
	if(paused) {
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
		kha_Scheduler.pausedTimeTasks.push(timeTask);
	} else {
		kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,timeTask);
		HxOverrides.remove(kha_Scheduler.pausedTimeTasks,timeTask);
	}
};
kha_Scheduler.pauseTimeTasks = function(groupId,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
		}
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.removeTimeTask = function(id) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		timeTask.active = false;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
	}
};
kha_Scheduler.removeTimeTasks = function(groupId) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			timeTask.active = false;
			kha_Scheduler.timeTasksScratchpad.push(timeTask);
		}
	}
	var _g2 = 0;
	var _g3 = kha_Scheduler.timeTasksScratchpad;
	while(_g2 < _g3.length) {
		var timeTask1 = _g3[_g2];
		++_g2;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask1);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.active = false;
	}
};
kha_Scheduler.numTasksInSchedule = function() {
	return kha_Scheduler.timeTasks.length + kha_Scheduler.frameTasks.length;
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g = 0;
	var _g1 = list.length;
	while(_g < _g1) {
		var i = _g++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_ScreenRotation = $hxEnums["kha.ScreenRotation"] = { __ename__ : "kha.ScreenRotation", __constructs__ : ["RotationNone","Rotation90","Rotation180","Rotation270"]
	,RotationNone: {_hx_index:0,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation90: {_hx_index:1,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation180: {_hx_index:2,__enum__:"kha.ScreenRotation",toString:$estr}
	,Rotation270: {_hx_index:3,__enum__:"kha.ScreenRotation",toString:$estr}
};
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = "kha.Shaders";
kha_Shaders.init = function() {
	var blobs = [];
	var data = Reflect.field(kha_Shaders,"painter_colored_iron_fragData" + 0);
	var bytes = haxe_Unserializer.run(data);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	var data1 = Reflect.field(kha_Shaders,"painter_colored_iron_fragData" + 1);
	var bytes1 = haxe_Unserializer.run(data1);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes1));
	var data2 = Reflect.field(kha_Shaders,"painter_colored_iron_fragData" + 2);
	var bytes2 = haxe_Unserializer.run(data2);
	blobs.push(kha_internal_BytesBlob.fromBytes(bytes2));
	kha_Shaders.painter_colored_iron_frag = new kha_graphics4_FragmentShader(blobs,["painter-colored-iron.frag.essl","painter-colored-iron-relaxed.frag.essl","painter-colored-iron-webgl2.frag.essl"]);
	var blobs1 = [];
	var data3 = Reflect.field(kha_Shaders,"painter_colored_iron_vertData" + 0);
	var bytes3 = haxe_Unserializer.run(data3);
	blobs1.push(kha_internal_BytesBlob.fromBytes(bytes3));
	var data4 = Reflect.field(kha_Shaders,"painter_colored_iron_vertData" + 1);
	var bytes4 = haxe_Unserializer.run(data4);
	blobs1.push(kha_internal_BytesBlob.fromBytes(bytes4));
	var data5 = Reflect.field(kha_Shaders,"painter_colored_iron_vertData" + 2);
	var bytes5 = haxe_Unserializer.run(data5);
	blobs1.push(kha_internal_BytesBlob.fromBytes(bytes5));
	kha_Shaders.painter_colored_iron_vert = new kha_graphics4_VertexShader(blobs1,["painter-colored-iron.vert.essl","painter-colored-iron-relaxed.vert.essl","painter-colored-iron-webgl2.vert.essl"]);
	var blobs2 = [];
	var data6 = Reflect.field(kha_Shaders,"painter_colored_fragData" + 0);
	var bytes6 = haxe_Unserializer.run(data6);
	blobs2.push(kha_internal_BytesBlob.fromBytes(bytes6));
	var data7 = Reflect.field(kha_Shaders,"painter_colored_fragData" + 1);
	var bytes7 = haxe_Unserializer.run(data7);
	blobs2.push(kha_internal_BytesBlob.fromBytes(bytes7));
	var data8 = Reflect.field(kha_Shaders,"painter_colored_fragData" + 2);
	var bytes8 = haxe_Unserializer.run(data8);
	blobs2.push(kha_internal_BytesBlob.fromBytes(bytes8));
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs2,["painter-colored.frag.essl","painter-colored-relaxed.frag.essl","painter-colored-webgl2.frag.essl"]);
	var blobs3 = [];
	var data9 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 0);
	var bytes9 = haxe_Unserializer.run(data9);
	blobs3.push(kha_internal_BytesBlob.fromBytes(bytes9));
	var data10 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 1);
	var bytes10 = haxe_Unserializer.run(data10);
	blobs3.push(kha_internal_BytesBlob.fromBytes(bytes10));
	var data11 = Reflect.field(kha_Shaders,"painter_colored_vertData" + 2);
	var bytes11 = haxe_Unserializer.run(data11);
	blobs3.push(kha_internal_BytesBlob.fromBytes(bytes11));
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs3,["painter-colored.vert.essl","painter-colored-relaxed.vert.essl","painter-colored-webgl2.vert.essl"]);
	var blobs4 = [];
	var data12 = Reflect.field(kha_Shaders,"painter_image_fragData" + 0);
	var bytes12 = haxe_Unserializer.run(data12);
	blobs4.push(kha_internal_BytesBlob.fromBytes(bytes12));
	var data13 = Reflect.field(kha_Shaders,"painter_image_fragData" + 1);
	var bytes13 = haxe_Unserializer.run(data13);
	blobs4.push(kha_internal_BytesBlob.fromBytes(bytes13));
	var data14 = Reflect.field(kha_Shaders,"painter_image_fragData" + 2);
	var bytes14 = haxe_Unserializer.run(data14);
	blobs4.push(kha_internal_BytesBlob.fromBytes(bytes14));
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs4,["painter-image.frag.essl","painter-image-relaxed.frag.essl","painter-image-webgl2.frag.essl"]);
	var blobs5 = [];
	var data15 = Reflect.field(kha_Shaders,"painter_image_vertData" + 0);
	var bytes15 = haxe_Unserializer.run(data15);
	blobs5.push(kha_internal_BytesBlob.fromBytes(bytes15));
	var data16 = Reflect.field(kha_Shaders,"painter_image_vertData" + 1);
	var bytes16 = haxe_Unserializer.run(data16);
	blobs5.push(kha_internal_BytesBlob.fromBytes(bytes16));
	var data17 = Reflect.field(kha_Shaders,"painter_image_vertData" + 2);
	var bytes17 = haxe_Unserializer.run(data17);
	blobs5.push(kha_internal_BytesBlob.fromBytes(bytes17));
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs5,["painter-image.vert.essl","painter-image-relaxed.vert.essl","painter-image-webgl2.vert.essl"]);
	var blobs6 = [];
	var data18 = Reflect.field(kha_Shaders,"painter_text_fragData" + 0);
	var bytes18 = haxe_Unserializer.run(data18);
	blobs6.push(kha_internal_BytesBlob.fromBytes(bytes18));
	var data19 = Reflect.field(kha_Shaders,"painter_text_fragData" + 1);
	var bytes19 = haxe_Unserializer.run(data19);
	blobs6.push(kha_internal_BytesBlob.fromBytes(bytes19));
	var data20 = Reflect.field(kha_Shaders,"painter_text_fragData" + 2);
	var bytes20 = haxe_Unserializer.run(data20);
	blobs6.push(kha_internal_BytesBlob.fromBytes(bytes20));
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs6,["painter-text.frag.essl","painter-text-relaxed.frag.essl","painter-text-webgl2.frag.essl"]);
	var blobs7 = [];
	var data21 = Reflect.field(kha_Shaders,"painter_text_vertData" + 0);
	var bytes21 = haxe_Unserializer.run(data21);
	blobs7.push(kha_internal_BytesBlob.fromBytes(bytes21));
	var data22 = Reflect.field(kha_Shaders,"painter_text_vertData" + 1);
	var bytes22 = haxe_Unserializer.run(data22);
	blobs7.push(kha_internal_BytesBlob.fromBytes(bytes22));
	var data23 = Reflect.field(kha_Shaders,"painter_text_vertData" + 2);
	var bytes23 = haxe_Unserializer.run(data23);
	blobs7.push(kha_internal_BytesBlob.fromBytes(bytes23));
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs7,["painter-text.vert.essl","painter-text-relaxed.vert.essl","painter-text-webgl2.vert.essl"]);
	var blobs8 = [];
	var data24 = Reflect.field(kha_Shaders,"painter_video_fragData" + 0);
	var bytes24 = haxe_Unserializer.run(data24);
	blobs8.push(kha_internal_BytesBlob.fromBytes(bytes24));
	var data25 = Reflect.field(kha_Shaders,"painter_video_fragData" + 1);
	var bytes25 = haxe_Unserializer.run(data25);
	blobs8.push(kha_internal_BytesBlob.fromBytes(bytes25));
	var data26 = Reflect.field(kha_Shaders,"painter_video_fragData" + 2);
	var bytes26 = haxe_Unserializer.run(data26);
	blobs8.push(kha_internal_BytesBlob.fromBytes(bytes26));
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs8,["painter-video.frag.essl","painter-video-relaxed.frag.essl","painter-video-webgl2.frag.essl"]);
	var blobs9 = [];
	var data27 = Reflect.field(kha_Shaders,"painter_video_vertData" + 0);
	var bytes27 = haxe_Unserializer.run(data27);
	blobs9.push(kha_internal_BytesBlob.fromBytes(bytes27));
	var data28 = Reflect.field(kha_Shaders,"painter_video_vertData" + 1);
	var bytes28 = haxe_Unserializer.run(data28);
	blobs9.push(kha_internal_BytesBlob.fromBytes(bytes28));
	var data29 = Reflect.field(kha_Shaders,"painter_video_vertData" + 2);
	var bytes29 = haxe_Unserializer.run(data29);
	blobs9.push(kha_internal_BytesBlob.fromBytes(bytes29));
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs9,["painter-video.vert.essl","painter-video-relaxed.vert.essl","painter-video-webgl2.vert.essl"]);
};
var kha_Sound = function() {
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = "kha.Sound";
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	compressedData: null
	,uncompressedData: null
	,uncompress: function(done) {
		if(this.uncompressedData != null) {
			done();
			return;
		}
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			var this1 = new Float32Array(count * 2);
			this.uncompressedData = this1;
			var _g = 0;
			var _g1 = count;
			while(_g < _g1) {
				var i = _g++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			var this2 = new Float32Array(count);
			this.uncompressedData = this2;
			var _g2 = 0;
			var _g11 = count;
			while(_g2 < _g11) {
				var i1 = _g2++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.compressedData = null;
		done();
	}
	,unload: function() {
		this.compressedData = null;
		this.uncompressedData = null;
	}
	,__class__: kha_Sound
};
var kha_SystemOptions = function(title,width,height,$window,framebuffer) {
	if(height == null) {
		height = -1;
	}
	if(width == null) {
		width = -1;
	}
	if(title == null) {
		title = "Kha";
	}
	this.framebuffer = null;
	this.window = null;
	this.height = -1;
	this.width = -1;
	this.title = "Kha";
	this.title = title;
	this.window = $window == null ? new kha_WindowOptions(null,null,null,null,null,null,null,null,null) : $window;
	if(width > 0) {
		this.window.width = width;
		this.width = width;
	} else {
		this.width = this.window.width;
	}
	if(height > 0) {
		this.window.height = height;
		this.height = height;
	} else {
		this.height = this.window.height;
	}
	if(this.window.title == null) {
		this.window.title = title;
	}
	this.framebuffer = framebuffer == null ? new kha_FramebufferOptions(null,null,null,null,null,null) : framebuffer;
};
$hxClasses["kha.SystemOptions"] = kha_SystemOptions;
kha_SystemOptions.__name__ = "kha.SystemOptions";
kha_SystemOptions.prototype = {
	title: null
	,width: null
	,height: null
	,window: null
	,framebuffer: null
	,__class__: kha_SystemOptions
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = "kha.System";
kha_System.__properties__ = {get_refreshRate:"get_refreshRate",get_vsync:"get_vsync",get_language:"get_language",get_systemId:"get_systemId",get_screenRotation:"get_screenRotation",get_time:"get_time",get_title:"get_title"};
kha_System.init = function(options,callback) {
	var features = 0;
	if(options.resizable) {
		features = features | 1;
	}
	if(options.maximizable) {
		features = features | 4;
	}
	if(options.minimizable) {
		features = features | 2;
	}
	var newOptions = new kha_SystemOptions(options.title,options.width,options.height,new kha_WindowOptions(null,null,null,null,null,null,null,features,options.windowMode),new kha_FramebufferOptions(null,options.vSync,null,null,null,options.samplesPerPixel));
	kha_System.start(newOptions,function(_) {
		callback();
	});
};
kha_System.start = function(options,callback) {
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.get_title = function() {
	return kha_System.theTitle;
};
kha_System.notifyOnRender = function(listener,id) {
	if(id == null) {
		id = 0;
	}
	kha_System.renderListeners.push(function(framebuffers) {
		if(id < framebuffers.length) {
			listener(framebuffers[id]);
		}
	});
};
kha_System.notifyOnFrames = function(listener) {
	kha_System.renderListeners.push(listener);
};
kha_System.removeFramesListener = function(listener) {
	HxOverrides.remove(kha_System.renderListeners,listener);
};
kha_System.notifyOnApplicationState = function(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
	if(foregroundListener != null) {
		kha_System.foregroundListeners.push(foregroundListener);
	}
	if(resumeListener != null) {
		kha_System.resumeListeners.push(resumeListener);
	}
	if(pauseListener != null) {
		kha_System.pauseListeners.push(pauseListener);
	}
	if(backgroundListener != null) {
		kha_System.backgroundListeners.push(backgroundListener);
	}
	if(shutdownListener != null) {
		kha_System.shutdownListeners.push(shutdownListener);
	}
};
kha_System.notifyOnDropFiles = function(dropFilesListener) {
	kha_System.dropFilesListeners.push(dropFilesListener);
};
kha_System.notifyOnCutCopyPaste = function(cutListener,copyListener,pasteListener) {
	kha_System.cutListener = cutListener;
	kha_System.copyListener = copyListener;
	kha_System.pasteListener = pasteListener;
};
kha_System.render = function(framebuffers) {
	var _g = 0;
	var _g1 = kha_System.renderListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffers);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.resume = function() {
	var _g = 0;
	var _g1 = kha_System.resumeListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.pause = function() {
	var _g = 0;
	var _g1 = kha_System.pauseListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.dropFiles = function(filePath) {
	var _g = 0;
	var _g1 = kha_System.dropFilesListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(filePath);
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get($window).get_width();
};
kha_System.windowHeight = function($window) {
	if($window == null) {
		$window = 0;
	}
	return kha_Window.get_all()[$window].get_height();
};
kha_System.get_screenRotation = function() {
	return kha_ScreenRotation.RotationNone;
};
kha_System.get_systemId = function() {
	return kha_SystemImpl.getSystemId();
};
kha_System.get_language = function() {
	return kha_SystemImpl.getLanguage();
};
kha_System.stop = function() {
	return kha_SystemImpl.requestShutdown();
};
kha_System.loadUrl = function(url) {
	kha_SystemImpl.loadUrl(url);
};
kha_System.canSwitchFullscreen = function() {
	return true;
};
kha_System.isFullscreen = function() {
	if(kha_Window.get(0).get_mode() != 1) {
		return kha_Window.get(0).get_mode() == 1;
	} else {
		return true;
	}
};
kha_System.requestFullscreen = function() {
	kha_Window.get(0).set_mode(1);
};
kha_System.exitFullscreen = function() {
	kha_Window.get(0).set_mode(0);
};
kha_System.notifyOnFullscreenChange = function(func,error) {
};
kha_System.removeFullscreenListener = function(func,error) {
};
kha_System.changeResolution = function(width,height) {
};
kha_System.requestShutdown = function() {
	kha_System.stop();
};
kha_System.get_vsync = function() {
	return kha_Window.get(0).get_vSynced();
};
kha_System.get_refreshRate = function() {
	return kha_Display.get_primary().get_frequency();
};
kha_System.screenDpi = function() {
	return kha_Display.get_primary().get_pixelsPerInch();
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = "kha.GamepadStates";
kha_GamepadStates.prototype = {
	axes: null
	,buttons: null
	,__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = "kha.SystemImpl";
kha_SystemImpl.errorHandler = function(message,source,lineno,colno,error) {
	window.console.error(error.stack);
	return true;
};
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.ios = kha_SystemImpl.isIOS();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.firefox = kha_SystemImpl.isFirefox();
	kha_SystemImpl.ie = kha_SystemImpl.isIE();
	kha_SystemImpl.initSecondStep(callback);
};
kha_SystemImpl.initSecondStep = function(callback) {
	kha_SystemImpl.init2(kha_SystemImpl.options.window.width,kha_SystemImpl.options.window.height);
	callback(kha_SystemImpl.window);
	if(kha_SystemImpl.ios) {
		window.ondevicemotion = function(event) {
			kha_input_Sensor._changed(0,-event.accelerationIncludingGravity.x,-event.accelerationIncludingGravity.y,-event.accelerationIncludingGravity.z);
		};
	} else {
		window.ondevicemotion = function(event1) {
			kha_input_Sensor._changed(0,event1.accelerationIncludingGravity.x,event1.accelerationIncludingGravity.y,event1.accelerationIncludingGravity.z);
		};
	}
	window.ondeviceorientation = function(event2) {
		kha_input_Sensor._changed(1,event2.beta,event2.gamma,event2.alpha);
	};
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	}
	if(kha_SystemImpl.isIOS()) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIOS = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isChrome = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Chrome") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isFirefox = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Firefox") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.isIE = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("MSIE ") >= 0 || agent.indexOf("Trident/") >= 0) {
		return true;
	}
	return false;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getScreenRotation = function() {
	return kha_ScreenRotation.RotationNone;
};
kha_SystemImpl.getTime = function() {
	var performance = window.performance ? window.performance : window.Date;
	return performance.now() / 1000;
};
kha_SystemImpl.getSystemId = function() {
	return "HTML5";
};
kha_SystemImpl.getLanguage = function() {
	return window.navigator.language;
};
kha_SystemImpl.requestShutdown = function() {
	window.close();
	return true;
};
kha_SystemImpl.init2 = function(defaultWidth,defaultHeight,backbufferFormat) {
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	kha_SystemImpl.gamepads[0] = new kha_input_Gamepad(0);
	kha_SystemImpl.gamepadStates[0] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[1] = new kha_input_Gamepad(1);
	kha_SystemImpl.gamepadStates[1] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[2] = new kha_input_Gamepad(2);
	kha_SystemImpl.gamepadStates[2] = new kha_GamepadStates();
	kha_SystemImpl.gamepads[3] = new kha_input_Gamepad(3);
	kha_SystemImpl.gamepadStates[3] = new kha_GamepadStates();
	window.addEventListener("gamepadconnected",function(e_) {
		kha_input_Gamepad.sendConnectEvent(e_.gamepad.index);
	});
	window.addEventListener("gamepaddisconnected",function(e_1) {
		kha_input_Gamepad.sendDisconnectEvent(e_1.gamepad.index);
	});
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			kha_SystemImpl.pressedKeys.push(false);
		}
		var _g1 = 0;
		while(_g1 < 256) {
			var i1 = _g1++;
			kha_SystemImpl.pressedKeys.push(null);
		}
	}
	window.document.addEventListener("copy",function(e_2) {
		var e = e_2;
		if(kha_System.copyListener != null) {
			var data = kha_System.copyListener();
			if(data != null) {
				e.clipboardData.setData("text/plain",data);
			}
			e.preventDefault();
		}
	});
	window.document.addEventListener("cut",function(e_3) {
		var e1 = e_3;
		if(kha_System.cutListener != null) {
			var data1 = kha_System.cutListener();
			if(data1 != null) {
				e1.clipboardData.setData("text/plain",data1);
			}
			e1.preventDefault();
		}
	});
	window.document.addEventListener("paste",function(e_4) {
		var e2 = e_4;
		if(kha_System.pasteListener != null) {
			var tmp = e2.clipboardData.getData("text/plain");
			kha_System.pasteListener(tmp);
			e2.preventDefault();
		}
	});
	kha_CanvasImage.init();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished(defaultWidth,defaultHeight);
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g = 0;
	var _g1 = pad.axes.length;
	while(_g < _g1) {
		var i = _g++;
		if(pad.axes[i] != null) {
			var axis = pad.axes[i];
			if(i % 2 == 1) {
				axis = -axis;
			}
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != axis) {
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g2 = 0;
	var _g3 = pad.buttons.length;
	while(_g2 < _g3) {
		var i1 = _g2++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.loadFinished = function(defaultWidth,defaultHeight) {
	var canvas = kha_SystemImpl.khanvas;
	if(canvas == null) {
		canvas = window.document.getElementById(kha_CompilerDefines.canvas_id);
	}
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("webgl2",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
		kha_SystemImpl.gl.pixelStorei(37441,1);
		kha_SystemImpl.halfFloat = { HALF_FLOAT_OES : 5131};
		kha_SystemImpl.depthTexture = { UNSIGNED_INT_24_8_WEBGL : 34042};
		kha_SystemImpl.drawBuffers = { COLOR_ATTACHMENT0_WEBGL : 36064};
		kha_SystemImpl.elementIndexUint = true;
		kha_SystemImpl.gl.getExtension("EXT_color_buffer_float");
		kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
		kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
		kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
		if(kha_SystemImpl.anisotropicFilter == null) {
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
		}
		gl = true;
		kha_SystemImpl.gl2 = true;
		kha_Shaders.init();
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		haxe_Log.trace("Could not initialize WebGL 2, falling back to WebGL.",{ fileName : "kha/SystemImpl.hx", lineNumber : 331, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	if(!kha_SystemImpl.gl2) {
		try {
			kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.framebuffer.samplesPerPixel > 1, stencil : true});
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
			gl = true;
			kha_Shaders.init();
		} catch( e2 ) {
			var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
			haxe_Log.trace("Could not initialize WebGL, falling back to <canvas>.",{ fileName : "kha/SystemImpl.hx", lineNumber : 353, className : "kha.SystemImpl", methodName : "loadFinished"});
		}
	}
	kha_SystemImpl.setCanvas(canvas);
	kha_SystemImpl.window = new kha_Window(defaultWidth,defaultHeight,canvas);
	if(gl) {
		var g4 = new kha_js_graphics4_Graphics();
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		kha_js_Font.Kravur = kha_Kravur; kha_Kravur = kha_js_Font;
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_AudioElementAudio._compile();
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.6666666666666679);
		} else {
			requestAnimationFrame(animate);
		}
		var sysGamepads = kha_SystemImpl.getGamepads();
		if(sysGamepads != null) {
			var _g = 0;
			var _g1 = sysGamepads.length;
			while(_g < _g1) {
				var i = _g++;
				var pad = sysGamepads[i];
				if(pad != null) {
					kha_SystemImpl.checkGamepad(pad);
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render([kha_SystemImpl.frame]);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate,16.6666666666666679);
	} else {
		requestAnimationFrame(animate);
	}
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
		canvas.onkeypress = kha_SystemImpl.keyPress;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	canvas.addEventListener("touchcancel",kha_SystemImpl.touchCancel,false);
	window.addEventListener("unload",function() {
		kha_System.shutdown();
	});
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_SystemImpl.khanvas ||
			document.mozPointerLockElement === kha_SystemImpl.khanvas ||
			document.webkitPointerLockElement === kha_SystemImpl.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockiOSSound = function() {
	if(!kha_SystemImpl.ios || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	source.start();
	source.stop();
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.unlockSound = function() {
	if(!kha_SystemImpl.soundEnabled) {
		var context = kha_audio2_Audio._context;
		if(context == null) {
			context = kha_audio2_Audio1._context;
		}
		if(context != null) {
			context.resume().then(function(c) {
				kha_SystemImpl.soundEnabled = true;
			})["catch"](function(err) {
				haxe_Log.trace(err,{ fileName : "kha/SystemImpl.hx", lineNumber : 593, className : "kha.SystemImpl", methodName : "unlockSound"});
			});
		}
	}
	kha_SystemImpl.unlockiOSSound();
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.preventDefault();
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	kha_SystemImpl.insideInputEvent = false;
	return false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		if(event.ctrlKey) {
			kha_SystemImpl.leftMouseCtrlDown = true;
			kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		} else {
			kha_SystemImpl.leftMouseCtrlDown = false;
			kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		}
		if(kha_SystemImpl.khanvas.setCapture != null) {
			kha_SystemImpl.khanvas.setCapture();
		} else {
			kha_SystemImpl.khanvas.ownerDocument.addEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(kha_SystemImpl.khanvas.releaseCapture != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	} else {
		kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mousemove",kha_SystemImpl.documentMouseMove,true);
	}
	if(kha_SystemImpl.leftMouseCtrlDown) {
		kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	} else {
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	}
	kha_SystemImpl.leftMouseCtrlDown = false;
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSound();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.documentMouseMove = function(event) {
	event.stopPropagation();
	kha_SystemImpl.mouseMove(event);
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		movementX = event.mozMovementX != null ? event.mozMovementX : event.webkitMovementX != null ? event.webkitMovementX : kha_SystemImpl.mouseX - lastMouseX;
		movementY = event.mozMovementY != null ? event.mozMovementY : event.webkitMovementY != null ? event.webkitMovementY : kha_SystemImpl.mouseY - lastMouseY;
	}
	if(kha_SystemImpl.firefox) {
		movementX = movementX * window.devicePixelRatio | 0;
		movementY = movementY * window.devicePixelRatio | 0;
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	event.stopPropagation();
	event.preventDefault();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(-1);
			if(id == -1) {
				id = kha_SystemImpl.iosTouchs.length;
			}
			kha_SystemImpl.iosTouchs[id] = touch.identifier;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
			kha_SystemImpl.iosTouchs[id] = -1;
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.surface.sendMoveEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchCancel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSound();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		var id = touch.identifier;
		if(kha_SystemImpl.ios) {
			id = kha_SystemImpl.iosTouchs.indexOf(id);
		}
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(id,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.iosTouchs = [];
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keycodeToChar = function(key,keycode,shift) {
	if(key != null) {
		if(key.length == 1) {
			return key;
		}
		switch(key) {
		case "Add":
			return "+";
		case "Divide":
			return "/";
		case "Multiply":
			return "*";
		case "Subtract":
			return "-";
		}
	}
	switch(keycode) {
	case 48:
		if(shift) {
			return "=";
		} else {
			return "0";
		}
		break;
	case 49:
		if(shift) {
			return "!";
		} else {
			return "1";
		}
		break;
	case 50:
		if(shift) {
			return "\"";
		} else {
			return "2";
		}
		break;
	case 51:
		if(shift) {
			return "§";
		} else {
			return "3";
		}
		break;
	case 52:
		if(shift) {
			return "$";
		} else {
			return "4";
		}
		break;
	case 53:
		if(shift) {
			return "%";
		} else {
			return "5";
		}
		break;
	case 54:
		if(shift) {
			return "&";
		} else {
			return "6";
		}
		break;
	case 55:
		if(shift) {
			return "/";
		} else {
			return "7";
		}
		break;
	case 56:
		if(shift) {
			return "(";
		} else {
			return "8";
		}
		break;
	case 57:
		if(shift) {
			return ")";
		} else {
			return "9";
		}
		break;
	case 106:
		return "*";
	case 107:
		return "+";
	case 109:
		return "-";
	case 111:
		return "/";
	case 187:
		if(shift) {
			return "*";
		} else {
			return "+";
		}
		break;
	case 188:
		if(shift) {
			return ";";
		} else {
			return ",";
		}
		break;
	case 189:
		if(shift) {
			return "_";
		} else {
			return "-";
		}
		break;
	case 190:
		if(shift) {
			return ":";
		} else {
			return ".";
		}
		break;
	case 191:
		if(shift) {
			return "'";
		} else {
			return "#";
		}
		break;
	case 212:
		if(shift) {
			return "`";
		} else {
			return "´";
		}
		break;
	case 219:
		if(shift) {
			return "?";
		} else {
			return "ß";
		}
		break;
	case 226:
		if(shift) {
			return ">";
		} else {
			return "<";
		}
		break;
	}
	if(keycode >= 96 && keycode <= 105) {
		return String.fromCodePoint(-48 + keycode);
	}
	if(keycode >= 65 && keycode <= 90) {
		if(shift) {
			return String.fromCodePoint(keycode);
		} else {
			return String.fromCodePoint(keycode - 65 + 97);
		}
	}
	return String.fromCodePoint(keycode);
};
kha_SystemImpl.keyDown = function(event) {
	if((event.keyCode < 112 || event.keyCode > 123) && (event.key != null && event.key.length != 1)) {
		event.preventDefault();
	}
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		if(kha_SystemImpl.pressedKeys[event.keyCode]) {
			event.preventDefault();
			return;
		}
		kha_SystemImpl.pressedKeys[event.keyCode] = true;
	} else if(event.repeat) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.keyboard.sendDownEvent(event.keyCode);
};
kha_SystemImpl.keyUp = function(event) {
	event.preventDefault();
	event.stopPropagation();
	if(kha_SystemImpl.ie) {
		kha_SystemImpl.pressedKeys[event.keyCode] = false;
	}
	kha_SystemImpl.keyboard.sendUpEvent(event.keyCode);
};
kha_SystemImpl.keyPress = function(event) {
	if(event.which == 0) {
		return;
	}
	event.preventDefault();
	event.stopPropagation();
	var code = event.which;
	kha_SystemImpl.keyboard.sendPressEvent(String.fromCodePoint(code));
};
kha_SystemImpl.canSwitchFullscreen = function() {
	return 'fullscreenElement ' in document ||
		'mozFullScreenElement' in document ||
		'webkitFullscreenElement' in document ||
		'msFullscreenElement' in document
		;
};
kha_SystemImpl.notifyOfFullscreenChange = function(func,error) {
	window.document.addEventListener("fullscreenchange",func,false);
	window.document.addEventListener("mozfullscreenchange",func,false);
	window.document.addEventListener("webkitfullscreenchange",func,false);
	window.document.addEventListener("MSFullscreenChange",func,false);
	window.document.addEventListener("fullscreenerror",error,false);
	window.document.addEventListener("mozfullscreenerror",error,false);
	window.document.addEventListener("webkitfullscreenerror",error,false);
	window.document.addEventListener("MSFullscreenError",error,false);
};
kha_SystemImpl.removeFromFullscreenChange = function(func,error) {
	window.document.removeEventListener("fullscreenchange",func,false);
	window.document.removeEventListener("mozfullscreenchange",func,false);
	window.document.removeEventListener("webkitfullscreenchange",func,false);
	window.document.removeEventListener("MSFullscreenChange",func,false);
	window.document.removeEventListener("fullscreenerror",error,false);
	window.document.removeEventListener("mozfullscreenerror",error,false);
	window.document.removeEventListener("webkitfullscreenerror",error,false);
	window.document.removeEventListener("MSFullscreenError",error,false);
};
kha_SystemImpl.setKeepScreenOn = function(on) {
};
kha_SystemImpl.loadUrl = function(url) {
	window.open(url,"_blank");
};
kha_SystemImpl.getGamepadId = function(index) {
	var sysGamepads = kha_SystemImpl.getGamepads();
	if(sysGamepads != null && sysGamepads[index]) {
		return sysGamepads[index].id;
	}
	return "unkown";
};
kha_SystemImpl.getGamepads = function() {
	if(kha_SystemImpl.chrome && kha_vr_VrInterface.instance.IsVrEnabled()) {
		return null;
	}
	if(navigator.getGamepads) {
		return window.navigator.getGamepads();
	} else {
		return null;
	}
};
kha_SystemImpl.getPen = function(num) {
	return null;
};
var kha_Video = function() {
};
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = "kha.Video";
kha_Video.__interfaces__ = [kha_Resource];
kha_Video.prototype = {
	width: function() {
		return 100;
	}
	,height: function() {
		return 100;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
	}
	,pause: function() {
	}
	,stop: function() {
	}
	,getLength: function() {
		return 0;
	}
	,getCurrentPos: function() {
		return 0;
	}
	,get_position: function() {
		return 0;
	}
	,set_position: function(value) {
		return 0;
	}
	,getVolume: function() {
		return 1;
	}
	,setVolume: function(volume) {
	}
	,isFinished: function() {
		return this.getCurrentPos() >= this.getLength();
	}
	,unload: function() {
	}
	,__class__: kha_Video
	,__properties__: {set_position:"set_position",get_position:"get_position"}
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat,samples) {
	this.pixels = null;
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.samples = samples;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = "kha.WebGLImage";
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		kha_WebGLImage.canvas = window.document.createElement("canvas");
		if(kha_WebGLImage.canvas != null) {
			kha_WebGLImage.context = kha_WebGLImage.canvas.getContext("2d");
			kha_WebGLImage.canvas.width = 4096;
			kha_WebGLImage.canvas.height = 4096;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format._hx_index) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	image: null
	,video: null
	,data: null
	,myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,samples: null
	,frameBuffer: null
	,renderBuffer: null
	,texture: null
	,depthTexture: null
	,graphics1: null
	,graphics2: null
	,graphics4: null
	,depthStencilFormat: null
	,get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return -16777216;
			} else {
				this.createImageData();
			}
		}
		var r = this.data.data[y * (this.image.width | 0) * 4 + x * 4];
		var g = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 1];
		var b = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 2];
		var a = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3];
		return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
	}
	,createImageData: function() {
		if((this.image instanceof Uint8Array)) {
			this.data = new ImageData(new Uint8ClampedArray(this.image.buffer),this.get_width(),this.get_height());
		} else {
			if(this.get_width() > kha_WebGLImage.canvas.width || this.get_height() > kha_WebGLImage.canvas.height) {
				var cw = kha_WebGLImage.canvas.width;
				var ch = kha_WebGLImage.canvas.height;
				while(this.get_width() > cw || this.get_height() > ch) {
					cw *= 2;
					ch *= 2;
				}
				kha_WebGLImage.canvas.width = cw;
				kha_WebGLImage.canvas.height = ch;
			}
			kha_WebGLImage.context.strokeStyle = "rgba(0,0,0,0)";
			kha_WebGLImage.context.fillStyle = "rgba(0,0,0,0)";
			kha_WebGLImage.context.fillRect(0,0,this.image.width,this.image.height);
			kha_WebGLImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
			this.data = kha_WebGLImage.context.getImageData(0,0,this.image.width,this.image.height);
		}
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format._hx_index) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_realWidth(),this.get_realHeight(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			if(kha_SystemImpl.gl.checkFramebufferStatus(36160) != 36053) {
				haxe_Log.trace("WebGL error: Framebuffer incomplete",{ fileName : "kha/WebGLImage.hx", lineNumber : 225, className : "kha.WebGLImage", methodName : "createTexture"});
			}
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			switch(this.format._hx_index) {
			case 0:
				if((this.image instanceof Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.myWidth,this.myHeight,0,6409,5121,this.image);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				if(depthStencilFormat == 1) {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				}
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
	}
	,setDepthStencilFrom: function(image) {
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,(js_Boot.__cast(image , kha_WebGLImage)).depthTexture,0);
	}
	,bytesToArray: function(bytes) {
		switch(this.format._hx_index) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,bytes: null
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			switch(this.format._hx_index) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g = 0;
					var _g1 = this.get_height();
					while(_g < _g1) {
						var y = _g++;
						var _g2 = 0;
						var _g11 = this.get_width();
						while(_g2 < _g11) {
							var x = _g2++;
							var _this = this.bytes;
							var pos = y * this.get_width() + x;
							var value = _this.b[pos];
							var pos1 = y * this.get_width() * 4 + x * 4;
							rgbaBytes.b[pos1] = value;
							var pos2 = y * this.get_width() * 4 + x * 4 + 1;
							rgbaBytes.b[pos2] = value;
							var pos3 = y * this.get_width() * 4 + x * 4 + 2;
							rgbaBytes.b[pos3] = value;
							var pos4 = y * this.get_width() * 4 + x * 4 + 3;
							rgbaBytes.b[pos4] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.get_width(),this.get_height(),0,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,pixels: null
	,getPixels: function() {
		if(this.frameBuffer == null) {
			return null;
		}
		if(this.pixels == null) {
			switch(this.format._hx_index) {
			case 0:case 1:
				this.pixels = new Uint8Array(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height());
				break;
			case 2:case 5:
				this.pixels = new Float32Array((kha_WebGLImage.formatByteSize(this.format) / 4 | 0) * this.get_width() * this.get_height());
				break;
			case 4:case 6:
				this.pixels = new Uint16Array((kha_WebGLImage.formatByteSize(this.format) / 2 | 0) * this.get_width() * this.get_height());
				break;
			default:
				this.pixels = new Uint8Array(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height());
			}
		}
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		switch(this.format._hx_index) {
		case 0:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,5121,this.pixels);
			break;
		case 1:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,kha_SystemImpl.gl2 ? 6403 : 6406,5121,this.pixels);
			break;
		case 2:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,5126,this.pixels);
			break;
		case 4:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.pixels);
			break;
		case 5:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,kha_SystemImpl.gl2 ? 6403 : 6406,5126,this.pixels);
			break;
		case 6:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,kha_SystemImpl.gl2 ? 6403 : 6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.pixels);
			break;
		default:
			kha_SystemImpl.gl.readPixels(0,0,this.myWidth,this.myHeight,6408,5121,this.pixels);
		}
		return haxe_io_Bytes.ofData(this.pixels.buffer);
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,setMipmaps: function(mipmaps) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.format == kha_graphics4_TextureFormat.RGBA128) {
			var _g = 0;
			var _g1 = mipmaps.length;
			while(_g < _g1) {
				var i = _g++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,kha_SystemImpl.gl2 ? 34836 : 6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,5126,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else if(this.format == kha_graphics4_TextureFormat.RGBA64) {
			var _g2 = 0;
			var _g11 = mipmaps.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				kha_SystemImpl.gl.texImage2D(3553,i1 + 1,kha_SystemImpl.gl2 ? 34842 : 6408,mipmaps[i1].get_width(),mipmaps[i1].get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,(js_Boot.__cast(mipmaps[i1] , kha_WebGLImage)).image);
			}
		} else {
			var _g3 = 0;
			var _g12 = mipmaps.length;
			while(_g3 < _g12) {
				var i2 = _g3++;
				kha_SystemImpl.gl.texImage2D(3553,i2 + 1,6408,6408,5121,(js_Boot.__cast(mipmaps[i2] , kha_WebGLImage)).image);
			}
		}
	}
	,__class__: kha_WebGLImage
});
var kha_Window = function(defaultWidth,defaultHeight,canvas) {
	this.canvas = canvas;
	this.defaultWidth = defaultWidth;
	this.defaultHeight = defaultHeight;
	kha_Window.windows.push(this);
};
$hxClasses["kha.Window"] = kha_Window;
kha_Window.__name__ = "kha.Window";
kha_Window.__properties__ = {get_all:"get_all"};
kha_Window.create = function(win,frame) {
	return null;
};
kha_Window.destroy = function($window) {
};
kha_Window.get = function(index) {
	return kha_Window.windows[index];
};
kha_Window.get_all = function() {
	return kha_Window.windows;
};
kha_Window.prototype = {
	canvas: null
	,defaultWidth: null
	,defaultHeight: null
	,resize: function(width,height) {
	}
	,move: function(x,y) {
	}
	,changeWindowFeatures: function(features) {
	}
	,changeFramebuffer: function(frame) {
	}
	,get_x: function() {
		return 0;
	}
	,set_x: function(value) {
		return 0;
	}
	,get_y: function() {
		return 0;
	}
	,set_y: function(value) {
		return 0;
	}
	,get_width: function() {
		if(this.canvas.width == 0) {
			return this.defaultWidth;
		} else {
			return this.canvas.width;
		}
	}
	,set_width: function(value) {
		return 800;
	}
	,get_height: function() {
		if(this.canvas.height == 0) {
			return this.defaultHeight;
		} else {
			return this.canvas.height;
		}
	}
	,set_height: function(value) {
		return 600;
	}
	,get_mode: function() {
		return 0;
	}
	,set_mode: function(mode) {
		if(mode == 1 || mode == 2) {
			if(!this.isFullscreen()) {
				this.requestFullscreen();
			}
		} else if(this.isFullscreen()) {
			this.exitFullscreen();
		}
		return mode;
	}
	,isFullscreen: function() {
		return document.fullscreenElement === this.canvas ||
			document.mozFullScreenElement === this.canvas ||
			document.webkitFullscreenElement === this.canvas ||
			document.msFullscreenElement === this.canvas ;
	}
	,requestFullscreen: function() {
		if(this.canvas.requestFullscreen) {
			this.canvas.requestFullscreen();
		} else if(this.canvas.msRequestFullscreen) {
			this.canvas.msRequestFullscreen();
		} else if(this.canvas.mozRequestFullScreen) {
			this.canvas.mozRequestFullScreen();
		} else if(this.canvas.webkitRequestFullscreen) {
			this.canvas.webkitRequestFullscreen();
		}
	}
	,exitFullscreen: function() {
		if(document.exitFullscreen) {
			document.exitFullscreen();
		} else if(document.msExitFullscreen) {
			document.msExitFullscreen();
		} else if(document.mozCancelFullScreen) {
			document.mozCancelFullScreen();
		} else if(document.webkitExitFullscreen) {
			document.webkitExitFullscreen();
		}
	}
	,get_visible: function() {
		return true;
	}
	,set_visible: function(value) {
		return true;
	}
	,get_title: function() {
		return "Kha";
	}
	,set_title: function(value) {
		return "Kha";
	}
	,notifyOnResize: function(callback) {
	}
	,get_vSynced: function() {
		return true;
	}
	,__class__: kha_Window
	,__properties__: {get_vSynced:"get_vSynced",set_title:"set_title",get_title:"get_title",set_visible:"set_visible",get_visible:"get_visible",set_mode:"set_mode",get_mode:"get_mode",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var kha__$WindowOptions_WindowFeatures_$Impl_$ = {};
$hxClasses["kha._WindowOptions.WindowFeatures_Impl_"] = kha__$WindowOptions_WindowFeatures_$Impl_$;
kha__$WindowOptions_WindowFeatures_$Impl_$.__name__ = "kha._WindowOptions.WindowFeatures_Impl_";
kha__$WindowOptions_WindowFeatures_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
var kha_WindowOptions = function(title,x,y,width,height,display,visible,windowFeatures,mode) {
	if(mode == null) {
		mode = 0;
	}
	if(visible == null) {
		visible = true;
	}
	if(height == null) {
		height = 600;
	}
	if(width == null) {
		width = 800;
	}
	if(y == null) {
		y = -1;
	}
	if(x == null) {
		x = -1;
	}
	this.mode = 0;
	this.windowFeatures = 1 | 4 | 2;
	this.visible = true;
	this.display = null;
	this.height = 600;
	this.width = 800;
	this.y = -1;
	this.x = -1;
	this.title = null;
	this.title = title;
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.display = display == null ? kha_Display.get_primary() : display;
	this.visible = visible;
	this.windowFeatures = windowFeatures == null ? 1 | 4 | 2 : windowFeatures;
	this.mode = mode;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = "kha.WindowOptions";
kha_WindowOptions.prototype = {
	title: null
	,x: null
	,y: null
	,width: null
	,height: null
	,display: null
	,visible: null
	,windowFeatures: null
	,mode: null
	,__class__: kha_WindowOptions
};
var kha_arrays__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["kha.arrays._Float32Array.Float32Array_Impl_"] = kha_arrays__$Float32Array_Float32Array_$Impl_$;
kha_arrays__$Float32Array_Float32Array_$Impl_$.__name__ = "kha.arrays._Float32Array.Float32Array_Impl_";
kha_arrays__$Float32Array_Float32Array_$Impl_$.__properties__ = {get_length:"get_length"};
kha_arrays__$Float32Array_Float32Array_$Impl_$._new = function(elements) {
	var this1 = new Float32Array(elements);
	return this1;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.data = function(this1) {
	return this1;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.arrayRead = function(this1,index) {
	return this1[index];
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.arrayWrite = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.subarray = function(this1,start,end) {
	return this1.subarray(start,end);
};
var kha_arrays__$Uint32Array_Uint32Array_$Impl_$ = {};
$hxClasses["kha.arrays._Uint32Array.Uint32Array_Impl_"] = kha_arrays__$Uint32Array_Uint32Array_$Impl_$;
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.__name__ = "kha.arrays._Uint32Array.Uint32Array_Impl_";
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.__properties__ = {get_length:"get_length"};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$._new = function(elements) {
	var this1 = new Uint32Array(elements);
	return this1;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.data = function(this1) {
	return this1;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.arrayRead = function(this1,index) {
	return this1[index];
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.arrayWrite = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Uint32Array_Uint32Array_$Impl_$.subarray = function(this1,start,end) {
	return this1.subarray(start,end);
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = "kha.audio1.AudioChannel";
kha_audio1_AudioChannel.prototype = {
	play: null
	,pause: null
	,stop: null
	,length: null
	,get_length: null
	,position: null
	,get_position: null
	,get_volume: null
	,set_volume: null
	,finished: null
	,get_finished: null
	,__class__: kha_audio1_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = "kha.audio2.Audio";
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	var bufferSize = 2048;
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(bufferSize,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.audioCallback(e.outputBuffer.length * 2,kha_audio2_Audio.buffer);
			var _g = 0;
			var _g1 = e.outputBuffer.length;
			while(_g < _g1) {
				var i = _g++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = e.outputBuffer.length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var element = window.document.createElement("audio");
	var blob = new Blob([sound.compressedData.b.bufferValue],{ type : "audio/mp4"});
	element.src = URL.createObjectURL(blob);
	element.loop = loop;
	var channel = new kha_js_AEAudioChannel(element);
	channel.play();
	return channel;
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = "kha.audio2.Audio1";
kha_audio2_Audio1._init = function() {
	var this1 = new Array(16);
	kha_audio2_Audio1.soundChannels = this1;
	var this2 = new Array(16);
	kha_audio2_Audio1.streamChannels = this2;
	var this3 = new Array(16);
	kha_audio2_Audio1.internalSoundChannels = this3;
	var this4 = new Array(16);
	kha_audio2_Audio1.internalStreamChannels = this4;
	var this5 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache1 = this5;
	var this6 = new Float32Array(512);
	kha_audio2_Audio1.sampleCache2 = this6;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1.mix;
};
kha_audio2_Audio1.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1.mix = function(samples,buffer) {
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		var this1 = new Float32Array(samples);
		kha_audio2_Audio1.sampleCache1 = this1;
		var this2 = new Float32Array(samples);
		kha_audio2_Audio1.sampleCache2 = this2;
	}
	var _g = 0;
	var _g1 = samples;
	while(_g < _g1) {
		var i = _g++;
		kha_audio2_Audio1.sampleCache2[i] = 0;
	}
	kha_audio2_Audio1.internalSoundChannels[0] = kha_audio2_Audio1.soundChannels[0];
	kha_audio2_Audio1.internalSoundChannels[1] = kha_audio2_Audio1.soundChannels[1];
	kha_audio2_Audio1.internalSoundChannels[2] = kha_audio2_Audio1.soundChannels[2];
	kha_audio2_Audio1.internalSoundChannels[3] = kha_audio2_Audio1.soundChannels[3];
	kha_audio2_Audio1.internalSoundChannels[4] = kha_audio2_Audio1.soundChannels[4];
	kha_audio2_Audio1.internalSoundChannels[5] = kha_audio2_Audio1.soundChannels[5];
	kha_audio2_Audio1.internalSoundChannels[6] = kha_audio2_Audio1.soundChannels[6];
	kha_audio2_Audio1.internalSoundChannels[7] = kha_audio2_Audio1.soundChannels[7];
	kha_audio2_Audio1.internalSoundChannels[8] = kha_audio2_Audio1.soundChannels[8];
	kha_audio2_Audio1.internalSoundChannels[9] = kha_audio2_Audio1.soundChannels[9];
	kha_audio2_Audio1.internalSoundChannels[10] = kha_audio2_Audio1.soundChannels[10];
	kha_audio2_Audio1.internalSoundChannels[11] = kha_audio2_Audio1.soundChannels[11];
	kha_audio2_Audio1.internalSoundChannels[12] = kha_audio2_Audio1.soundChannels[12];
	kha_audio2_Audio1.internalSoundChannels[13] = kha_audio2_Audio1.soundChannels[13];
	kha_audio2_Audio1.internalSoundChannels[14] = kha_audio2_Audio1.soundChannels[14];
	kha_audio2_Audio1.internalSoundChannels[15] = kha_audio2_Audio1.soundChannels[15];
	kha_audio2_Audio1.internalStreamChannels[0] = kha_audio2_Audio1.streamChannels[0];
	kha_audio2_Audio1.internalStreamChannels[1] = kha_audio2_Audio1.streamChannels[1];
	kha_audio2_Audio1.internalStreamChannels[2] = kha_audio2_Audio1.streamChannels[2];
	kha_audio2_Audio1.internalStreamChannels[3] = kha_audio2_Audio1.streamChannels[3];
	kha_audio2_Audio1.internalStreamChannels[4] = kha_audio2_Audio1.streamChannels[4];
	kha_audio2_Audio1.internalStreamChannels[5] = kha_audio2_Audio1.streamChannels[5];
	kha_audio2_Audio1.internalStreamChannels[6] = kha_audio2_Audio1.streamChannels[6];
	kha_audio2_Audio1.internalStreamChannels[7] = kha_audio2_Audio1.streamChannels[7];
	kha_audio2_Audio1.internalStreamChannels[8] = kha_audio2_Audio1.streamChannels[8];
	kha_audio2_Audio1.internalStreamChannels[9] = kha_audio2_Audio1.streamChannels[9];
	kha_audio2_Audio1.internalStreamChannels[10] = kha_audio2_Audio1.streamChannels[10];
	kha_audio2_Audio1.internalStreamChannels[11] = kha_audio2_Audio1.streamChannels[11];
	kha_audio2_Audio1.internalStreamChannels[12] = kha_audio2_Audio1.streamChannels[12];
	kha_audio2_Audio1.internalStreamChannels[13] = kha_audio2_Audio1.streamChannels[13];
	kha_audio2_Audio1.internalStreamChannels[14] = kha_audio2_Audio1.streamChannels[14];
	kha_audio2_Audio1.internalStreamChannels[15] = kha_audio2_Audio1.streamChannels[15];
	var _g2 = 0;
	var _g3 = kha_audio2_Audio1.internalSoundChannels;
	while(_g2 < _g3.length) {
		var channel = _g3[_g2];
		++_g2;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g21 = 0;
		var _g31 = samples;
		while(_g21 < _g31) {
			var i1 = _g21++;
			kha_audio2_Audio1.sampleCache2[i1] += kha_audio2_Audio1.sampleCache1[i1] * channel.get_volume();
		}
	}
	var _g4 = 0;
	var _g5 = kha_audio2_Audio1.internalStreamChannels;
	while(_g4 < _g5.length) {
		var channel1 = _g5[_g4];
		++_g4;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g41 = 0;
		var _g51 = samples;
		while(_g41 < _g51) {
			var i2 = _g41++;
			kha_audio2_Audio1.sampleCache2[i2] += kha_audio2_Audio1.sampleCache1[i2] * channel1.get_volume();
		}
	}
	var _g6 = 0;
	var _g7 = samples;
	while(_g6 < _g7) {
		var i3 = _g6++;
		var a = kha_audio2_Audio1.sampleCache2[i3];
		var a1 = a < 1.0 ? a : 1.0;
		buffer.data[buffer.writeLocation] = a1 > -1.0 ? a1 : -1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			channel = new kha_audio2_AudioChannel(loop);
			channel.data = sound.uncompressedData;
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
	return channel;
};
kha_audio2_Audio1._playAgain = function(channel) {
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished() || kha_audio2_Audio1.soundChannels[i] == channel) {
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
};
kha_audio2_Audio1.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var hardwareChannel = kha_audio2_Audio.stream(sound,loop);
	if(hardwareChannel != null) {
		return hardwareChannel;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
			channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
			kha_audio2_Audio1.streamChannels[i] = channel;
			break;
		}
	}
	return channel;
};
var kha_audio2_AudioChannel = function(looping) {
	this.paused = false;
	this.looping = looping;
	this.myVolume = 1;
	this.myPosition = 0;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = "kha.audio2.AudioChannel";
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	data: null
	,myVolume: null
	,myPosition: null
	,paused: null
	,looping: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				samples[i] = 0;
			}
			return;
		}
		var w_ptr = 0;
		var chk_ptr = 0;
		while(w_ptr < length) {
			var addressable_data = this.data.length - this.myPosition;
			var next_chunk = addressable_data < length - w_ptr ? addressable_data : length - w_ptr;
			while(chk_ptr < next_chunk) {
				samples[w_ptr] = this.data[this.myPosition];
				++this.myPosition;
				++chk_ptr;
				++w_ptr;
			}
			if(!this.looping) {
				break;
			} else {
				chk_ptr = 0;
				if(this.myPosition >= this.data.length) {
					this.myPosition = 0;
				}
			}
		}
		while(w_ptr < length) {
			samples[w_ptr] = 0;
			++w_ptr;
		}
	}
	,play: function() {
		this.paused = false;
		if(this.get_finished()) {
			this.myPosition = 0;
			kha_audio2_Audio1._playAgain(this);
		}
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.myPosition = this.data.length;
	}
	,length: null
	,get_length: function() {
		return this.data.length / 44100 / 2;
	}
	,position: null
	,get_position: function() {
		return this.myPosition / 44100 / 2;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,finished: null
	,get_finished: function() {
		return this.myPosition >= this.data.length;
	}
	,__class__: kha_audio2_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	var this1 = new Float32Array(size);
	this.data = this1;
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = "kha.audio2.Buffer";
kha_audio2_Buffer.prototype = {
	channels: null
	,samplesPerSecond: null
	,data: null
	,size: null
	,readLocation: null
	,writeLocation: null
	,__class__: kha_audio2_Buffer
};
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = "kha.audio2.StreamChannel";
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	reader: null
	,atend: null
	,loop: null
	,myVolume: null
	,paused: null
	,nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g = 0;
			var _g1 = length;
			while(_g < _g1) {
				var i = _g++;
				samples[i] = 0;
			}
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g2 = count;
			var _g11 = length;
			while(_g2 < _g11) {
				var i1 = _g2++;
				samples[i1] = 0;
			}
		}
	}
	,play: function() {
		this.paused = false;
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.atend = true;
	}
	,length: null
	,get_length: function() {
		return this.reader.get_totalMillisecond() / 1000.0;
	}
	,position: null
	,get_position: function() {
		return this.reader.get_currentMillisecond() / 1000.0;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,finished: null
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = "kha.audio2.ogg.tools.Crc32";
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	var this1 = new Array(256);
	kha_audio2_ogg_tools_Crc32.table = this1;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
kha_audio2_ogg_tools_Crc32.update = function(crc,byte) {
	return crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
};
var kha_audio2_ogg_tools_MathTools = function() { };
$hxClasses["kha.audio2.ogg.tools.MathTools"] = kha_audio2_ogg_tools_MathTools;
kha_audio2_ogg_tools_MathTools.__name__ = "kha.audio2.ogg.tools.MathTools";
kha_audio2_ogg_tools_MathTools.ilog = function(n) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	if(n < 16384) {
		if(n < 16) {
			return log2_4[n];
		} else if(n < 512) {
			return 5 + log2_4[n >> 5];
		} else {
			return 10 + log2_4[n >> 10];
		}
	} else if(n < 16777216) {
		if(n < 524288) {
			return 15 + log2_4[n >> 15];
		} else {
			return 20 + log2_4[n >> 20];
		}
	} else if(n < 536870912) {
		return 25 + log2_4[n >> 25];
	} else if(n < -2147483648) {
		return 30 + log2_4[n >> 30];
	} else {
		return 0;
	}
};
var kha_audio2_ogg_tools_Mdct = function() { };
$hxClasses["kha.audio2.ogg.tools.Mdct"] = kha_audio2_ogg_tools_Mdct;
kha_audio2_ogg_tools_Mdct.__name__ = "kha.audio2.ogg.tools.Mdct";
kha_audio2_ogg_tools_Mdct.inverseTransform = function(buffer,n,a,b,c,bitReverse) {
	var n2 = n >> 1;
	var n4 = n >> 2;
	var n8 = n >> 3;
	var this1 = new Array(n2);
	var buf2 = this1;
	var dOffset = n2 - 2;
	var aaOffset = 0;
	var eOffset = 0;
	var eStopOffset = n2;
	while(eOffset != eStopOffset) {
		buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
		buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset += 4;
	}
	eOffset = n2 - 3;
	while(dOffset >= 0) {
		buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
		buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset -= 4;
	}
	var u = buffer;
	var v = buf2;
	var aaOffset1 = n2 - 8;
	var eOffset0 = n4;
	var eOffset1 = 0;
	var dOffset0 = n4;
	var dOffset1 = 0;
	while(aaOffset1 >= 0) {
		var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
		var v40_20 = v[eOffset0] - v[eOffset1];
		u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
		u[dOffset0] = v[eOffset0] + v[eOffset1];
		u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
		u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
		v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
		v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
		u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
		u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
		u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
		u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
		aaOffset1 -= 8;
		dOffset0 += 4;
		dOffset1 += 4;
		eOffset0 += 4;
		eOffset1 += 4;
	}
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var i_off = n2 - 1 - n4 * 0;
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + -(n >> 3);
	var aOffset = 0;
	var i = (n >> 4 >> 2) + 1;
	while(--i > 0) {
		var k00_20 = u[eeOffset0] - u[eeOffset2];
		var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
		var _g = eeOffset0;
		var _g1 = u;
		_g1[_g] = _g1[_g] + u[eeOffset2];
		var _g2 = eeOffset0 + -1;
		var _g11 = u;
		_g11[_g2] = _g11[_g2] + u[eeOffset2 + -1];
		u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
		k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
		var _g3 = eeOffset0 + -2;
		var _g12 = u;
		_g12[_g3] = _g12[_g3] + u[eeOffset2 + -2];
		var _g4 = eeOffset0 + -3;
		var _g13 = u;
		_g13[_g4] = _g13[_g4] + u[eeOffset2 + -3];
		u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
		k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
		var _g5 = eeOffset0 + -4;
		var _g14 = u;
		_g14[_g5] = _g14[_g5] + u[eeOffset2 + -4];
		var _g6 = eeOffset0 + -5;
		var _g15 = u;
		_g15[_g6] = _g15[_g6] + u[eeOffset2 + -5];
		u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
		k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
		var _g7 = eeOffset0 + -6;
		var _g16 = u;
		_g16[_g7] = _g16[_g7] + u[eeOffset2 + -6];
		var _g8 = eeOffset0 + -7;
		var _g17 = u;
		_g17[_g8] = _g17[_g8] + u[eeOffset2 + -7];
		u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
	var i_off1 = n2 - 1 - n4;
	var eeOffset01 = i_off1;
	var eeOffset21 = i_off1 + -(n >> 3);
	var aOffset1 = 0;
	var i1 = (n >> 4 >> 2) + 1;
	while(--i1 > 0) {
		var k00_201 = u[eeOffset01] - u[eeOffset21];
		var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
		var _g9 = eeOffset01;
		var _g18 = u;
		_g18[_g9] = _g18[_g9] + u[eeOffset21];
		var _g10 = eeOffset01 + -1;
		var _g19 = u;
		_g19[_g10] = _g19[_g10] + u[eeOffset21 + -1];
		u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
		k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
		var _g20 = eeOffset01 + -2;
		var _g110 = u;
		_g110[_g20] = _g110[_g20] + u[eeOffset21 + -2];
		var _g21 = eeOffset01 + -3;
		var _g111 = u;
		_g111[_g21] = _g111[_g21] + u[eeOffset21 + -3];
		u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
		k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
		var _g22 = eeOffset01 + -4;
		var _g112 = u;
		_g112[_g22] = _g112[_g22] + u[eeOffset21 + -4];
		var _g23 = eeOffset01 + -5;
		var _g113 = u;
		_g113[_g23] = _g113[_g23] + u[eeOffset21 + -5];
		u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
		k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
		var _g24 = eeOffset01 + -6;
		var _g114 = u;
		_g114[_g24] = _g114[_g24] + u[eeOffset21 + -6];
		var _g25 = eeOffset01 + -7;
		var _g115 = u;
		_g115[_g25] = _g115[_g25] + u[eeOffset21 + -7];
		u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		eeOffset01 -= 8;
		eeOffset21 -= 8;
	}
	var d0 = n2 - 1 - n8 * 0;
	var aOffset2 = 0;
	var eOffset01 = d0;
	var eOffset2 = d0 + -(n >> 4);
	var i2 = (n >> 5 >> 2) + 1;
	while(--i2 > 0) {
		var k00_202 = u[eOffset01] - u[eOffset2];
		var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
		var _g26 = eOffset01;
		var _g116 = u;
		_g116[_g26] = _g116[_g26] + u[eOffset2];
		var _g27 = eOffset01 + -1;
		var _g117 = u;
		_g117[_g27] = _g117[_g27] + u[eOffset2 + -1];
		u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
		k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
		var _g28 = eOffset01 + -2;
		var _g118 = u;
		_g118[_g28] = _g118[_g28] + u[eOffset2 + -2];
		var _g29 = eOffset01 + -3;
		var _g119 = u;
		_g119[_g29] = _g119[_g29] + u[eOffset2 + -3];
		u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
		k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
		var _g30 = eOffset01 + -4;
		var _g120 = u;
		_g120[_g30] = _g120[_g30] + u[eOffset2 + -4];
		var _g31 = eOffset01 + -5;
		var _g121 = u;
		_g121[_g31] = _g121[_g31] + u[eOffset2 + -5];
		u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
		k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
		var _g32 = eOffset01 + -6;
		var _g122 = u;
		_g122[_g32] = _g122[_g32] + u[eOffset2 + -6];
		var _g33 = eOffset01 + -7;
		var _g123 = u;
		_g123[_g33] = _g123[_g33] + u[eOffset2 + -7];
		u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		eOffset01 -= 8;
		eOffset2 -= 8;
		aOffset2 += 16;
	}
	var d01 = n2 - 1 - n8;
	var aOffset3 = 0;
	var eOffset02 = d01;
	var eOffset21 = d01 + -(n >> 4);
	var i3 = (n >> 5 >> 2) + 1;
	while(--i3 > 0) {
		var k00_203 = u[eOffset02] - u[eOffset21];
		var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
		var _g34 = eOffset02;
		var _g124 = u;
		_g124[_g34] = _g124[_g34] + u[eOffset21];
		var _g35 = eOffset02 + -1;
		var _g125 = u;
		_g125[_g35] = _g125[_g35] + u[eOffset21 + -1];
		u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
		k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
		var _g36 = eOffset02 + -2;
		var _g126 = u;
		_g126[_g36] = _g126[_g36] + u[eOffset21 + -2];
		var _g37 = eOffset02 + -3;
		var _g127 = u;
		_g127[_g37] = _g127[_g37] + u[eOffset21 + -3];
		u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
		k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
		var _g38 = eOffset02 + -4;
		var _g128 = u;
		_g128[_g38] = _g128[_g38] + u[eOffset21 + -4];
		var _g39 = eOffset02 + -5;
		var _g129 = u;
		_g129[_g39] = _g129[_g39] + u[eOffset21 + -5];
		u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
		k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
		var _g40 = eOffset02 + -6;
		var _g130 = u;
		_g130[_g40] = _g130[_g40] + u[eOffset21 + -6];
		var _g41 = eOffset02 + -7;
		var _g131 = u;
		_g131[_g41] = _g131[_g41] + u[eOffset21 + -7];
		u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		eOffset02 -= 8;
		eOffset21 -= 8;
		aOffset3 += 16;
	}
	var d02 = n2 - 1 - n8 * 2;
	var aOffset4 = 0;
	var eOffset03 = d02;
	var eOffset22 = d02 + -(n >> 4);
	var i4 = (n >> 5 >> 2) + 1;
	while(--i4 > 0) {
		var k00_204 = u[eOffset03] - u[eOffset22];
		var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
		var _g42 = eOffset03;
		var _g132 = u;
		_g132[_g42] = _g132[_g42] + u[eOffset22];
		var _g43 = eOffset03 + -1;
		var _g133 = u;
		_g133[_g43] = _g133[_g43] + u[eOffset22 + -1];
		u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
		k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
		var _g44 = eOffset03 + -2;
		var _g134 = u;
		_g134[_g44] = _g134[_g44] + u[eOffset22 + -2];
		var _g45 = eOffset03 + -3;
		var _g135 = u;
		_g135[_g45] = _g135[_g45] + u[eOffset22 + -3];
		u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
		k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
		var _g46 = eOffset03 + -4;
		var _g136 = u;
		_g136[_g46] = _g136[_g46] + u[eOffset22 + -4];
		var _g47 = eOffset03 + -5;
		var _g137 = u;
		_g137[_g47] = _g137[_g47] + u[eOffset22 + -5];
		u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
		k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
		var _g48 = eOffset03 + -6;
		var _g138 = u;
		_g138[_g48] = _g138[_g48] + u[eOffset22 + -6];
		var _g49 = eOffset03 + -7;
		var _g139 = u;
		_g139[_g49] = _g139[_g49] + u[eOffset22 + -7];
		u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		eOffset03 -= 8;
		eOffset22 -= 8;
		aOffset4 += 16;
	}
	var d03 = n2 - 1 - n8 * 3;
	var aOffset5 = 0;
	var eOffset04 = d03;
	var eOffset23 = d03 + -(n >> 4);
	var i5 = (n >> 5 >> 2) + 1;
	while(--i5 > 0) {
		var k00_205 = u[eOffset04] - u[eOffset23];
		var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
		var _g50 = eOffset04;
		var _g140 = u;
		_g140[_g50] = _g140[_g50] + u[eOffset23];
		var _g51 = eOffset04 + -1;
		var _g141 = u;
		_g141[_g51] = _g141[_g51] + u[eOffset23 + -1];
		u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
		k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
		var _g52 = eOffset04 + -2;
		var _g142 = u;
		_g142[_g52] = _g142[_g52] + u[eOffset23 + -2];
		var _g53 = eOffset04 + -3;
		var _g143 = u;
		_g143[_g53] = _g143[_g53] + u[eOffset23 + -3];
		u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
		k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
		var _g54 = eOffset04 + -4;
		var _g144 = u;
		_g144[_g54] = _g144[_g54] + u[eOffset23 + -4];
		var _g55 = eOffset04 + -5;
		var _g145 = u;
		_g145[_g55] = _g145[_g55] + u[eOffset23 + -5];
		u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
		k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
		var _g56 = eOffset04 + -6;
		var _g146 = u;
		_g146[_g56] = _g146[_g56] + u[eOffset23 + -6];
		var _g57 = eOffset04 + -7;
		var _g147 = u;
		_g147[_g57] = _g147[_g57] + u[eOffset23 + -7];
		u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		eOffset04 -= 8;
		eOffset23 -= 8;
		aOffset5 += 16;
	}
	var _g58 = 2;
	var _g148 = ld - 3 >> 1;
	while(_g58 < _g148) {
		var l = _g58++;
		var k0 = n >> l + 2;
		var k0_2 = k0 >> 1;
		var lim = 1 << l + 1;
		var _g59 = 0;
		var _g149 = lim;
		while(_g59 < _g149) {
			var i6 = _g59++;
			var d04 = n2 - 1 - k0 * i6;
			var k1 = 1 << l + 3;
			var aOffset6 = 0;
			var eOffset05 = d04;
			var eOffset24 = d04 + -k0_2;
			var i7 = (n >> l + 4 >> 2) + 1;
			while(--i7 > 0) {
				var k00_206 = u[eOffset05] - u[eOffset24];
				var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
				var _g60 = eOffset05;
				var _g150 = u;
				_g150[_g60] = _g150[_g60] + u[eOffset24];
				var _g61 = eOffset05 + -1;
				var _g151 = u;
				_g151[_g61] = _g151[_g61] + u[eOffset24 + -1];
				u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
				k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
				var _g62 = eOffset05 + -2;
				var _g152 = u;
				_g152[_g62] = _g152[_g62] + u[eOffset24 + -2];
				var _g63 = eOffset05 + -3;
				var _g153 = u;
				_g153[_g63] = _g153[_g63] + u[eOffset24 + -3];
				u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
				k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
				var _g64 = eOffset05 + -4;
				var _g154 = u;
				_g154[_g64] = _g154[_g64] + u[eOffset24 + -4];
				var _g65 = eOffset05 + -5;
				var _g155 = u;
				_g155[_g65] = _g155[_g65] + u[eOffset24 + -5];
				u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
				k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
				var _g66 = eOffset05 + -6;
				var _g156 = u;
				_g156[_g66] = _g156[_g66] + u[eOffset24 + -6];
				var _g67 = eOffset05 + -7;
				var _g157 = u;
				_g157[_g67] = _g157[_g67] + u[eOffset24 + -7];
				u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				eOffset05 -= 8;
				eOffset24 -= 8;
				aOffset6 += k1;
			}
		}
	}
	var _g210 = ld - 3 >> 1;
	var _g310 = ld - 6;
	while(_g210 < _g310) {
		var l1 = _g210++;
		var k01 = n >> l1 + 2;
		var k11 = 1 << l1 + 3;
		var k0_21 = k01 >> 1;
		var rlim = n >> l1 + 6;
		var lim1 = 1 << l1 + 1;
		var aOffset7 = 0;
		var i_off2 = n2 - 1;
		var r = rlim + 1;
		while(--r > 0) {
			var A0 = a[aOffset7];
			var A1 = a[aOffset7 + 1];
			var A2 = a[aOffset7 + k11];
			var A3 = a[aOffset7 + k11 + 1];
			var A4 = a[aOffset7 + k11 * 2];
			var A5 = a[aOffset7 + k11 * 2 + 1];
			var A6 = a[aOffset7 + k11 * 3];
			var A7 = a[aOffset7 + k11 * 3 + 1];
			var eeOffset02 = i_off2;
			var eeOffset22 = i_off2 + -k0_21;
			var i8 = lim1 + 1;
			while(--i8 > 0) {
				var k00 = u[eeOffset02] - u[eeOffset22];
				var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
				u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
				u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
				u[eeOffset22] = k00 * A0 - k111 * A1;
				u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
				k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
				k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
				u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
				u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
				u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
				u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
				k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
				k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
				u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
				u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
				u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
				u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
				k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
				k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
				u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
				u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
				u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
				u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
				eeOffset02 -= k01;
				eeOffset22 -= k01;
			}
			aOffset7 += k11 * 4;
			i_off2 -= 8;
		}
	}
	var i_off3 = n2 - 1;
	var A21 = a[n >> 3];
	var zOffset = i_off3;
	var baseOffset = i_off3 - 16 * (n >> 5);
	while(zOffset > baseOffset) {
		var t0 = u[zOffset];
		var t1 = u[zOffset + -8];
		u[zOffset + -8] = t0 - t1;
		u[zOffset] = t0 + t1;
		t0 = u[zOffset + -1];
		t1 = u[zOffset + -9];
		u[zOffset + -9] = t0 - t1;
		u[zOffset + -1] = t0 + t1;
		t0 = u[zOffset + -2];
		t1 = u[zOffset + -10];
		var k001 = t0 - t1;
		u[zOffset + -2] = t0 + t1;
		t0 = u[zOffset + -3];
		t1 = u[zOffset + -11];
		var k112 = t0 - t1;
		u[zOffset + -3] = t0 + t1;
		u[zOffset + -10] = (k001 + k112) * A21;
		u[zOffset + -11] = (k112 - k001) * A21;
		t0 = u[zOffset + -4];
		t1 = u[zOffset + -12];
		k001 = t1 - t0;
		u[zOffset + -4] = t0 + t1;
		t0 = u[zOffset + -5];
		t1 = u[zOffset + -13];
		k112 = t0 - t1;
		u[zOffset + -5] = t0 + t1;
		u[zOffset + -12] = k112;
		u[zOffset + -13] = k001;
		t0 = u[zOffset + -6];
		t1 = u[zOffset + -14];
		k001 = t1 - t0;
		u[zOffset + -6] = t0 + t1;
		t0 = u[zOffset + -7];
		t1 = u[zOffset + -15];
		k112 = t0 - t1;
		u[zOffset + -7] = t0 + t1;
		u[zOffset + -14] = (k001 + k112) * A21;
		u[zOffset + -15] = (k001 - k112) * A21;
		var t01 = u[zOffset];
		var t11 = u[zOffset + -4];
		var k002 = t01 - t11;
		var y0 = t01 + t11;
		t01 = u[zOffset + -2];
		t11 = u[zOffset + -6];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		u[zOffset] = y0 + y2;
		u[zOffset + -2] = y0 - y2;
		var k33 = u[zOffset + -3] - u[zOffset + -7];
		u[zOffset + -4] = k002 + k33;
		u[zOffset + -6] = k002 - k33;
		t01 = u[zOffset + -1];
		t11 = u[zOffset + -5];
		var k113 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = u[zOffset + -3] + u[zOffset + -7];
		u[zOffset + -1] = y1 + y3;
		u[zOffset + -3] = y1 - y3;
		u[zOffset + -5] = k113 - k22;
		u[zOffset + -7] = k113 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = u[zOffset1];
		var t12 = u[zOffset1 + -4];
		var k003 = t02 - t12;
		var y01 = t02 + t12;
		t02 = u[zOffset1 + -2];
		t12 = u[zOffset1 + -6];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		u[zOffset1] = y01 + y21;
		u[zOffset1 + -2] = y01 - y21;
		var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
		u[zOffset1 + -4] = k003 + k331;
		u[zOffset1 + -6] = k003 - k331;
		t02 = u[zOffset1 + -1];
		t12 = u[zOffset1 + -5];
		var k114 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
		u[zOffset1 + -1] = y11 + y31;
		u[zOffset1 + -3] = y11 - y31;
		u[zOffset1 + -5] = k114 - k221;
		u[zOffset1 + -7] = k114 + k221;
		zOffset -= 16;
	}
	var brOffset = 0;
	var dOffset01 = n4 - 4;
	var dOffset11 = n2 - 4;
	while(dOffset01 >= 0) {
		var k4 = bitReverse[brOffset];
		v[dOffset11 + 3] = u[k4];
		v[dOffset11 + 2] = u[k4 + 1];
		v[dOffset01 + 3] = u[k4 + 2];
		v[dOffset01 + 2] = u[k4 + 3];
		k4 = bitReverse[brOffset + 1];
		v[dOffset11 + 1] = u[k4];
		v[dOffset11] = u[k4 + 1];
		v[dOffset01 + 1] = u[k4 + 2];
		v[dOffset01] = u[k4 + 3];
		dOffset01 -= 4;
		dOffset11 -= 4;
		brOffset += 2;
	}
	var cOffset = 0;
	var dOffset2 = 0;
	var eOffset3 = n2 - 4;
	while(dOffset2 < eOffset3) {
		var a02 = v[dOffset2] - v[eOffset3 + 2];
		var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
		var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
		var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
		var b2 = v[dOffset2] + v[eOffset3 + 2];
		var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
		v[dOffset2] = b2 + b0;
		v[dOffset2 + 1] = b3 + b1;
		v[eOffset3 + 2] = b2 - b0;
		v[eOffset3 + 3] = b1 - b3;
		a02 = v[dOffset2 + 2] - v[eOffset3];
		a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
		b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
		b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
		b2 = v[dOffset2 + 2] + v[eOffset3];
		b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
		v[dOffset2 + 2] = b2 + b0;
		v[dOffset2 + 3] = b3 + b1;
		v[eOffset3] = b2 - b0;
		v[eOffset3 + 1] = b1 - b3;
		cOffset += 4;
		dOffset2 += 4;
		eOffset3 -= 4;
	}
	var bOffset = n2 - 8;
	var eOffset4 = n2 - 8;
	var dOffset02 = 0;
	var dOffset12 = n2 - 4;
	var dOffset21 = n2;
	var dOffset3 = n - 4;
	while(eOffset4 >= 0) {
		var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
		var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
		buffer[dOffset02] = p3;
		buffer[dOffset12 + 3] = -p3;
		buffer[dOffset21] = p2;
		buffer[dOffset3 + 3] = p2;
		var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
		var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
		buffer[dOffset02 + 1] = p1;
		buffer[dOffset12 + 2] = -p1;
		buffer[dOffset21 + 1] = p0;
		buffer[dOffset3 + 2] = p0;
		p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
		p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
		buffer[dOffset02 + 2] = p3;
		buffer[dOffset12 + 1] = -p3;
		buffer[dOffset21 + 2] = p2;
		buffer[dOffset3 + 1] = p2;
		p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
		p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
		buffer[dOffset02 + 3] = p1;
		buffer[dOffset12] = -p1;
		buffer[dOffset21 + 3] = p0;
		buffer[dOffset3] = p0;
		bOffset -= 8;
		eOffset4 -= 8;
		dOffset02 += 4;
		dOffset21 += 4;
		dOffset12 -= 4;
		dOffset3 -= 4;
	}
};
kha_audio2_ogg_tools_Mdct.step3Iter0Loop = function(n,e,i_off,k_off,a) {
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var aOffset = 0;
	var i = (n >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eeOffset0] - e[eeOffset2];
		var k01_21 = e[eeOffset0 + -1] - e[eeOffset2 + -1];
		var _g = eeOffset0;
		var _g1 = e;
		_g1[_g] = _g1[_g] + e[eeOffset2];
		var _g2 = eeOffset0 + -1;
		var _g11 = e;
		_g11[_g2] = _g11[_g2] + e[eeOffset2 + -1];
		e[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -2] - e[eeOffset2 + -2];
		k01_21 = e[eeOffset0 + -3] - e[eeOffset2 + -3];
		var _g3 = eeOffset0 + -2;
		var _g12 = e;
		_g12[_g3] = _g12[_g3] + e[eeOffset2 + -2];
		var _g4 = eeOffset0 + -3;
		var _g13 = e;
		_g13[_g4] = _g13[_g4] + e[eeOffset2 + -3];
		e[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -4] - e[eeOffset2 + -4];
		k01_21 = e[eeOffset0 + -5] - e[eeOffset2 + -5];
		var _g5 = eeOffset0 + -4;
		var _g14 = e;
		_g14[_g5] = _g14[_g5] + e[eeOffset2 + -4];
		var _g6 = eeOffset0 + -5;
		var _g15 = e;
		_g15[_g6] = _g15[_g6] + e[eeOffset2 + -5];
		e[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -6] - e[eeOffset2 + -6];
		k01_21 = e[eeOffset0 + -7] - e[eeOffset2 + -7];
		var _g7 = eeOffset0 + -6;
		var _g16 = e;
		_g16[_g7] = _g16[_g7] + e[eeOffset2 + -6];
		var _g8 = eeOffset0 + -7;
		var _g17 = e;
		_g17[_g8] = _g17[_g8] + e[eeOffset2 + -7];
		e[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerRLoop = function(lim,e,d0,k_off,a,k1) {
	var aOffset = 0;
	var eOffset0 = d0;
	var eOffset2 = d0 + k_off;
	var i = (lim >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eOffset0] - e[eOffset2];
		var k01_21 = e[eOffset0 + -1] - e[eOffset2 + -1];
		var _g = eOffset0;
		var _g1 = e;
		_g1[_g] = _g1[_g] + e[eOffset2];
		var _g2 = eOffset0 + -1;
		var _g11 = e;
		_g11[_g2] = _g11[_g2] + e[eOffset2 + -1];
		e[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -2] - e[eOffset2 + -2];
		k01_21 = e[eOffset0 + -3] - e[eOffset2 + -3];
		var _g3 = eOffset0 + -2;
		var _g12 = e;
		_g12[_g3] = _g12[_g3] + e[eOffset2 + -2];
		var _g4 = eOffset0 + -3;
		var _g13 = e;
		_g13[_g4] = _g13[_g4] + e[eOffset2 + -3];
		e[eOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -4] - e[eOffset2 + -4];
		k01_21 = e[eOffset0 + -5] - e[eOffset2 + -5];
		var _g5 = eOffset0 + -4;
		var _g14 = e;
		_g14[_g5] = _g14[_g5] + e[eOffset2 + -4];
		var _g6 = eOffset0 + -5;
		var _g15 = e;
		_g15[_g6] = _g15[_g6] + e[eOffset2 + -5];
		e[eOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -6] - e[eOffset2 + -6];
		k01_21 = e[eOffset0 + -7] - e[eOffset2 + -7];
		var _g7 = eOffset0 + -6;
		var _g16 = e;
		_g16[_g7] = _g16[_g7] + e[eOffset2 + -6];
		var _g8 = eOffset0 + -7;
		var _g17 = e;
		_g17[_g8] = _g17[_g8] + e[eOffset2 + -7];
		e[eOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		eOffset0 -= 8;
		eOffset2 -= 8;
		aOffset += k1;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoop = function(n,e,i_off,k_off,a,aOffset0,aOffset1,k0) {
	var A0 = a[aOffset0];
	var A1 = a[aOffset0 + 1];
	var A2 = a[aOffset0 + aOffset1];
	var A3 = a[aOffset0 + aOffset1 + 1];
	var A4 = a[aOffset0 + aOffset1 * 2];
	var A5 = a[aOffset0 + aOffset1 * 2 + 1];
	var A6 = a[aOffset0 + aOffset1 * 3];
	var A7 = a[aOffset0 + aOffset1 * 3 + 1];
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var i = n + 1;
	while(--i > 0) {
		var k00 = e[eeOffset0] - e[eeOffset2];
		var k11 = e[eeOffset0 + -1] - e[eeOffset2 + -1];
		e[eeOffset0] = e[eeOffset0] + e[eeOffset2];
		e[eeOffset0 + -1] = e[eeOffset0 + -1] + e[eeOffset2 + -1];
		e[eeOffset2] = k00 * A0 - k11 * A1;
		e[eeOffset2 + -1] = k11 * A0 + k00 * A1;
		k00 = e[eeOffset0 + -2] - e[eeOffset2 + -2];
		k11 = e[eeOffset0 + -3] - e[eeOffset2 + -3];
		e[eeOffset0 + -2] = e[eeOffset0 + -2] + e[eeOffset2 + -2];
		e[eeOffset0 + -3] = e[eeOffset0 + -3] + e[eeOffset2 + -3];
		e[eeOffset2 + -2] = k00 * A2 - k11 * A3;
		e[eeOffset2 + -3] = k11 * A2 + k00 * A3;
		k00 = e[eeOffset0 + -4] - e[eeOffset2 + -4];
		k11 = e[eeOffset0 + -5] - e[eeOffset2 + -5];
		e[eeOffset0 + -4] = e[eeOffset0 + -4] + e[eeOffset2 + -4];
		e[eeOffset0 + -5] = e[eeOffset0 + -5] + e[eeOffset2 + -5];
		e[eeOffset2 + -4] = k00 * A4 - k11 * A5;
		e[eeOffset2 + -5] = k11 * A4 + k00 * A5;
		k00 = e[eeOffset0 + -6] - e[eeOffset2 + -6];
		k11 = e[eeOffset0 + -7] - e[eeOffset2 + -7];
		e[eeOffset0 + -6] = e[eeOffset0 + -6] + e[eeOffset2 + -6];
		e[eeOffset0 + -7] = e[eeOffset0 + -7] + e[eeOffset2 + -7];
		e[eeOffset2 + -6] = k00 * A6 - k11 * A7;
		e[eeOffset2 + -7] = k11 * A6 + k00 * A7;
		eeOffset0 -= k0;
		eeOffset2 -= k0;
	}
};
kha_audio2_ogg_tools_Mdct.iter54 = function(e,zOffset) {
	var t0 = e[zOffset];
	var t1 = e[zOffset + -4];
	var k00 = t0 - t1;
	var y0 = t0 + t1;
	t0 = e[zOffset + -2];
	t1 = e[zOffset + -6];
	var y2 = t0 + t1;
	var k22 = t0 - t1;
	e[zOffset] = y0 + y2;
	e[zOffset + -2] = y0 - y2;
	var k33 = e[zOffset + -3] - e[zOffset + -7];
	e[zOffset + -4] = k00 + k33;
	e[zOffset + -6] = k00 - k33;
	t0 = e[zOffset + -1];
	t1 = e[zOffset + -5];
	var k11 = t0 - t1;
	var y1 = t0 + t1;
	var y3 = e[zOffset + -3] + e[zOffset + -7];
	e[zOffset + -1] = y1 + y3;
	e[zOffset + -3] = y1 - y3;
	e[zOffset + -5] = k11 - k22;
	e[zOffset + -7] = k11 + k22;
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoopLd654 = function(n,e,i_off,a,baseN) {
	var A2 = a[baseN >> 3];
	var zOffset = i_off;
	var baseOffset = i_off - 16 * n;
	while(zOffset > baseOffset) {
		var t0 = e[zOffset];
		var t1 = e[zOffset + -8];
		e[zOffset + -8] = t0 - t1;
		e[zOffset] = t0 + t1;
		t0 = e[zOffset + -1];
		t1 = e[zOffset + -9];
		e[zOffset + -9] = t0 - t1;
		e[zOffset + -1] = t0 + t1;
		t0 = e[zOffset + -2];
		t1 = e[zOffset + -10];
		var k00 = t0 - t1;
		e[zOffset + -2] = t0 + t1;
		t0 = e[zOffset + -3];
		t1 = e[zOffset + -11];
		var k11 = t0 - t1;
		e[zOffset + -3] = t0 + t1;
		e[zOffset + -10] = (k00 + k11) * A2;
		e[zOffset + -11] = (k11 - k00) * A2;
		t0 = e[zOffset + -4];
		t1 = e[zOffset + -12];
		k00 = t1 - t0;
		e[zOffset + -4] = t0 + t1;
		t0 = e[zOffset + -5];
		t1 = e[zOffset + -13];
		k11 = t0 - t1;
		e[zOffset + -5] = t0 + t1;
		e[zOffset + -12] = k11;
		e[zOffset + -13] = k00;
		t0 = e[zOffset + -6];
		t1 = e[zOffset + -14];
		k00 = t1 - t0;
		e[zOffset + -6] = t0 + t1;
		t0 = e[zOffset + -7];
		t1 = e[zOffset + -15];
		k11 = t0 - t1;
		e[zOffset + -7] = t0 + t1;
		e[zOffset + -14] = (k00 + k11) * A2;
		e[zOffset + -15] = (k00 - k11) * A2;
		var t01 = e[zOffset];
		var t11 = e[zOffset + -4];
		var k001 = t01 - t11;
		var y0 = t01 + t11;
		t01 = e[zOffset + -2];
		t11 = e[zOffset + -6];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		e[zOffset] = y0 + y2;
		e[zOffset + -2] = y0 - y2;
		var k33 = e[zOffset + -3] - e[zOffset + -7];
		e[zOffset + -4] = k001 + k33;
		e[zOffset + -6] = k001 - k33;
		t01 = e[zOffset + -1];
		t11 = e[zOffset + -5];
		var k111 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = e[zOffset + -3] + e[zOffset + -7];
		e[zOffset + -1] = y1 + y3;
		e[zOffset + -3] = y1 - y3;
		e[zOffset + -5] = k111 - k22;
		e[zOffset + -7] = k111 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = e[zOffset1];
		var t12 = e[zOffset1 + -4];
		var k002 = t02 - t12;
		var y01 = t02 + t12;
		t02 = e[zOffset1 + -2];
		t12 = e[zOffset1 + -6];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		e[zOffset1] = y01 + y21;
		e[zOffset1 + -2] = y01 - y21;
		var k331 = e[zOffset1 + -3] - e[zOffset1 + -7];
		e[zOffset1 + -4] = k002 + k331;
		e[zOffset1 + -6] = k002 - k331;
		t02 = e[zOffset1 + -1];
		t12 = e[zOffset1 + -5];
		var k112 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = e[zOffset1 + -3] + e[zOffset1 + -7];
		e[zOffset1 + -1] = y11 + y31;
		e[zOffset1 + -3] = y11 - y31;
		e[zOffset1 + -5] = k112 - k221;
		e[zOffset1 + -7] = k112 + k221;
		zOffset -= 16;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = "kha.audio2.ogg.vorbis.Reader";
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var bytes1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var bytes1 = input;
	decoder.setupSampleNumber(function(pos) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(bytes1,pos);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var this1 = new Float32Array(bufferSize * header.channel);
	var buffer = this1;
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g = 0;
		var _g1 = n * header.channel;
		while(_g < _g1) {
			var i = _g++;
			output.writeFloat(buffer[i]);
		}
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	decoder: null
	,get_header: function() {
		return this.decoder.header;
	}
	,get_totalSample: function() {
		return this.decoder.totalSample;
	}
	,get_totalMillisecond: function() {
		var samples = this.decoder.totalSample;
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (value / 1000)));
		return this.get_currentMillisecond();
	}
	,loopStart: null
	,loopLength: null
	,seekFunc: null
	,inputLength: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,clone: function() {
		var reader = Object.create(kha_audio2_ogg_vorbis_Reader.prototype);
		reader.seekFunc = this.seekFunc;
		reader.inputLength = this.inputLength;
		reader.decoder = this.decoder.clone(this.seekFunc);
		reader.loopStart = this.loopStart;
		reader.loopLength = this.loopLength;
		return reader;
	}
	,sampleToMillisecond: function(samples) {
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,millisecondToSample: function(millseconds) {
		return Math.floor(_$UInt_UInt_$Impl_$.toFloat(this.get_header().sampleRate) * (millseconds / 1000));
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
	,__properties__: {set_currentMillisecond:"set_currentMillisecond",get_currentMillisecond:"get_currentMillisecond",set_currentSample:"set_currentSample",get_currentSample:"get_currentSample",get_totalMillisecond:"get_totalMillisecond",get_totalSample:"get_totalSample",get_header:"get_header"}
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = "kha.audio2.ogg.vorbis.VorbisDecodeState";
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	page: null
	,eof: null
	,pFirst: null
	,pLast: null
	,validBits: null
	,inputPosition: null
	,input: null
	,discardSamplesDeferred: null
	,segments: null
	,bytesInSeg: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,currentSample: null
	,previousWindow: null
	,previousLength: null
	,finalY: null
	,firstDecode: null
	,nextSeg: null
	,acc: null
	,lastSeg: null
	,lastSegWhich: null
	,endSegWithKnownLoc: null
	,knownLocForPacket: null
	,error: null
	,currentLoc: null
	,currentLocValid: null
	,firstAudioPageOffset: null
	,setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var this1 = new Array(segmentCount);
		var vec = this1;
		var _g = 0;
		var _g1 = segmentCount;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i1 = segmentCount - 1;
			while(i1 >= 0) {
				if(this.segments[i1] < 255) {
					break;
				}
				if(i1 >= 0) {
					this.endSegWithKnownLoc = i1;
					this.knownLocForPacket = loc0;
				}
				--i1;
			}
		}
		if(this.firstDecode) {
			var i2 = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g2 = 0;
			var _g11 = segmentCount;
			while(_g2 < _g11) {
				var i3 = _g2++;
				len += this.segments[i3];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Object.create(kha_audio2_ogg_vorbis_VorbisDecodeState.prototype);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				if((e1 instanceof kha_audio2_ogg_vorbis_data_ReaderError)) {
					this.lastSeg = true;
					this.error = e1;
					return 0;
				} else {
					throw e;
				}
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				if((e1 instanceof haxe_io_Eof)) {
					var e2 = e1;
					eof = true;
					x = 0;
				} else {
					throw e;
				}
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,readPacketRaw: function() {
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			return -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			return this.input.readByte();
		}
	}
	,readPacket: function() {
		var x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		return x;
	}
	,flushPacket: function() {
		while(this.bytesInSeg != 0 || !this.lastSeg && this.next() != 0) {
			this.bytesInSeg--;
			this.inputPosition += 1;
			this.input.readByte();
		}
	}
	,vorbisValidate: function() {
		var header = new haxe_io_Bytes(new ArrayBuffer(6));
		var x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		header.b[0] = x;
		var x1;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x1 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x1 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[1] = x1;
		var x2;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x2 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x2 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[2] = x2;
		var x3;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x3 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x3 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[3] = x3;
		var x4;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x4 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x4 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[4] = x4;
		var x5;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x5 = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x5 = this.input.readByte();
		}
		this.validBits = 0;
		header.b[5] = x5;
		if(header.toString() != "vorbis") {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 308, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 311, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,capturePattern: function() {
		var tmp;
		var tmp1;
		var tmp2;
		this.inputPosition += 1;
		if(this.input.readByte() == 79) {
			this.inputPosition += 1;
			tmp2 = this.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			this.inputPosition += 1;
			tmp1 = this.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			this.inputPosition += 1;
			tmp = this.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
	}
	,skip: function(len) {
		this.inputPosition += len;
		var this1 = new Array(len);
		var vec = this1;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,decode: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		var val;
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = this.decodeScalarRaw(c);
		}
		if(c.sparse) {
			val = c.sortedValues[val];
		}
		return val;
	}
	,decodeRaw: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				return -1;
			} else {
				return i;
			}
		} else {
			return this.decodeScalarRaw(c);
		}
	}
	,isLastByte: function() {
		if(this.bytesInSeg == 0) {
			return this.lastSeg;
		} else {
			return false;
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			var tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,readInt32: function() {
		this.inputPosition += 4;
		return this.input.readInt32();
	}
	,readByte: function() {
		this.inputPosition += 1;
		return this.input.readByte();
	}
	,read: function(n) {
		this.inputPosition += n;
		var this1 = new Array(n);
		var vec = this1;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		return vec;
	}
	,readBytes: function(n) {
		this.inputPosition += n;
		return this.input.read(n);
	}
	,readString: function(n) {
		this.inputPosition += n;
		return this.input.readString(n);
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g._hx_index) {
		case 0:
			var l = _g.last;
			var e = _g.end;
			end = e;
			last = l;
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		var lastPageLoc = this.inputPosition;
		_hx_loop1: while(!last) {
			seekFunc(this.inputPosition = end);
			var _g1 = this.findPage(seekFunc,inputLength);
			switch(_g1._hx_index) {
			case 0:
				var l1 = _g1.last;
				var e1 = _g1.end;
				end = e1;
				last = l1;
				break;
			case 1:
				break _hx_loop1;
			}
			previousSafe = lastPageLoc + 1;
			lastPageLoc = this.inputPosition;
		}
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var this1 = new Array(6);
		var vec = this1;
		var _g2 = 0;
		var _g11 = 6;
		while(_g2 < _g11) {
			var i = _g2++;
			vec[i] = this.input.readByte();
		}
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 553, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,forcePageResync: function() {
		this.nextSeg = -1;
	}
	,setInputOffset: function(seekFunc,n) {
		seekFunc(this.inputPosition = n);
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				var n = this.input.readByte();
				if(n == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var this1 = new Array(27);
					var header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					this.inputPosition += 1;
					header[4] = this.input.readByte();
					this.inputPosition += 1;
					header[5] = this.input.readByte();
					this.inputPosition += 1;
					header[6] = this.input.readByte();
					this.inputPosition += 1;
					header[7] = this.input.readByte();
					this.inputPosition += 1;
					header[8] = this.input.readByte();
					this.inputPosition += 1;
					header[9] = this.input.readByte();
					this.inputPosition += 1;
					header[10] = this.input.readByte();
					this.inputPosition += 1;
					header[11] = this.input.readByte();
					this.inputPosition += 1;
					header[12] = this.input.readByte();
					this.inputPosition += 1;
					header[13] = this.input.readByte();
					this.inputPosition += 1;
					header[14] = this.input.readByte();
					this.inputPosition += 1;
					header[15] = this.input.readByte();
					this.inputPosition += 1;
					header[16] = this.input.readByte();
					this.inputPosition += 1;
					header[17] = this.input.readByte();
					this.inputPosition += 1;
					header[18] = this.input.readByte();
					this.inputPosition += 1;
					header[19] = this.input.readByte();
					this.inputPosition += 1;
					header[20] = this.input.readByte();
					this.inputPosition += 1;
					header[21] = this.input.readByte();
					this.inputPosition += 1;
					header[22] = this.input.readByte();
					this.inputPosition += 1;
					header[23] = this.input.readByte();
					this.inputPosition += 1;
					header[24] = this.input.readByte();
					this.inputPosition += 1;
					header[25] = this.input.readByte();
					this.inputPosition += 1;
					header[26] = this.input.readByte();
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					header[22] = 0;
					header[23] = 0;
					header[24] = 0;
					header[25] = 0;
					var crc = 0;
					var _g = 0;
					while(_g < 27) {
						var i = _g++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i] ^ crc >>> 24];
					}
					var len = 0;
					try {
						var _g1 = 0;
						var _g2 = header[26];
						while(_g1 < _g2) {
							var i1 = _g1++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g3 = 0;
						var _g4 = len;
						while(_g3 < _g4) {
							var i2 = _g3++;
							this.inputPosition += 1;
							var byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[byte ^ crc >>> 24];
						}
					} catch( e ) {
						var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
						if((e1 instanceof haxe_io_Eof)) {
							var e2 = e1;
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else {
							throw e;
						}
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e3 ) {
			var e4 = (e3 instanceof js__$Boot_HaxeError) ? e3.val : e3;
			if((e4 instanceof haxe_io_Eof)) {
				var e5 = e4;
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else {
				throw e3;
			}
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var this1 = new Array(255);
		var packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var this2 = new Array(27);
		var vec = this2;
		var _g = 0;
		var _g1 = 27;
		while(_g < _g1) {
			var i = _g++;
			vec[i] = this.input.readByte();
		}
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var this3 = new Array(n);
		var vec1 = this3;
		var _g2 = 0;
		var _g11 = n;
		while(_g2 < _g11) {
			var i1 = _g2++;
			vec1[i1] = this.input.readByte();
		}
		var lacing = vec1;
		var len = 0;
		var _g3 = 0;
		var _g12 = pageHeader[26];
		while(_g3 < _g12) {
			var i2 = _g3++;
			len += lacing[i2];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g21 = 0;
		var _g31 = pageHeader[26];
		while(_g21 < _g31) {
			var i3 = _g21++;
			if(packetStart) {
				if(lacing[i3] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				var b = n2 < 16384 ? n2 < 16 ? log2_4[n2] : n2 < 512 ? 5 + log2_4[n2 >> 5] : 10 + log2_4[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_4[n2 >> 15] : 20 + log2_4[n2 >> 20] : n2 < 536870912 ? 25 + log2_4[n2 >> 25] : n2 < -2147483648 ? 30 + log2_4[n2 >> 30] : 0;
				n1 &= (1 << b) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = lacing[i3] - 1;
				this.inputPosition += len1;
				var this4 = new Array(len1);
				var vec2 = this4;
				var _g4 = 0;
				var _g13 = len1;
				while(_g4 < _g13) {
					var i4 = _g4++;
					vec2[i4] = this.input.readByte();
				}
			} else {
				var len2 = lacing[i3];
				this.inputPosition += len2;
				var this5 = new Array(len2);
				var vec3 = this5;
				var _g5 = 0;
				var _g14 = len2;
				while(_g5 < _g14) {
					var i5 = _g5++;
					vec3[i5] = this.input.readByte();
				}
			}
			packetStart = lacing[i3] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i6 = numPacket - 2;
		while(i6 >= 1) {
			--i6;
			if(packetType[i6]) {
				if(packetType[i6 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i6;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var _g = 0;
		var _g1 = c.entries;
		while(_g < _g1) {
			var i = _g++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 847, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxEnums["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : "kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult", __constructs__ : ["Found","NotFound"]
	,Found: ($_=function(end,last) { return {_hx_index:0,end:end,last:last,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}; },$_.__params__ = ["end","last"],$_)
	,NotFound: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult",toString:$estr}
};
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var this1 = new Array(header.channel);
	this.channelBuffers = this1;
	var this2 = new Array(header.channel);
	this.previousWindow = this2;
	var this3 = new Array(header.channel);
	this.finalY = this3;
	var _g = 0;
	var _g1 = header.channel;
	while(_g < _g1) {
		var i = _g++;
		var this4 = this.channelBuffers;
		var this5 = new Array(header.blocksize1);
		var vec = this5;
		this4[i] = vec;
		var this6 = this.previousWindow;
		var this7 = new Array(header.blocksize1 / 2 | 0);
		var vec1 = this7;
		this6[i] = vec1;
		this.finalY[i] = [];
	}
	var this8 = new Array(2);
	this.a = this8;
	var this9 = new Array(2);
	this.b = this9;
	var this10 = new Array(2);
	this.c = this10;
	var this11 = new Array(2);
	this.window = this11;
	var this12 = new Array(2);
	this.bitReverseData = this12;
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = "kha.audio2.ogg.vorbis.VorbisDecoder";
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	previousWindow: null
	,previousLength: null
	,finalY: null
	,a: null
	,b: null
	,c: null
	,window: null
	,bitReverseData: null
	,channelBuffers: null
	,channelBufferStart: null
	,channelBufferEnd: null
	,header: null
	,currentSample: null
	,totalSample: null
	,decodeState: null
	,read: function(output,samples,channels,sampleRate,useFloat) {
		var b = this.header.sampleRate;
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(b) | 0) != 0) {
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(_$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var b1 = this.header.sampleRate;
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(b1) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g = this.channelBufferStart;
			var _g1 = this.channelBufferStart + k;
			while(_g < _g1) {
				var j = _g++;
				var _g2 = 0;
				var _g11 = sampleRepeat;
				while(_g2 < _g11) {
					var sr = _g2++;
					var _g3 = 0;
					var _g12 = this.header.channel;
					while(_g3 < _g12) {
						var i = _g3++;
						var _g4 = 0;
						var _g13 = channelRepeat;
						while(_g4 < _g13) {
							var cr = _g4++;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g5 = n;
		var _g14 = len;
		while(_g5 < _g14) {
			var j1 = _g5++;
			var _g6 = 0;
			var _g15 = sampleRepeat;
			while(_g6 < _g15) {
				var sr1 = _g6++;
				var _g7 = 0;
				var _g16 = this.header.channel;
				while(_g7 < _g16) {
					var i1 = _g7++;
					var _g8 = 0;
					var _g17 = channelRepeat;
					while(_g8 < _g17) {
						var cr1 = _g8++;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					probe = attempts >= 8 ? probe2 : _$UInt_UInt_$Impl_$.gt(probe2,probe) ? probe + (probe2 - probe >>> 1) : probe2 + (probe - probe2 >>> 1);
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				switch(this.decodeState.findPage(seekFunc,inputLength)._hx_index) {
				case 0:
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,clone: function(seekFunc) {
		var decoder = Object.create(kha_audio2_ogg_vorbis_VorbisDecoder.prototype);
		decoder.currentSample = this.currentSample;
		decoder.totalSample = this.totalSample;
		decoder.previousLength = this.previousLength;
		decoder.channelBufferStart = this.channelBufferStart;
		decoder.channelBufferEnd = this.channelBufferEnd;
		decoder.a = this.a;
		decoder.b = this.b;
		decoder.c = this.c;
		decoder.window = this.window;
		decoder.bitReverseData = this.bitReverseData;
		decoder.header = this.header;
		decoder.decodeState = this.decodeState.clone(seekFunc);
		var this1 = new Array(this.header.channel);
		decoder.channelBuffers = this1;
		var this2 = new Array(this.header.channel);
		decoder.previousWindow = this2;
		var this3 = new Array(this.header.channel);
		decoder.finalY = this3;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			decoder.channelBuffers[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.channelBuffers[i]);
			decoder.previousWindow[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.previousWindow[i]);
			decoder.finalY[i] = Lambda.array(this.finalY[i]);
		}
		return decoder;
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g = 0;
			var _g1 = this.header.channel;
			while(_g < _g1) {
				var i = _g++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g2 = 0;
				var _g11 = n;
				while(_g2 < _g11) {
					var j = _g2++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g3 = 0;
		var _g12 = this.header.channel;
		while(_g3 < _g12) {
			var i1 = _g3++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g4 = 0;
			var _g13 = len - right;
			while(_g4 < _g13) {
				var j1 = _g4++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = this.a;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this3 = this.b;
		var this4 = new Array(n2);
		this3[bs] = this4;
		var this5 = this.c;
		var this6 = new Array(n4);
		this5[bs] = this6;
		var this7 = this.window;
		var this8 = new Array(n2);
		this7[bs] = this8;
		var this9 = this.bitReverseData;
		var this10 = new Array(n8);
		this9[bs] = this10;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = new Array(n2);
		var buf2 = this1;
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
			var _g = eeOffset0;
			var _g1 = u;
			_g1[_g] = _g1[_g] + u[eeOffset2];
			var _g2 = eeOffset0 + -1;
			var _g11 = u;
			_g11[_g2] = _g11[_g2] + u[eeOffset2 + -1];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
			k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
			var _g3 = eeOffset0 + -2;
			var _g12 = u;
			_g12[_g3] = _g12[_g3] + u[eeOffset2 + -2];
			var _g4 = eeOffset0 + -3;
			var _g13 = u;
			_g13[_g4] = _g13[_g4] + u[eeOffset2 + -3];
			u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
			k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
			var _g5 = eeOffset0 + -4;
			var _g14 = u;
			_g14[_g5] = _g14[_g5] + u[eeOffset2 + -4];
			var _g6 = eeOffset0 + -5;
			var _g15 = u;
			_g15[_g6] = _g15[_g6] + u[eeOffset2 + -5];
			u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
			k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
			var _g7 = eeOffset0 + -6;
			var _g16 = u;
			_g16[_g7] = _g16[_g7] + u[eeOffset2 + -6];
			var _g8 = eeOffset0 + -7;
			var _g17 = u;
			_g17[_g8] = _g17[_g8] + u[eeOffset2 + -7];
			u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = u[eeOffset01] - u[eeOffset21];
			var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
			var _g9 = eeOffset01;
			var _g18 = u;
			_g18[_g9] = _g18[_g9] + u[eeOffset21];
			var _g10 = eeOffset01 + -1;
			var _g19 = u;
			_g19[_g10] = _g19[_g10] + u[eeOffset21 + -1];
			u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
			k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
			var _g20 = eeOffset01 + -2;
			var _g110 = u;
			_g110[_g20] = _g110[_g20] + u[eeOffset21 + -2];
			var _g21 = eeOffset01 + -3;
			var _g111 = u;
			_g111[_g21] = _g111[_g21] + u[eeOffset21 + -3];
			u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
			k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
			var _g22 = eeOffset01 + -4;
			var _g112 = u;
			_g112[_g22] = _g112[_g22] + u[eeOffset21 + -4];
			var _g23 = eeOffset01 + -5;
			var _g113 = u;
			_g113[_g23] = _g113[_g23] + u[eeOffset21 + -5];
			u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
			k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
			var _g24 = eeOffset01 + -6;
			var _g114 = u;
			_g114[_g24] = _g114[_g24] + u[eeOffset21 + -6];
			var _g25 = eeOffset01 + -7;
			var _g115 = u;
			_g115[_g25] = _g115[_g25] + u[eeOffset21 + -7];
			u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = u[eOffset01] - u[eOffset2];
			var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
			var _g26 = eOffset01;
			var _g116 = u;
			_g116[_g26] = _g116[_g26] + u[eOffset2];
			var _g27 = eOffset01 + -1;
			var _g117 = u;
			_g117[_g27] = _g117[_g27] + u[eOffset2 + -1];
			u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
			k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
			var _g28 = eOffset01 + -2;
			var _g118 = u;
			_g118[_g28] = _g118[_g28] + u[eOffset2 + -2];
			var _g29 = eOffset01 + -3;
			var _g119 = u;
			_g119[_g29] = _g119[_g29] + u[eOffset2 + -3];
			u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
			k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
			var _g30 = eOffset01 + -4;
			var _g120 = u;
			_g120[_g30] = _g120[_g30] + u[eOffset2 + -4];
			var _g31 = eOffset01 + -5;
			var _g121 = u;
			_g121[_g31] = _g121[_g31] + u[eOffset2 + -5];
			u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
			k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
			var _g32 = eOffset01 + -6;
			var _g122 = u;
			_g122[_g32] = _g122[_g32] + u[eOffset2 + -6];
			var _g33 = eOffset01 + -7;
			var _g123 = u;
			_g123[_g33] = _g123[_g33] + u[eOffset2 + -7];
			u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = u[eOffset02] - u[eOffset21];
			var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
			var _g34 = eOffset02;
			var _g124 = u;
			_g124[_g34] = _g124[_g34] + u[eOffset21];
			var _g35 = eOffset02 + -1;
			var _g125 = u;
			_g125[_g35] = _g125[_g35] + u[eOffset21 + -1];
			u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
			k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
			var _g36 = eOffset02 + -2;
			var _g126 = u;
			_g126[_g36] = _g126[_g36] + u[eOffset21 + -2];
			var _g37 = eOffset02 + -3;
			var _g127 = u;
			_g127[_g37] = _g127[_g37] + u[eOffset21 + -3];
			u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
			k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
			var _g38 = eOffset02 + -4;
			var _g128 = u;
			_g128[_g38] = _g128[_g38] + u[eOffset21 + -4];
			var _g39 = eOffset02 + -5;
			var _g129 = u;
			_g129[_g39] = _g129[_g39] + u[eOffset21 + -5];
			u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
			k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
			var _g40 = eOffset02 + -6;
			var _g130 = u;
			_g130[_g40] = _g130[_g40] + u[eOffset21 + -6];
			var _g41 = eOffset02 + -7;
			var _g131 = u;
			_g131[_g41] = _g131[_g41] + u[eOffset21 + -7];
			u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = u[eOffset03] - u[eOffset22];
			var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
			var _g42 = eOffset03;
			var _g132 = u;
			_g132[_g42] = _g132[_g42] + u[eOffset22];
			var _g43 = eOffset03 + -1;
			var _g133 = u;
			_g133[_g43] = _g133[_g43] + u[eOffset22 + -1];
			u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
			k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
			var _g44 = eOffset03 + -2;
			var _g134 = u;
			_g134[_g44] = _g134[_g44] + u[eOffset22 + -2];
			var _g45 = eOffset03 + -3;
			var _g135 = u;
			_g135[_g45] = _g135[_g45] + u[eOffset22 + -3];
			u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
			k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
			var _g46 = eOffset03 + -4;
			var _g136 = u;
			_g136[_g46] = _g136[_g46] + u[eOffset22 + -4];
			var _g47 = eOffset03 + -5;
			var _g137 = u;
			_g137[_g47] = _g137[_g47] + u[eOffset22 + -5];
			u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
			k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
			var _g48 = eOffset03 + -6;
			var _g138 = u;
			_g138[_g48] = _g138[_g48] + u[eOffset22 + -6];
			var _g49 = eOffset03 + -7;
			var _g139 = u;
			_g139[_g49] = _g139[_g49] + u[eOffset22 + -7];
			u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = u[eOffset04] - u[eOffset23];
			var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
			var _g50 = eOffset04;
			var _g140 = u;
			_g140[_g50] = _g140[_g50] + u[eOffset23];
			var _g51 = eOffset04 + -1;
			var _g141 = u;
			_g141[_g51] = _g141[_g51] + u[eOffset23 + -1];
			u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
			k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
			var _g52 = eOffset04 + -2;
			var _g142 = u;
			_g142[_g52] = _g142[_g52] + u[eOffset23 + -2];
			var _g53 = eOffset04 + -3;
			var _g143 = u;
			_g143[_g53] = _g143[_g53] + u[eOffset23 + -3];
			u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
			k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
			var _g54 = eOffset04 + -4;
			var _g144 = u;
			_g144[_g54] = _g144[_g54] + u[eOffset23 + -4];
			var _g55 = eOffset04 + -5;
			var _g145 = u;
			_g145[_g55] = _g145[_g55] + u[eOffset23 + -5];
			u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
			k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
			var _g56 = eOffset04 + -6;
			var _g146 = u;
			_g146[_g56] = _g146[_g56] + u[eOffset23 + -6];
			var _g57 = eOffset04 + -7;
			var _g147 = u;
			_g147[_g57] = _g147[_g57] + u[eOffset23 + -7];
			u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g58 = 2;
		var _g148 = ld - 3 >> 1;
		while(_g58 < _g148) {
			var l = _g58++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g59 = 0;
			var _g149 = lim;
			while(_g59 < _g149) {
				var i6 = _g59++;
				var d04 = n2 - 1 - k0 * i6;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i7 = (n >> l + 4 >> 2) + 1;
				while(--i7 > 0) {
					var k00_206 = u[eOffset05] - u[eOffset24];
					var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
					var _g60 = eOffset05;
					var _g150 = u;
					_g150[_g60] = _g150[_g60] + u[eOffset24];
					var _g61 = eOffset05 + -1;
					var _g151 = u;
					_g151[_g61] = _g151[_g61] + u[eOffset24 + -1];
					u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
					k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
					var _g62 = eOffset05 + -2;
					var _g152 = u;
					_g152[_g62] = _g152[_g62] + u[eOffset24 + -2];
					var _g63 = eOffset05 + -3;
					var _g153 = u;
					_g153[_g63] = _g153[_g63] + u[eOffset24 + -3];
					u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
					k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
					var _g64 = eOffset05 + -4;
					var _g154 = u;
					_g154[_g64] = _g154[_g64] + u[eOffset24 + -4];
					var _g65 = eOffset05 + -5;
					var _g155 = u;
					_g155[_g65] = _g155[_g65] + u[eOffset24 + -5];
					u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
					k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
					var _g66 = eOffset05 + -6;
					var _g156 = u;
					_g156[_g66] = _g156[_g66] + u[eOffset24 + -6];
					var _g67 = eOffset05 + -7;
					var _g157 = u;
					_g157[_g67] = _g157[_g67] + u[eOffset24 + -7];
					u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g210 = ld - 3 >> 1;
		var _g310 = ld - 6;
		while(_g210 < _g310) {
			var l1 = _g210++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var rlim = n >> l1 + 6;
			var lim1 = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i8 = lim1 + 1;
				while(--i8 > 0) {
					var k00 = u[eeOffset02] - u[eeOffset22];
					var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
					u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
					u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
					u[eeOffset22] = k00 * A0 - k111 * A1;
					u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
					k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
					k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
					u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
					u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
					u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
					u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
					k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
					k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
					u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
					u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
					u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
					u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
					k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
					k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
					u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
					u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
					u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
					u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + -8];
			u[zOffset + -8] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + -1];
			t1 = u[zOffset + -9];
			u[zOffset + -9] = t0 - t1;
			u[zOffset + -1] = t0 + t1;
			t0 = u[zOffset + -2];
			t1 = u[zOffset + -10];
			var k001 = t0 - t1;
			u[zOffset + -2] = t0 + t1;
			t0 = u[zOffset + -3];
			t1 = u[zOffset + -11];
			var k112 = t0 - t1;
			u[zOffset + -3] = t0 + t1;
			u[zOffset + -10] = (k001 + k112) * A21;
			u[zOffset + -11] = (k112 - k001) * A21;
			t0 = u[zOffset + -4];
			t1 = u[zOffset + -12];
			k001 = t1 - t0;
			u[zOffset + -4] = t0 + t1;
			t0 = u[zOffset + -5];
			t1 = u[zOffset + -13];
			k112 = t0 - t1;
			u[zOffset + -5] = t0 + t1;
			u[zOffset + -12] = k112;
			u[zOffset + -13] = k001;
			t0 = u[zOffset + -6];
			t1 = u[zOffset + -14];
			k001 = t1 - t0;
			u[zOffset + -6] = t0 + t1;
			t0 = u[zOffset + -7];
			t1 = u[zOffset + -15];
			k112 = t0 - t1;
			u[zOffset + -7] = t0 + t1;
			u[zOffset + -14] = (k001 + k112) * A21;
			u[zOffset + -15] = (k001 - k112) * A21;
			var t01 = u[zOffset];
			var t11 = u[zOffset + -4];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + -2];
			t11 = u[zOffset + -6];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + -2] = y0 - y2;
			var k33 = u[zOffset + -3] - u[zOffset + -7];
			u[zOffset + -4] = k002 + k33;
			u[zOffset + -6] = k002 - k33;
			t01 = u[zOffset + -1];
			t11 = u[zOffset + -5];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + -3] + u[zOffset + -7];
			u[zOffset + -1] = y1 + y3;
			u[zOffset + -3] = y1 - y3;
			u[zOffset + -5] = k113 - k22;
			u[zOffset + -7] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + -4];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + -2];
			t12 = u[zOffset1 + -6];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + -2] = y01 - y21;
			var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
			u[zOffset1 + -4] = k003 + k331;
			u[zOffset1 + -6] = k003 - k331;
			t02 = u[zOffset1 + -1];
			t12 = u[zOffset1 + -5];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
			u[zOffset1 + -1] = y11 + y31;
			u[zOffset1 + -3] = y11 - y31;
			u[zOffset1 + -5] = k114 - k221;
			u[zOffset1 + -7] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = v[dOffset2] - v[eOffset3 + 2];
			var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset2] + v[eOffset3 + 2];
			var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		var rest = this.decodePacketRest(result);
		return rest;
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			if(this.decodeState.readBits(1) != 0) {
				while(true) {
					var _this = this.decodeState;
					var x;
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						x = -1;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						x = _this.input.readByte();
					}
					_this.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var i = this.decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n1;
		var prev;
		var next;
		if(m.blockflag) {
			n1 = this.header.blocksize1;
			prev = this.decodeState.readBits(1);
			next = this.decodeState.readBits(1);
		} else {
			next = 0;
			prev = next;
			n1 = this.header.blocksize0;
		}
		var windowCenter = n1 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n1 - this.header.blocksize0 >> 2, end : n1 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n1 * 3 - this.header.blocksize0 >> 2, end : n1 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n1}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var this1 = new Array(256);
		var zeroChannel = this1;
		var this2 = new Array(256);
		var reallyZeroChannel = this2;
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g = 0;
		var _g1 = this.header.channel;
		while(_g < _g1) {
			var i = _g++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				if(this.decodeState.readBits(1) != 0) {
					var fy = [];
					var this3 = new Array(256);
					var step2Flag = this3;
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[0] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1);
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					fy[1] = this.decodeState.readBits((range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1);
					var _g2 = 0;
					var _g11 = g.partitions;
					while(_g2 < _g11) {
						var j = _g2++;
						var pclass = g.partitionClassList[j];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this = this.decodeState;
							if(_this.validBits < 10) {
								_this.prepHuffman();
							}
							var i1 = c.fastHuffman[_this.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this.acc = _this.acc >>> l;
								_this.validBits -= l;
								if(_this.validBits < 0) {
									_this.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g3 = 0;
						var _g12 = cdim;
						while(_g3 < _g12) {
							var k = _g3++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp = offset++;
							var tmp1;
							if(book >= 0) {
								var _this1 = this.decodeState;
								var c1 = codebooks[book];
								if(_this1.validBits < 10) {
									_this1.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this1.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this1.acc = _this1.acc >>> l1;
									_this1.validBits -= l1;
									if(_this1.validBits < 0) {
										_this1.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this1.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp1 = val1;
							} else {
								tmp1 = 0;
							}
							fy[tmp] = tmp1;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g21 = 2;
					var _g31 = g.values;
					while(_g21 < _g31) {
						var j1 = _g21++;
						var low = naighbors[j1][0];
						var high = naighbors[j1][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var err = Math.abs(dy) * (xlist[j1] - x0);
						var off = err / adx | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j1];
						var highroom = range - lowroom;
						var room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j1] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j1] = val2 - lowroom + lowroom;
								} else {
									fy[j1] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j1] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j1] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j1] = false;
							fy[j1] = lowroom;
						}
					}
					var _g4 = 0;
					var _g5 = g.values;
					while(_g4 < _g5) {
						var j2 = _g4++;
						if(!step2Flag[j2]) {
							fy[j2] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g22 = 0;
		var _g32 = this.header.channel;
		while(_g22 < _g32) {
			var i3 = _g22++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g41 = 0;
		var _g51 = map.couplingSteps;
		while(_g41 < _g51) {
			var i4 = _g41++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				zeroChannel[map.chan[i4].magnitude] = zeroChannel[map.chan[i4].angle] = false;
			}
		}
		var _g6 = 0;
		var _g7 = map.submaps;
		while(_g6 < _g7) {
			var i5 = _g6++;
			var this4 = new Array(this.header.channel);
			var residueBuffers = this4;
			var this5 = new Array(256);
			var doNotDecode = this5;
			var ch = 0;
			var _g61 = 0;
			var _g71 = this.header.channel;
			while(_g61 < _g71) {
				var j3 = _g61++;
				if(map.chan[j3].mux == i5) {
					if(zeroChannel[j3]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j3];
					}
					++ch;
				}
			}
			var r1 = map.submapResidue[i5];
			var residue = this.header.residueConfig[r1];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a = this.channelBuffers[map.chan[i6].angle];
			var _g8 = 0;
			var _g9 = n21;
			while(_g8 < _g9) {
				var j4 = _g8++;
				var a2;
				var m2;
				if(m1[j4] > 0) {
					if(a[j4] > 0) {
						m2 = m1[j4];
						a2 = m1[j4] - a[j4];
					} else {
						a2 = m1[j4];
						m2 = m1[j4] + a[j4];
					}
				} else if(a[j4] > 0) {
					m2 = m1[j4];
					a2 = m1[j4] + a[j4];
				} else {
					a2 = m1[j4];
					m2 = m1[j4] - a[j4];
				}
				m1[j4] = m2;
				a[j4] = a2;
			}
		}
		var _g81 = 0;
		var _g91 = this.header.channel;
		while(_g81 < _g91) {
			var i7 = _g81++;
			if(reallyZeroChannel[i7]) {
				var _g82 = 0;
				var _g92 = n21;
				while(_g82 < _g92) {
					var j5 = _g82++;
					this.channelBuffers[i7][j5] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g10 = 0;
		var _g111 = this.header.channel;
		while(_g10 < _g111) {
			var i8 = _g10++;
			this.inverseMdct(this.channelBuffers[i8],n,m.blockflag);
		}
		var _this2 = this.decodeState;
		while(_this2.bytesInSeg != 0 || !_this2.lastSeg && _this2.next() != 0) {
			_this2.bytesInSeg--;
			_this2.inputPosition += 1;
			_this2.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = "kha.audio2.ogg.vorbis.VorbisTools";
kha_audio2_ogg_vorbis_VorbisTools.assert = function(b,p) {
};
kha_audio2_ogg_vorbis_VorbisTools.neighbors = function(x,n) {
	var low = -1;
	var high = 65536;
	var plow = 0;
	var phigh = 0;
	var _g = 0;
	var _g1 = n;
	while(_g < _g1) {
		var i = _g++;
		if(x[i] > low && x[i] < x[n]) {
			plow = i;
			low = x[i];
		}
		if(x[i] < high && x[i] > x[n]) {
			phigh = i;
			high = x[i];
		}
	}
	return { low : plow, high : phigh};
};
kha_audio2_ogg_vorbis_VorbisTools.floatUnpack = function(x) {
	var mantissa = _$UInt_UInt_$Impl_$.toFloat(x & 2097151);
	var sign = x & -2147483648;
	var exp = (x & 2145386496) >>> 21;
	var res = sign != 0 ? -mantissa : mantissa;
	return res * Math.pow(2,exp - 788);
};
kha_audio2_ogg_vorbis_VorbisTools.bitReverse = function(n) {
	n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
	n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
	n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
	n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
	return n >>> 16 | n << 16;
};
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,$window) {
	var n2 = n >> 1;
	var _g = 0;
	var _g1 = n2;
	while(_g < _g1) {
		var i = _g++;
		$window[i] = Math.sin(1.57079632679489656 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g = 0;
	var _g1 = n8;
	while(_g < _g1) {
		var i = _g++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g = 0;
	var _g1 = n4;
	while(_g < _g1) {
		var k = _g++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g2 = 0;
	var _g3 = n8;
	while(_g2 < _g3) {
		var k1 = _g2++;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		var this1 = new Array(32);
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			var this2 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
			var this3 = new Array(64);
			this2[i] = this3;
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		sy = dy < 0 ? base - 1 : base + 1;
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	var _g2 = x;
	var _g11 = output;
	_g11[_g2] = _g11[_g2] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g3 = x + 1;
	var _g12 = x1;
	while(_g3 < _g12) {
		var i1 = _g3++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		var _g4 = i1;
		var _g13 = output;
		_g13[_g4] = _g13[_g4] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
kha_audio2_ogg_vorbis_VorbisTools.predictPoint = function(x,x0,x1,y0,y1) {
	var dy = y1 - y0;
	var adx = x1 - x0;
	var err = Math.abs(dy) * (x - x0);
	var off = err / adx | 0;
	if(dy < 0) {
		return y0 - off;
	} else {
		return y0 + off;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.emptyFloatVector = function(len) {
	var this1 = new Array(len);
	var vec = this1;
	return vec;
};
kha_audio2_ogg_vorbis_VorbisTools.copyVector = function(source) {
	var this1 = new Array(source.length);
	var dest = this1;
	var _g = 0;
	var _g1 = source.length;
	while(_g < _g1) {
		var i = _g++;
		dest[i] = source[i];
	}
	return dest;
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = "kha.audio2.ogg.vorbis.data.Codebook";
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	if(decodeState.readBits(8) != 66 || decodeState.readBits(8) != 67 || decodeState.readBits(8) != 86) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x = decodeState.readBits(8);
	c.dimensions = (decodeState.readBits(8) << 8) + x;
	var x1 = decodeState.readBits(8);
	var y = decodeState.readBits(8);
	c.entries = (decodeState.readBits(8) << 16) + (y << 8) + x1;
	var ordered = decodeState.readBits(1);
	c.sparse = ordered != 0 ? false : decodeState.readBits(1) != 0;
	var this1 = new Array(c.entries);
	var lengths = this1;
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength = decodeState.readBits(5) + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = decodeState.readBits(limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0);
			if(currentEntry + n > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g = 0;
			var _g1 = n;
			while(_g < _g1) {
				var i = _g++;
				lengths[currentEntry + i] = currentLength;
			}
			currentEntry += n;
			++currentLength;
		}
	} else {
		var _g2 = 0;
		var _g11 = c.entries;
		while(_g2 < _g11) {
			var j = _g2++;
			var present = c.sparse ? decodeState.readBits(1) : 1;
			if(present != 0) {
				lengths[j] = decodeState.readBits(5) + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp;
	if(c.sparse) {
		tmp = total;
	} else {
		var sortedCount = 0;
		var _g3 = 0;
		var _g12 = c.entries;
		while(_g3 < _g12) {
			var j1 = _g3++;
			var l = lengths[j1];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp = sortedCount;
	}
	c.sortedEntries = tmp;
	var values = null;
	if(!c.sparse) {
		var this2 = new Array(c.entries);
		c.codewords = this2;
	} else {
		if(c.sortedEntries != 0) {
			var this3 = new Array(c.sortedEntries);
			c.codewordLengths = this3;
			var this4 = new Array(c.entries);
			c.codewords = this4;
			var this5 = new Array(c.entries);
			values = this5;
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var this6 = new Array(c.sortedEntries);
		c.sortedValues = this6;
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	c.lookupType = decodeState.readBits(4);
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2 = decodeState.readBits(32);
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		var sign = x2 & -2147483648;
		var exp = (x2 & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.minimumValue = res * Math.pow(2,exp - 788);
		var x3 = decodeState.readBits(32);
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		var sign1 = x3 & -2147483648;
		var exp1 = (x3 & 2145386496) >>> 21;
		var res1 = sign1 != 0 ? -mantissa1 : mantissa1;
		c.deltaValue = res1 * Math.pow(2,exp1 - 788);
		c.valueBits = decodeState.readBits(4) + 1;
		c.sequenceP = decodeState.readBits(1) != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var this7 = new Array(c.lookupValues);
		var mults = this7;
		var _g4 = 0;
		var _g13 = c.lookupValues;
		while(_g4 < _g13) {
			var j2 = _g4++;
			var q = decodeState.readBits(c.valueBits);
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j2] = q;
		}
		var this8 = new Array(c.lookupValues);
		c.multiplicands = this8;
		var _g21 = 0;
		var _g31 = c.lookupValues;
		while(_g21 < _g31) {
			var j3 = _g21++;
			c.multiplicands[j3] = mults[j3] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g22 = 1;
			var _g32 = c.lookupValues;
			while(_g22 < _g32) {
				var j4 = _g22++;
				c.multiplicands[j4] = c.multiplicands[j4 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	dimensions: null
	,entries: null
	,codewordLengths: null
	,minimumValue: null
	,deltaValue: null
	,valueBits: null
	,lookupType: null
	,sequenceP: null
	,sparse: null
	,lookupValues: null
	,multiplicands: null
	,codewords: null
	,fastHuffman: null
	,sortedCodewords: null
	,sortedValues: null
	,sortedEntries: null
	,addEntry: function(huffCode,symbol,count,len,values) {
		if(!this.sparse) {
			this.codewords[symbol] = huffCode;
		} else {
			this.codewords[count] = huffCode;
			this.codewordLengths[count] = len;
			values[count] = symbol;
		}
	}
	,includeInSort: function(len) {
		if(this.sparse) {
			return true;
		} else if(len == 255) {
			return false;
		} else if(len > 10) {
			return true;
		} else {
			return false;
		}
	}
	,computeCodewords: function(len,n,values) {
		var this1 = new Array(32);
		var available = this1;
		available[0] = 0;
		available[1] = 0;
		available[2] = 0;
		available[3] = 0;
		available[4] = 0;
		available[5] = 0;
		available[6] = 0;
		available[7] = 0;
		available[8] = 0;
		available[9] = 0;
		available[10] = 0;
		available[11] = 0;
		available[12] = 0;
		available[13] = 0;
		available[14] = 0;
		available[15] = 0;
		available[16] = 0;
		available[17] = 0;
		available[18] = 0;
		available[19] = 0;
		available[20] = 0;
		available[21] = 0;
		available[22] = 0;
		available[23] = 0;
		available[24] = 0;
		available[25] = 0;
		available[26] = 0;
		available[27] = 0;
		available[28] = 0;
		available[29] = 0;
		available[30] = 0;
		available[31] = 0;
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count1 = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count1] = huffCode;
				this.codewordLengths[count1] = len[i];
				values[count1] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g = 0;
			var _g1 = this.entries;
			while(_g < _g1) {
				var i = _g++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
		} else {
			var _g2 = 0;
			var _g11 = this.sortedEntries;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var len1 = this.sparse ? this.sortedEntries : this.entries;
		var _g3 = 0;
		var _g12 = len1;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var huffLen = this.sparse ? lengths[values[i2]] : lengths[i2];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		var this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		var _g = 0;
		var _g1 = 1024;
		while(_g < _g1) {
			var i = _g++;
			this.fastHuffman[i] = -1;
		}
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g2 = 0;
		var _g3 = len;
		while(_g2 < _g3) {
			var i1 = _g2++;
			if(this.codewordLengths[i1] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i1];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i1];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i1;
					z += 1 << this.codewordLengths[i1];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i1 = _g++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1;
				var _g11 = output;
				_g11[_g2] = _g11[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g3 = 0;
			var _g12 = len;
			while(_g3 < _g12) {
				var i2 = _g3++;
				var val2 = multiplicands[z + i2] + last1;
				var _g4 = offset + i2;
				var _g13 = output;
				_g13[_g4] = _g13[_g4] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var last2 = 0.0;
			var _g5 = 0;
			var _g14 = len;
			while(_g5 < _g14) {
				var i3 = _g5++;
				var _g6 = offset + i3;
				var _g15 = output;
				_g15[_g6] = _g15[_g6] + (multiplicands[z + i3] + last2);
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g = 0;
			var _g1 = len;
			while(_g < _g1) {
				var i1 = _g++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1 * step;
				var _g11 = output;
				_g11[_g2] = _g11[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g3 = 0;
		var _g12 = len;
		while(_g3 < _g12) {
			var i2 = _g3++;
			var val2 = multiplicands[z + i2] + last;
			var _g4 = offset + i2 * step;
			var _g13 = output;
			_g13[_g4] = _g13[_g4] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeStart: function(decodeState) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		return val;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g = 0;
					var _g1 = effective;
					while(_g < _g1) {
						var i1 = _g++;
						var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val1 = multiplicands[off] + last;
						var _g2 = pInter;
						var _g11 = residueBuffers[cInter];
						_g11[_g2] = _g11[_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g3 = 0;
					var _g12 = effective;
					while(_g3 < _g12) {
						var i2 = _g3++;
						var off1 = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val2 = multiplicands[off1] + last;
						var _g4 = pInter;
						var _g13 = residueBuffers[cInter];
						_g13[_g4] = _g13[_g4] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g5 = 0;
					var _g14 = effective;
					while(_g5 < _g14) {
						var i3 = _g5++;
						var val3 = multiplicands[z + i3] + last;
						var _g6 = pInter;
						var _g15 = residueBuffers[cInter];
						_g15[_g6] = _g15[_g6] + val3;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val3;
					}
				} else {
					var _g7 = 0;
					var _g16 = effective;
					while(_g7 < _g16) {
						var i4 = _g7++;
						var val4 = multiplicands[z + i4] + last;
						var _g8 = pInter;
						var _g17 = residueBuffers[cInter];
						_g17[_g8] = _g17[_g8] + val4;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g = 0;
			var _g1 = step;
			while(_g < _g1) {
				var k = _g++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = "kha.audio2.ogg.vorbis.data.Comment";
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	data: null
	,get_title: function() {
		return this.getString("title");
	}
	,get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,get_version: function() {
		return this.getString("version");
	}
	,get_album: function() {
		return this.getString("album");
	}
	,get_organization: function() {
		return this.getString("organization");
	}
	,get_tracknumber: function() {
		return this.getString("tracknumber");
	}
	,get_performer: function() {
		return this.getString("performer");
	}
	,get_copyright: function() {
		return this.getString("copyright");
	}
	,get_license: function() {
		return this.getString("license");
	}
	,get_artist: function() {
		return this.getString("artist");
	}
	,get_description: function() {
		return this.getString("description");
	}
	,get_genre: function() {
		return this.getString("genre");
	}
	,get_date: function() {
		return this.getString("date");
	}
	,get_location: function() {
		return this.getString("location");
	}
	,get_contact: function() {
		return this.getString("contact");
	}
	,get_isrc: function() {
		return this.getString("isrc");
	}
	,get_artists: function() {
		return this.getArray("artist");
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[0];
		} else {
			return null;
		}
	}
	,getArray: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			if(__map_reserved[key] != null) {
				return _this1.getReserved(key);
			} else {
				return _this1.h[key];
			}
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
	,__properties__: {get_artists:"get_artists",get_isrc:"get_isrc",get_contact:"get_contact",get_location:"get_location",get_date:"get_date",get_genre:"get_genre",get_description:"get_description",get_artist:"get_artist",get_license:"get_license",get_copyright:"get_copyright",get_performer:"get_performer",get_tracknumber:"get_tracknumber",get_organization:"get_organization",get_album:"get_album",get_version:"get_version",get_loopLength:"get_loopLength",get_loopStart:"get_loopStart",get_title:"get_title"}
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = "kha.audio2.ogg.vorbis.data.Floor";
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	floor.type = decodeState.readBits(16);
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		g.order = decodeState.readBits(8);
		g.rate = decodeState.readBits(16);
		g.barkMapSize = decodeState.readBits(16);
		g.amplitudeBits = decodeState.readBits(6);
		g.amplitudeOffset = decodeState.readBits(8);
		g.numberOfBooks = decodeState.readBits(4) + 1;
		var _g = 0;
		var _g1 = g.numberOfBooks;
		while(_g < _g1) {
			var j = _g++;
			g.bookList[j] = decodeState.readBits(8);
		}
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		g1.partitions = decodeState.readBits(5);
		var this1 = new Array(g1.partitions);
		g1.partitionClassList = this1;
		var _g2 = 0;
		var _g11 = g1.partitions;
		while(_g2 < _g11) {
			var j1 = _g2++;
			g1.partitionClassList[j1] = decodeState.readBits(4);
			if(g1.partitionClassList[j1] > maxClass) {
				maxClass = g1.partitionClassList[j1];
			}
		}
		var this2 = new Array(maxClass + 1);
		g1.classDimensions = this2;
		var this3 = new Array(maxClass + 1);
		g1.classMasterbooks = this3;
		var this4 = new Array(maxClass + 1);
		g1.classSubclasses = this4;
		var this5 = new Array(maxClass + 1);
		g1.subclassBooks = this5;
		var _g21 = 0;
		var _g3 = maxClass + 1;
		while(_g21 < _g3) {
			var j2 = _g21++;
			g1.classDimensions[j2] = decodeState.readBits(3) + 1;
			g1.classSubclasses[j2] = decodeState.readBits(2);
			if(g1.classSubclasses[j2] != 0) {
				g1.classMasterbooks[j2] = decodeState.readBits(8);
				if(g1.classMasterbooks[j2] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j2];
			var this6 = g1.subclassBooks;
			var this7 = new Array(kl);
			this6[j2] = this7;
			var _g22 = 0;
			var _g31 = kl;
			while(_g22 < _g31) {
				var k = _g22++;
				g1.subclassBooks[j2][k] = decodeState.readBits(8) - 1;
				if(g1.subclassBooks[j2][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		g1.floor1Multiplier = decodeState.readBits(2) + 1;
		g1.rangebits = decodeState.readBits(4);
		var this8 = new Array(250);
		g1.xlist = this8;
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g4 = 0;
		var _g5 = g1.partitions;
		while(_g4 < _g5) {
			var j3 = _g4++;
			var c = g1.partitionClassList[j3];
			var _g41 = 0;
			var _g51 = g1.classDimensions[c];
			while(_g41 < _g51) {
				var k1 = _g41++;
				g1.xlist[g1.values] = decodeState.readBits(g1.rangebits);
				g1.values++;
			}
		}
		var _g6 = 0;
		var _g7 = g1.values;
		while(_g6 < _g7) {
			var j4 = _g6++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j4].x = g1.xlist[j4];
			p[j4].y = j4;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var this9 = new Array(g1.values);
		g1.sortedOrder = this9;
		var _g8 = 0;
		var _g9 = g1.values;
		while(_g8 < _g9) {
			var j5 = _g8++;
			g1.sortedOrder[j5] = p[j5].y;
		}
		var this10 = new Array(g1.values);
		g1.neighbors = this10;
		var _g10 = 2;
		var _g111 = g1.values;
		while(_g10 < _g111) {
			var j6 = _g10++;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g12 = 0;
			var _g13 = j6;
			while(_g12 < _g13) {
				var i = _g12++;
				if(x[i] > low && x[i] < x[j6]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j6]) {
					phigh = i;
					high = x[i];
				}
			}
			var ne_low = plow;
			var ne_high = phigh;
			var this11 = g1.neighbors;
			var this12 = new Array(g1.values);
			this11[j6] = this12;
			g1.neighbors[j6][0] = ne_low;
			g1.neighbors[j6][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	floor0: null
	,floor1: null
	,type: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = "kha.audio2.ogg.vorbis.data.Floor0";
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	order: null
	,rate: null
	,barkMapSize: null
	,amplitudeBits: null
	,amplitudeOffset: null
	,numberOfBooks: null
	,bookList: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = "kha.audio2.ogg.vorbis.data.Floor1";
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	partitions: null
	,partitionClassList: null
	,classDimensions: null
	,classSubclasses: null
	,classMasterbooks: null
	,subclassBooks: null
	,xlist: null
	,sortedOrder: null
	,neighbors: null
	,floor1Multiplier: null
	,rangebits: null
	,values: null
	,__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = "kha.audio2.ogg.vorbis.data.Header";
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var x;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[0] = x;
	var x1;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x1 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x1 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[1] = x1;
	var x2;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x2 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x2 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[2] = x2;
	var x3;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x3 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x3 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[3] = x3;
	var x4;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x4 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x4 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[4] = x4;
	var x5;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x5 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x5 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header.b[5] = x5;
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x6 = decodeState.input.readByte();
	var log0 = x6 & 15;
	var log1 = x6 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x7 = decodeState.input.readByte();
	if((x7 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header1.vendor = packetInput.readString(vendorLength);
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g = 0;
	var _g1 = commentCount;
	while(_g < _g1) {
		var i = _g++;
		var n = packetInput.readInt32();
		var str = packetInput.readString(n);
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	var x8 = packetInput.readByte();
	if((x8 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x9;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x9 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x9 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x9 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var x10;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x10 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x10 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[0] = x10;
	var x11;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x11 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x11 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[1] = x11;
	var x12;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x12 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x12 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[2] = x12;
	var x13;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x13 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x13 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[3] = x13;
	var x14;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x14 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x14 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[4] = x14;
	var x15;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x15 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x15 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	header2.b[5] = x15;
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 301, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount = decodeState.readBits(8) + 1;
	var this1 = new Array(codebookCount);
	header1.codebooks = this1;
	var _g2 = 0;
	var _g11 = codebookCount;
	while(_g2 < _g11) {
		var i1 = _g2++;
		header1.codebooks[i1] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	}
	x7 = decodeState.readBits(6) + 1;
	var _g21 = 0;
	var _g3 = x7;
	while(_g21 < _g3) {
		var i2 = _g21++;
		if(decodeState.readBits(16) != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount = decodeState.readBits(6) + 1;
	var this2 = new Array(floorCount);
	header1.floorConfig = this2;
	var _g4 = 0;
	var _g5 = floorCount;
	while(_g4 < _g5) {
		var i3 = _g4++;
		header1.floorConfig[i3] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	}
	var residueCount = decodeState.readBits(6) + 1;
	var this3 = new Array(residueCount);
	header1.residueConfig = this3;
	var _g6 = 0;
	var _g7 = residueCount;
	while(_g6 < _g7) {
		var i4 = _g6++;
		header1.residueConfig[i4] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	}
	var mappingCount = decodeState.readBits(6) + 1;
	var this4 = new Array(mappingCount);
	header1.mapping = this4;
	var _g8 = 0;
	var _g9 = mappingCount;
	while(_g8 < _g9) {
		var i5 = _g8++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[i5] = map;
		var _g81 = 0;
		var _g91 = map.submaps;
		while(_g81 < _g91) {
			var j = _g81++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount = decodeState.readBits(6) + 1;
	var this5 = new Array(modeCount);
	header1.modes = this5;
	var _g10 = 0;
	var _g111 = modeCount;
	while(_g10 < _g111) {
		var i6 = _g10++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[i6] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	maximumBitRate: null
	,nominalBitRate: null
	,minimumBitRate: null
	,sampleRate: null
	,channel: null
	,blocksize0: null
	,blocksize1: null
	,codebooks: null
	,floorConfig: null
	,residueConfig: null
	,mapping: null
	,modes: null
	,comment: null
	,vendor: null
	,__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = "kha.audio2.ogg.vorbis.data.IntPoint";
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	x: null
	,y: null
	,__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = "kha.audio2.ogg.vorbis.data.Mapping";
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType = decodeState.readBits(16);
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	var this1 = new Array(channels);
	m.chan = this1;
	var _g = 0;
	var _g1 = channels;
	while(_g < _g1) {
		var j = _g++;
		m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	}
	if(decodeState.readBits(1) != 0) {
		m.submaps = decodeState.readBits(4) + 1;
	} else {
		m.submaps = 1;
	}
	if(decodeState.readBits(1) != 0) {
		m.couplingSteps = decodeState.readBits(8) + 1;
		var _g2 = 0;
		var _g3 = m.couplingSteps;
		while(_g2 < _g3) {
			var k = _g2++;
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].magnitude = decodeState.readBits(n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0);
			var n1 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			m.chan[k].angle = decodeState.readBits(n1 < 16384 ? n1 < 16 ? log2_41[n1] : n1 < 512 ? 5 + log2_41[n1 >> 5] : 10 + log2_41[n1 >> 10] : n1 < 16777216 ? n1 < 524288 ? 15 + log2_41[n1 >> 15] : 20 + log2_41[n1 >> 20] : n1 < 536870912 ? 25 + log2_41[n1 >> 25] : n1 < -2147483648 ? 30 + log2_41[n1 >> 30] : 0);
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	if(decodeState.readBits(2) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g21 = 0;
		var _g31 = channels;
		while(_g21 < _g31) {
			var j1 = _g21++;
			m.chan[j1].mux = decodeState.readBits(4);
			if(m.chan[j1].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g22 = 0;
		var _g32 = channels;
		while(_g22 < _g32) {
			var j2 = _g22++;
			m.chan[j2].mux = 0;
		}
	}
	var this2 = new Array(m.submaps);
	m.submapFloor = this2;
	var this3 = new Array(m.submaps);
	m.submapResidue = this3;
	var _g23 = 0;
	var _g33 = m.submaps;
	while(_g23 < _g33) {
		var j3 = _g23++;
		decodeState.readBits(8);
		m.submapFloor[j3] = decodeState.readBits(8);
		m.submapResidue[j3] = decodeState.readBits(8);
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	couplingSteps: null
	,chan: null
	,submaps: null
	,submapFloor: null
	,submapResidue: null
	,doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var s = this.chan[i].mux;
		var floor;
		var floor1 = floors[this.submapFloor[s]];
		if(floor1.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor1.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g = 1;
			var _g1 = g.values;
			while(_g < _g1) {
				var q = _g++;
				var j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g2 = lx;
				var _g3 = n2;
				while(_g2 < _g3) {
					var j1 = _g2++;
					var _g21 = j1;
					var _g31 = target;
					_g31[_g21] = _g31[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = "kha.audio2.ogg.vorbis.data.MappingChannel";
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	magnitude: null
	,angle: null
	,mux: null
	,__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = "kha.audio2.ogg.vorbis.data.Mode";
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	m.blockflag = decodeState.readBits(1) != 0;
	m.windowtype = decodeState.readBits(16);
	m.transformtype = decodeState.readBits(16);
	m.mapping = decodeState.readBits(8);
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	blockflag: null
	,mapping: null
	,windowtype: null
	,transformtype: null
	,__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = "kha.audio2.ogg.vorbis.data.Page";
kha_audio2_ogg_vorbis_data_Page.prototype = {
	flag: null
	,clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "kha/audio2/ogg/vorbis/VorbisDecodeState.hx", lineNumber : 324, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "kha/audio2/ogg/vorbis/data/Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_PageFlag = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.PageFlag"] = kha_audio2_ogg_vorbis_data_PageFlag;
kha_audio2_ogg_vorbis_data_PageFlag.__name__ = "kha.audio2.ogg.vorbis.data.PageFlag";
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = "kha.audio2.ogg.vorbis.data.ProbedPage";
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	pageStart: null
	,pageEnd: null
	,afterPreviousPageStart: null
	,firstDecodedSample: null
	,lastDecodedSample: null
	,__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = "kha.audio2.ogg.vorbis.data.ReaderError";
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	type: null
	,message: null
	,posInfos: null
	,__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxEnums["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : "kha.audio2.ogg.vorbis.data.ReaderErrorType", __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"]
	,NEED_MORE_DATA: {_hx_index:0,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_API_MIXING: {_hx_index:1,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OUTOFMEM: {_hx_index:2,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FEATURE_NOT_SUPPORTED: {_hx_index:3,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,TOO_MANY_CHANNELS: {_hx_index:4,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,FILE_OPEN_FAILURE: {_hx_index:5,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_WITHOUT_LENGTH: {_hx_index:6,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,UNEXPECTED_EOF: {_hx_index:7,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_INVALID: {_hx_index:8,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_SETUP: {_hx_index:9,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM: {_hx_index:10,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,MISSING_CAPTURE_PATTERN: {_hx_index:11,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_STREAM_STRUCTURE_VERSION: {_hx_index:12,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CONTINUED_PACKET_FLAG_INVALID: {_hx_index:13,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INCORRECT_STREAM_SERIAL_NUMBER: {_hx_index:14,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,INVALID_FIRST_PAGE: {_hx_index:15,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,BAD_PACKET_TYPE: {_hx_index:16,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,CANT_FIND_LAST_PAGE: {_hx_index:17,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,SEEK_FAILED: {_hx_index:18,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
	,OTHER: {_hx_index:19,__enum__:"kha.audio2.ogg.vorbis.data.ReaderErrorType",toString:$estr}
};
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = "kha.audio2.ogg.vorbis.data.Residue";
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	r.type = decodeState.readBits(16);
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var this1 = new Array(64);
	var residueCascade = this1;
	r.begin = decodeState.readBits(24);
	r.end = decodeState.readBits(24);
	r.partSize = decodeState.readBits(24) + 1;
	var classifications = r.classifications = decodeState.readBits(6) + 1;
	r.classbook = decodeState.readBits(8);
	var _g = 0;
	var _g1 = r.classifications;
	while(_g < _g1) {
		var j = _g++;
		var highBits = 0;
		var lowBits = decodeState.readBits(3);
		if(decodeState.readBits(1) != 0) {
			highBits = decodeState.readBits(5);
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var this2 = new Array(r.classifications);
	r.residueBooks = this2;
	var _g2 = 0;
	var _g3 = r.classifications;
	while(_g2 < _g3) {
		var j1 = _g2++;
		var this3 = r.residueBooks;
		var this4 = new Array(8);
		this3[j1] = this4;
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				r.residueBooks[j1][k] = decodeState.readBits(8);
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "kha/audio2/ogg/vorbis/data/Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	var this5 = new Array(el);
	r.classdata = this5;
	var _g4 = 0;
	var _g5 = el;
	while(_g4 < _g5) {
		var j2 = _g4++;
		var temp = j2;
		var k1 = classwords;
		var this6 = r.classdata;
		var this7 = new Array(classwords);
		var cd = this6[j2] = this7;
		while(--k1 >= 0) {
			cd[k1] = temp % classifications;
			temp = temp / classifications | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	begin: null
	,end: null
	,partSize: null
	,classifications: null
	,classbook: null
	,classdata: null
	,residueBooks: null
	,type: null
	,decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(nRead) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var this1 = new Array(header.channel * partRead + 1);
		var classifications = this1;
		var _g = 0;
		var _g1 = ch;
		while(_g < _g1) {
			var i = _g++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g2 = 0;
				var _g11 = buffer.length;
				while(_g2 < _g11) {
					var j = _g2++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g21 = 0;
			var _g3 = ch;
			while(_g21 < _g3) {
				var j1 = _g21++;
				if(!doNotDecode[j1]) {
					break;
				} else if(j1 == ch - 1) {
					return;
				}
			}
			var _g4 = 0;
			while(_g4 < 8) {
				var pass = _g4++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g41 = 0;
						var _g5 = classwords;
						while(_g41 < _g5) {
							var i3 = _g41++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var c1 = classifications[pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var book = codebooks[b];
								var result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c2.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i4 >= 0) {
								var l1 = c2.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i4;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val1 = c2.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g42 = 0;
						var _g51 = classwords;
						while(_g42 < _g51) {
							var i6 = _g42++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var book1 = codebooks[b1];
								var result1 = book1.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c3.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i7 >= 0) {
								var l2 = c3.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i7;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val2 = c3.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[i8 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g43 = 0;
						var _g52 = classwords;
						while(_g43 < _g52) {
							var i9 = _g43++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var book2 = codebooks[b2];
								var result2 = book2.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g22 = 0;
		while(_g22 < 8) {
			var pass1 = _g22++;
			var pcount1 = 0;
			var classSet1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g23 = 0;
					var _g31 = ch;
					while(_g23 < _g31) {
						var j2 = _g23++;
						if(!doNotDecode[j2]) {
							var c4 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i10 = c4.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i10 >= 0) {
								var l3 = c4.codewordLengths[i10];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i10;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c4);
							}
							if(c4.sparse) {
								val3 = c4.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i11 = classwords;
							while(--i11 >= 0) {
								classifications[j2 * partRead + i11 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g24 = 0;
				var _g32 = classwords;
				while(_g24 < _g32) {
					var i12 = _g24++;
					if(pcount1 >= partRead) {
						break;
					}
					var _g25 = 0;
					var _g33 = ch;
					while(_g25 < _g33) {
						var j3 = _g25++;
						if(!doNotDecode[j3]) {
							var c5 = classifications[j3 * partRead + pcount1];
							var b3 = this.residueBooks[c5][pass1];
							if(b3 >= 0) {
								var target = residueBuffers[j3];
								var offset = this.begin + pcount1 * partSize;
								var n1 = partSize;
								var book3 = codebooks[b3];
								if(!book3.residueDecode(decodeState,target,offset,n1,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_audio2_ogg_vorbis_data_Setting = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.Setting"] = kha_audio2_ogg_vorbis_data_Setting;
kha_audio2_ogg_vorbis_data_Setting.__name__ = "kha.audio2.ogg.vorbis.data.Setting";
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = "kha.graphics1.Graphics";
kha_graphics1_Graphics.prototype = {
	begin: null
	,end: null
	,setPixel: null
	,__class__: kha_graphics1_Graphics
};
var kha_graphics2_Graphics = function() {
	this.transformations = [];
	this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
	this.opacities = [];
	this.opacities.push(1);
	this.myFontSize = 12;
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = "kha.graphics2.Graphics";
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,flush: function() {
	}
	,clear: function(color) {
	}
	,drawImage: function(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	,drawSubImage: function(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,drawCharacters: function(text,start,length,x,y) {
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
	}
	,get_imageScaleQuality: function() {
		return kha_graphics2_ImageScaleQuality.Low;
	}
	,set_imageScaleQuality: function(value) {
		return kha_graphics2_ImageScaleQuality.High;
	}
	,get_mipmapScaleQuality: function() {
		return kha_graphics2_ImageScaleQuality.Low;
	}
	,set_mipmapScaleQuality: function(value) {
		return kha_graphics2_ImageScaleQuality.High;
	}
	,get_color: function() {
		return -16777216;
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_font: function() {
		return null;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,pushTransformation: function(transformation) {
		var trans = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		trans._00 = transformation._00;
		trans._10 = transformation._10;
		trans._20 = transformation._20;
		trans._01 = transformation._01;
		trans._11 = transformation._11;
		trans._21 = transformation._21;
		trans._02 = transformation._02;
		trans._12 = transformation._12;
		trans._22 = transformation._22;
		this.setTransformation(trans);
		this.transformations.push(trans);
	}
	,popTransformation: function() {
		var ret = this.transformations.pop();
		this.setTransformation(this.transformations[this.transformations.length - 1]);
		return ret;
	}
	,get_transformation: function() {
		return this.transformations[this.transformations.length - 1];
	}
	,set_transformation: function(transformation) {
		this.setTransformation(transformation);
		var _this = this.transformations[this.transformations.length - 1];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
		return transformation;
	}
	,translation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = tx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = ty;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		return new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
	}
	,translate: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = tx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = ty;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		var transformation = new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
		this.setTransformation(transformation);
		var _this = this.transformations[this.transformations.length - 1];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
	}
	,pushTranslation: function(tx,ty) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = tx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = ty;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		this.pushTransformation(new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22));
	}
	,rotation: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerx;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		return new kha_math_FastMatrix3(_this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02,_this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12,_this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22,_this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02,_this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12,_this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22,_this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02,_this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12,_this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22);
	}
	,rotate: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerx;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		var temp__00 = _this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02;
		var temp__10 = _this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12;
		var temp__20 = _this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22;
		var temp__01 = _this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02;
		var temp__11 = _this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12;
		var temp__21 = _this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22;
		var temp__02 = _this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02;
		var temp__12 = _this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12;
		var temp__22 = _this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22;
		this.transformations[this.transformations.length - 1]._00 = temp__00;
		this.transformations[this.transformations.length - 1]._01 = temp__01;
		this.transformations[this.transformations.length - 1]._02 = temp__02;
		this.transformations[this.transformations.length - 1]._10 = temp__10;
		this.transformations[this.transformations.length - 1]._11 = temp__11;
		this.transformations[this.transformations.length - 1]._12 = temp__12;
		this.transformations[this.transformations.length - 1]._20 = temp__20;
		this.transformations[this.transformations.length - 1]._21 = temp__21;
		this.transformations[this.transformations.length - 1]._22 = temp__22;
	}
	,pushRotation: function(angle,centerx,centery) {
		var _this__00 = 1;
		var _this__10 = 0;
		var _this__20 = centerx;
		var _this__01 = 0;
		var _this__11 = 1;
		var _this__21 = centery;
		var _this__02 = 0;
		var _this__12 = 0;
		var _this__22 = 1;
		var m__00 = Math.cos(angle);
		var m__10 = -Math.sin(angle);
		var m__20 = 0;
		var m__01 = Math.sin(angle);
		var m__11 = Math.cos(angle);
		var m__21 = 0;
		var m__02 = 0;
		var m__12 = 0;
		var m__22 = 1;
		var _this__001 = _this__00 * m__00 + _this__10 * m__01 + _this__20 * m__02;
		var _this__101 = _this__00 * m__10 + _this__10 * m__11 + _this__20 * m__12;
		var _this__201 = _this__00 * m__20 + _this__10 * m__21 + _this__20 * m__22;
		var _this__011 = _this__01 * m__00 + _this__11 * m__01 + _this__21 * m__02;
		var _this__111 = _this__01 * m__10 + _this__11 * m__11 + _this__21 * m__12;
		var _this__211 = _this__01 * m__20 + _this__11 * m__21 + _this__21 * m__22;
		var _this__021 = _this__02 * m__00 + _this__12 * m__01 + _this__22 * m__02;
		var _this__121 = _this__02 * m__10 + _this__12 * m__11 + _this__22 * m__12;
		var _this__221 = _this__02 * m__20 + _this__12 * m__21 + _this__22 * m__22;
		var m__001 = 1;
		var m__101 = 0;
		var m__201 = -centerx;
		var m__011 = 0;
		var m__111 = 1;
		var m__211 = -centery;
		var m__021 = 0;
		var m__121 = 0;
		var m__221 = 1;
		var _this__002 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		var _this__102 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		var _this__202 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		var _this__012 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		var _this__112 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		var _this__212 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		var _this__022 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		var _this__122 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		var _this__222 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		this.pushTransformation(new kha_math_FastMatrix3(_this__002 * m._00 + _this__102 * m._01 + _this__202 * m._02,_this__002 * m._10 + _this__102 * m._11 + _this__202 * m._12,_this__002 * m._20 + _this__102 * m._21 + _this__202 * m._22,_this__012 * m._00 + _this__112 * m._01 + _this__212 * m._02,_this__012 * m._10 + _this__112 * m._11 + _this__212 * m._12,_this__012 * m._20 + _this__112 * m._21 + _this__212 * m._22,_this__022 * m._00 + _this__122 * m._01 + _this__222 * m._02,_this__022 * m._10 + _this__122 * m._11 + _this__222 * m._12,_this__022 * m._20 + _this__122 * m._21 + _this__222 * m._22));
	}
	,pushOpacity: function(opacity) {
		this.setOpacity(opacity);
		this.opacities.push(opacity);
	}
	,popOpacity: function() {
		var ret = this.opacities.pop();
		this.setOpacity(this.get_opacity());
		return ret;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_opacity: function(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	,scissor: function(x,y,width,height) {
	}
	,disableScissor: function() {
	}
	,pipe: null
	,get_pipeline: function() {
		return this.pipe;
	}
	,set_pipeline: function(pipeline) {
		this.setPipeline(pipeline);
		return this.pipe = pipeline;
	}
	,transformations: null
	,opacities: null
	,myFontSize: null
	,setTransformation: function(transformation) {
	}
	,setOpacity: function(opacity) {
	}
	,setPipeline: function(pipeline) {
	}
	,__class__: kha_graphics2_Graphics
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline",set_opacity:"set_opacity",get_opacity:"get_opacity",set_transformation:"set_transformation",get_transformation:"get_transformation",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_font:"set_font",get_font:"get_font",set_color:"set_color",get_color:"get_color",set_mipmapScaleQuality:"set_mipmapScaleQuality",get_mipmapScaleQuality:"get_mipmapScaleQuality",set_imageScaleQuality:"set_imageScaleQuality",get_imageScaleQuality:"get_imageScaleQuality"}
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = "kha.graphics2.Graphics1";
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	canvas: null
	,texture: null
	,pixels: null
	,begin: function() {
		if(this.texture == null) {
			this.texture = kha_Image.create(this.canvas.get_width(),this.canvas.get_height(),kha_graphics4_TextureFormat.RGBA32,kha_graphics4_Usage.ReadableUsage);
		}
		this.pixels = this.texture.lock();
	}
	,end: function() {
		this.texture.unlock();
		this.canvas.get_g2().begin();
		this.canvas.get_g2().drawImage(this.texture,0,0);
		this.canvas.get_g2().end();
	}
	,setPixel: function(x,y,color) {
		this.pixels.setInt32(y * this.texture.get_realWidth() * 4 + x * 4,kha__$Color_Color_$Impl_$.fromBytes(color & 255,(color & 65280) >>> 8,(color & 16711680) >>> 16,color >>> 24));
	}
	,__class__: kha_graphics2_Graphics1
};
var kha_graphics2_ImageScaleQuality = $hxEnums["kha.graphics2.ImageScaleQuality"] = { __ename__ : "kha.graphics2.ImageScaleQuality", __constructs__ : ["Low","High"]
	,Low: {_hx_index:0,__enum__:"kha.graphics2.ImageScaleQuality",toString:$estr}
	,High: {_hx_index:1,__enum__:"kha.graphics2.ImageScaleQuality",toString:$estr}
};
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = "kha.graphics2.truetype.VectorOfIntPointer";
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	value: null
	,__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = "kha.graphics2.truetype.Stbtt_temp_rect";
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics";
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	advanceWidth: null
	,leftSideBearing: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = "kha.graphics2.truetype.Stbtt_temp_font_v_metrics";
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	ascent: null
	,descent: null
	,lineGap: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$region = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_region"] = kha_graphics2_truetype_Stbtt_$temp_$region;
kha_graphics2_truetype_Stbtt_$temp_$region.__name__ = "kha.graphics2.truetype.Stbtt_temp_region";
kha_graphics2_truetype_Stbtt_$temp_$region.prototype = {
	width: null
	,height: null
	,xoff: null
	,yoff: null
	,__class__: kha_graphics2_truetype_Stbtt_$temp_$region
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = "kha.graphics2.truetype.Stbtt_bakedchar";
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$aligned_$quad = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_aligned_quad"] = kha_graphics2_truetype_Stbtt_$aligned_$quad;
kha_graphics2_truetype_Stbtt_$aligned_$quad.__name__ = "kha.graphics2.truetype.Stbtt_aligned_quad";
kha_graphics2_truetype_Stbtt_$aligned_$quad.prototype = {
	x0: null
	,y0: null
	,s0: null
	,t0: null
	,x1: null
	,y1: null
	,s1: null
	,t1: null
	,__class__: kha_graphics2_truetype_Stbtt_$aligned_$quad
};
var kha_graphics2_truetype_Stbtt_$packedchar = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_packedchar"] = kha_graphics2_truetype_Stbtt_$packedchar;
kha_graphics2_truetype_Stbtt_$packedchar.__name__ = "kha.graphics2.truetype.Stbtt_packedchar";
kha_graphics2_truetype_Stbtt_$packedchar.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,xoff: null
	,yoff: null
	,xadvance: null
	,xoff2: null
	,yoff2: null
	,__class__: kha_graphics2_truetype_Stbtt_$packedchar
};
var kha_graphics2_truetype_Stbtt_$pack_$range = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_range"] = kha_graphics2_truetype_Stbtt_$pack_$range;
kha_graphics2_truetype_Stbtt_$pack_$range.__name__ = "kha.graphics2.truetype.Stbtt_pack_range";
kha_graphics2_truetype_Stbtt_$pack_$range.prototype = {
	font_size: null
	,first_unicode_codepoint_in_range: null
	,array_of_unicode_codepoints: null
	,num_chars: null
	,chardata_for_range: null
	,h_oversample: null
	,v_oversample: null
	,__class__: kha_graphics2_truetype_Stbtt_$pack_$range
};
var kha_graphics2_truetype_Stbtt_$pack_$context = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_context"] = kha_graphics2_truetype_Stbtt_$pack_$context;
kha_graphics2_truetype_Stbtt_$pack_$context.__name__ = "kha.graphics2.truetype.Stbtt_pack_context";
kha_graphics2_truetype_Stbtt_$pack_$context.prototype = {
	width: null
	,height: null
	,stride_in_bytes: null
	,padding: null
	,h_oversample: null
	,v_oversample: null
	,pixels: null
	,__class__: kha_graphics2_truetype_Stbtt_$pack_$context
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = "kha.graphics2.truetype.Stbtt_fontinfo";
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	data: null
	,fontstart: null
	,numGlyphs: null
	,loca: null
	,head: null
	,glyf: null
	,hhea: null
	,hmtx: null
	,kern: null
	,index_map: null
	,indexToLocFormat: null
	,__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = "kha.graphics2.truetype.Stbtt_vertex";
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	x: null
	,y: null
	,cx: null
	,cy: null
	,type: null
	,padding: null
	,__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = "kha.graphics2.truetype.Stbtt__bitmap";
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	w: null
	,h: null
	,stride: null
	,pixels: null
	,pixels_offset: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = "kha.graphics2.truetype.Stbtt__edge";
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	x0: null
	,y0: null
	,x1: null
	,y1: null
	,invert: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = "kha.graphics2.truetype.Stbtt__active_edge";
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	next: null
	,fx: null
	,fdx: null
	,fdy: null
	,direction: null
	,sy: null
	,ey: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = "kha.graphics2.truetype.Stbtt__point";
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	x: null
	,y: null
	,__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = "kha.graphics2.truetype.StbTruetype";
kha_graphics2_truetype_StbTruetype.STBTT_assert = function(value) {
	if(!value) {
		throw new js__$Boot_HaxeError("Error");
	}
};
kha_graphics2_truetype_StbTruetype.STBTT_POINT_SIZE = function(x) {
	return -x;
};
kha_graphics2_truetype_StbTruetype.ttBYTE = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	return p.readU8(pos);
};
kha_graphics2_truetype_StbTruetype.ttCHAR = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var n = p.readU8(pos);
	if(n >= 128) {
		return n - 256;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttUSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	return ch2 | ch1 << 8;
};
kha_graphics2_truetype_StbTruetype.ttSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	if((n & 32768) != 0) {
		return n - 65536;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttULONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	var ch4 = p.readU8(pos + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.ttLONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	var ch4 = p.readU8(pos + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.ttFixed = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	var ch4 = p.readU8(pos + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.stbtt_tag4 = function(p,pos,c0,c1,c2,c3) {
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_tag = function(p,pos,str) {
	var c0 = HxOverrides.cca(str,0);
	var c1 = HxOverrides.cca(str,1);
	var c2 = HxOverrides.cca(str,2);
	var c3 = HxOverrides.cca(str,3);
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__isfont = function(font) {
	var c0 = HxOverrides.cca("1",0);
	if(font.readU8(0) == c0 && font.readU8(1) == 0 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	var c01 = HxOverrides.cca("typ1",0);
	var c1 = HxOverrides.cca("typ1",1);
	var c2 = HxOverrides.cca("typ1",2);
	var c3 = HxOverrides.cca("typ1",3);
	if(font.readU8(0) == c01 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
		return true;
	}
	var c02 = HxOverrides.cca("OTTO",0);
	var c11 = HxOverrides.cca("OTTO",1);
	var c21 = HxOverrides.cca("OTTO",2);
	var c31 = HxOverrides.cca("OTTO",3);
	if(font.readU8(0) == c02 && font.readU8(1) == c11 && font.readU8(2) == c21 && font.readU8(3) == c31) {
		return true;
	}
	if(font.readU8(0) == 0 && font.readU8(1) == 1 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	return false;
};
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var num_tables = ch2 | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g = 0;
	var _g1 = num_tables;
	while(_g < _g1) {
		var i = _g++;
		var loc = tabledir + 16 * i;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos1 = loc + 8;
			var ch11 = data.readU8(pos1);
			var ch21 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			var ch4 = data.readU8(pos1 + 3);
			return ch4 | ch3 << 8 | ch21 << 16 | ch11 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex = function(font_collection,index) {
	if(kha_graphics2_truetype_StbTruetype.stbtt__isfont(font_collection)) {
		if(index == 0) {
			return 0;
		} else {
			return -1;
		}
	}
	var c0 = HxOverrides.cca("ttcf",0);
	var c1 = HxOverrides.cca("ttcf",1);
	var c2 = HxOverrides.cca("ttcf",2);
	var c3 = HxOverrides.cca("ttcf",3);
	if(font_collection.readU8(0) == c0 && font_collection.readU8(1) == c1 && font_collection.readU8(2) == c2 && font_collection.readU8(3) == c3) {
		var tmp;
		var ch1 = font_collection.readU8(4);
		var ch2 = font_collection.readU8(5);
		var ch3 = font_collection.readU8(6);
		var ch4 = font_collection.readU8(7);
		if((ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24) != 65536) {
			var ch11 = font_collection.readU8(4);
			var ch21 = font_collection.readU8(5);
			var ch31 = font_collection.readU8(6);
			var ch41 = font_collection.readU8(7);
			tmp = (ch41 | ch31 << 8 | ch21 << 16 | ch11 << 24) == 131072;
		} else {
			tmp = true;
		}
		if(tmp) {
			var ch12 = font_collection.readU8(8);
			var ch22 = font_collection.readU8(9);
			var ch32 = font_collection.readU8(10);
			var ch42 = font_collection.readU8(11);
			var n = ch42 | ch32 << 8 | ch22 << 16 | ch12 << 24;
			if(index >= n) {
				return -1;
			}
			var pos = 12 + index * 4;
			var ch13 = font_collection.readU8(pos);
			var ch23 = font_collection.readU8(pos + 1);
			var ch33 = font_collection.readU8(pos + 2);
			var ch43 = font_collection.readU8(pos + 3);
			return ch43 | ch33 << 8 | ch23 << 16 | ch13 << 24;
		}
	}
	return -1;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	info.data = data;
	info.fontstart = fontstart;
	var cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	var t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		var ch1 = data.readU8(pos);
		var ch2 = data.readU8(pos + 1);
		info.numGlyphs = ch2 | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	var ch11 = data.readU8(pos1);
	var ch21 = data.readU8(pos1 + 1);
	var numTables = ch21 | ch11 << 8;
	info.index_map = 0;
	var _g = 0;
	var _g1 = numTables;
	while(_g < _g1) {
		var i = _g++;
		var encoding_record = cmap + 4 + 8 * i;
		var ch12 = data.readU8(encoding_record);
		var ch22 = data.readU8(encoding_record + 1);
		switch(ch22 | ch12 << 8) {
		case 0:
			var pos2 = encoding_record + 4;
			var ch13 = data.readU8(pos2);
			var ch23 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			var ch4 = data.readU8(pos2 + 3);
			info.index_map = cmap + (ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24);
			break;
		case 3:
			var pos3 = encoding_record + 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			switch(ch24 | ch14 << 8) {
			case 1:case 10:
				var pos4 = encoding_record + 4;
				var ch15 = data.readU8(pos4);
				var ch25 = data.readU8(pos4 + 1);
				var ch31 = data.readU8(pos4 + 2);
				var ch41 = data.readU8(pos4 + 3);
				info.index_map = cmap + (ch41 | ch31 << 8 | ch25 << 16 | ch15 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos5 = info.head + 50;
	var ch16 = data.readU8(pos5);
	var ch26 = data.readU8(pos5 + 1);
	info.indexToLocFormat = ch26 | ch16 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var ch1 = data.readU8(index_map);
	var ch2 = data.readU8(index_map + 1);
	var format = ch2 | ch1 << 8;
	if(format == 0) {
		var pos = index_map + 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var bytes = ch21 | ch11 << 8;
		if(unicode_codepoint < bytes - 6) {
			return data.readU8(index_map + 6 + unicode_codepoint);
		}
		return 0;
	} else if(format == 6) {
		var pos1 = index_map + 6;
		var ch12 = data.readU8(pos1);
		var ch22 = data.readU8(pos1 + 1);
		var first = ch22 | ch12 << 8;
		var pos2 = index_map + 8;
		var ch13 = data.readU8(pos2);
		var ch23 = data.readU8(pos2 + 1);
		var count = ch23 | ch13 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos3 = index_map + 10 + (unicode_codepoint - first) * 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			return ch24 | ch14 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos4 = index_map + 6;
		var ch15 = data.readU8(pos4);
		var ch25 = data.readU8(pos4 + 1);
		var segcount = (ch25 | ch15 << 8) >> 1;
		var pos5 = index_map + 8;
		var ch16 = data.readU8(pos5);
		var ch26 = data.readU8(pos5 + 1);
		var searchRange = (ch26 | ch16 << 8) >> 1;
		var pos6 = index_map + 10;
		var ch17 = data.readU8(pos6);
		var ch27 = data.readU8(pos6 + 1);
		var entrySelector = ch27 | ch17 << 8;
		var pos7 = index_map + 12;
		var ch18 = data.readU8(pos7);
		var ch28 = data.readU8(pos7 + 1);
		var rangeShift = (ch28 | ch18 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos8 = search + rangeShift * 2;
		var ch19 = data.readU8(pos8);
		var ch29 = data.readU8(pos8 + 1);
		if(unicode_codepoint >= (ch29 | ch19 << 8)) {
			search += rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			searchRange >>= 1;
			var pos9 = search + searchRange * 2;
			var ch110 = data.readU8(pos9);
			var ch210 = data.readU8(pos9 + 1);
			var end = ch210 | ch110 << 8;
			if(unicode_codepoint > end) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var item = search - endCount >> 1;
		var pos10 = endCount + 2 * item;
		var ch111 = data.readU8(pos10);
		var ch211 = data.readU8(pos10 + 1);
		if(unicode_codepoint > (ch211 | ch111 << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos11 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		var ch112 = data.readU8(pos11);
		var ch212 = data.readU8(pos11 + 1);
		var start = ch212 | ch112 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos12 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch113 = data.readU8(pos12);
		var ch213 = data.readU8(pos12 + 1);
		var offset = ch213 | ch113 << 8;
		if(offset == 0) {
			var pos13 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			var ch114 = data.readU8(pos13);
			var ch214 = data.readU8(pos13 + 1);
			var n = ch214 | ch114 << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n);
		}
		var pos14 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch115 = data.readU8(pos14);
		var ch215 = data.readU8(pos14 + 1);
		return ch215 | ch115 << 8;
	} else if(format == 12 || format == 13) {
		var pos15 = index_map + 12;
		var ch116 = data.readU8(pos15);
		var ch216 = data.readU8(pos15 + 1);
		var ch3 = data.readU8(pos15 + 2);
		var ch4 = data.readU8(pos15 + 3);
		var ngroups = ch4 | ch3 << 8 | ch216 << 16 | ch116 << 24;
		var low = 0;
		var high = ngroups;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos16 = index_map + 16 + mid * 12;
			var ch117 = data.readU8(pos16);
			var ch217 = data.readU8(pos16 + 1);
			var ch31 = data.readU8(pos16 + 2);
			var ch41 = data.readU8(pos16 + 3);
			var start_char = ch41 | ch31 << 8 | ch217 << 16 | ch117 << 24;
			var pos17 = index_map + 16 + mid * 12 + 4;
			var ch118 = data.readU8(pos17);
			var ch218 = data.readU8(pos17 + 1);
			var ch32 = data.readU8(pos17 + 2);
			var ch42 = data.readU8(pos17 + 3);
			var end_char = ch42 | ch32 << 8 | ch218 << 16 | ch118 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos18 = index_map + 16 + mid * 12 + 8;
				var ch119 = data.readU8(pos18);
				var ch219 = data.readU8(pos18 + 1);
				var ch33 = data.readU8(pos18 + 2);
				var ch43 = data.readU8(pos18 + 3);
				var start_glyph = ch43 | ch33 << 8 | ch219 << 16 | ch119 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointShape = function(info,unicode_codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,unicode_codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		var ch1 = p.readU8(pos);
		var ch2 = p.readU8(pos + 1);
		g1 = info1 + (ch2 | ch1 << 8) * 2;
		var info2 = info.glyf;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		g2 = info2 + (ch21 | ch11 << 8) * 2;
	} else {
		var info3 = info.glyf;
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var ch3 = p2.readU8(pos2 + 2);
		var ch4 = p2.readU8(pos2 + 3);
		g1 = info3 + (ch4 | ch3 << 8 | ch22 << 16 | ch12 << 24);
		var info4 = info.glyf;
		var p3 = info.data;
		var pos3 = info.loca + glyph_index * 4 + 4;
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var ch31 = p3.readU8(pos3 + 2);
		var ch41 = p3.readU8(pos3 + 3);
		g2 = info4 + (ch41 | ch31 << 8 | ch23 << 16 | ch13 << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = g + 4;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = g + 6;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = g + 8;
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBox = function(info,codepoint,rect) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),rect);
};
kha_graphics2_truetype_StbTruetype.stbtt_IsGlyphEmpty = function(info,glyph_index) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return true;
	}
	var p = info.data;
	var ch1 = p.readU8(g);
	var ch2 = p.readU8(g + 1);
	var n = ch2 | ch1 << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	return numberOfContours == 0;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var endPtsOfContours;
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var ch1 = data.readU8(g);
	var ch2 = data.readU8(g + 1);
	var n = ch2 | ch1 << 8;
	var numberOfContours = (n & 32768) != 0 ? n - 65536 : n;
	if(numberOfContours > 0) {
		var flags = 0;
		var j = 0;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var pointsIndex = 0;
		endPtsOfContours = data.sub(g + 10,data.get_length() - (g + 10));
		var pos = g + 10 + numberOfContours * 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var ins = ch21 | ch11 << 8;
		var points = data.sub(g + 10 + numberOfContours * 2 + 2 + ins,data.get_length() - (g + 10 + numberOfContours * 2 + 2 + ins));
		var pos1 = numberOfContours * 2 - 2;
		var ch12 = endPtsOfContours.readU8(pos1);
		var ch22 = endPtsOfContours.readU8(pos1 + 1);
		var n1 = 1 + (ch22 | ch12 << 8);
		var m = n1 + 2 * numberOfContours;
		var this1 = new Array(m);
		vertices = this1;
		if(vertices == null) {
			return null;
		} else {
			var _g = 0;
			var _g1 = vertices.length;
			while(_g < _g1) {
				var i = _g++;
				vertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
			}
		}
		next_move = 0;
		var flagcount = 0;
		off = m - n1;
		var _g2 = 0;
		var _g11 = n1;
		while(_g2 < _g11) {
			var i1 = _g2++;
			if(flagcount == 0) {
				flags = points.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = points.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i1].type = flags;
		}
		var x = 0;
		var _g21 = 0;
		var _g3 = n1;
		while(_g21 < _g3) {
			var i2 = _g21++;
			flags = vertices[off + i2].type;
			if((flags & 2) != 0) {
				var dx = points.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch13 = points.readU8(pointsIndex);
				var ch23 = points.readU8(pointsIndex + 1);
				var n2 = ch23 | ch13 << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i2].x = x;
		}
		var y = 0;
		var _g4 = 0;
		var _g5 = n1;
		while(_g4 < _g5) {
			var i3 = _g4++;
			flags = vertices[off + i3].type;
			if((flags & 4) != 0) {
				var dy = points.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value1;
				var ch14 = points.readU8(pointsIndex);
				var ch24 = points.readU8(pointsIndex + 1);
				var n3 = ch24 | ch14 << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i3].y = y;
		}
		num_vertices = 0;
		var scy = 0;
		var scx = scy;
		var cy = scx;
		var cx = cy;
		var sy = cx;
		var sx = sy;
		var i4 = 0;
		while(i4 < n1) {
			flags = vertices[off + i4].type;
			x = vertices[off + i4].x;
			y = vertices[off + i4].y;
			if(next_move == i4) {
				if(i4 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i4 + 1].type & 1) == 0) {
						sx = x + vertices[off + i4 + 1].x >> 1;
						sy = y + vertices[off + i4 + 1].y >> 1;
					} else {
						sx = vertices[off + i4 + 1].x;
						sy = vertices[off + i4 + 1].y;
						++i4;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos2 = j * 2;
				var ch15 = endPtsOfContours.readU8(pos2);
				var ch25 = endPtsOfContours.readU8(pos2 + 1);
				next_move = 1 + (ch25 | ch15 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i4;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var comp = data.sub(g + 10,data.get_length() - (g + 10));
		var compIndex = 0;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var comp_num_verts = 0;
			var i5;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var ch16 = comp.readU8(compIndex);
			var ch26 = comp.readU8(compIndex + 1);
			var n4 = ch26 | ch16 << 8;
			var flags1 = (n4 & 32768) != 0 ? n4 - 65536 : n4;
			compIndex += 2;
			var ch17 = comp.readU8(compIndex);
			var ch27 = comp.readU8(compIndex + 1);
			var n5 = ch27 | ch17 << 8;
			var gidx = (n5 & 32768) != 0 ? n5 - 65536 : n5;
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var ch18 = comp.readU8(compIndex);
					var ch28 = comp.readU8(compIndex + 1);
					var n6 = ch28 | ch18 << 8;
					mtx4 = (n6 & 32768) != 0 ? n6 - 65536 : n6;
					compIndex += 2;
					var ch19 = comp.readU8(compIndex);
					var ch29 = comp.readU8(compIndex + 1);
					var n7 = ch29 | ch19 << 8;
					mtx5 = (n7 & 32768) != 0 ? n7 - 65536 : n7;
					compIndex += 2;
				} else {
					var n8 = comp.readU8(compIndex);
					mtx4 = n8 >= 128 ? n8 - 256 : n8;
					++compIndex;
					var n9 = comp.readU8(compIndex);
					mtx5 = n9 >= 128 ? n9 - 256 : n9;
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var ch110 = comp.readU8(compIndex);
				var ch210 = comp.readU8(compIndex + 1);
				var n10 = ch210 | ch110 << 8;
				mtx3 = ((n10 & 32768) != 0 ? n10 - 65536 : n10) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var ch111 = comp.readU8(compIndex);
				var ch211 = comp.readU8(compIndex + 1);
				var n11 = ch211 | ch111 << 8;
				mtx0 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var ch112 = comp.readU8(compIndex);
				var ch212 = comp.readU8(compIndex + 1);
				var n12 = ch212 | ch112 << 8;
				mtx3 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var ch113 = comp.readU8(compIndex);
				var ch213 = comp.readU8(compIndex + 1);
				var n13 = ch213 | ch113 << 8;
				mtx0 = ((n13 & 32768) != 0 ? n13 - 65536 : n13) / 16384.0;
				compIndex += 2;
				var ch114 = comp.readU8(compIndex);
				var ch214 = comp.readU8(compIndex + 1);
				var n14 = ch214 | ch114 << 8;
				mtx1 = ((n14 & 32768) != 0 ? n14 - 65536 : n14) / 16384.0;
				compIndex += 2;
				var ch115 = comp.readU8(compIndex);
				var ch215 = comp.readU8(compIndex + 1);
				var n15 = ch215 | ch115 << 8;
				mtx2 = ((n15 & 32768) != 0 ? n15 - 65536 : n15) / 16384.0;
				compIndex += 2;
				var ch116 = comp.readU8(compIndex);
				var ch216 = comp.readU8(compIndex + 1);
				var n16 = ch216 | ch116 << 8;
				mtx3 = ((n16 & 32768) != 0 ? n16 - 65536 : n16) / 16384.0;
				compIndex += 2;
			}
			var m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			var n17 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
			comp_num_verts = comp_verts == null ? 0 : comp_verts.length;
			if(comp_num_verts > 0) {
				var _g6 = 0;
				var _g12 = comp_num_verts;
				while(_g6 < _g12) {
					var i6 = _g6++;
					var v = comp_verts[i6];
					var x1 = v.x;
					var y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n17 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				var this2 = new Array(num_vertices + comp_num_verts);
				tmp = this2;
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var this3 = new Array(num_vertices);
		var tmp1 = this3;
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var numOfLongHorMetrics = ch2 | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		var n = ch21 | ch11 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var n1 = ch22 | ch12 << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var n2 = ch23 | ch13 << 8;
		metrics.advanceWidth = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		var ch14 = p4.readU8(pos4);
		var ch24 = p4.readU8(pos4 + 1);
		var n3 = ch24 | ch14 << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance = function(info,glyph1,glyph2) {
	var data = info.data.sub(info.kern,info.data.get_length() - info.kern);
	var straw;
	var m;
	if(info.kern == 0) {
		return 0;
	}
	var ch1 = data.readU8(2);
	var ch2 = data.readU8(3);
	if((ch2 | ch1 << 8) < 1) {
		return 0;
	}
	var ch11 = data.readU8(8);
	var ch21 = data.readU8(9);
	if((ch21 | ch11 << 8) != 1) {
		return 0;
	}
	var l = 0;
	var ch12 = data.readU8(10);
	var ch22 = data.readU8(11);
	var r = (ch22 | ch12 << 8) - 1;
	var needle = glyph1 << 16 | glyph2;
	while(l <= r) {
		m = l + r >> 1;
		var pos = 18 + m * 6;
		var ch13 = data.readU8(pos);
		var ch23 = data.readU8(pos + 1);
		var ch3 = data.readU8(pos + 2);
		var ch4 = data.readU8(pos + 3);
		straw = ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24;
		if(needle < straw) {
			r = m - 1;
		} else if(needle > straw) {
			l = m + 1;
		} else {
			var pos1 = 22 + m * 6;
			var ch14 = data.readU8(pos1);
			var ch24 = data.readU8(pos1 + 1);
			var n = ch24 | ch14 << 8;
			if((n & 32768) != 0) {
				return n - 65536;
			} else {
				return n;
			}
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointKernAdvance = function(info,ch1,ch2) {
	if(info.kern == 0) {
		return 0;
	}
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch1),kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch2));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointHMetrics = function(info,codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontBoundingBox = function(info) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	var p = info.data;
	var pos = info.head + 36;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.head + 38;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.head + 40;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = info.head + 42;
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	var fheight = ((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1);
	return height / fheight;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForMappingEmToPixels = function(info,pixels) {
	var p = info.data;
	var pos = info.head + 18;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var unitsPerEm = ch2 | ch1 << 8;
	return pixels / unitsPerEm;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var x0 = rect.x0;
		var x1 = rect.x1;
		var y0 = rect.y0;
		var y1 = rect.y1;
		rect.x0 = Math.floor(x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel = function(font,codepoint,scale_x,scale_y,shift_x,shift_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(font,codepoint),scale_x,scale_y,shift_x,shift_y);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBox = function(font,codepoint,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel(font,codepoint,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		var _g1 = scanline;
		_g1[_g] = _g1[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g2 = scanlineIndex + x;
		var _g11 = scanline;
		_g11[_g2] = _g11[_g2] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var x = x_top | 0;
					var height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g = x;
					var _g1 = scanline;
					_g1[_g] = _g1[_g] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g2 = scanline_fillIndex + x;
					var _g11 = scanline_fill;
					_g11[_g2] = _g11[_g2] + e.direction * height;
				} else {
					var x1;
					if(x_top > x_bottom) {
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						var t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					var x11 = x_top | 0;
					var x2 = x_bottom | 0;
					var y_crossing = (x11 + 1 - x01) * dy + y_top;
					var sign = e.direction;
					var area = sign * (y_crossing - sy0);
					var _g3 = x11;
					var _g12 = scanline;
					_g12[_g3] = _g12[_g3] + area * (1 - (x_top - x11 + (x11 + 1 - x11)) / 2);
					var step = sign * dy;
					var _g4 = x11 + 1;
					var _g13 = x2;
					while(_g4 < _g13) {
						var x3 = _g4++;
						var _g5 = x3;
						var _g14 = scanline;
						_g14[_g5] = _g14[_g5] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x11 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g21 = x2;
					var _g31 = scanline;
					_g31[_g21] = _g31[_g21] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g22 = scanline_fillIndex + x2;
					var _g32 = scanline_fill;
					_g32[_g22] = _g32[_g22] + sign * (sy1 - sy0);
				}
			} else {
				var _g6 = 0;
				var _g15 = len;
				while(_g6 < _g15) {
					var x4 = _g6++;
					var y0 = y_top;
					var x12 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y3 = y_bottom;
					var y1 = (x4 - x01) / dx + y_top;
					var y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x12 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x12 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x12 && x31 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x31 < x12 && x01 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x31,y3);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var j = 0;
	var scanline;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		var this1 = new Array(result.w * 2 + 1);
		scanline = this1;
	} else {
		var this2 = new Array(129);
		scanline = this2;
	}
	var scanline2 = scanline;
	scanline2Index = result.w;
	var y = off_y;
	e[eIndex + n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value = active;
		var step_parent = null;
		var _g = 0;
		var _g1 = result.w;
		while(_g < _g1) {
			var i = _g++;
			scanline[i] = 0;
		}
		var _g2 = 0;
		var _g3 = result.w + 1;
		while(_g2 < _g3) {
			var i1 = _g2++;
			scanline2[scanline2Index + i1] = 0;
		}
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g4 = 0;
		var _g5 = result.w;
		while(_g4 < _g5) {
			var i2 = _g4++;
			sum += scanline2[scanline2Index + i2];
			var k = scanline[i2] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			var m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i2,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var i;
	var j;
	var _g = 1;
	var _g1 = n;
	while(_g < _g1) {
		var i1 = _g++;
		var t = p[i1];
		var a = t;
		j = i1;
		while(j > 0) {
			var b = p[j - 1];
			var c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(a,b);
			if(!c) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i1 != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c;
		var m = n >> 1;
		var c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
		var c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(c01 != c12) {
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			var z = c == c12 ? 0 : n - 1;
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		var i = 1;
		var j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var i;
	var j;
	var k;
	var vsubsample = 1;
	var ptsIndex = 0;
	var n = 0;
	var _g = 0;
	var _g1 = windings;
	while(_g < _g1) {
		var i1 = _g++;
		n += wcount[i1];
	}
	var this1 = new Array(n + 1);
	var e = this1;
	if(e == null) {
		return;
	} else {
		var _g2 = 0;
		var _g3 = e.length;
		while(_g2 < _g3) {
			var i2 = _g2++;
			e[i2] = new kha_graphics2_truetype_Stbtt_$_$edge();
		}
	}
	n = 0;
	var m = 0;
	var _g21 = 0;
	var _g31 = windings;
	while(_g21 < _g31) {
		var i3 = _g21++;
		var p = pts;
		var pIndex = ptsIndex + m;
		m += wcount[i3];
		j = wcount[i3] - 1;
		var _g22 = 0;
		var _g32 = wcount[i3];
		while(_g22 < _g32) {
			var k1 = _g22++;
			var a = k1;
			var b = j;
			if(p[pIndex + j].y == p[pIndex + k1].y) {
				j = k1;
				continue;
			}
			e[n].invert = false;
			if(invert ? p[pIndex + j].y > p[pIndex + k1].y : p[pIndex + j].y < p[pIndex + k1].y) {
				e[n].invert = true;
				a = j;
				b = k1;
			}
			e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
			e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
			++n;
			j = k1;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var i;
	var n = 0;
	var start = 0;
	var pass;
	var _g = 0;
	var _g1 = num_verts;
	while(_g < _g1) {
		var i1 = _g++;
		if(vertices[i1].type == 1) {
			++n;
		}
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	var this1 = new Array(n);
	contour_lengths.value = this1;
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var pass1 = _g2++;
		var x = 0;
		var y = 0;
		if(pass1 == 1) {
			var this2 = new Array(num_points);
			points = this2;
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g3 = points.length;
				while(_g21 < _g3) {
					var i2 = _g21++;
					points[i2] = new kha_graphics2_truetype_Stbtt_$_$point();
				}
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		var _g31 = num_verts;
		while(_g22 < _g31) {
			var i3 = _g22++;
			switch(vertices[i3].type) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i3].cx,vertices[i3].cy,vertices[i3].x,vertices[i3].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i3].x;
				y = vertices[i3].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var scale = scale_x > scale_y ? scale_y : scale_x;
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : winding_count};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,glyph,region) {
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices.length;
	if(scale_x == 0) {
		scale_x = scale_y;
	}
	if(scale_y == 0) {
		if(scale_x == 0) {
			return null;
		}
		scale_y = scale_x;
	}
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	var ix0 = rect.x0;
	var iy0 = rect.y0;
	var ix1 = rect.x1;
	var iy1 = rect.y1;
	gbm.w = ix1 - ix0;
	gbm.h = iy1 - iy0;
	gbm.pixels = null;
	region.width = gbm.w;
	region.height = gbm.h;
	region.xoff = ix0;
	region.yoff = iy0;
	if(gbm.w != 0 && gbm.h != 0) {
		gbm.pixels = kha_internal_BytesBlob.alloc(gbm.w * gbm.h);
		if(gbm.pixels != null) {
			gbm.stride = gbm.w;
			kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
		}
	}
	return gbm.pixels;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmap = function(info,scale_x,scale_y,glyph,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,glyph,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmap = function(info,scale_x,scale_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,codepoint,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,codepoint);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var _g = 0;
	var _g1 = pw * ph;
	while(_g < _g1) {
		var i = _g++;
		pixels.writeU8(i,0);
	}
	var y = 1;
	var x = y;
	var bottom_y = 1;
	var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i1 = 0;
	var _g2 = 0;
	while(_g2 < chars.length) {
		var index = chars[_g2];
		++_g2;
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
		var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g);
		var advance = metrics.advanceWidth;
		var lsb = metrics.leftSideBearing;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		var x0 = rect.x0;
		var y0 = rect.y0;
		var x1 = rect.x1;
		var y1 = rect.y1;
		var gw = x1 - x0;
		var gh = y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i1;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,x + y * pw,gw,gh,pw,scale,scale,g);
		chardata[i1].x0 = x;
		chardata[i1].y0 = y;
		chardata[i1].x1 = x + gw;
		chardata[i1].y1 = y + gh;
		chardata[i1].xadvance = scale * advance;
		chardata[i1].xoff = x0;
		chardata[i1].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i1;
	}
	return bottom_y;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetBakedQuad = function(chardata,pw,ph,char_index,xpos,ypos,q,opengl_fillrule) {
	var d3d_bias = opengl_fillrule ? 0 : -0.5;
	var ipw = 1.0 / pw;
	var iph = 1.0 / ph;
	var b = chardata[char_index];
	var round_x = Math.floor(xpos.value + b.xoff + 0.5);
	var round_y = Math.floor(ypos.value + b.yoff + 0.5);
	q.x0 = round_x + d3d_bias;
	q.y0 = round_y + d3d_bias;
	q.x1 = round_x + b.x1 - b.x0 + d3d_bias;
	q.y1 = round_y + b.y1 - b.y0 + d3d_bias;
	q.s0 = b.x0 * ipw;
	q.t0 = b.y0 * iph;
	q.s1 = b.x1 * ipw;
	q.t1 = b.y1 * iph;
	xpos.value += b.xadvance;
};
var kha_graphics4_BlendingFactor = $hxEnums["kha.graphics4.BlendingFactor"] = { __ename__ : "kha.graphics4.BlendingFactor", __constructs__ : ["Undefined","BlendOne","BlendZero","SourceAlpha","DestinationAlpha","InverseSourceAlpha","InverseDestinationAlpha","SourceColor","DestinationColor","InverseSourceColor","InverseDestinationColor"]
	,Undefined: {_hx_index:0,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,BlendOne: {_hx_index:1,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,BlendZero: {_hx_index:2,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,SourceAlpha: {_hx_index:3,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,DestinationAlpha: {_hx_index:4,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseSourceAlpha: {_hx_index:5,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseDestinationAlpha: {_hx_index:6,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,SourceColor: {_hx_index:7,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,DestinationColor: {_hx_index:8,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseSourceColor: {_hx_index:9,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
	,InverseDestinationColor: {_hx_index:10,__enum__:"kha.graphics4.BlendingFactor",toString:$estr}
};
var kha_graphics4_BlendingOperation = $hxEnums["kha.graphics4.BlendingOperation"] = { __ename__ : "kha.graphics4.BlendingOperation", __constructs__ : ["Add","Subtract","ReverseSubtract","Min","Max"]
	,Add: {_hx_index:0,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,Subtract: {_hx_index:1,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,ReverseSubtract: {_hx_index:2,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,Min: {_hx_index:3,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
	,Max: {_hx_index:4,__enum__:"kha.graphics4.BlendingOperation",toString:$estr}
};
var kha_graphics4_CompareMode = $hxEnums["kha.graphics4.CompareMode"] = { __ename__ : "kha.graphics4.CompareMode", __constructs__ : ["Always","Never","Equal","NotEqual","Less","LessEqual","Greater","GreaterEqual"]
	,Always: {_hx_index:0,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Never: {_hx_index:1,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Equal: {_hx_index:2,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,NotEqual: {_hx_index:3,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Less: {_hx_index:4,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,LessEqual: {_hx_index:5,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,Greater: {_hx_index:6,__enum__:"kha.graphics4.CompareMode",toString:$estr}
	,GreaterEqual: {_hx_index:7,__enum__:"kha.graphics4.CompareMode",toString:$estr}
};
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = "kha.graphics4.ConstantLocation";
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = "kha.graphics4.CubeMap";
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.createRenderTarget = function(size,format,depthStencil,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	return new kha_graphics4_CubeMap(size,format,true,depthStencil);
};
kha_graphics4_CubeMap.prototype = {
	myWidth: null
	,myHeight: null
	,format: null
	,renderTarget: null
	,depthStencilFormat: null
	,graphics4: null
	,frameBuffer: null
	,texture: null
	,depthTexture: null
	,isDepthAttachment: null
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			switch(this.format._hx_index) {
			case 0:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34836 : 6408,this.myWidth,this.myHeight,0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 34842 : 6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33326 : 6406,this.myWidth,this.myHeight,0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(34069,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34070,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34071,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34072,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34073,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				kha_SystemImpl.gl.texImage2D(34074,0,kha_SystemImpl.gl2 ? 33325 : 6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.texParameteri(34067,10240,9728);
				kha_SystemImpl.gl.texParameteri(34067,10241,9728);
				this.isDepthAttachment = true;
				if(!kha_SystemImpl.gl2) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					kha_SystemImpl.gl.texImage2D(34069,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069,colortex,0);
					kha_SystemImpl.gl.texImage2D(34070,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34070,colortex,0);
					kha_SystemImpl.gl.texImage2D(34071,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34071,colortex,0);
					kha_SystemImpl.gl.texImage2D(34072,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34072,colortex,0);
					kha_SystemImpl.gl.texImage2D(34073,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34073,colortex,0);
					kha_SystemImpl.gl.texImage2D(34074,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34074,colortex,0);
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			if(depthStencilFormat == 1) {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33190 : 6402,this.myWidth,this.myHeight,0,6402,5125,null);
			} else {
				kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 33189 : 6402,this.myWidth,this.myHeight,0,6402,5123,null);
			}
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,kha_SystemImpl.gl2 ? 35056 : 34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
	}
	,unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,width: null
	,get_width: function() {
		return this.myWidth;
	}
	,height: null
	,get_height: function() {
		return this.myHeight;
	}
	,g1: null
	,get_g1: function() {
		return null;
	}
	,g2: null
	,get_g2: function() {
		return null;
	}
	,g4: null
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_height:"get_height",get_width:"get_width"}
};
var kha_graphics4_CullMode = $hxEnums["kha.graphics4.CullMode"] = { __ename__ : "kha.graphics4.CullMode", __constructs__ : ["Clockwise","CounterClockwise","None"]
	,Clockwise: {_hx_index:0,__enum__:"kha.graphics4.CullMode",toString:$estr}
	,CounterClockwise: {_hx_index:1,__enum__:"kha.graphics4.CullMode",toString:$estr}
	,None: {_hx_index:2,__enum__:"kha.graphics4.CullMode",toString:$estr}
};
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = "kha.graphics4.FragmentShader";
kha_graphics4_FragmentShader.fromSource = function(source) {
	var shader = new kha_graphics4_FragmentShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_FragmentShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.sources = null;
	}
	,__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function(source) {
};
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = "kha.graphics4.GeometryShader";
kha_graphics4_GeometryShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_GeometryShader
};
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = "kha.graphics4.Graphics";
kha_graphics4_Graphics.prototype = {
	begin: null
	,beginFace: null
	,beginEye: null
	,end: null
	,vsynced: null
	,refreshRate: null
	,clear: null
	,viewport: null
	,scissor: null
	,disableScissor: null
	,setVertexBuffer: null
	,setVertexBuffers: null
	,setIndexBuffer: null
	,setTexture: null
	,setTextureDepth: null
	,setTextureArray: null
	,setVideoTexture: null
	,setImageTexture: null
	,setTextureParameters: null
	,setTexture3DParameters: null
	,setCubeMap: null
	,setCubeMapDepth: null
	,setStencilReferenceValue: null
	,renderTargetsInvertedY: null
	,instancedRenderingAvailable: null
	,setPipeline: null
	,setBool: null
	,setInt: null
	,setFloat: null
	,setFloat2: null
	,setFloat3: null
	,setFloat4: null
	,setFloats: null
	,setVector2: null
	,setVector3: null
	,setVector4: null
	,setMatrix: null
	,setMatrix3: null
	,drawIndexedVertices: null
	,drawIndexedVerticesInstanced: null
	,flush: null
	,__class__: kha_graphics4_Graphics
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	kha_graphics4_ImageShaderPainter.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = "kha.graphics4.ImageShaderPainter";
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.structure == null) {
		kha_graphics4_ImageShaderPainter.structure = kha_graphics4_Graphics2.createImageVertexStructure();
	}
	if(kha_graphics4_ImageShaderPainter.shaderPipeline == null) {
		kha_graphics4_ImageShaderPainter.shaderPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_ImageShaderPainter.structure);
		kha_graphics4_ImageShaderPainter.shaderPipeline.compile();
	}
};
kha_graphics4_ImageShaderPainter.prototype = {
	projectionMatrix: null
	,bilinear: null
	,bilinearMipmaps: null
	,g: null
	,myPipeline: null
	,projectionLocation: null
	,textureLocation: null
	,sourceBlend: null
	,destinationBlend: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
			this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
			this.textureLocation = pipe.getTextureUnit("tex");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ImageShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ImageShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(6000,kha_graphics4_ImageShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ImageShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(9000,kha_graphics4_Usage.StaticUsage);
			var indices = kha_graphics4_ImageShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 1500) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ImageShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 9] = topleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 10] = toplefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 18] = toprightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 19] = toprighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 27] = bottomrightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 28] = bottomrighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColor: function(r,g,b,a) {
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		kha_graphics4_ImageShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ImageShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ImageShaderPainter.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ImageShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,kha_graphics4_ImageShaderPainter.lastTexture);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinearMipmaps ? kha_graphics4_MipMapFilter.LinearMipFilter : kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ImageShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		kha_graphics4_ImageShaderPainter.bufferIndex = 0;
		kha_graphics4_ImageShaderPainter.rectVertices = kha_graphics4_ImageShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setBilinearMipmapFilter: function(bilinear) {
		this.end();
		this.bilinearMipmaps = bilinear;
	}
	,drawImage: function(img,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 3] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 12] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 13] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 22] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = bottomleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = bottomlefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = topleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = toplefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = toprightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = toprighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = bottomrightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = bottomrighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawImage2: function(img,sx,sy,sw,sh,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = bottomleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = bottomlefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = topleftx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = toplefty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = toprightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = toprighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = bottomrightx;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = bottomrighty;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawImageScale: function(img,sx,sy,sw,sh,left,top,right,bottom,opacity,color) {
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		var left1 = sx / tex.get_realWidth();
		var top1 = sy / tex.get_realHeight();
		var right1 = (sx + sw) / tex.get_realWidth();
		var bottom1 = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right1;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom1;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = opacity;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = opacity;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = opacity;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = opacity;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,end: function() {
		if(kha_graphics4_ImageShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_ImageShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = "kha.graphics4.ColoredShaderPainter";
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.structure == null) {
		kha_graphics4_ColoredShaderPainter.structure = kha_graphics4_Graphics2.createColoredVertexStructure();
	}
	if(kha_graphics4_ColoredShaderPainter.shaderPipeline == null) {
		kha_graphics4_ColoredShaderPainter.shaderPipeline = kha_graphics4_Graphics2.createColoredPipeline(kha_graphics4_ColoredShaderPainter.structure);
		kha_graphics4_ColoredShaderPainter.shaderPipeline.compile();
	}
};
kha_graphics4_ColoredShaderPainter.prototype = {
	projectionMatrix: null
	,g: null
	,myPipeline: null
	,projectionLocation: null
	,sourceBlend: null
	,destinationBlend: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_ColoredShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_ColoredShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(400,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(600,kha_graphics4_Usage.StaticUsage);
			var indices = kha_graphics4_ColoredShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 100) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_ColoredShaderPainter.indexBuffer.unlock();
			kha_graphics4_ColoredShaderPainter.triangleVertexBuffer = new kha_graphics4_VertexBuffer(300,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer = new kha_graphics4_IndexBuffer(300,kha_graphics4_Usage.StaticUsage);
			var triIndices = kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.lock();
			var _g1 = 0;
			while(_g1 < 100) {
				var i1 = _g1++;
				triIndices[i1 * 3] = i1 * 3;
				triIndices[i1 * 3 + 1] = i1 * 3 + 1;
				triIndices[i1 * 3 + 2] = i1 * 3 + 2;
			}
			kha_graphics4_ColoredShaderPainter.triangleIndexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 7] = topleftx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 8] = toplefty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 14] = toprightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 15] = toprighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 16] = -5.0;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 21] = bottomrightx;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 22] = bottomrighty;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 20] = a;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 24] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 25] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 26] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.rectVertices[baseIndex + 27] = a;
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex] = x1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 1] = y1;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 2] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 7] = x2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 8] = y2;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 9] = -5.0;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 14] = x3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 15] = y3;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 16] = -5.0;
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 6] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 13] = a;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		kha_graphics4_ColoredShaderPainter.triangleVertices[baseIndex + 20] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.bufferIndex * 2 * 3);
		kha_graphics4_ColoredShaderPainter.bufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.rectVertices = kha_graphics4_ColoredShaderPainter.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_ColoredShaderPainter.triangleVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_ColoredShaderPainter.triangleIndexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,kha_graphics4_ColoredShaderPainter.triangleBufferIndex * 3);
		kha_graphics4_ColoredShaderPainter.triangleBufferIndex = 0;
		kha_graphics4_ColoredShaderPainter.triangleVertices = kha_graphics4_ColoredShaderPainter.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex + 1 >= 100) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++kha_graphics4_ColoredShaderPainter.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex + 1 >= 100) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++kha_graphics4_ColoredShaderPainter.triangleBufferIndex;
	}
	,endTris: function(rectsDone) {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(rectsDone);
		}
	}
	,endRects: function(trisDone) {
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(trisDone);
		}
	}
	,end: function() {
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			this.drawBuffer(false);
		}
	}
	,__class__: kha_graphics4_ColoredShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	kha_graphics4_TextShaderPainter.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = "kha.graphics4.TextShaderPainter";
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.structure == null) {
		kha_graphics4_TextShaderPainter.structure = kha_graphics4_Graphics2.createTextVertexStructure();
	}
	if(kha_graphics4_TextShaderPainter.shaderPipeline == null) {
		kha_graphics4_TextShaderPainter.shaderPipeline = kha_graphics4_Graphics2.createTextPipeline(kha_graphics4_TextShaderPainter.structure);
		kha_graphics4_TextShaderPainter.shaderPipeline.compile();
	}
};
kha_graphics4_TextShaderPainter.findIndex = function(charCode) {
	var glyphs = kha_graphics2_Graphics.fontGlyphs;
	var blocks = kha_KravurImage.charBlocks;
	var offset = 0;
	var _g = 0;
	var _g1 = blocks.length / 2 | 0;
	while(_g < _g1) {
		var i = _g++;
		var start = blocks[i * 2];
		var end = blocks[i * 2 + 1];
		if(charCode >= start && charCode <= end) {
			return offset + charCode - start;
		}
		offset += end - start + 1;
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	projectionMatrix: null
	,font: null
	,g: null
	,myPipeline: null
	,projectionLocation: null
	,textureLocation: null
	,fontSize: null
	,bilinear: null
	,sourceBlend: null
	,destinationBlend: null
	,get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
			this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
			this.textureLocation = pipe.getTextureUnit("tex");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		if(kha_graphics4_TextShaderPainter.rectVertexBuffer == null) {
			kha_graphics4_TextShaderPainter.rectVertexBuffer = new kha_graphics4_VertexBuffer(400,kha_graphics4_TextShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
			kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
			kha_graphics4_TextShaderPainter.indexBuffer = new kha_graphics4_IndexBuffer(600,kha_graphics4_Usage.StaticUsage);
			var indices = kha_graphics4_TextShaderPainter.indexBuffer.lock();
			var _g = 0;
			while(_g < 100) {
				var i = _g++;
				indices[i * 3 * 2] = i * 4;
				indices[i * 3 * 2 + 1] = i * 4 + 1;
				indices[i * 3 * 2 + 2] = i * 4 + 2;
				indices[i * 3 * 2 + 3] = i * 4;
				indices[i * 3 * 2 + 4] = i * 4 + 2;
				indices[i * 3 * 2 + 5] = i * 4 + 3;
			}
			kha_graphics4_TextShaderPainter.indexBuffer.unlock();
		}
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex] = bottomleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 1] = bottomlefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 2] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 9] = topleftx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 10] = toplefty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 11] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 18] = toprightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 19] = toprighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 20] = -5.0;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 27] = bottomrightx;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 28] = bottomrighty;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = kha_graphics4_TextShaderPainter.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 5] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 6] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 7] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 14] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 15] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 16] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 23] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 24] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 25] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 32] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 33] = ((color & 65280) >>> 8) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 34] = (color & 255) * 0.00392156862745098;
		kha_graphics4_TextShaderPainter.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		kha_graphics4_TextShaderPainter.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(kha_graphics4_TextShaderPainter.rectVertexBuffer);
		this.g.setIndexBuffer(kha_graphics4_TextShaderPainter.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_TextShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,kha_graphics4_TextShaderPainter.lastTexture);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.drawIndexedVertices(0,kha_graphics4_TextShaderPainter.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		kha_graphics4_TextShaderPainter.bufferIndex = 0;
		kha_graphics4_TextShaderPainter.rectVertices = kha_graphics4_TextShaderPainter.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,text: null
	,startString: function(text) {
		this.text = text;
	}
	,charCodeAt: function(position) {
		return HxOverrides.cca(this.text,position);
	}
	,stringLength: function() {
		return this.text.length;
	}
	,endString: function() {
		this.text = null;
	}
	,bakedQuadCache: null
	,drawString: function(text,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var ypos = y;
		this.startString(text);
		var _g = 0;
		var _g1 = this.stringLength();
		while(_g < _g1) {
			var i = _g++;
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(this.charCodeAt(i)),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 100) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var value_x = q.x0;
				var value_y = q.y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y1 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var p0_x = x1;
				var p0_y = y1;
				var value_x1 = q.x0;
				var value_y1 = q.y0;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x2 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y2 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var p1_x = x2;
				var p1_y = y2;
				var value_x2 = q.x1;
				var value_y2 = q.y0;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x3 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y3 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var p2_x = x3;
				var p2_y = y3;
				var value_x3 = q.x1;
				var value_y3 = q.y1;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x4 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y4 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var p3_x = x4;
				var p3_y = y4;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
		this.endString();
	}
	,drawCharacters: function(text,start,length,opacity,color,x,y,transformation) {
		var font = this.font._get(this.fontSize);
		var tex = font.getTexture();
		if(kha_graphics4_TextShaderPainter.lastTexture != null && tex != kha_graphics4_TextShaderPainter.lastTexture) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = tex;
		var xpos = x;
		var ypos = y;
		var _g = start;
		var _g1 = start + length;
		while(_g < _g1) {
			var i = _g++;
			var q = font.getBakedQuad(this.bakedQuadCache,kha_graphics4_TextShaderPainter.findIndex(text[i]),xpos,ypos);
			if(q != null) {
				if(kha_graphics4_TextShaderPainter.bufferIndex + 1 >= 100) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var value_x = q.x0;
				var value_y = q.y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y1 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				var p0_x = x1;
				var p0_y = y1;
				var value_x1 = q.x0;
				var value_y1 = q.y0;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x2 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y2 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				var p1_x = x2;
				var p1_y = y2;
				var value_x2 = q.x1;
				var value_y2 = q.y0;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x3 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y3 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				var p2_x = x3;
				var p2_y = y3;
				var value_x3 = q.x1;
				var value_y3 = q.y1;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x4 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y4 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				var p3_x = x4;
				var p3_y = y4;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++kha_graphics4_TextShaderPainter.bufferIndex;
			}
		}
	}
	,end: function() {
		if(kha_graphics4_TextShaderPainter.bufferIndex > 0) {
			this.drawBuffer();
		}
		kha_graphics4_TextShaderPainter.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_Graphics2 = function(canvas) {
	this.myMipmapScaleQuality = kha_graphics2_ImageScaleQuality.High;
	this.myImageScaleQuality = kha_graphics2_ImageScaleQuality.High;
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.projectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = kha_graphics4_Graphics2.createImagePipeline(kha_graphics4_Graphics2.createImageVertexStructure());
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = "kha.graphics4.Graphics2";
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.createImageVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createImagePipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.BlendOne;
	shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createColoredVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createColoredPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	return shaderPipeline;
};
kha_graphics4_Graphics2.createTextVertexStructure = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("vertexPosition",2);
	structure.add("texPosition",1);
	structure.add("vertexColor",3);
	return structure;
};
kha_graphics4_Graphics2.createTextPipeline = function(structure) {
	var shaderPipeline = new kha_graphics4_PipelineState();
	shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	shaderPipeline.inputLayout = [structure];
	shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	return shaderPipeline;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	myColor: null
	,myFont: null
	,projectionMatrix: null
	,imagePainter: null
	,coloredPainter: null
	,textPainter: null
	,canvas: null
	,g: null
	,setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if((this.canvas instanceof kha_Framebuffer)) {
			var _this = this.projectionMatrix;
			var tx = -width / width;
			var ty = -height / (0 - height);
			var tz = -1.00020002000200026;
			var m__00 = 2 / width;
			var m__10 = 0;
			var m__20 = 0;
			var m__30 = tx;
			var m__01 = 0;
			var m__11 = 2 / (0 - height);
			var m__21 = 0;
			var m__31 = ty;
			var m__02 = 0;
			var m__12 = 0;
			var m__22 = -0.002000200020002;
			var m__32 = tz;
			var m__03 = 0;
			var m__13 = 0;
			var m__23 = 0;
			var m__33 = 1;
			_this._00 = m__00;
			_this._10 = m__10;
			_this._20 = m__20;
			_this._30 = m__30;
			_this._01 = m__01;
			_this._11 = m__11;
			_this._21 = m__21;
			_this._31 = m__31;
			_this._02 = m__02;
			_this._12 = m__12;
			_this._22 = m__22;
			_this._32 = m__32;
			_this._03 = m__03;
			_this._13 = m__13;
			_this._23 = m__23;
			_this._33 = m__33;
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(this.g.renderTargetsInvertedY()) {
				var _this1 = this.projectionMatrix;
				var tx1 = -width / width;
				var ty1 = -height / height;
				var tz1 = -1.00020002000200026;
				var m__001 = 2 / width;
				var m__101 = 0;
				var m__201 = 0;
				var m__301 = tx1;
				var m__011 = 0;
				var m__111 = 2 / height;
				var m__211 = 0;
				var m__311 = ty1;
				var m__021 = 0;
				var m__121 = 0;
				var m__221 = -0.002000200020002;
				var m__321 = tz1;
				var m__031 = 0;
				var m__131 = 0;
				var m__231 = 0;
				var m__331 = 1;
				_this1._00 = m__001;
				_this1._10 = m__101;
				_this1._20 = m__201;
				_this1._30 = m__301;
				_this1._01 = m__011;
				_this1._11 = m__111;
				_this1._21 = m__211;
				_this1._31 = m__311;
				_this1._02 = m__021;
				_this1._12 = m__121;
				_this1._22 = m__221;
				_this1._32 = m__321;
				_this1._03 = m__031;
				_this1._13 = m__131;
				_this1._23 = m__231;
				_this1._33 = m__331;
			} else {
				var _this2 = this.projectionMatrix;
				var tx2 = -width / width;
				var ty2 = -height / (0 - height);
				var tz2 = -1.00020002000200026;
				var m__002 = 2 / width;
				var m__102 = 0;
				var m__202 = 0;
				var m__302 = tx2;
				var m__012 = 0;
				var m__112 = 2 / (0 - height);
				var m__212 = 0;
				var m__312 = ty2;
				var m__022 = 0;
				var m__122 = 0;
				var m__222 = -0.002000200020002;
				var m__322 = tz2;
				var m__032 = 0;
				var m__132 = 0;
				var m__232 = 0;
				var m__332 = 1;
				_this2._00 = m__002;
				_this2._10 = m__102;
				_this2._20 = m__202;
				_this2._30 = m__302;
				_this2._01 = m__012;
				_this2._11 = m__112;
				_this2._21 = m__212;
				_this2._31 = m__312;
				_this2._02 = m__022;
				_this2._12 = m__122;
				_this2._22 = m__222;
				_this2._32 = m__322;
				_this2._03 = m__032;
				_this2._13 = m__132;
				_this2._23 = m__232;
				_this2._33 = m__332;
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawImage: function(img,x,y) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var xw = x + img.get_width();
		var yh = y + img.get_height();
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x = x;
		var value_y = yh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x1 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y1 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var p1_x = x1;
		var p1_y = y1;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x1 = x;
		var value_y1 = y;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x2 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y2 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var p2_x = x2;
		var p2_y = y2;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x2 = xw;
		var value_y2 = y;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x3 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y3 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var p3_x = x3;
		var p3_y = y3;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x3 = xw;
		var value_y3 = yh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x4 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y4 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var p4_x = x4;
		var p4_y = y4;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 3] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 12] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 13] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 22] = 0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x = dx;
		var value_y = dy + dh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		var p1_x = x;
		var p1_y = y;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x1 = dx;
		var value_y1 = dy;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x1 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y1 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		var p2_x = x1;
		var p2_y = y1;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x2 = dx + dw;
		var value_y2 = dy;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x2 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y2 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		var p3_x = x2;
		var p3_y = y2;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x3 = dx + dw;
		var value_y3 = dy + dh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x3 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y3 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		var p4_x = x3;
		var p4_y = y3;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(kha_graphics4_ImageShaderPainter.bufferIndex + 1 >= 1500 || kha_graphics4_ImageShaderPainter.lastTexture != null && tex != kha_graphics4_ImageShaderPainter.lastTexture) {
			_this5.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 3] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 4] = bottom;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 12] = left;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 13] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 21] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 22] = top;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 30] = right;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 5] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 6] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 7] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 8] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 14] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 15] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 16] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 17] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 23] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 24] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 25] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 26] = a;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 32] = r;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 33] = g;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 34] = b;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = kha_graphics4_ImageShaderPainter.bufferIndex * 9 * 4;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2] = p1_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 1] = p1_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 2] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 9] = p2_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 10] = p2_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 11] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 18] = p3_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 19] = p3_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 20] = -5.0;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 27] = p4_x;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 28] = p4_y;
		kha_graphics4_ImageShaderPainter.rectVertices[baseIndex2 + 29] = -5.0;
		++kha_graphics4_ImageShaderPainter.bufferIndex;
		kha_graphics4_ImageShaderPainter.lastTexture = tex;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x - strength / 2;
		var value_y = y + strength / 2;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1 = new kha_math_FastVector2(x1,y1);
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x - strength / 2;
		var value_y1 = y - strength / 2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2 = new kha_math_FastVector2(x2,y2);
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x + width + strength / 2;
		var value_y2 = y - strength / 2;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3 = new kha_math_FastVector2(x3,y3);
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x3 = x + width + strength / 2;
		var value_y3 = y + strength / 2;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var p4 = new kha_math_FastVector2(x4,y4);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_x4 = x - strength / 2;
		var value_y4 = y + height - strength / 2;
		var w4 = _this4._02 * value_x4 + _this4._12 * value_y4 + _this4._22;
		var x5 = (_this4._00 * value_x4 + _this4._10 * value_y4 + _this4._20) / w4;
		var y5 = (_this4._01 * value_x4 + _this4._11 * value_y4 + _this4._21) / w4;
		p1 = new kha_math_FastVector2(x5,y5);
		var _this5 = this.transformations[this.transformations.length - 1];
		var value_x5 = x - strength / 2;
		var value_y5 = y + strength / 2;
		var w5 = _this5._02 * value_x5 + _this5._12 * value_y5 + _this5._22;
		var x6 = (_this5._00 * value_x5 + _this5._10 * value_y5 + _this5._20) / w5;
		var y6 = (_this5._01 * value_x5 + _this5._11 * value_y5 + _this5._21) / w5;
		p2 = new kha_math_FastVector2(x6,y6);
		var _this6 = this.transformations[this.transformations.length - 1];
		var value_x6 = x + strength / 2;
		var value_y6 = y + strength / 2;
		var w6 = _this6._02 * value_x6 + _this6._12 * value_y6 + _this6._22;
		var x7 = (_this6._00 * value_x6 + _this6._10 * value_y6 + _this6._20) / w6;
		var y7 = (_this6._01 * value_x6 + _this6._11 * value_y6 + _this6._21) / w6;
		p3 = new kha_math_FastVector2(x7,y7);
		var _this7 = this.transformations[this.transformations.length - 1];
		var value_x7 = x + strength / 2;
		var value_y7 = y + height - strength / 2;
		var w7 = _this7._02 * value_x7 + _this7._12 * value_y7 + _this7._22;
		var x8 = (_this7._00 * value_x7 + _this7._10 * value_y7 + _this7._20) / w7;
		var y8 = (_this7._01 * value_x7 + _this7._11 * value_y7 + _this7._21) / w7;
		p4 = new kha_math_FastVector2(x8,y8);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this8 = this.transformations[this.transformations.length - 1];
		var value_x8 = x - strength / 2;
		var value_y8 = y + height + strength / 2;
		var w8 = _this8._02 * value_x8 + _this8._12 * value_y8 + _this8._22;
		var x9 = (_this8._00 * value_x8 + _this8._10 * value_y8 + _this8._20) / w8;
		var y9 = (_this8._01 * value_x8 + _this8._11 * value_y8 + _this8._21) / w8;
		p1 = new kha_math_FastVector2(x9,y9);
		var _this9 = this.transformations[this.transformations.length - 1];
		var value_x9 = x - strength / 2;
		var value_y9 = y + height - strength / 2;
		var w9 = _this9._02 * value_x9 + _this9._12 * value_y9 + _this9._22;
		var x10 = (_this9._00 * value_x9 + _this9._10 * value_y9 + _this9._20) / w9;
		var y10 = (_this9._01 * value_x9 + _this9._11 * value_y9 + _this9._21) / w9;
		p2 = new kha_math_FastVector2(x10,y10);
		var _this10 = this.transformations[this.transformations.length - 1];
		var value_x10 = x + width + strength / 2;
		var value_y10 = y + height - strength / 2;
		var w10 = _this10._02 * value_x10 + _this10._12 * value_y10 + _this10._22;
		var x11 = (_this10._00 * value_x10 + _this10._10 * value_y10 + _this10._20) / w10;
		var y11 = (_this10._01 * value_x10 + _this10._11 * value_y10 + _this10._21) / w10;
		p3 = new kha_math_FastVector2(x11,y11);
		var _this11 = this.transformations[this.transformations.length - 1];
		var value_x11 = x + width + strength / 2;
		var value_y11 = y + height + strength / 2;
		var w11 = _this11._02 * value_x11 + _this11._12 * value_y11 + _this11._22;
		var x12 = (_this11._00 * value_x11 + _this11._10 * value_y11 + _this11._20) / w11;
		var y12 = (_this11._01 * value_x11 + _this11._11 * value_y11 + _this11._21) / w11;
		p4 = new kha_math_FastVector2(x12,y12);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this12 = this.transformations[this.transformations.length - 1];
		var value_x12 = x + width - strength / 2;
		var value_y12 = y + height - strength / 2;
		var w12 = _this12._02 * value_x12 + _this12._12 * value_y12 + _this12._22;
		var x13 = (_this12._00 * value_x12 + _this12._10 * value_y12 + _this12._20) / w12;
		var y13 = (_this12._01 * value_x12 + _this12._11 * value_y12 + _this12._21) / w12;
		p1 = new kha_math_FastVector2(x13,y13);
		var _this13 = this.transformations[this.transformations.length - 1];
		var value_x13 = x + width - strength / 2;
		var value_y13 = y + strength / 2;
		var w13 = _this13._02 * value_x13 + _this13._12 * value_y13 + _this13._22;
		var x14 = (_this13._00 * value_x13 + _this13._10 * value_y13 + _this13._20) / w13;
		var y14 = (_this13._01 * value_x13 + _this13._11 * value_y13 + _this13._21) / w13;
		p2 = new kha_math_FastVector2(x14,y14);
		var _this14 = this.transformations[this.transformations.length - 1];
		var value_x14 = x + width + strength / 2;
		var value_y14 = y + strength / 2;
		var w14 = _this14._02 * value_x14 + _this14._12 * value_y14 + _this14._22;
		var x15 = (_this14._00 * value_x14 + _this14._10 * value_y14 + _this14._20) / w14;
		var y15 = (_this14._01 * value_x14 + _this14._11 * value_y14 + _this14._21) / w14;
		p3 = new kha_math_FastVector2(x15,y15);
		var _this15 = this.transformations[this.transformations.length - 1];
		var value_x15 = x + width + strength / 2;
		var value_y15 = y + height - strength / 2;
		var w15 = _this15._02 * value_x15 + _this15._12 * value_y15 + _this15._22;
		var x16 = (_this15._00 * value_x15 + _this15._10 * value_y15 + _this15._20) / w15;
		var y16 = (_this15._01 * value_x15 + _this15._11 * value_y15 + _this15._21) / w15;
		p4 = new kha_math_FastVector2(x16,y16);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x;
		var value_y = y + height;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1_x = x1;
		var p1_y = y1;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x;
		var value_y1 = y;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2_x = x2;
		var p2_y = y2;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x + width;
		var value_y2 = y;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3_x = x3;
		var p3_y = y3;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_x3 = x + width;
		var value_y3 = y + height;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var p4_x = x4;
		var p4_y = y4;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformations.length - 1]);
	}
	,drawCharacters: function(text,start,length,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawCharacters(text,start,length,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformations.length - 1]);
	}
	,get_font: function() {
		return this.myFont;
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var vec;
		if(y2 == y1) {
			vec = new kha_math_FastVector2(0,-1);
		} else {
			vec = new kha_math_FastVector2(1,-(x2 - x1) / (y2 - y1));
		}
		vec.set_length(strength);
		var p1 = new kha_math_FastVector2(x1 + 0.5 * vec.x,y1 + 0.5 * vec.y);
		var p2 = new kha_math_FastVector2(x2 + 0.5 * vec.x,y2 + 0.5 * vec.y);
		var p3 = new kha_math_FastVector2(p1.x - vec.x,p1.y - vec.y);
		var p4 = new kha_math_FastVector2(p2.x - vec.x,p2.y - vec.y);
		var _this = this.transformations[this.transformations.length - 1];
		var w = _this._02 * p1.x + _this._12 * p1.y + _this._22;
		var x = (_this._00 * p1.x + _this._10 * p1.y + _this._20) / w;
		var y = (_this._01 * p1.x + _this._11 * p1.y + _this._21) / w;
		p1 = new kha_math_FastVector2(x,y);
		var _this1 = this.transformations[this.transformations.length - 1];
		var w1 = _this1._02 * p2.x + _this1._12 * p2.y + _this1._22;
		var x3 = (_this1._00 * p2.x + _this1._10 * p2.y + _this1._20) / w1;
		var y3 = (_this1._01 * p2.x + _this1._11 * p2.y + _this1._21) / w1;
		p2 = new kha_math_FastVector2(x3,y3);
		var _this2 = this.transformations[this.transformations.length - 1];
		var w2 = _this2._02 * p3.x + _this2._12 * p3.y + _this2._22;
		var x4 = (_this2._00 * p3.x + _this2._10 * p3.y + _this2._20) / w2;
		var y4 = (_this2._01 * p3.x + _this2._11 * p3.y + _this2._21) / w2;
		p3 = new kha_math_FastVector2(x4,y4);
		var _this3 = this.transformations[this.transformations.length - 1];
		var w3 = _this3._02 * p4.x + _this3._12 * p4.y + _this3._22;
		var x5 = (_this3._00 * p4.x + _this3._10 * p4.y + _this3._20) / w3;
		var y5 = (_this3._01 * p4.x + _this3._11 * p4.y + _this3._21) / w3;
		p4 = new kha_math_FastVector2(x5,y5);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3.x,p3.y,p2.x,p2.y,p4.x,p4.y);
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_x = x1;
		var value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1_x = x;
		var p1_y = y;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_x1 = x2;
		var value_y1 = y2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x4 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y4 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2_x = x4;
		var p2_y = y4;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_x2 = x3;
		var value_y2 = y3;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x5 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y5 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3_x = x5;
		var p3_y = y5;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
	}
	,myImageScaleQuality: null
	,get_imageScaleQuality: function() {
		return this.myImageScaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		this.imagePainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		this.textPainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		return this.myImageScaleQuality = value;
	}
	,myMipmapScaleQuality: null
	,get_mipmapScaleQuality: function() {
		return this.myMipmapScaleQuality;
	}
	,set_mipmapScaleQuality: function(value) {
		this.imagePainter.setBilinearMipmapFilter(value == kha_graphics2_ImageScaleQuality.High);
		return this.myMipmapScaleQuality = value;
	}
	,setPipeline: function(pipeline) {
		this.flush();
		this.imagePainter.set_pipeline(pipeline);
		this.coloredPainter.set_pipeline(pipeline);
		this.textPainter.set_pipeline(pipeline);
		if(pipeline != null) {
			this.g.setPipeline(pipeline);
		}
	}
	,scissor: function(x,y,width,height) {
		this.flush();
		this.g.scissor(x,y,width,height);
	}
	,disableScissor: function() {
		this.flush();
		this.g.disableScissor();
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(kha_graphics4_ColoredShaderPainter.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(kha_graphics4_ColoredShaderPainter.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
	}
	,drawVideoInternal: function(video,x,y,width,height) {
	}
	,drawVideo: function(video,x,y,width,height) {
		this.setPipeline(kha_graphics4_Graphics2.videoPipeline);
		this.drawVideoInternal(video,x,y,width,height);
		this.setPipeline(null);
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Uint32Array(indexCount);
	this._data = this1;
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = "kha.graphics4.IndexBuffer";
kha_graphics4_IndexBuffer.prototype = {
	buffer: null
	,_data: null
	,mySize: null
	,usage: null
	,'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start,start + count);
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(this._data) : this._data;
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_MipMapFilter = $hxEnums["kha.graphics4.MipMapFilter"] = { __ename__ : "kha.graphics4.MipMapFilter", __constructs__ : ["NoMipFilter","PointMipFilter","LinearMipFilter"]
	,NoMipFilter: {_hx_index:0,__enum__:"kha.graphics4.MipMapFilter",toString:$estr}
	,PointMipFilter: {_hx_index:1,__enum__:"kha.graphics4.MipMapFilter",toString:$estr}
	,LinearMipFilter: {_hx_index:2,__enum__:"kha.graphics4.MipMapFilter",toString:$estr}
};
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = kha_graphics4_CullMode.None;
	this.depthWrite = false;
	this.depthMode = kha_graphics4_CompareMode.Always;
	this.stencilMode = kha_graphics4_CompareMode.Always;
	this.stencilBothPass = kha_graphics4_StencilAction.Keep;
	this.stencilDepthFail = kha_graphics4_StencilAction.Keep;
	this.stencilFail = kha_graphics4_StencilAction.Keep;
	this.stencilReferenceValue = kha_graphics4_StencilValue.Static(0);
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.blendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.blendOperation = kha_graphics4_BlendingOperation.Add;
	this.alphaBlendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.alphaBlendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.alphaBlendOperation = kha_graphics4_BlendingOperation.Add;
	this.colorWriteMasksRed = [];
	this.colorWriteMasksGreen = [];
	this.colorWriteMasksBlue = [];
	this.colorWriteMasksAlpha = [];
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksRed.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksGreen.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksBlue.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.colorWriteMasksAlpha.push(true);
	this.conservativeRasterization = false;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = "kha.graphics4.PipelineStateBase";
kha_graphics4_PipelineStateBase.prototype = {
	inputLayout: null
	,vertexShader: null
	,fragmentShader: null
	,geometryShader: null
	,tessellationControlShader: null
	,tessellationEvaluationShader: null
	,cullMode: null
	,depthWrite: null
	,depthMode: null
	,stencilMode: null
	,stencilBothPass: null
	,stencilDepthFail: null
	,stencilFail: null
	,stencilReferenceValue: null
	,stencilReadMask: null
	,stencilWriteMask: null
	,blendSource: null
	,blendDestination: null
	,blendOperation: null
	,alphaBlendSource: null
	,alphaBlendDestination: null
	,alphaBlendOperation: null
	,colorWriteMasksRed: null
	,colorWriteMasksGreen: null
	,colorWriteMasksBlue: null
	,colorWriteMasksAlpha: null
	,set_colorWriteMask: function(value) {
		var value1 = this.colorWriteMasksAlpha[0] = value;
		var value2 = this.colorWriteMasksGreen[0] = value1;
		var value3 = this.colorWriteMasksBlue[0] = value2;
		return this.colorWriteMasksRed[0] = value3;
	}
	,get_colorWriteMaskRed: function() {
		return this.colorWriteMasksRed[0];
	}
	,set_colorWriteMaskRed: function(value) {
		return this.colorWriteMasksRed[0] = value;
	}
	,get_colorWriteMaskGreen: function() {
		return this.colorWriteMasksGreen[0];
	}
	,set_colorWriteMaskGreen: function(value) {
		return this.colorWriteMasksGreen[0] = value;
	}
	,get_colorWriteMaskBlue: function() {
		return this.colorWriteMasksBlue[0];
	}
	,set_colorWriteMaskBlue: function(value) {
		return this.colorWriteMasksBlue[0] = value;
	}
	,get_colorWriteMaskAlpha: function() {
		return this.colorWriteMasksAlpha[0];
	}
	,set_colorWriteMaskAlpha: function(value) {
		return this.colorWriteMasksAlpha[0] = value;
	}
	,conservativeRasterization: null
	,__class__: kha_graphics4_PipelineStateBase
	,__properties__: {set_colorWriteMaskAlpha:"set_colorWriteMaskAlpha",get_colorWriteMaskAlpha:"get_colorWriteMaskAlpha",set_colorWriteMaskBlue:"set_colorWriteMaskBlue",get_colorWriteMaskBlue:"get_colorWriteMaskBlue",set_colorWriteMaskGreen:"set_colorWriteMaskGreen",get_colorWriteMaskGreen:"get_colorWriteMaskGreen",set_colorWriteMaskRed:"set_colorWriteMaskRed",get_colorWriteMaskRed:"get_colorWriteMaskRed",set_colorWriteMask:"set_colorWriteMask"}
};
var kha_graphics4_PipelineState = function() {
	this.program = null;
	kha_graphics4_PipelineStateBase.call(this);
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = "kha.graphics4.PipelineState";
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	program: null
	,textures: null
	,textureValues: null
	,'delete': function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
	}
	,compile: function() {
		if(this.program != null) {
			kha_SystemImpl.gl.deleteProgram(this.program);
		}
		this.program = kha_SystemImpl.gl.createProgram();
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = structure.elements;
			while(_g2 < _g11.length) {
				var element = _g11[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == 4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g = 0;
		var _g1 = this.textureValues.length;
		while(_g < _g1) {
			var index = _g++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMasksRed[0],this.colorWriteMasksGreen[0],this.colorWriteMasksBlue[0],this.colorWriteMasksAlpha[0]);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highp = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338);
		var highpSupported = highp.precision != 0;
		var files = shader.files;
		var _g = 0;
		var _g1 = files.length;
		while(_g < _g1) {
			var i = _g++;
			if(kha_SystemImpl.gl2) {
				if(files[i].indexOf("-webgl2") >= 0 || files[i].indexOf("runtime-string") >= 0) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			} else {
				if(!highpSupported && (files[i].indexOf("-relaxed") >= 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
				if(highpSupported && (files[i].indexOf("-relaxed") < 0 || files[i].indexOf("runtime-string") >= 0)) {
					kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
					break;
				}
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		if(location == null) {
			haxe_Log.trace("Warning: Uniform " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 92, className : "kha.graphics4.PipelineState", methodName : "getConstantLocation"});
		}
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,i);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			if(location == null) {
				haxe_Log.trace("Warning: Sampler " + name + " not found.",{ fileName : "kha/graphics4/PipelineState.hx", lineNumber : 111, className : "kha.graphics4.PipelineState", methodName : "getTextureUnit"});
			}
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g = 0;
		var _g1 = this.textures.length;
		while(_g < _g1) {
			var index = _g++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilAction = $hxEnums["kha.graphics4.StencilAction"] = { __ename__ : "kha.graphics4.StencilAction", __constructs__ : ["Keep","Zero","Replace","Increment","IncrementWrap","Decrement","DecrementWrap","Invert"]
	,Keep: {_hx_index:0,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Zero: {_hx_index:1,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Replace: {_hx_index:2,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Increment: {_hx_index:3,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,IncrementWrap: {_hx_index:4,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Decrement: {_hx_index:5,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,DecrementWrap: {_hx_index:6,__enum__:"kha.graphics4.StencilAction",toString:$estr}
	,Invert: {_hx_index:7,__enum__:"kha.graphics4.StencilAction",toString:$estr}
};
var kha_graphics4_StencilValue = $hxEnums["kha.graphics4.StencilValue"] = { __ename__ : "kha.graphics4.StencilValue", __constructs__ : ["Dynamic","Static"]
	,Dynamic: {_hx_index:0,__enum__:"kha.graphics4.StencilValue",toString:$estr}
	,Static: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"kha.graphics4.StencilValue",toString:$estr}; },$_.__params__ = ["value"],$_)
};
var kha_graphics4_TessellationControlShader = function(source,file) {
};
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = "kha.graphics4.TessellationControlShader";
kha_graphics4_TessellationControlShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TessellationControlShader
};
var kha_graphics4_TessellationEvaluationShader = function(source,file) {
};
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = "kha.graphics4.TessellationEvaluationShader";
kha_graphics4_TessellationEvaluationShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TessellationEvaluationShader
};
var kha_graphics4_TextureAddressing = $hxEnums["kha.graphics4.TextureAddressing"] = { __ename__ : "kha.graphics4.TextureAddressing", __constructs__ : ["Repeat","Mirror","Clamp"]
	,Repeat: {_hx_index:0,__enum__:"kha.graphics4.TextureAddressing",toString:$estr}
	,Mirror: {_hx_index:1,__enum__:"kha.graphics4.TextureAddressing",toString:$estr}
	,Clamp: {_hx_index:2,__enum__:"kha.graphics4.TextureAddressing",toString:$estr}
};
var kha_graphics4_TextureFilter = $hxEnums["kha.graphics4.TextureFilter"] = { __ename__ : "kha.graphics4.TextureFilter", __constructs__ : ["PointFilter","LinearFilter","AnisotropicFilter"]
	,PointFilter: {_hx_index:0,__enum__:"kha.graphics4.TextureFilter",toString:$estr}
	,LinearFilter: {_hx_index:1,__enum__:"kha.graphics4.TextureFilter",toString:$estr}
	,AnisotropicFilter: {_hx_index:2,__enum__:"kha.graphics4.TextureFilter",toString:$estr}
};
var kha_graphics4_TextureFormat = $hxEnums["kha.graphics4.TextureFormat"] = { __ename__ : "kha.graphics4.TextureFormat", __constructs__ : ["RGBA32","L8","RGBA128","DEPTH16","RGBA64","A32","A16"]
	,RGBA32: {_hx_index:0,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,L8: {_hx_index:1,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,RGBA128: {_hx_index:2,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,DEPTH16: {_hx_index:3,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,RGBA64: {_hx_index:4,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,A32: {_hx_index:5,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
	,A16: {_hx_index:6,__enum__:"kha.graphics4.TextureFormat",toString:$estr}
};
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = "kha.graphics4.TextureUnit";
var kha_graphics4_Usage = $hxEnums["kha.graphics4.Usage"] = { __ename__ : "kha.graphics4.Usage", __constructs__ : ["StaticUsage","DynamicUsage","ReadableUsage"]
	,StaticUsage: {_hx_index:0,__enum__:"kha.graphics4.Usage",toString:$estr}
	,DynamicUsage: {_hx_index:1,__enum__:"kha.graphics4.Usage",toString:$estr}
	,ReadableUsage: {_hx_index:2,__enum__:"kha.graphics4.Usage",toString:$estr}
};
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		switch(element.data) {
		case 0:
			this.myStride += 4;
			break;
		case 1:
			this.myStride += 8;
			break;
		case 2:
			this.myStride += 12;
			break;
		case 3:
			this.myStride += 16;
			break;
		case 4:
			this.myStride += 64;
			break;
		}
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this._data = this1;
	this.sizes = [];
	this.offsets = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g2 = 0;
	var _g3 = structure.elements;
	while(_g2 < _g3.length) {
		var element1 = _g3[_g2];
		++_g2;
		var size;
		switch(element1.data) {
		case 0:
			size = 1;
			break;
		case 1:
			size = 2;
			break;
		case 2:
			size = 3;
			break;
		case 3:
			size = 4;
			break;
		case 4:
			size = 16;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		switch(element1.data) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = "kha.graphics4.VertexBuffer";
kha_graphics4_VertexBuffer.prototype = {
	buffer: null
	,_data: null
	,mySize: null
	,myStride: null
	,sizes: null
	,offsets: null
	,usage: null
	,instanceDataStepRate: null
	,'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		if(start == null) {
			start = 0;
		}
		if(count == null) {
			count = this.mySize;
		}
		return this._data.subarray(start * this.stride(),(start + count) * this.stride());
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this._data,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,count: function() {
		return this.mySize;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl2 ? true : kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g = 0;
		var _g1 = this.sizes.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						if(kha_SystemImpl.gl2) {
							kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
						} else {
							ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
						}
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],5126,false,this.myStride,this.offsets[i]);
				if(ext) {
					if(kha_SystemImpl.gl2) {
						kha_SystemImpl.gl.vertexAttribDivisor(offset + attributesOffset,this.instanceDataStepRate);
					} else {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = "kha.graphics4.VertexElement";
kha_graphics4_VertexElement.prototype = {
	name: null
	,data: null
	,__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = "kha.graphics4.VertexShader";
kha_graphics4_VertexShader.fromSource = function(source) {
	var shader = new kha_graphics4_VertexShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_VertexShader.prototype = {
	sources: null
	,type: null
	,shader: null
	,files: null
	,'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.sources = null;
	}
	,__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
	this.instanced = false;
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = "kha.graphics4.VertexStructure";
kha_graphics4_VertexStructure.prototype = {
	elements: null
	,instanced: null
	,add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,byteSize: function() {
		var byteSize = 0;
		var _g = 0;
		var _g1 = this.elements.length;
		while(_g < _g1) {
			var i = _g++;
			byteSize += this.dataByteSize(this.elements[i].data);
		}
		return byteSize;
	}
	,dataByteSize: function(data) {
		switch(data) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		}
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_graphics5_Graphics = function() { };
$hxClasses["kha.graphics5.Graphics"] = kha_graphics5_Graphics;
kha_graphics5_Graphics.__name__ = "kha.graphics5.Graphics";
kha_graphics5_Graphics.prototype = {
	renderTargetsInvertedY: null
	,begin: null
	,end: null
	,swapBuffers: null
	,__class__: kha_graphics5_Graphics
};
var kha_graphics5_RenderTarget = function() { };
$hxClasses["kha.graphics5.RenderTarget"] = kha_graphics5_RenderTarget;
kha_graphics5_RenderTarget.__name__ = "kha.graphics5.RenderTarget";
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(index,id) {
	if(id == null) {
		id = "unknown";
	}
	if(index == null) {
		index = 0;
	}
	this.index = index;
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[index] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = "kha.input.Gamepad";
kha_input_Gamepad.get = function(index) {
	if(index == null) {
		index = 0;
	}
	if(index >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[index];
};
kha_input_Gamepad.notifyOnConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		kha_input_Gamepad.connectListeners.push(connectListener);
	}
	if(disconnectListener != null) {
		kha_input_Gamepad.disconnectListeners.push(disconnectListener);
	}
};
kha_input_Gamepad.removeConnect = function(connectListener,disconnectListener) {
	if(connectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.connectListeners,connectListener);
	}
	if(disconnectListener != null) {
		HxOverrides.remove(kha_input_Gamepad.disconnectListeners,disconnectListener);
	}
};
kha_input_Gamepad.sendConnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = true;
	var _g = 0;
	var _g1 = kha_input_Gamepad.connectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.sendDisconnectEvent = function(index) {
	kha_input_Gamepad.instances[index].connected = false;
	var _g = 0;
	var _g1 = kha_input_Gamepad.disconnectListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(index);
	}
};
kha_input_Gamepad.prototype = {
	index: null
	,notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,axisListeners: null
	,buttonListeners: null
	,id: null
	,connected: null
	,get_id: function() {
		return kha_SystemImpl.getGamepadId(this.index);
	}
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
	,__properties__: {get_id:"get_id"}
};
var kha_network_Controller = function() {
	this.__id = kha_network_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.network.Controller"] = kha_network_Controller;
kha_network_Controller.__name__ = "kha.network.Controller";
kha_network_Controller.prototype = {
	__id: null
	,_inputBufferIndex: null
	,_inputBuffer: null
	,_id: function() {
		return this.__id;
	}
	,_receive: function(bytes) {
	}
	,__class__: kha_network_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_network_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	this.pressListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = "kha.input.Keyboard";
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.__super__ = kha_network_Controller;
kha_input_Keyboard.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
		if(pressListener != null) {
			this.pressListeners.push(pressListener);
		}
	}
	,remove: function(downListener,upListener,pressListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
		if(pressListener != null) {
			HxOverrides.remove(this.pressListeners,pressListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,downListeners: null
	,upListeners: null
	,pressListeners: null
	,sendDownEvent: function(code) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,0);
			bytes.b[4] = code;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendUpEvent: function(code) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,1);
			bytes.b[4] = code;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(code);
		}
	}
	,sendPressEvent: function(char) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
			bytes.setInt32(0,2);
			bytes.b[4] = HxOverrides.cca(char,0);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.pressListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(char);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.b[4];
			this.sendDownEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input01 = bytes.b[4];
			this.sendUpEvent(input01);
			return;
		}
		if(funcindex == 2) {
			var code = bytes.b[4];
			var input02 = String.fromCodePoint(code);
			this.sendPressEvent(input02);
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_network_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = "kha.input.Mouse";
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.__super__ = kha_network_Controller;
kha_input_Mouse.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 110, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 114, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 124, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 128, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 138, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 142, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 152, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 156, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 166, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "kha/input/Mouse.hx", lineNumber : 170, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(change,error) {
	}
	,removeFromLockChange: function(change,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,windowWheelListeners: null
	,windowLeaveListeners: null
	,sendLeaveEvent: function(windowId) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.getInt32(4);
			this.sendLeaveEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input01 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			var input2 = bytes.getInt32(12);
			var input3 = bytes.getInt32(16);
			this.sendDownEvent(input01,input1,input2,input3);
			return;
		}
		if(funcindex == 2) {
			var input02 = bytes.getInt32(4);
			var input11 = bytes.getInt32(8);
			var input21 = bytes.getInt32(12);
			var input31 = bytes.getInt32(16);
			this.sendUpEvent(input02,input11,input21,input31);
			return;
		}
		if(funcindex == 3) {
			var input03 = bytes.getInt32(4);
			var input12 = bytes.getInt32(8);
			var input22 = bytes.getInt32(12);
			var input32 = bytes.getInt32(16);
			var input4 = bytes.getInt32(20);
			this.sendMoveEvent(input03,input12,input22,input32,input4);
			return;
		}
		if(funcindex == 4) {
			var input04 = bytes.getInt32(4);
			var input13 = bytes.getInt32(8);
			this.sendWheelEvent(input04,input13);
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = "kha.input.MouseImpl";
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	lock: function() {
		kha_SystemImpl.lockMouse();
	}
	,unlock: function() {
		kha_SystemImpl.unlockMouse();
	}
	,canLock: function() {
		return kha_SystemImpl.canLockMouse();
	}
	,isLocked: function() {
		return kha_SystemImpl.isMouseLocked();
	}
	,notifyOnLockChange: function(func,error) {
		kha_SystemImpl.notifyOfMouseLockChange(func,error);
	}
	,removeFromLockChange: function(func,error) {
		kha_SystemImpl.removeFromMouseLockChange(func,error);
	}
	,hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_Pen = function() {
	kha_input_Pen.instance = this;
};
$hxClasses["kha.input.Pen"] = kha_input_Pen;
kha_input_Pen.__name__ = "kha.input.Pen";
kha_input_Pen.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getPen(num);
};
kha_input_Pen.prototype = {
	notify: function(downListener,upListener,moveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener);
	}
	,remove: function(downListener,upListener,moveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener) {
		if(downListener != null && this.windowDownListeners != null) {
			if(windowId < this.windowDownListeners.length) {
				HxOverrides.remove(this.windowDownListeners[windowId],downListener);
			}
		}
		if(upListener != null && this.windowUpListeners != null) {
			if(windowId < this.windowUpListeners.length) {
				HxOverrides.remove(this.windowUpListeners[windowId],upListener);
			}
		}
		if(moveListener != null && this.windowMoveListeners != null) {
			if(windowId < this.windowMoveListeners.length) {
				HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
			}
		}
	}
	,windowDownListeners: null
	,windowUpListeners: null
	,windowMoveListeners: null
	,sendDownEvent: function(windowId,x,y,pressure) {
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	,sendUpEvent: function(windowId,x,y,pressure) {
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,pressure) {
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,pressure);
			}
		}
	}
	,__class__: kha_input_Pen
};
var kha_input_Sensor = function() {
	this.listeners = [];
};
$hxClasses["kha.input.Sensor"] = kha_input_Sensor;
kha_input_Sensor.__name__ = "kha.input.Sensor";
kha_input_Sensor.get = function(type) {
	switch(type._hx_index) {
	case 0:
		return kha_input_Sensor.accelerometer;
	case 1:
		return kha_input_Sensor.gyroscope;
	}
};
kha_input_Sensor._changed = function(type,x,y,z) {
	var sensor = kha_input_Sensor.get(type == 0 ? kha_input_SensorType.Accelerometer : kha_input_SensorType.Gyroscope);
	var _g = 0;
	var _g1 = sensor.listeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(x,y,z);
	}
};
kha_input_Sensor.prototype = {
	listeners: null
	,notify: function(listener) {
		this.listeners.push(listener);
	}
	,__class__: kha_input_Sensor
};
var kha_input_SensorType = $hxEnums["kha.input.SensorType"] = { __ename__ : "kha.input.SensorType", __constructs__ : ["Accelerometer","Gyroscope"]
	,Accelerometer: {_hx_index:0,__enum__:"kha.input.SensorType",toString:$estr}
	,Gyroscope: {_hx_index:1,__enum__:"kha.input.SensorType",toString:$estr}
};
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = "kha.input.Surface";
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,touchStartListeners: null
	,touchEndListeners: null
	,moveListeners: null
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.bytes = bytes;
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = "kha.internal.BytesBlob";
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.readF32 = function(i) {
	var sign = (i & -2147483648) == 0 ? 1 : -1;
	var exp = i >> 23 & 255;
	var man = i & 8388607;
	switch(exp) {
	case 0:
		return 0.0;
	case 255:
		if(man != 0) {
			return NaN;
		} else if(sign > 0) {
			return Infinity;
		} else {
			return -Infinity;
		}
		break;
	default:
		return sign * ((man + 8388608) / 8388608.0) * Math.pow(2,exp - 127);
	}
};
kha_internal_BytesBlob.bit = function(value,position) {
	var b = (value >>> position & 1) == 1;
	if(b) {
		var a = 3;
		++a;
		return true;
	} else {
		var c = 4;
		--c;
		return false;
	}
};
kha_internal_BytesBlob.toText = function(chars,length) {
	var value = "";
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		value += String.fromCodePoint(chars[i]);
	}
	return value;
};
kha_internal_BytesBlob.prototype = {
	bytes: null
	,sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,length: null
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value;
	}
	,readU8: function(position) {
		var byte = this.bytes.b[position];
		++position;
		return byte;
	}
	,readS8: function(position) {
		var byte = this.bytes.b[position];
		++position;
		var sign = (byte & 128) == 0 ? 1 : -1;
		byte &= 127;
		return sign * byte;
	}
	,readU16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return first * 256 + second;
	}
	,readU16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return second * 256 + first;
	}
	,readU32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
	}
	,readU32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readS16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		if(sign == -1) {
			return -32767 + first * 256 + second;
		} else {
			return first * 256 + second;
		}
	}
	,readS16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		var sign = (second & 128) == 0 ? 1 : -1;
		second &= 127;
		position += 2;
		if(sign == -1) {
			return -32767 + second * 256 + first;
		} else {
			return second * 256 + first;
		}
	}
	,readS32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		} else {
			return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		}
	}
	,readS32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (fourth & 128) == 0 ? 1 : -1;
		fourth &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
		}
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readF32LE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32LE(position));
	}
	,readF32BE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32BE(position));
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,readUtf8Char: function(position) {
		if(position.value >= this.get_length()) {
			return -1;
		}
		var c = this.readU8(position.value);
		++position.value;
		var value = 0;
		if(!kha_internal_BytesBlob.bit(c,7)) {
			value = c;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && !kha_internal_BytesBlob.bit(c,5)) {
			var a = c & 31;
			var c2 = this.readU8(position.value);
			++position.value;
			var b = c2 & 63;
			value = a << 6 | b;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && !kha_internal_BytesBlob.bit(c,4)) {
			position.value += 2;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && kha_internal_BytesBlob.bit(c,4) && !kha_internal_BytesBlob.bit(c,3)) {
			position.value += 3;
		}
		return value;
	}
	,readUtf8Block: function(buffer,position) {
		var bufferindex = 0;
		if(position.value >= this.get_length()) {
			return "";
		}
		while(bufferindex < 2000) {
			var c = this.readUtf8Char(position);
			if(c < 0) {
				break;
			}
			buffer[bufferindex] = c;
			++bufferindex;
		}
		return kha_internal_BytesBlob.toText(buffer,bufferindex);
	}
	,readUtf8String: function() {
		var this1 = new Array(2000);
		var buffer = this1;
		var text = "";
		var start = 0;
		if(this.get_length() >= 3 && this.bytes.b[0] == 239 && this.bytes.b[1] == 187 && this.bytes.b[2] == 191) {
			start = 3;
		}
		var position = { value : start};
		while(position.value < this.get_length()) text += this.readUtf8Block(buffer,position);
		return text;
	}
	,toBytes: function() {
		return this.bytes;
	}
	,unload: function() {
		this.bytes = null;
	}
	,__class__: kha_internal_BytesBlob
	,__properties__: {get_length:"get_length"}
};
var kha_internal_HdrFormat = function() {
};
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = "kha.internal.HdrFormat";
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 43, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var this1 = new Uint8Array(4);
	var rgbe = this1;
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var this2 = new Uint8Array(2);
	var buf = this2;
	var bufferLength = buffer.length;
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 59, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0] & 255;
			data[offset++] = rgbe[1] & 255;
			data[offset++] = rgbe[2] & 255;
			data[offset++] = rgbe[3] & 255;
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 74, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			var this3 = new Uint8Array(4 * scanline_width);
			scanline_buffer = this3;
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			ptr_end = (i + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 88, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 95, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1] & 255;
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 106, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1] & 255;
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 112, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = scanline_width;
		while(_g1 < _g2) {
			var i1 = _g1++;
			data[offset] = scanline_buffer[i1] & 255;
			data[offset + 1] = scanline_buffer[i1 + scanline_width] & 255;
			data[offset + 2] = scanline_buffer[i1 + 2 * scanline_width] & 255;
			data[offset + 3] = scanline_buffer[i1 + 3 * scanline_width] & 255;
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCodePoint(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var exposure = 1.0;
	var gamma = 1.0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			exposure = parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "kha/internal/HdrFormat.hx", lineNumber : 175, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var this1 = new Uint8Array(width * height * 4);
	var data = this1;
	var scanline_width = width;
	var num_scanlines = height;
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,scanline_width,num_scanlines);
	var this2 = new Float32Array(width * height * 4);
	var floatData = this2;
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var e = data[offset + 3];
		var f = Math.pow(2.0,e - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
kha_internal_HdrFormat.prototype = {
	__class__: kha_internal_HdrFormat
};
var kha_js_AEAudioChannel = function(element) {
	this.stopped = false;
	this.element = element;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = "kha.js.AEAudioChannel";
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	element: null
	,stopped: null
	,play: function() {
		this.stopped = false;
		if(kha_SystemImpl.mobile) {
			if(kha_SystemImpl.insideInputEvent) {
				this.element.play();
				kha_SystemImpl.mobileAudioPlaying = true;
			} else if(kha_SystemImpl.mobileAudioPlaying) {
				this.element.play();
			} else {
				kha_js_AEAudioChannel.todo.push(this);
			}
		} else {
			this.element.play();
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			haxe_Log.trace((e instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/AEAudioChannel.hx", lineNumber : 39, className : "kha.js.AEAudioChannel", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
			this.stopped = true;
		} catch( e ) {
			haxe_Log.trace((e instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/AEAudioChannel.hx", lineNumber : 50, className : "kha.js.AEAudioChannel", methodName : "stop"});
		}
	}
	,length: null
	,get_length: function() {
		if(isFinite(this.element.duration)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,position: null
	,get_position: function() {
		return this.element.currentTime;
	}
	,get_volume: function() {
		return this.element.volume;
	}
	,set_volume: function(value) {
		return this.element.volume = value;
	}
	,finished: null
	,get_finished: function() {
		if(!this.stopped) {
			return this.get_position() >= this.get_length();
		} else {
			return true;
		}
	}
	,__class__: kha_js_AEAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = "kha.js.AudioElementAudio";
kha_js_AudioElementAudio._compile = function() {
};
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	this.bakedQuadCache = new kha_AlignedQuad();
	this.clipping = false;
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = "kha.js.CanvasGraphics";
kha_js_CanvasGraphics.stringWidth = function(font,text) {
	if(kha_js_CanvasGraphics.instance == null) {
		return 5 * text.length;
	} else {
		kha_js_CanvasGraphics.instance.set_font(font);
		return kha_js_CanvasGraphics.instance.canvas.measureText(text).width;
	}
};
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	canvas: null
	,webfont: null
	,myColor: null
	,scaleQuality: null
	,clipping: null
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.canvas.globalAlpha = this.get_opacity();
		this.canvas.drawImage((js_Boot.__cast(img , kha_CanvasImage)).image,x,y);
		this.canvas.globalAlpha = 1;
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( ex ) {
			var ex1 = (ex instanceof js__$Boot_HaxeError) ? ex.val : ex;
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,get_color: function() {
		return this.myColor;
	}
	,get_imageScaleQuality: function() {
		return this.scaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		if(value == kha_graphics2_ImageScaleQuality.Low) {
			this.canvas.mozImageSmoothingEnabled = false;
			this.canvas.webkitImageSmoothingEnabled = false;
			this.canvas.msImageSmoothingEnabled = false;
			this.canvas.imageSmoothingEnabled = false;
		} else {
			this.canvas.mozImageSmoothingEnabled = true;
			this.canvas.webkitImageSmoothingEnabled = true;
			this.canvas.msImageSmoothingEnabled = true;
			this.canvas.imageSmoothingEnabled = true;
		}
		return this.scaleQuality = value;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.rect(x,y,width,height);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,drawArc: function(cx,cy,radius,sAngle,eAngle,strength,ccw) {
		if(ccw == null) {
			ccw = false;
		}
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,sAngle,eAngle,ccw);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,drawCircle: function(cx,cy,radius,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		var eAngle = 2 * Math.PI;
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,0,eAngle,false);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,_drawArc: function(cx,cy,radius,sAngle,eAngle,strength,ccw) {
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,sAngle,eAngle,ccw);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillArc: function(cx,cy,radius,sAngle,eAngle,ccw) {
		if(ccw == null) {
			ccw = false;
		}
		this.canvas.beginPath();
		this.canvas.arc(cx,cy,radius,sAngle,eAngle,ccw);
		this.canvas.fill();
	}
	,fillCircle: function(cx,cy,radius) {
		this.canvas.beginPath();
		this.canvas.arc(cx,cy,radius,0,2 * Math.PI,false);
		this.canvas.fill();
	}
	,bakedQuadCache: null
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var ypos = y;
			var _g = 0;
			var _g1 = text.length;
			while(_g < _g1) {
				var i = _g++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(HxOverrides.cca(text,i)),xpos,ypos);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,drawCharacters: function(text,start,length,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var ypos = y;
			var _g = start;
			var _g1 = start + length;
			while(_g < _g1) {
				var i = _g++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(this.bakedQuadCache,kha_graphics2_Graphics.fontGlyphs.indexOf(text[i]),xpos,ypos);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,get_font: function() {
		return this.webfont;
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldWith = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.moveTo(0,0);
		this.canvas.stroke();
		this.canvas.lineWidth = oldWith;
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.canvas.beginPath();
		this.canvas.closePath();
		this.canvas.fill();
	}
	,scissor: function(x,y,width,height) {
		if(!this.clipping) {
			this.canvas.save();
			this.clipping = true;
		}
		this.canvas.beginPath();
		this.canvas.rect(x,y,width,height);
		this.canvas.clip();
	}
	,disableScissor: function() {
		if(this.clipping) {
			this.canvas.restore();
			this.clipping = false;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
		this.canvas.drawImage((js_Boot.__cast(video , kha_js_Video)).element,x,y,width,height);
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_Font = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.kravur = new kha_js_Font.Kravur(blob);
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = "kha.js.Font";
kha_js_Font.__interfaces__ = [kha_Resource];
kha_js_Font.fromBytes = function(bytes) {
	return new kha_js_Font(kha_internal_BytesBlob.fromBytes(bytes));
};
kha_js_Font.prototype = {
	kravur: null
	,images: null
	,height: function(fontSize) {
		return this.kravur._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this.kravur._get(fontSize).stringWidth(str);
	}
	,widthOfCharacters: function(fontSize,characters,start,length) {
		return this.kravur._get(fontSize).charactersWidth(characters,start,length);
	}
	,baseline: function(fontSize) {
		return this.kravur._get(fontSize).getBaselinePosition();
	}
	,getImage: function(fontSize,color) {
		var glyphs = kha_graphics2_Graphics.fontGlyphs;
		var imageIndex = fontSize * 10000 + glyphs.length;
		if(!this.images.h.hasOwnProperty(imageIndex)) {
			var this1 = this.images;
			var v = new haxe_ds_IntMap();
			this1.h[imageIndex] = v;
		}
		if(!this.images.h[imageIndex].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g = 0;
			var _g1 = bytes.length;
			while(_g < _g1) {
				var i = _g++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[imageIndex].h[color] = img;
			return img;
		}
		return this.images.h[imageIndex].h[color];
	}
	,unload: function() {
		this.kravur = null;
		this.images = null;
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = "kha.js.MobileWebAudio";
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e2 ) {
		var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = "kha.js.MobileWebAudioChannel";
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	buffer: null
	,loop: null
	,source: null
	,gain: null
	,startTime: null
	,pauseTime: null
	,paused: null
	,stopped: null
	,createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,pause: function() {
		this.pauseTime = kha_js_MobileWebAudio._context.currentTime - this.startTime;
		this.paused = true;
		this.source.stop();
	}
	,stop: function() {
		this.paused = false;
		this.stopped = true;
		this.source.stop();
	}
	,length: null
	,get_length: function() {
		return this.source.buffer.duration;
	}
	,position: null
	,get_position: function() {
		if(this.stopped) {
			return this.get_length();
		}
		if(this.paused) {
			return this.pauseTime;
		} else {
			return kha_js_MobileWebAudio._context.currentTime - this.startTime;
		}
	}
	,get_volume: function() {
		return this.gain.gain.value;
	}
	,set_volume: function(value) {
		return this.gain.gain.value = value;
	}
	,finished: null
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_js_MobileWebAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_js_MobileWebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			failed({ url : filename, error : "Audio format not supported"});
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = "kha.js.MobileWebAudioSound";
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	_buffer: null
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done,failed) {
	kha_Sound.call(this);
	this.done = done;
	this.failed = failed;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = "kha.js.Sound";
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	filenames: null
	,done: null
	,failed: null
	,element: null
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		this.failed({ url : this.element.src});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_Video = function() {
	kha_Video.call(this);
};
$hxClasses["kha.js.Video"] = kha_js_Video;
kha_js_Video.__name__ = "kha.js.Video";
kha_js_Video.fromElement = function(element) {
	var video = new kha_js_Video();
	video.element = element;
	if(kha_SystemImpl.gl != null) {
		video.texture = kha_Image.fromVideo(video);
	}
	return video;
};
kha_js_Video.fromFile = function(filenames,done) {
	var video = new kha_js_Video();
	video.done = done;
	video.element = window.document.createElement("video");
	video.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(video.element.canPlayType("video/webm") != "" && StringTools.endsWith(filename,".webm")) {
			video.filenames.push(filename);
		}
		if(video.element.canPlayType("video/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			video.filenames.push(filename);
		}
	}
	video.element.addEventListener("error",$bind(video,video.errorListener),false);
	video.element.addEventListener("canplaythrough",$bind(video,video.canPlayThroughListener),false);
	video.element.preload = "auto";
	video.element.src = video.filenames[0];
};
kha_js_Video.__super__ = kha_Video;
kha_js_Video.prototype = $extend(kha_Video.prototype,{
	filenames: null
	,element: null
	,done: null
	,texture: null
	,width: function() {
		return this.element.videoWidth;
	}
	,height: function() {
		return this.element.videoHeight;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
		try {
			this.element.loop = loop;
			this.element.play();
		} catch( e ) {
			haxe_Log.trace((e instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/Video.hx", lineNumber : 64, className : "kha.js.Video", methodName : "play"});
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			haxe_Log.trace((e instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/Video.hx", lineNumber : 73, className : "kha.js.Video", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
		} catch( e ) {
			haxe_Log.trace((e instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "kha/js/Video.hx", lineNumber : 83, className : "kha.js.Video", methodName : "stop"});
		}
	}
	,getCurrentPos: function() {
		return Math.ceil(this.element.currentTime * 1000);
	}
	,get_position: function() {
		return Math.ceil(this.element.currentTime * 1000);
	}
	,set_position: function(value) {
		this.element.currentTime = value / 1000;
		return value;
	}
	,getLength: function() {
		if(isFinite(this.element.duration)) {
			return Math.floor(this.element.duration * 1000);
		} else {
			return -1;
		}
	}
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g = 0;
			var _g1 = this.filenames.length - 1;
			while(_g < _g1) {
				var i = _g++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "kha/js/Video.hx", lineNumber : 120, className : "kha.js.Video", methodName : "errorListener"});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_Image.fromVideo(this);
		}
		this.done(this);
	}
	,__class__: kha_js_Video
});
var kha_js_WebAudioSound = function(filename,done,failed) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		failed({ url : filename});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = "kha.js.WebAudioSound";
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var ch0 = buffer.getChannelData(0);
			var len = ch0.length;
			var this1 = new Float32Array(len * 2);
			_gthis.uncompressedData = this1;
			if(buffer.numberOfChannels == 1) {
				var idx = 0;
				var i = 0;
				var lidx = len * 2;
				var uncompressInner = function() {
				};
				uncompressInner = function() {
					var chk_len = idx + 11025;
					var next_chk = chk_len > lidx ? lidx : chk_len;
					while(idx < next_chk) {
						_gthis.uncompressedData[idx] = ch0[i];
						_gthis.uncompressedData[idx + 1] = ch0[i];
						idx += 2;
						i += 1;
					}
					if(idx < lidx) {
						window.setTimeout(uncompressInner,0);
					} else {
						_gthis.compressedData = null;
					}
				};
				uncompressInner();
				window.setTimeout(done,250);
			} else {
				var ch1 = buffer.getChannelData(1);
				var idx1 = 0;
				var i1 = 0;
				var lidx1 = len * 2;
				var uncompressInner1 = function() {
				};
				uncompressInner1 = function() {
					var chk_len1 = idx1 + 11025;
					var next_chk1 = chk_len1 > lidx1 ? lidx1 : chk_len1;
					while(idx1 < next_chk1) {
						_gthis.uncompressedData[idx1] = ch0[i1];
						_gthis.uncompressedData[idx1 + 1] = ch1[i1];
						idx1 += 2;
						i1 += 1;
					}
					if(idx1 < lidx1) {
						window.setTimeout(uncompressInner1,0);
					} else {
						_gthis.compressedData = null;
					}
				};
				uncompressInner1();
				window.setTimeout(done,250);
			}
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = "kha.js.graphics4.ConstantLocation";
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	value: null
	,type: null
	,__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	this.matrix3Cache = new Float32Array(9);
	this.matrixCache = new Float32Array(16);
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.colorMaskAlpha = true;
	this.colorMaskBlue = true;
	this.colorMaskGreen = true;
	this.colorMaskRed = true;
	this.depthMask = false;
	this.depthTest = false;
	this.currentPipeline = null;
	this.renderTarget = renderTarget;
	this.init();
	if(kha_SystemImpl.gl2) {
		this.instancedExtension = true;
	} else {
		this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
	}
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = "kha.js.graphics4.Graphics";
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor._hx_index) {
	case 1:
		return 1;
	case 0:case 2:
		return 0;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op._hx_index) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	currentPipeline: null
	,depthTest: null
	,depthMask: null
	,colorMaskRed: null
	,colorMaskGreen: null
	,colorMaskBlue: null
	,colorMaskAlpha: null
	,indicesCount: null
	,renderTarget: null
	,renderTargetFrameBuffer: null
	,renderTargetTexture: null
	,isCubeMap: null
	,isDepthAttachment: null
	,instancedExtension: null
	,blendMinMaxExtension: null
	,init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = (this.renderTarget instanceof kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g = 0;
				var _g1 = additionalRenderTargets.length;
				while(_g < _g1) {
					var i = _g++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g2 = 0;
				var _g3 = additionalRenderTargets.length;
				while(_g2 < _g3) {
					var i1 = _g2++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i1 + 1);
				}
				if(kha_SystemImpl.gl2) {
					kha_SystemImpl.gl.drawBuffers(attachments);
				} else {
					kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
				}
			}
		}
	}
	,beginFace: function(face) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,this.isDepthAttachment ? 36096 : 36064,34069 + face,this.renderTargetTexture,0);
		kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
	}
	,beginEye: function(eye) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,null);
		if(eye == 0) {
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth() * 0.5 | 0,kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.viewport(kha_System.windowWidth() * 0.5 | 0,0,kha_System.windowWidth() * 0.5 | 0,kha_System.windowHeight());
		}
	}
	,end: function() {
	}
	,flush: function() {
	}
	,vsynced: function() {
		return true;
	}
	,refreshRate: function() {
		return 60;
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask |= 16384;
			kha_SystemImpl.gl.colorMask(true,true,true,true);
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		kha_SystemImpl.gl.colorMask(this.colorMaskRed,this.colorMaskGreen,this.colorMaskBlue,this.colorMaskAlpha);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,viewport: function(x,y,width,height) {
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.viewport(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.viewport(x,y,width,height);
		}
	}
	,scissor: function(x,y,width,height) {
		kha_SystemImpl.gl.enable(3089);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.scissor(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.scissor(x,y,width,height);
		}
	}
	,disableScissor: function() {
		kha_SystemImpl.gl.disable(3089);
	}
	,renderTargetsInvertedY: function() {
		return true;
	}
	,setDepthMode: function(write,mode) {
		switch(mode._hx_index) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == kha_graphics4_BlendingFactor.BlendOne && destination == kha_graphics4_BlendingFactor.BlendZero) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,createVertexBuffer: function(vertexCount,structure,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_VertexBuffer(vertexCount,structure,usage);
	}
	,setVertexBuffer: function(vertexBuffer) {
		(js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setVertexBuffers: function(vertexBuffers) {
		var offset = 0;
		var _g = 0;
		while(_g < vertexBuffers.length) {
			var vertexBuffer = vertexBuffers[_g];
			++_g;
			offset += (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(offset);
		}
	}
	,createIndexBuffer: function(indexCount,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_IndexBuffer(indexCount,usage);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureDepth: function(stage,texture) {
		(js_Boot.__cast(texture , kha_WebGLImage)).setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setTextureArray: function(unit,texture) {
	}
	,setVideoTexture: function(unit,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast((js_Boot.__cast(texture , kha_js_Video)).texture , kha_WebGLImage)).set((js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setImageTexture: function(unit,texture) {
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing._hx_index) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing._hx_index) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter._hx_index) {
		case 0:
			switch(mipmapFilter._hx_index) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter._hx_index) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == kha_graphics4_TextureFilter.AnisotropicFilter) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter._hx_index) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setTexture3DParameters: function(texunit,uAddressing,vAddressing,wAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
	}
	,setCubeMap: function(stage,cubeMap) {
		if(cubeMap == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(34067,null);
		} else {
			cubeMap.set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setCubeMapDepth: function(stage,cubeMap) {
		cubeMap.setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setCullMode: function(mode) {
		switch(mode._hx_index) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		pipe.set();
		this.colorMaskRed = pipe.colorWriteMasksRed[0];
		this.colorMaskGreen = pipe.colorWriteMasksGreen[0];
		this.colorMaskBlue = pipe.colorWriteMasksBlue[0];
		this.colorMaskAlpha = pipe.colorWriteMasksAlpha[0];
	}
	,setStencilReferenceValue: function(value) {
		kha_SystemImpl.gl.stencilFunc(this.convertCompareMode(this.currentPipeline.stencilMode),value,this.currentPipeline.stencilReadMask);
	}
	,setBool: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value ? 1 : 0);
	}
	,setInt: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2);
	}
	,setFloat3: function(location,value1,value2,value3) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3);
	}
	,setFloat4: function(location,value1,value2,value3,value4) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3,value4);
	}
	,setFloats: function(location,values) {
		var webglLocation = js_Boot.__cast(location , kha_js_graphics4_ConstantLocation);
		switch(webglLocation.type) {
		case 35664:
			kha_SystemImpl.gl.uniform2fv(webglLocation.value,values);
			break;
		case 35665:
			kha_SystemImpl.gl.uniform3fv(webglLocation.value,values);
			break;
		case 35666:
			kha_SystemImpl.gl.uniform4fv(webglLocation.value,values);
			break;
		case 35676:
			kha_SystemImpl.gl.uniformMatrix4fv(webglLocation.value,false,values);
			break;
		default:
			kha_SystemImpl.gl.uniform1fv(webglLocation.value,values);
		}
	}
	,setVector2: function(location,value) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y);
	}
	,setVector3: function(location,value) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z);
	}
	,setVector4: function(location,value) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z,value.w);
	}
	,matrixCache: null
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,matrix3Cache: null
	,setMatrix3: function(location,matrix) {
		this.matrix3Cache[0] = matrix._00;
		this.matrix3Cache[1] = matrix._01;
		this.matrix3Cache[2] = matrix._02;
		this.matrix3Cache[3] = matrix._10;
		this.matrix3Cache[4] = matrix._11;
		this.matrix3Cache[5] = matrix._12;
		this.matrix3Cache[6] = matrix._20;
		this.matrix3Cache[7] = matrix._21;
		this.matrix3Cache[8] = matrix._22;
		kha_SystemImpl.gl.uniformMatrix3fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrix3Cache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		var size = type == 5123 ? 2 : 4;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * size);
	}
	,convertStencilAction: function(action) {
		switch(action._hx_index) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,convertCompareMode: function(compareMode) {
		switch(compareMode._hx_index) {
		case 0:
			return 519;
		case 1:
			return 512;
		case 2:
			return 514;
		case 3:
			return 517;
		case 4:
			return 513;
		case 5:
			return 515;
		case 6:
			return 516;
		case 7:
			return 518;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == kha_graphics4_CompareMode.Always && bothPass == kha_graphics4_StencilAction.Keep && depthFail == kha_graphics4_StencilAction.Keep && stencilFail == kha_graphics4_StencilAction.Keep) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = this.convertCompareMode(compareMode);
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			switch(referenceValue._hx_index) {
			case 0:
				kha_SystemImpl.gl.stencilFunc(stencilFunc,0,readMask);
				break;
			case 1:
				var value = referenceValue.value;
				kha_SystemImpl.gl.stencilFunc(stencilFunc,value,readMask);
				break;
			}
		}
	}
	,drawIndexedVerticesInstanced: function(instanceCount,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		if(this.instancedRenderingAvailable()) {
			var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
			var typeSize = kha_SystemImpl.elementIndexUint == null ? 2 : 4;
			if(kha_SystemImpl.gl2) {
				kha_SystemImpl.gl.drawElementsInstanced(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			} else {
				this.instancedExtension.drawElementsInstancedANGLE(4,count == -1 ? this.indicesCount : count,type,start * typeSize,instanceCount);
			}
		}
	}
	,instancedRenderingAvailable: function() {
		return this.instancedExtension;
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = "kha.js.graphics4.Graphics2";
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	drawVideoInternal: function(video,x,y,width,height) {
		var v = js_Boot.__cast(video , kha_js_Video);
		this.drawScaledSubImage(v.texture,0,0,v.texture.get_width(),v.texture.get_height(),x,y,width,height);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = "kha.js.graphics4.TextureUnit";
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	value: null
	,__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = "kha.vr.VrInterface";
kha_vr_VrInterface.prototype = {
	GetSensorState: function() {
		return null;
	}
	,GetPredictedSensorState: function(time) {
		return null;
	}
	,WarpSwapBlack: function() {
	}
	,WarpSwapLoadingIcon: function() {
	}
	,WarpSwap: function(parms) {
	}
	,IsPresenting: function() {
		return false;
	}
	,IsVrEnabled: function() {
		return false;
	}
	,GetTimeInSeconds: function() {
		return 0.0;
	}
	,GetProjectionMatrix: function(eye) {
		return null;
	}
	,GetViewMatrix: function(eye) {
		return null;
	}
	,onVRRequestPresent: function() {
	}
	,onVRExitPresent: function() {
	}
	,onResetPose: function() {
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrHeight = 0;
	this.vrWidth = 0;
	this.height = 0;
	this.width = 0;
	this.rightViewMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.leftViewMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.rightProjectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.leftProjectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
	var displayEnabled = false;
	if(displayEnabled) {
		this.vrEnabled = true;
		this.getVRDisplays();
		haxe_Log.trace("Display enabled.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 39, className : "kha.js.vr.VrInterface", methodName : "new"});
	}
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = "kha.js.vr.VrInterface";
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	vrEnabled: null
	,vrDisplay: null
	,frameData: null
	,leftProjectionMatrix: null
	,rightProjectionMatrix: null
	,leftViewMatrix: null
	,rightViewMatrix: null
	,width: null
	,height: null
	,vrWidth: null
	,vrHeight: null
	,getVRDisplays: function() {
		var _gthis = this;
		var vrDisplayInstance = navigator.getVRDisplays();
		vrDisplayInstance.then(function(displays) {
			if(displays.length > 0) {
				_gthis.frameData = new VRFrameData();
				_gthis.vrDisplay = displays[0];
				_gthis.vrDisplay.depthNear = 0.1;
				_gthis.vrDisplay.depthFar = 1024.0;
				var leftEye = _gthis.vrDisplay.getEyeParameters("left");
				var rightEye = _gthis.vrDisplay.getEyeParameters("right");
				_gthis.width = kha_SystemImpl.khanvas.width;
				_gthis.height = kha_SystemImpl.khanvas.height;
				_gthis.vrWidth = Math.max(leftEye.renderWidth,rightEye.renderWidth) * 2 | 0;
				_gthis.vrHeight = Math.max(leftEye.renderHeight,rightEye.renderHeight) | 0;
			} else {
				haxe_Log.trace("There are no VR displays connected.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 59, className : "kha.js.vr.VrInterface", methodName : "getVRDisplays"});
			}
		});
	}
	,onVRRequestPresent: function() {
		var _gthis = this;
		try {
			this.vrDisplay.requestPresent([{ source : kha_SystemImpl.khanvas}]).then(function() {
				_gthis.onResize();
				_gthis.vrDisplay.requestAnimationFrame($bind(_gthis,_gthis.onAnimationFrame));
			});
		} catch( err ) {
			var err1 = (err instanceof js__$Boot_HaxeError) ? err.val : err;
			haxe_Log.trace("Failed to requestPresent.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 71, className : "kha.js.vr.VrInterface", methodName : "onVRRequestPresent"});
			haxe_Log.trace(err1,{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 72, className : "kha.js.vr.VrInterface", methodName : "onVRRequestPresent"});
		}
	}
	,onVRExitPresent: function() {
		var _gthis = this;
		try {
			this.vrDisplay.exitPresent([{ source : kha_SystemImpl.khanvas}]).then(function() {
				_gthis.onResize();
			});
		} catch( err ) {
			var err1 = (err instanceof js__$Boot_HaxeError) ? err.val : err;
			haxe_Log.trace("Failed to exitPresent.",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 82, className : "kha.js.vr.VrInterface", methodName : "onVRExitPresent"});
			haxe_Log.trace(err1,{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 83, className : "kha.js.vr.VrInterface", methodName : "onVRExitPresent"});
		}
	}
	,onResetPose: function() {
		try {
			this.vrDisplay.resetPose();
		} catch( err ) {
			var err1 = (err instanceof js__$Boot_HaxeError) ? err.val : err;
			haxe_Log.trace("Failed to resetPose",{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 91, className : "kha.js.vr.VrInterface", methodName : "onResetPose"});
			haxe_Log.trace(err1,{ fileName : "kha/js/vr/VrInterface.hx", lineNumber : 92, className : "kha.js.vr.VrInterface", methodName : "onResetPose"});
		}
	}
	,onAnimationFrame: function(timestamp) {
		if(this.vrDisplay != null && this.vrDisplay.isPresenting) {
			this.vrDisplay.requestAnimationFrame($bind(this,this.onAnimationFrame));
			this.vrDisplay.getFrameData(this.frameData);
			this.leftProjectionMatrix = this.createMatrixFromArray(this.frameData.leftProjectionMatrix);
			this.leftViewMatrix = this.createMatrixFromArray(this.frameData.leftViewMatrix);
			this.rightProjectionMatrix = this.createMatrixFromArray(this.frameData.rightProjectionMatrix);
			this.rightViewMatrix = this.createMatrixFromArray(this.frameData.rightViewMatrix);
			this.vrDisplay.submitFrame();
		}
	}
	,onResize: function() {
		if(this.vrDisplay != null && this.vrDisplay.isPresenting) {
			kha_SystemImpl.khanvas.width = this.vrWidth;
			kha_SystemImpl.khanvas.height = this.vrHeight;
		} else {
			kha_SystemImpl.khanvas.width = this.width;
			kha_SystemImpl.khanvas.height = this.height;
		}
	}
	,GetSensorState: function() {
		return this.GetPredictedSensorState(0.0);
	}
	,GetPredictedSensorState: function(time) {
		var result = new kha_vr_SensorState();
		result.Predicted = new kha_vr_PoseState();
		result.Recorded = result.Predicted;
		result.Predicted.AngularAcceleration = new kha_math_Vector3();
		result.Predicted.AngularVelocity = new kha_math_Vector3();
		result.Predicted.LinearAcceleration = new kha_math_Vector3();
		result.Predicted.LinearVelocity = new kha_math_Vector3();
		result.Predicted.TimeInSeconds = time;
		result.Predicted.Pose = new kha_vr_Pose();
		result.Predicted.Pose.Orientation = new kha_math_Quaternion();
		result.Predicted.Pose.Position = new kha_math_Vector3();
		var mPose = this.frameData.pose;
		if(mPose != null) {
			result.Predicted.AngularVelocity = this.createVectorFromArray(mPose.angularVelocity);
			result.Predicted.AngularAcceleration = this.createVectorFromArray(mPose.angularAcceleration);
			result.Predicted.LinearVelocity = this.createVectorFromArray(mPose.linearVelocity);
			result.Predicted.LinearAcceleration = this.createVectorFromArray(mPose.linearAcceleration);
			result.Predicted.Pose.Orientation = this.createQuaternion(mPose.orientation);
			result.Predicted.Pose.Position = this.createVectorFromArray(mPose.position);
		}
		return result;
	}
	,WarpSwapBlack: function() {
	}
	,WarpSwapLoadingIcon: function() {
	}
	,WarpSwap: function(parms) {
	}
	,IsPresenting: function() {
		if(this.vrDisplay != null) {
			return this.vrDisplay.isPresenting;
		}
		return false;
	}
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,GetTimeInSeconds: function() {
		return kha_Scheduler.time();
	}
	,GetProjectionMatrix: function(eye) {
		if(eye == 0) {
			return this.leftProjectionMatrix;
		} else {
			return this.rightProjectionMatrix;
		}
	}
	,GetViewMatrix: function(eye) {
		if(eye == 0) {
			return this.leftViewMatrix;
		} else {
			return this.rightViewMatrix;
		}
	}
	,createMatrixFromArray: function(array) {
		var matrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
		matrix._00 = array[0];
		matrix._01 = array[1];
		matrix._02 = array[2];
		matrix._03 = array[3];
		matrix._10 = array[4];
		matrix._11 = array[5];
		matrix._12 = array[6];
		matrix._13 = array[7];
		matrix._20 = array[8];
		matrix._21 = array[9];
		matrix._22 = array[10];
		matrix._23 = array[11];
		matrix._30 = array[12];
		matrix._31 = array[13];
		matrix._32 = array[14];
		matrix._33 = array[15];
		return matrix;
	}
	,createVectorFromArray: function(array) {
		var vector = new kha_math_Vector3(0,0,0);
		if(array != null) {
			vector.x = array[0];
			vector.y = array[1];
			vector.z = array[2];
		}
		return vector;
	}
	,createQuaternion: function(array) {
		var quaternion = new kha_math_Quaternion(0,0,0,0);
		if(array != null) {
			quaternion.set_x(array[0]);
			quaternion.set_y(array[1]);
			quaternion.set_z(array[2]);
			quaternion.set_w(array[3]);
		}
		return quaternion;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = "kha.math.FastVector2";
kha_math_FastVector2.fromVector2 = function(v) {
	return new kha_math_FastVector2(v.x,v.y);
};
kha_math_FastVector2.prototype = {
	x: null
	,y: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector2(" + this.x + ", " + this.y + ")";
	}
	,__class__: kha_math_FastVector2
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = "kha.math.FastVector3";
kha_math_FastVector3.fromVector3 = function(v) {
	return new kha_math_FastVector3(v.x,v.y,v.z);
};
kha_math_FastVector3.prototype = {
	x: null
	,y: null
	,z: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector3(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,__class__: kha_math_FastVector3
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_FastVector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.FastVector4"] = kha_math_FastVector4;
kha_math_FastVector4.__name__ = "kha.math.FastVector4";
kha_math_FastVector4.fromVector4 = function(v) {
	return new kha_math_FastVector4(v.x,v.y,v.z,v.w);
};
kha_math_FastVector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector4(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	,__class__: kha_math_FastVector4
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Matrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.Matrix3"] = kha_math_Matrix3;
kha_math_Matrix3.__name__ = "kha.math.Matrix3";
kha_math_Matrix3.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_01: null
	,_11: null
	,_21: null
	,_02: null
	,_12: null
	,_22: null
	,__class__: kha_math_Matrix3
};
var kha_math_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.Matrix4"] = kha_math_Matrix4;
kha_math_Matrix4.__name__ = "kha.math.Matrix4";
kha_math_Matrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_Matrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_Matrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new kha_math_Matrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_Matrix4.lookAt = function(eye,at,up) {
	var zaxis = new kha_math_Vector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var _x = zaxis.y * up.z - zaxis.z * up.y;
	var _y = zaxis.z * up.x - zaxis.x * up.z;
	var _z = zaxis.x * up.y - zaxis.y * up.x;
	var xaxis = new kha_math_Vector3(_x,_y,_z);
	xaxis.set_length(1);
	var _x1 = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y1 = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z1 = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	var yaxis_x = _x1;
	var yaxis_y = _y1;
	var yaxis_z = _z1;
	return new kha_math_Matrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
kha_math_Matrix4.prototype = {
	_00: null
	,_10: null
	,_20: null
	,_30: null
	,_01: null
	,_11: null
	,_21: null
	,_31: null
	,_02: null
	,_12: null
	,_22: null
	,_32: null
	,_03: null
	,_13: null
	,_23: null
	,_33: null
	,__class__: kha_math_Matrix4
};
var kha_math_Quaternion = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.values = [];
	this.values.push(x);
	this.values.push(y);
	this.values.push(z);
	this.values.push(w);
};
$hxClasses["kha.math.Quaternion"] = kha_math_Quaternion;
kha_math_Quaternion.__name__ = "kha.math.Quaternion";
kha_math_Quaternion.fromAxisAngle = function(axis,radians) {
	var q = new kha_math_Quaternion();
	q.set_w(Math.cos(radians / 2.0));
	q.set_x(q.set_y(q.set_z(Math.sin(radians / 2.0))));
	var _g = q;
	_g.set_x(_g.get_x() * axis.x);
	var _g1 = q;
	_g1.set_y(_g1.get_y() * axis.y);
	var _g2 = q;
	_g2.set_z(_g2.get_z() * axis.z);
	return q;
};
kha_math_Quaternion.prototype = {
	values: null
	,slerp: function(t,q) {
		var epsilon = 0.0005;
		var dot = this.dot(q);
		if(dot > 1 - epsilon) {
			var result = q.add(this.sub(q).scaled(t));
			result.normalize();
			return result;
		}
		if(dot < 0) {
			dot = 0;
		}
		if(dot > 1) {
			dot = 1;
		}
		var theta0 = Math.acos(dot);
		var theta = theta0 * t;
		var q2 = q.sub(this.scaled(dot));
		q2.normalize();
		var result1 = this.scaled(Math.cos(theta)).add(q2.scaled(Math.sin(theta)));
		result1.normalize();
		return result1;
	}
	,rotated: function(b) {
		var q = new kha_math_Quaternion();
		q.set_w(this.get_w() * b.get_w() - this.get_x() * b.get_x() - this.get_y() * b.get_y() - this.get_z() * b.get_z());
		q.set_x(this.get_w() * b.get_x() + this.get_x() * b.get_w() + this.get_y() * b.get_z() - this.get_z() * b.get_y());
		q.set_y(this.get_w() * b.get_y() + this.get_y() * b.get_w() + this.get_z() * b.get_x() - this.get_x() * b.get_z());
		q.set_z(this.get_w() * b.get_z() + this.get_z() * b.get_w() + this.get_x() * b.get_y() - this.get_y() * b.get_x());
		q.normalize();
		return q;
	}
	,scaled: function(scale) {
		return new kha_math_Quaternion(this.get_x() * scale,this.get_y() * scale,this.get_z() * scale,this.get_w() * scale);
	}
	,scale: function(scale) {
		this.set_x(this.get_x() * scale);
		this.set_y(this.get_y() * scale);
		this.set_z(this.get_z() * scale);
		this.set_w(this.get_w() * scale);
	}
	,matrix: function() {
		var s = 2.0;
		var xs = this.get_x() * s;
		var ys = this.get_y() * s;
		var zs = this.get_z() * s;
		var wx = this.get_w() * xs;
		var wy = this.get_w() * ys;
		var wz = this.get_w() * zs;
		var xx = this.get_x() * xs;
		var xy = this.get_x() * ys;
		var xz = this.get_x() * zs;
		var yy = this.get_y() * ys;
		var yz = this.get_y() * zs;
		var zz = this.get_z() * zs;
		return new kha_math_Matrix4(1 - (yy + zz),xy - wz,xz + wy,0,xy + wz,1 - (xx + zz),yz - wx,0,xz - wy,yz + wx,1 - (xx + yy),0,0,0,0,1);
	}
	,get: function(index) {
		return this.values[index];
	}
	,set: function(index,value) {
		this.values[index] = value;
	}
	,get_x: function() {
		return this.values[0];
	}
	,set_x: function(value) {
		return this.values[0] = value;
	}
	,get_y: function() {
		return this.values[1];
	}
	,set_y: function(value) {
		return this.values[1] = value;
	}
	,get_z: function() {
		return this.values[2];
	}
	,set_z: function(value) {
		return this.values[2] = value;
	}
	,get_w: function() {
		return this.values[3];
	}
	,set_w: function(value) {
		return this.values[3] = value;
	}
	,get_length: function() {
		return Math.sqrt(this.get_x() * this.get_x() + this.get_y() * this.get_y() + this.get_z() * this.get_z() + this.get_w() * this.get_w());
	}
	,set_length: function(length) {
		if(this.get_length() == 0) {
			return 0;
		}
		var mul = length / this.get_length();
		var _g = this;
		_g.set_x(_g.get_x() * mul);
		var _g1 = this;
		_g1.set_y(_g1.get_y() * mul);
		var _g2 = this;
		_g2.set_z(_g2.get_z() * mul);
		return length;
	}
	,addVector: function(vec) {
		var result = new kha_math_Quaternion(this.get_x(),this.get_y(),this.get_z(),this.get_w());
		var q1 = new kha_math_Quaternion(0,vec.x,vec.y,vec.z);
		q1 = q1.mult(result);
		var _g = result;
		_g.set_x(_g.get_x() + q1.get_x() * 0.5);
		var _g1 = result;
		_g1.set_y(_g1.get_y() + q1.get_y() * 0.5);
		var _g2 = result;
		_g2.set_z(_g2.get_z() + q1.get_z() * 0.5);
		var _g3 = result;
		_g3.set_w(_g3.get_w() + q1.get_w() * 0.5);
		return result;
	}
	,add: function(q) {
		return new kha_math_Quaternion(this.get_x() + q.get_x(),this.get_y() + q.get_y(),this.get_z() + q.get_z(),this.get_w() + q.get_w());
	}
	,sub: function(q) {
		return new kha_math_Quaternion(this.get_x() - q.get_x(),this.get_y() - q.get_y(),this.get_z() - q.get_z(),this.get_w() - q.get_w());
	}
	,mult: function(r) {
		var q = new kha_math_Quaternion();
		q.set_x(this.get_w() * r.get_x() + this.get_x() * r.get_w() + this.get_y() * r.get_z() - this.get_z() * r.get_y());
		q.set_y(this.get_w() * r.get_y() - this.get_x() * r.get_z() + this.get_y() * r.get_w() + this.get_z() * r.get_x());
		q.set_z(this.get_w() * r.get_z() + this.get_x() * r.get_y() - this.get_y() * r.get_x() + this.get_z() * r.get_w());
		q.set_w(this.get_w() * r.get_w() - this.get_x() * r.get_x() - this.get_y() * r.get_y() - this.get_z() * r.get_z());
		return q;
	}
	,normalize: function() {
		this.scale(1.0 / this.get_length());
	}
	,dot: function(q) {
		return this.get_x() * q.get_x() + this.get_y() * q.get_y() + this.get_z() * q.get_z() + this.get_w() * q.get_w();
	}
	,getEulerAngles: function(A1,A2,A3,S,D) {
		if(D == null) {
			D = 1;
		}
		if(S == null) {
			S = 1;
		}
		var result = new kha_math_Vector3();
		var Q = [];
		Q[0] = this.get_x();
		Q[1] = this.get_y();
		Q[2] = this.get_z();
		var ww = this.get_w() * this.get_w();
		var Q11 = Q[A1] * Q[A1];
		var Q22 = Q[A2] * Q[A2];
		var Q33 = Q[A3] * Q[A3];
		var psign = -1;
		var SingularityRadius = 0.0000001;
		var PiOver2 = Math.PI / 2.0;
		if((A1 + 1) % 3 == A2 && (A2 + 1) % 3 == A3) {
			psign = 1;
		}
		var s2 = psign * 2.0 * (psign * this.get_w() * Q[A2] + Q[A1] * Q[A3]);
		if(s2 < -1 + SingularityRadius) {
			result.x = 0;
			result.y = -S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else if(s2 > 1 - SingularityRadius) {
			result.x = 0;
			result.y = S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else {
			result.x = -S * D * Math.atan2(-2 * (this.get_w() * Q[A1] - psign * Q[A2] * Q[A3]),ww + Q33 - Q11 - Q22);
			result.y = S * D * Math.asin(s2);
			result.z = S * D * Math.atan2(2 * (this.get_w() * Q[A3] - psign * Q[A1] * Q[A2]),ww + Q11 - Q22 - Q33);
		}
		return result;
	}
	,__class__: kha_math_Quaternion
	,__properties__: {set_length:"set_length",get_length:"get_length",set_w:"set_w",get_w:"get_w",set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var kha_math_Vector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.Vector2"] = kha_math_Vector2;
kha_math_Vector2.__name__ = "kha.math.Vector2";
kha_math_Vector2.prototype = {
	x: null
	,y: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,__class__: kha_math_Vector2
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Vector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.Vector3"] = kha_math_Vector3;
kha_math_Vector3.__name__ = "kha.math.Vector3";
kha_math_Vector3.prototype = {
	x: null
	,y: null
	,z: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,__class__: kha_math_Vector3
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.Vector4"] = kha_math_Vector4;
kha_math_Vector4.__name__ = "kha.math.Vector4";
kha_math_Vector4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,__class__: kha_math_Vector4
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_network_Client = function() { };
$hxClasses["kha.network.Client"] = kha_network_Client;
kha_network_Client.__name__ = "kha.network.Client";
kha_network_Client.prototype = {
	get_id: null
	,id: null
	,send: null
	,receive: null
	,onClose: null
	,__class__: kha_network_Client
	,__properties__: {get_id:"get_id"}
};
var kha_network_ControllerBuilder = function() { };
$hxClasses["kha.network.ControllerBuilder"] = kha_network_ControllerBuilder;
kha_network_ControllerBuilder.__name__ = "kha.network.ControllerBuilder";
var kha_network_Entity = function() { };
$hxClasses["kha.network.Entity"] = kha_network_Entity;
kha_network_Entity.__name__ = "kha.network.Entity";
kha_network_Entity.prototype = {
	_id: null
	,_size: null
	,_send: null
	,_receive: null
	,__class__: kha_network_Entity
};
var kha_network_LocalClient = function(id) {
	this.myId = id;
};
$hxClasses["kha.network.LocalClient"] = kha_network_LocalClient;
kha_network_LocalClient.__name__ = "kha.network.LocalClient";
kha_network_LocalClient.__interfaces__ = [kha_network_Client];
kha_network_LocalClient.prototype = {
	myId: null
	,send: function(bytes,mandatory) {
	}
	,receive: function(receiver) {
	}
	,onClose: function(close) {
	}
	,controllers: null
	,get_controllers: function() {
		return null;
	}
	,id: null
	,get_id: function() {
		return this.myId;
	}
	,__class__: kha_network_LocalClient
	,__properties__: {get_id:"get_id",get_controllers:"get_controllers"}
};
var kha_network_Network = function(url,port,errorCallback,closeCallback) {
	this.open = false;
	var _gthis = this;
	this.socket = new WebSocket("ws://" + url + ":" + port);
	this.socket.onerror = function(error) {
		haxe_Log.trace("Network error.",{ fileName : "kha/network/Network.hx", lineNumber : 14, className : "kha.network.Network", methodName : "new"});
		errorCallback();
	};
	this.socket.binaryType = "arraybuffer";
	this.socket.onopen = function() {
		_gthis.open = true;
	};
	this.socket.onclose = function(event) {
		haxe_Log.trace("Network connection closed. " + kha_network_Network.webSocketCloseReason(event.code) + " (" + event.reason + ").",{ fileName : "kha/network/Network.hx", lineNumber : 22, className : "kha.network.Network", methodName : "new"});
		closeCallback();
	};
};
$hxClasses["kha.network.Network"] = kha_network_Network;
kha_network_Network.__name__ = "kha.network.Network";
kha_network_Network.webSocketCloseReason = function(code) {
	switch(code) {
	case 1000:
		return "Normal Closure";
	case 1001:
		return "Going Away";
	case 1002:
		return "Protocol error";
	case 1003:
		return "Unsupported Data";
	case 1005:
		return "No Status Rcvd";
	case 1006:
		return "Abnormal Closure";
	case 1007:
		return "Invalid frame";
	case 1008:
		return "Policy Violation";
	case 1009:
		return "Message Too Big";
	case 1010:
		return "Mandatory Ext.";
	case 1011:
		return "Internal Server Error";
	case 1015:
		return "TLS handshake";
	default:
		return "";
	}
};
kha_network_Network.prototype = {
	socket: null
	,open: null
	,send: function(bytes,mandatory) {
		if(this.open) {
			this.socket.send(bytes.b.bufferValue);
		}
	}
	,listen: function(listener) {
		this.socket.onmessage = function(message) {
			var tmp = haxe_io_Bytes.ofData(message.data);
			listener(tmp);
		};
	}
	,__class__: kha_network_Network
};
var kha_network_State = function(time,data) {
	this.time = time;
	this.data = data;
};
$hxClasses["kha.network.State"] = kha_network_State;
kha_network_State.__name__ = "kha.network.State";
kha_network_State.prototype = {
	time: null
	,data: null
	,__class__: kha_network_State
};
var kha_network_Session = function(maxPlayers,address,port) {
	this.ping = 1;
	this.currentPlayers = 0;
	this.controllers = new haxe_ds_IntMap();
	this.entities = new haxe_ds_IntMap();
	kha_network_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.network.Session"] = kha_network_Session;
kha_network_Session.__name__ = "kha.network.Session";
kha_network_Session.the = function() {
	return kha_network_Session.instance;
};
kha_network_Session.prototype = {
	entities: null
	,controllers: null
	,maxPlayers: null
	,currentPlayers: null
	,ping: null
	,address: null
	,port: null
	,startCallback: null
	,refusedCallback: null
	,resetCallback: null
	,localClient: null
	,network: null
	,updateTaskId: null
	,pingTaskId: null
	,me: null
	,get_me: function() {
		return this.localClient;
	}
	,addEntity: function(entity) {
		var this1 = this.entities;
		var key = entity._id();
		this1.h[key] = entity;
	}
	,addController: function(controller) {
		haxe_Log.trace("Adding controller id " + controller._id(),{ fileName : "kha/network/Session.hx", lineNumber : 88, className : "kha.network.Session", methodName : "addController"});
		controller._inputBufferIndex = 0;
		var this1 = this.controllers;
		var key = controller._id();
		this1.h[key] = controller;
	}
	,sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,sendPing: function() {
		var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
		bytes.b[0] = 4;
		bytes.setFloat(1,kha_Scheduler.realTime());
		this.sendToServer(bytes);
	}
	,sendPlayerUpdate: function() {
	}
	,receive: function(bytes,client) {
		switch(bytes.b[0]) {
		case 0:
			var index = bytes.b[1];
			this.localClient = new kha_network_LocalClient(index);
			kha_Scheduler.resetTime();
			this.startCallback();
			break;
		case 1:
			var time = bytes.getDouble(1);
			var offset = 9;
			var entity = this.entities.iterator();
			while(entity.hasNext()) {
				var entity1 = entity.next();
				entity1._receive(offset,bytes);
				offset += entity1._size();
			}
			kha_Scheduler.warp(time);
			break;
		case 3:
			switch(bytes.b[1]) {
			case 0:
				break;
			case 1:
				this.executeRPC(bytes);
				break;
			}
			break;
		case 4:
			var sendTime = bytes.getFloat(1);
			this.ping = kha_Scheduler.realTime() - sendTime;
			break;
		case 5:
			this.refusedCallback();
			break;
		case 6:
			this.currentPlayers = bytes.getInt32(1);
			break;
		}
	}
	,executeRPC: function(bytes) {
		var args = [];
		var syncId = bytes.getInt32(2);
		var index = 6;
		var classnamelength = bytes.getUInt16(index);
		index += 2;
		var classname = "";
		var _g = 0;
		var _g1 = classnamelength;
		while(_g < _g1) {
			var i = _g++;
			var code = bytes.b[index];
			classname += String.fromCodePoint(code);
			++index;
		}
		var methodnamelength = bytes.getUInt16(index);
		index += 2;
		var methodname = "";
		var _g2 = 0;
		var _g3 = methodnamelength;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var code1 = bytes.b[index];
			methodname += String.fromCodePoint(code1);
			++index;
		}
		while(index < bytes.length) {
			var type = bytes.b[index];
			++index;
			switch(type) {
			case 66:
				var value = bytes.b[index] == 1;
				++index;
				haxe_Log.trace("Bool: " + (value == null ? "null" : "" + value),{ fileName : "kha/network/Session.hx", lineNumber : 295, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value);
				break;
			case 70:
				var value1 = bytes.getDouble(index);
				index += 8;
				haxe_Log.trace("Float: " + value1,{ fileName : "kha/network/Session.hx", lineNumber : 300, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value1);
				break;
			case 73:
				var value2 = bytes.getInt32(index);
				index += 4;
				haxe_Log.trace("Int: " + value2,{ fileName : "kha/network/Session.hx", lineNumber : 305, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value2);
				break;
			case 83:
				var length = bytes.getUInt16(index);
				index += 2;
				var str = "";
				var _g4 = 0;
				var _g5 = length;
				while(_g4 < _g5) {
					var i2 = _g4++;
					var code2 = bytes.b[index];
					str += String.fromCodePoint(code2);
					++index;
				}
				haxe_Log.trace("String: " + str,{ fileName : "kha/network/Session.hx", lineNumber : 315, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(str);
				break;
			default:
				haxe_Log.trace("Unknown argument type.",{ fileName : "kha/network/Session.hx", lineNumber : 318, className : "kha.network.Session", methodName : "executeRPC"});
			}
		}
		if(syncId == -1) {
			Reflect.field($hxClasses[classname],methodname + "_remotely").apply(null,args);
		} else {
			Reflect.field(kha_network_SyncBuilder.objects[syncId],methodname + "_remotely").apply(kha_network_SyncBuilder.objects[syncId],args);
		}
	}
	,waitForStart: function(callback,refuseCallback,errorCallback,closeCallback,resCallback) {
		var _gthis = this;
		this.startCallback = callback;
		this.refusedCallback = refuseCallback;
		this.resetCallback = resCallback;
		this.network = new kha_network_Network(this.address,this.port,errorCallback,function() {
			closeCallback();
			_gthis.reset();
		});
		this.network.listen(function(bytes) {
			_gthis.receive(bytes);
		});
		this.updateTaskId = kha_Scheduler.addFrameTask($bind(this,this.update),0);
		this.ping = 1;
		this.pingTaskId = kha_Scheduler.addTimeTask($bind(this,this.sendPing),0,1);
	}
	,reset: function() {
		kha_Scheduler.removeFrameTask(this.updateTaskId);
		kha_Scheduler.removeTimeTask(this.pingTaskId);
		this.currentPlayers = 0;
		this.ping = 1;
		this.controllers = new haxe_ds_IntMap();
		this.entities = new haxe_ds_IntMap();
		this.resetCallback();
	}
	,update: function() {
		var controller = this.controllers.iterator();
		while(controller.hasNext()) {
			var controller1 = controller.next();
			if(controller1._inputBufferIndex > 0) {
				var bytes = new haxe_io_Bytes(new ArrayBuffer(22 + controller1._inputBufferIndex));
				bytes.b[0] = 2;
				bytes.setInt32(1,controller1._id());
				bytes.setDouble(5,kha_Scheduler.time());
				bytes.setInt32(13,kha_System.windowWidth(0));
				bytes.setInt32(17,kha_System.windowHeight(0));
				bytes.b[21] = 0;
				bytes.blit(22,controller1._inputBuffer,0,controller1._inputBufferIndex);
				this.sendToServer(bytes);
				controller1._inputBufferIndex = 0;
			}
		}
	}
	,sendToServer: function(bytes) {
		this.network.send(bytes,false);
	}
	,__class__: kha_network_Session
	,__properties__: {get_me:"get_me"}
};
var kha_network_SyncBuilder = function() { };
$hxClasses["kha.network.SyncBuilder"] = kha_network_SyncBuilder;
kha_network_SyncBuilder.__name__ = "kha.network.SyncBuilder";
var kha_simd_Float32x4 = function(_0,_1,_2,_3) {
	this._0 = _0;
	this._1 = _1;
	this._2 = _2;
	this._3 = _3;
};
$hxClasses["kha.simd.Float32x4"] = kha_simd_Float32x4;
kha_simd_Float32x4.__name__ = "kha.simd.Float32x4";
kha_simd_Float32x4.create = function() {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.loadAllFast = function(t) {
	return new kha_simd_Float32x4(t,t,t,t);
};
kha_simd_Float32x4.load = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.loadFast = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.get = function(t,index) {
	var value = 0;
	switch(index) {
	case 0:
		value = t._0;
		break;
	case 1:
		value = t._1;
		break;
	case 2:
		value = t._2;
		break;
	case 3:
		value = t._3;
		break;
	}
	return value;
};
kha_simd_Float32x4.getFast = function(t,index) {
	switch(index) {
	case 0:
		return t._0;
	case 1:
		return t._1;
	case 2:
		return t._2;
	case 3:
		return t._3;
	}
	return 0;
};
kha_simd_Float32x4.abs = function(t) {
	return new kha_simd_Float32x4(Math.abs(t._0),Math.abs(t._1),Math.abs(t._2),Math.abs(t._3));
};
kha_simd_Float32x4.add = function(a,b) {
	return new kha_simd_Float32x4(a._0 + b._0,a._1 + b._1,a._2 + b._2,a._3 + b._3);
};
kha_simd_Float32x4.div = function(a,b) {
	return new kha_simd_Float32x4(a._0 / b._0,a._1 / b._1,a._2 / b._2,a._3 / b._3);
};
kha_simd_Float32x4.mul = function(a,b) {
	return new kha_simd_Float32x4(a._0 * b._0,a._1 * b._1,a._2 * b._2,a._3 * b._3);
};
kha_simd_Float32x4.neg = function(t) {
	return new kha_simd_Float32x4(-t._0,-t._1,-t._2,-t._3);
};
kha_simd_Float32x4.reciprocalApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.reciprocalSqrtApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.sub = function(a,b) {
	return new kha_simd_Float32x4(a._0 - b._0,a._1 - b._1,a._2 - b._2,a._3 - b._3);
};
kha_simd_Float32x4.sqrt = function(t) {
	return new kha_simd_Float32x4(Math.sqrt(t._0),Math.sqrt(t._1),Math.sqrt(t._2),Math.sqrt(t._3));
};
kha_simd_Float32x4.prototype = {
	_0: null
	,_1: null
	,_2: null
	,_3: null
	,__class__: kha_simd_Float32x4
};
var kha_vr_Pose = function() {
	this.Orientation = new kha_math_Quaternion();
	this.Position = new kha_math_Vector3();
};
$hxClasses["kha.vr.Pose"] = kha_vr_Pose;
kha_vr_Pose.__name__ = "kha.vr.Pose";
kha_vr_Pose.prototype = {
	Orientation: null
	,Position: null
	,__class__: kha_vr_Pose
};
var kha_vr_PoseState = function() {
};
$hxClasses["kha.vr.PoseState"] = kha_vr_PoseState;
kha_vr_PoseState.__name__ = "kha.vr.PoseState";
kha_vr_PoseState.prototype = {
	Pose: null
	,AngularVelocity: null
	,LinearVelocity: null
	,AngularAcceleration: null
	,LinearAcceleration: null
	,TimeInSeconds: null
	,__class__: kha_vr_PoseState
};
var kha_vr_SensorState = function() {
};
$hxClasses["kha.vr.SensorState"] = kha_vr_SensorState;
kha_vr_SensorState.__name__ = "kha.vr.SensorState";
kha_vr_SensorState.prototype = {
	Predicted: null
	,Recorded: null
	,Temperature: null
	,Status: null
	,__class__: kha_vr_SensorState
};
var kha_vr_TimeWarpImage = function() {
};
$hxClasses["kha.vr.TimeWarpImage"] = kha_vr_TimeWarpImage;
kha_vr_TimeWarpImage.__name__ = "kha.vr.TimeWarpImage";
kha_vr_TimeWarpImage.prototype = {
	Image: null
	,TexCoordsFromTanAngles: null
	,Pose: null
	,__class__: kha_vr_TimeWarpImage
};
var kha_vr_TimeWarpParms = function() {
};
$hxClasses["kha.vr.TimeWarpParms"] = kha_vr_TimeWarpParms;
kha_vr_TimeWarpParms.__name__ = "kha.vr.TimeWarpParms";
kha_vr_TimeWarpParms.prototype = {
	LeftImage: null
	,RightImage: null
	,LeftOverlay: null
	,RightOverlay: null
	,__class__: kha_vr_TimeWarpParms
};
var trilateral_angle_DifferencePreference = $hxEnums["trilateral.angle.DifferencePreference"] = { __ename__ : "trilateral.angle.DifferencePreference", __constructs__ : ["CLOCKWISE","ANTICLOCKWISE","SMALL","LARGE"]
	,CLOCKWISE: {_hx_index:0,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,ANTICLOCKWISE: {_hx_index:1,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,SMALL: {_hx_index:2,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,LARGE: {_hx_index:3,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
};
var trilateral_angle_Angles = function() { };
$hxClasses["trilateral.angle.Angles"] = trilateral_angle_Angles;
trilateral_angle_Angles.__name__ = "trilateral.angle.Angles";
trilateral_angle_Angles.pi2pi = function(angle) {
	if(angle <= Math.PI && angle > -Math.PI) {
		return angle;
	} else {
		var a = (angle + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			return a - Math.PI;
		} else {
			return a + Math.PI;
		}
	}
};
trilateral_angle_Angles.zeroto2pi = function(angle) {
	if(angle >= 0 && angle > Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		if(a >= 0) {
			return a;
		} else {
			return a + 2 * Math.PI;
		}
	}
};
trilateral_angle_Angles.zerotoMinus2pi = function(angle) {
	if(angle <= 0 && angle > -Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		var a1 = a >= 0 ? a : a + 2 * Math.PI;
		return -(Math.PI * 2 - a1);
	}
};
trilateral_angle_Angles.differencePrefer = function(a,b,prefer) {
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(a >= 0 && a > Math.PI) {
			f = a;
		} else {
			var a1 = a % (2 * Math.PI);
			f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this1 = f;
		var za = this1;
		var f1;
		if(b >= 0 && b > Math.PI) {
			f1 = b;
		} else {
			var a2 = b % (2 * Math.PI);
			f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this2 = f1;
		var zb = this2;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(a - b);
		var clockwise = a < b;
		var dif = clockwise ? theta : -theta;
		if(dif > 0) {
			return dif;
		} else {
			return 2 * Math.PI + dif;
		}
		break;
	case 1:
		var f2;
		if(a >= 0 && a > Math.PI) {
			f2 = a;
		} else {
			var a3 = a % (2 * Math.PI);
			f2 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this3 = f2;
		var za1 = this3;
		var f3;
		if(b >= 0 && b > Math.PI) {
			f3 = b;
		} else {
			var a4 = b % (2 * Math.PI);
			f3 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this4 = f3;
		var zb1 = this4;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(a - b);
		var clockwise1 = a < b;
		var dif1 = clockwise1 ? theta1 : -theta1;
		if(dif1 < 0) {
			return dif1;
		} else {
			return -2 * Math.PI + dif1;
		}
		break;
	case 2:
		var f4;
		if(a >= 0 && a > Math.PI) {
			f4 = a;
		} else {
			var a5 = a % (2 * Math.PI);
			f4 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this5 = f4;
		var za2 = this5;
		var f5;
		if(b >= 0 && b > Math.PI) {
			f5 = b;
		} else {
			var a6 = b % (2 * Math.PI);
			f5 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this6 = f5;
		var zb2 = this6;
		var fa2 = a;
		var fb2 = b;
		var theta2 = Math.abs(a - b);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = a < b;
		var dif2 = clockwise2 ? theta2 : -theta2;
		if(smallest) {
			return dif2;
		} else if(clockwise2) {
			return -(2 * Math.PI - theta2);
		} else {
			return 2 * Math.PI - theta2;
		}
		break;
	case 3:
		var f6;
		if(a >= 0 && a > Math.PI) {
			f6 = a;
		} else {
			var a7 = a % (2 * Math.PI);
			f6 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this7 = f6;
		var za3 = this7;
		var f7;
		if(b >= 0 && b > Math.PI) {
			f7 = b;
		} else {
			var a8 = b % (2 * Math.PI);
			f7 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
		}
		var this8 = f7;
		var zb3 = this8;
		var fa3 = a;
		var fb3 = b;
		var theta3 = Math.abs(a - b);
		var largest = theta3 > Math.PI;
		var clockwise3 = a < b;
		var dif3 = clockwise3 ? theta3 : -theta3;
		if(largest) {
			return dif3;
		} else if(clockwise3) {
			return -(2 * Math.PI - theta3);
		} else {
			return 2 * Math.PI - theta3;
		}
		break;
	}
};
trilateral_angle_Angles.difference = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(a - b);
	var clockwise = a < b;
	if(clockwise) {
		return theta;
	} else {
		return -theta;
	}
};
trilateral_angle_Angles.differenceClockWise = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(a - b);
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(dif > 0) {
		return dif;
	} else {
		return 2 * Math.PI + dif;
	}
};
trilateral_angle_Angles.differenceAntiClockwise = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(a - b);
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(dif < 0) {
		return dif;
	} else {
		return -2 * Math.PI + dif;
	}
};
trilateral_angle_Angles.differenceSmall = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = a;
	var fb = b;
	var theta = Math.abs(a - b);
	var smallest = theta <= Math.PI;
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(smallest) {
		return dif;
	} else if(clockwise) {
		return -(2 * Math.PI - theta);
	} else {
		return 2 * Math.PI - theta;
	}
};
trilateral_angle_Angles.differenceLarge = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = a;
	var fb = b;
	var theta = Math.abs(a - b);
	var largest = theta > Math.PI;
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(largest) {
		return dif;
	} else if(clockwise) {
		return -(2 * Math.PI - theta);
	} else {
		return 2 * Math.PI - theta;
	}
};
trilateral_angle_Angles.differenceSmallLarge = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = a;
	var fb = b;
	var theta = Math.abs(a - b);
	var smallest = theta <= Math.PI;
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	var other = clockwise ? -(2 * Math.PI - theta) : 2 * Math.PI - theta;
	if(smallest) {
		return { small : dif, large : other};
	} else {
		return { small : other, large : dif};
	}
};
var trilateral_angle__$Fraction_FractionArray_$Impl_$ = {};
$hxClasses["trilateral.angle._Fraction.FractionArray_Impl_"] = trilateral_angle__$Fraction_FractionArray_$Impl_$;
trilateral_angle__$Fraction_FractionArray_$Impl_$.__name__ = "trilateral.angle._Fraction.FractionArray_Impl_";
trilateral_angle__$Fraction_FractionArray_$Impl_$._new = function(val) {
	var this1 = val == null ? [] : val;
	return this1;
};
trilateral_angle__$Fraction_FractionArray_$Impl_$.add = function(this1,val) {
	this1[this1.length] = val;
};
trilateral_angle__$Fraction_FractionArray_$Impl_$.toString = function(this1) {
	var l = this1.length;
	var str = "";
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var this2 = this1[i];
		var n = this2.numerator;
		var d = this2.denominator;
		var out = n == 0 ? "0" : n == d ? "1" : d == 1 ? this2.positive ? "" + n : "-" + n : this2.positive ? "" + n + "/" + d : "-" + n + "/" + d;
		str = str + "\n" + out;
	}
	return str;
};
var trilateral_angle__$Fraction_Fraction_$Impl_$ = {};
$hxClasses["trilateral.angle._Fraction.Fraction_Impl_"] = trilateral_angle__$Fraction_Fraction_$Impl_$;
trilateral_angle__$Fraction_Fraction_$Impl_$.__name__ = "trilateral.angle._Fraction.Fraction_Impl_";
trilateral_angle__$Fraction_Fraction_$Impl_$._new = function(numerator,denominator,positive,value) {
	if(positive == null) {
		positive = true;
	}
	var numNeg = numerator < 0;
	var denoNeg = denominator < 0;
	if(value == null) {
		value = positive ? numerator / denominator : -numerator / denominator;
	}
	if(numNeg || denoNeg) {
		if(!(numNeg && denoNeg)) {
			positive = !positive;
		}
		if(numNeg) {
			numerator = -numerator;
		}
		if(denoNeg) {
			denominator = -denominator;
		}
	}
	var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
	return this1;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.optimize = function(this1) {
	var f = this1.value;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.optimizeFraction = function(this1) {
	var f = this1.positive ? this1.numerator / this1.denominator : -this1.numerator / this1.denominator;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.toFloat = function(this1) {
	if(this1.positive) {
		return this1.numerator / this1.denominator;
	} else {
		return -this1.numerator / this1.denominator;
	}
};
trilateral_angle__$Fraction_Fraction_$Impl_$.float = function(this1) {
	return this1.value;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.verbose = function(this1) {
	return "{ numerator:" + this1.numerator + ", denominator: " + this1.denominator + ", positive: " + (this1.positive == null ? "null" : "" + this1.positive) + ", value: " + this1.value + " }";
};
trilateral_angle__$Fraction_Fraction_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = trilateral_angle_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var frac1 = trilateral_angle__$Fraction_Fraction_$Impl_$;
		var fracStore = arr[0];
		var _g = 0;
		var _g1 = l;
		while(_g < _g1) {
			var i1 = _g++;
			var frac2 = arr[i1];
			fracFloat = frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator;
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac2;
			}
		}
		frac = fracStore;
	}
	return frac;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.toString = function(this1) {
	var n = this1.numerator;
	var d = this1.denominator;
	var out = n == 0 ? "0" : n == d ? "1" : d == 1 ? this1.positive ? "" + n : "-" + n : this1.positive ? "" + n + "/" + d : "-" + n + "/" + d;
	return out;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.fromFloat = function(f) {
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.firstFloat = function(f) {
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var fracStore = arr[0];
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.byDenominator = function(this1,val) {
	var n = this1.numerator;
	var d = this1.denominator;
	var out = n == 0 ? "0" : n == d ? "1" : d == 1 ? this1.positive ? "" + n : "-" + n : this1.positive ? "" + n + "/" + d : "-" + n + "/" + d;
	var out1 = out;
	if(!(this1.denominator == val || out1 == "0" || out1 == "1")) {
		var dom = Math.round(this1.value * val);
		var numerator = dom;
		var denominator = val;
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this2 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		var frac = this2;
		var n1 = frac.numerator;
		var d1 = frac.denominator;
		var out2 = n1 == 0 ? "0" : n1 == d1 ? "1" : d1 == 1 ? frac.positive ? "" + n1 : "-" + n1 : frac.positive ? "" + n1 + "/" + d1 : "-" + n1 + "/" + d1;
		out1 = out2;
	}
	return out1;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.all = function(f) {
	return trilateral_angle_Fracs.approximateFractions(f);
};
trilateral_angle__$Fraction_Fraction_$Impl_$.similarToFraction = function(this1) {
	var f = this1.positive ? this1.numerator / this1.denominator : -this1.numerator / this1.denominator;
	return trilateral_angle_Fracs.approximateFractions(f);
};
trilateral_angle__$Fraction_Fraction_$Impl_$.similarToValue = function(this1) {
	return trilateral_angle_Fracs.approximateFractions(this1.value);
};
var trilateral_angle_Fracs = function() { };
$hxClasses["trilateral.angle.Fracs"] = trilateral_angle_Fracs;
trilateral_angle_Fracs.__name__ = "trilateral.angle.Fracs";
trilateral_angle_Fracs.grabDecimalInput = function(decimalVal) {
	var decimal = Math.abs(parseFloat(decimalVal));
	if(isNaN(decimal)) {
		return 0.;
	} else {
		return decimal;
	}
};
trilateral_angle_Fracs.approximateFractions = function(f) {
	var positive = f <= 0 ? false : true;
	var numerators = [0,1];
	var denominators = [1,0];
	var f2 = f <= 0 ? -f : f;
	var fStr = f2 == null ? "null" : "" + f2;
	var digits = "";
	var ix = fStr.indexOf(".");
	if(ix == -1) {
		digits = fStr;
	} else if(ix == 0) {
		digits = HxOverrides.substr(fStr,1,fStr.length);
	} else if(ix < fStr.length) {
		digits = HxOverrides.substr(fStr,0,ix) + HxOverrides.substr(fStr,ix + 1,fStr.length);
	}
	var LStr = digits;
	var numDigits = LStr.length;
	var L2 = f2;
	var numIntDigits = Std.string(L2).length;
	if(L2 == 0) {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = numDigits - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(digits);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	var maxNumerator = L;
	var d2 = f2;
	var calcD;
	var prevCalcD = null;
	var this1 = [];
	var arrFraction = this1;
	var j = 0;
	var _g = 2;
	while(_g < 1000) {
		var i1 = _g++;
		var L21 = Math.floor(d2);
		numerators[i1] = L21 * numerators[i1 - 1] + numerators[i1 - 2] | 0;
		if(Math.abs(numerators[i1]) > maxNumerator) {
			break;
		}
		denominators[i1] = L21 * denominators[i1 - 1] + denominators[i1 - 2] | 0;
		calcD = numerators[i1] / denominators[i1];
		if(calcD == prevCalcD) {
			break;
		}
		var numerator = numerators[i1];
		var denominator = denominators[i1];
		var positive1 = positive;
		var value = f;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive1 ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive1 = !positive1;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this2 = { numerator : numerator, denominator : denominator, positive : positive1, value : value};
		arrFraction[arrFraction.length] = this2;
		if(calcD == f2) {
			break;
		}
		prevCalcD = calcD;
		d2 = 1 / (d2 - L21);
	}
	return arrFraction;
};
trilateral_angle_Fracs.getMaxNumerator = function(f) {
	var fStr = f == null ? "null" : "" + f;
	var digits = "";
	var ix = fStr.indexOf(".");
	if(ix == -1) {
		digits = fStr;
	} else if(ix == 0) {
		digits = HxOverrides.substr(fStr,1,fStr.length);
	} else if(ix < fStr.length) {
		digits = HxOverrides.substr(fStr,0,ix) + HxOverrides.substr(fStr,ix + 1,fStr.length);
	}
	var LStr = digits;
	var numDigits = LStr.length;
	var L2 = f;
	var numIntDigits = (L2 == null ? "null" : "" + L2).length;
	if(L2 == 0) {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = numDigits - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(digits);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	return L;
};
trilateral_angle_Fracs.extractDigitStr = function(fStr) {
	var f2 = "";
	var ixe = fStr.indexOf("E");
	if(ixe == -1) {
		ixe = fStr.indexOf("e");
	}
	if(ixe == -1) {
		f2 = fStr;
	} else {
		f2 = HxOverrides.substr(fStr,0,ixe);
	}
	var digits = "";
	var ix = f2.indexOf(".");
	if(ix == -1) {
		digits = f2;
	} else if(ix == 0) {
		digits = HxOverrides.substr(f2,1,f2.length);
	} else if(ix < f2.length) {
		digits = HxOverrides.substr(f2,0,ix) + HxOverrides.substr(f2,ix + 1,f2.length);
	}
	return digits;
};
trilateral_angle_Fracs.getMaxNumeratorStr = function(fStr) {
	var f2 = "";
	var ixe = fStr.indexOf("E");
	if(ixe == -1) {
		ixe = fStr.indexOf("e");
	}
	if(ixe == -1) {
		f2 = fStr;
	} else {
		f2 = HxOverrides.substr(fStr,0,ixe);
	}
	var digits = "";
	var ix = f2.indexOf(".");
	if(ix == -1) {
		digits = f2;
	} else if(ix == 0) {
		digits = HxOverrides.substr(f2,1,f2.length);
	} else if(ix < f2.length) {
		digits = HxOverrides.substr(f2,0,ix) + HxOverrides.substr(f2,ix + 1,f2.length);
	}
	var LStr = digits;
	var numDigits = LStr.length;
	var L2 = fStr;
	var numIntDigits = L2.length;
	if(L2 == "0") {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = numDigits - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(fStr);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	return L;
};
var trilateral_angle__$Pi2pi_Pi2pi_$Impl_$ = {};
$hxClasses["trilateral.angle._Pi2pi.Pi2pi_Impl_"] = trilateral_angle__$Pi2pi_Pi2pi_$Impl_$;
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.__name__ = "trilateral.angle._Pi2pi.Pi2pi_Impl_";
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.__properties__ = {set_degrees:"set_degrees",get_degrees:"get_degrees"};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.fromFloat = function(f) {
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.additionPi = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.subtractionPi = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.dividePi = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.timesPi = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.addition = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.subtraction = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.divide = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.times = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.get_degrees = function(this1) {
	return this1 * 180 / Math.PI;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.set_degrees = function(this1,val) {
	this1 = Math.PI * val / 180;
	return val;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.fromFraction = function(val) {
	var f = (val.positive ? val.numerator / val.denominator : -val.numerator / val.denominator) * Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.tofraction = function(this1) {
	var f = this1 / Math.PI;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = trilateral_angle_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var frac1 = trilateral_angle__$Fraction_Fraction_$Impl_$;
		var fracStore = arr[0];
		var _g = 0;
		var _g1 = l;
		while(_g < _g1) {
			var i1 = _g++;
			var frac2 = arr[i1];
			fracFloat = frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator;
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac2;
			}
		}
		frac = fracStore;
	}
	var frac3 = frac;
	var f1 = (frac3.positive ? frac3.numerator / frac3.denominator : -frac3.numerator / frac3.denominator) * Math.PI;
	var f2;
	if(f1 <= Math.PI && f1 > -Math.PI) {
		f2 = f1;
	} else {
		var a = (f1 + Math.PI) % (2 * Math.PI);
		f2 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f2;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
var trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$ = {};
$hxClasses["trilateral.angle._ZeroTo2pi.ZeroTo2pi_Impl_"] = trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$;
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.__name__ = "trilateral.angle._ZeroTo2pi.ZeroTo2pi_Impl_";
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.__properties__ = {set_degrees:"set_degrees",get_degrees:"get_degrees"};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.fromFloat = function(f) {
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.additionPi = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.subtractionPi = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.dividePi = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.timesPi = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.addition = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.subtraction = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.divide = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.times = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.get_degrees = function(this1) {
	return this1 * 180 / Math.PI;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.set_degrees = function(this1,val) {
	this1 = Math.PI * val / 180;
	return val;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.fromFraction = function(val) {
	var f = (val.positive ? val.numerator / val.denominator : -val.numerator / val.denominator) * Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.tofraction = function(this1) {
	var f = this1 / Math.PI;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = trilateral_angle_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var frac1 = trilateral_angle__$Fraction_Fraction_$Impl_$;
		var fracStore = arr[0];
		var _g = 0;
		var _g1 = l;
		while(_g < _g1) {
			var i1 = _g++;
			var frac2 = arr[i1];
			fracFloat = frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator;
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac2;
			}
		}
		frac = fracStore;
	}
	var frac3 = frac;
	var f1 = (frac3.positive ? frac3.numerator / frac3.denominator : -frac3.numerator / frac3.denominator) * Math.PI;
	var f2;
	if(f1 >= 0 && f1 > Math.PI) {
		f2 = f1;
	} else {
		var a = f1 % (2 * Math.PI);
		f2 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f2;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
var trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$ = {};
$hxClasses["trilateral.arr._ArrayPairs.ArrayPairs_Impl_"] = trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$;
trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$.__name__ = "trilateral.arr._ArrayPairs.ArrayPairs_Impl_";
trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$.__properties__ = {get_length:"get_length"};
trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$._new = function(arr) {
	var this1 = arr;
	return this1;
};
trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$.get_length = function(this1) {
	return this1.length / 2 | 0;
};
trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$.access = function(this1,key) {
	var i = key * 2 | 0;
	return { x : this1[i], y : this1[i + 1]};
};
trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$.reverse = function(this1) {
	var arr = [];
	var _g = 0;
	var _g1 = trilateral_arr__$ArrayPairs_ArrayPairs_$Impl_$._new(this1);
	while(_g < (_g1.length / 2 | 0)) {
		var i = _g * 2 | 0;
		var i_x = _g1[i];
		var i_y = _g1[i + 1];
		++_g;
		arr.unshift(i_y);
		arr.unshift(i_x);
	}
	this1 = arr;
	return arr;
};
var trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$ = {};
$hxClasses["trilateral.arr._ArrayTriple.ArrayTriple_Impl_"] = trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$;
trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$.__name__ = "trilateral.arr._ArrayTriple.ArrayTriple_Impl_";
trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$.__properties__ = {get_length:"get_length"};
trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$._new = function(arr) {
	var this1 = arr;
	return this1;
};
trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$.get_length = function(this1) {
	return this1.length / 3 | 0;
};
trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$.access = function(this1,key) {
	var i = key * 3 | 0;
	return { a : this1[i], b : this1[i + 1], c : this1[i + 2]};
};
trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$.reverse = function(this1) {
	var arr = [];
	var _g = 0;
	var _g1 = trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$._new(this1);
	while(_g < (_g1.length / 3 | 0)) {
		var i = _g * 3 | 0;
		var i_a = _g1[i];
		var i_b = _g1[i + 1];
		var i_c = _g1[i + 2];
		++_g;
		arr.unshift(i_c);
		arr.unshift(i_b);
		arr.unshift(i_a);
	}
	this1 = arr;
	return arr;
};
var trilateral_geom_Algebra = function() { };
$hxClasses["trilateral.geom.Algebra"] = trilateral_geom_Algebra;
trilateral_geom_Algebra.__name__ = "trilateral.geom.Algebra";
trilateral_geom_Algebra.theta = function(p0,p1) {
	var dx = p0.x - p1.x;
	var dy = p0.y - p1.y;
	return Math.atan2(dy,dx);
};
trilateral_geom_Algebra.dist = function(p0,p1) {
	var dx = p0.x - p1.x;
	var dy = p0.y - p1.y;
	return dx * dx + dy * dy;
};
trilateral_geom_Algebra.adjustWinding = function(A_,B_,C_) {
	var p0_x = B_.x - A_.x;
	var p0_y = B_.y - A_.y;
	var p1_x = C_.x - A_.x;
	var p1_y = C_.y - A_.y;
	var val = !(p0_x * p1_y - p0_y * p1_x < 0);
	return val;
};
trilateral_geom_Algebra.subtract = function(p0,p1) {
	return { x : p0.x - p1.x, y : p0.y - p1.y};
};
trilateral_geom_Algebra.cross = function(p0,p1) {
	return p0.x * p1.y - p0.y * p1.x;
};
trilateral_geom_Algebra.sign = function(n) {
	return Math.abs(n) / n | 0;
};
trilateral_geom_Algebra.quadratic = function(t,s,c,e) {
	var u = 1 - t;
	return Math.pow(u,2) * s + 2 * u * t * c + Math.pow(t,2) * e;
};
trilateral_geom_Algebra.cubic = function(t,s,c1,c2,e) {
	var u = 1 - t;
	return Math.pow(u,3) * s + 3 * Math.pow(u,2) * t * c1 + 3 * u * Math.pow(t,2) * c2 + Math.pow(t,3) * e;
};
trilateral_geom_Algebra.quadCurve = function(p,ax,ay,bx,by,cx,cy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
	var l = p.length;
	p[l++] = ax;
	p[l++] = ay;
	var t = step;
	while(t < 1.) {
		var u = 1 - t;
		p[l++] = Math.pow(u,2) * ax + 2 * u * t * bx + Math.pow(t,2) * cx;
		var u1 = 1 - t;
		p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * by + Math.pow(t,2) * cy;
		t += step;
	}
	p[l++] = cx;
	p[l++] = cy;
	return p;
};
trilateral_geom_Algebra.cubicCurve = function(p,ax,ay,bx,by,cx,cy,dx,dy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var x2 = cx - dx;
	var y2 = cy - dy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1) + Math.sqrt(x2 * x2 + y2 * y2);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
	var l = p.length;
	p[l++] = ax;
	p[l++] = ay;
	var t = step;
	while(t < 1.) {
		var u = 1 - t;
		p[l++] = Math.pow(u,3) * ax + 3 * Math.pow(u,2) * t * bx + 3 * u * Math.pow(t,2) * cx + Math.pow(t,3) * dx;
		var u1 = 1 - t;
		p[l++] = Math.pow(u1,3) * ay + 3 * Math.pow(u1,2) * t * by + 3 * u1 * Math.pow(t,2) * cy + Math.pow(t,3) * dy;
		t += step;
	}
	p[l++] = dx;
	p[l++] = dy;
	return p;
};
trilateral_geom_Algebra.calculateQuadStep = function(ax,ay,bx,by,cx,cy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	return Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
};
trilateral_geom_Algebra.calculateCubicStep = function(ax,ay,bx,by,cx,cy,dx,dy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var x2 = cx - dx;
	var y2 = cy - dy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1) + Math.sqrt(x2 * x2 + y2 * y2);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	return Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
};
trilateral_geom_Algebra.lineAB = function(A,B,width) {
	var dx = A.x - B.x;
	var dy = A.y - B.y;
	var P_x = A.x - width / 2;
	var P_y = A.y;
	var omega = Math.atan2(dy,dx);
	var dim_x = width;
	var dim_y = dx * dx + dy * dy;
	var pivotX = A.x + width / 2;
	var pivotY = A.y;
	var px = P_x;
	var py = P_y;
	var dx1 = dim_x;
	var dy1 = dim_y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx1, y : py};
	var C_ = { x : px + dx1, y : py + dy1};
	var D_ = { x : px, y : py + dy1};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - pivotY;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + pivotY};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - pivotY;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + pivotY};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - pivotY;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + pivotY};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - pivotY;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + pivotY};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.lineABCoord = function(ax,ay,bx,by,width) {
	var dx = ax - bx;
	var dy = ay - by;
	var P_x = ax - width / 2;
	var P_y = ay;
	var omega = Math.atan2(dy,dx);
	var dim_x = width;
	var dim_y = dx * dx + dy * dy;
	var pivotX = ax + width / 2;
	var px = P_x;
	var py = P_y;
	var dx1 = dim_x;
	var dy1 = dim_y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx1, y : py};
	var C_ = { x : px + dx1, y : py + dy1};
	var D_ = { x : px, y : py + dy1};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - ay;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + ay};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - ay;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + ay};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - ay;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + ay};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - ay;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + ay};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.rotateVectorLine = function(pos,dim,omega,pivotX,pivotY) {
	var px = pos.x;
	var py = pos.y;
	var dx = dim.x;
	var dy = dim.y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx, y : py};
	var C_ = { x : px + dx, y : py + dy};
	var D_ = { x : px, y : py + dy};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - pivotY;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + pivotY};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - pivotY;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + pivotY};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - pivotY;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + pivotY};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - pivotY;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + pivotY};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.pivotCheap = function(p,sin,cos,pivotX,pivotY) {
	var px = p.x - pivotX;
	var py = p.y - pivotY;
	var px2 = px * cos - py * sin;
	py = py * cos + px * sin;
	return { x : px2 + pivotX, y : py + pivotY};
};
trilateral_geom_Algebra.pivot = function(p,omega,pivotX,pivotY) {
	var px = p.x - pivotX;
	var py = p.y - pivotY;
	var px2 = px * Math.cos(omega) - py * Math.sin(omega);
	py = py * Math.cos(omega) + px * Math.sin(omega);
	return { x : px2 + pivotX, y : py + pivotY};
};
trilateral_geom_Algebra.thetaCheap = function(dx,dy) {
	return Math.atan2(dy,dx);
};
trilateral_geom_Algebra.distCheap = function(dx,dy) {
	return dx * dx + dy * dy;
};
trilateral_geom_Algebra.distance = function(px,py,qx,qy) {
	var x = px - qx;
	var y = py - qy;
	return Math.sqrt(x * x + y * y);
};
var trilateral_geom_Contour = function(triArr_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.count = 0;
	this.triArr = triArr_;
	this.endLine = endLine_;
};
$hxClasses["trilateral.geom.Contour"] = trilateral_geom_Contour;
trilateral_geom_Contour.__name__ = "trilateral.geom.Contour";
trilateral_geom_Contour.thetaCompute = function(px,py,qx,qy) {
	return Math.atan2(py - qy,px - qx);
};
trilateral_geom_Contour.dist = function(px,py,qx,qy) {
	var x = px - qx;
	var y = py - qy;
	return x * x + y * y;
};
trilateral_geom_Contour.prototype = {
	triArr: null
	,endLine: null
	,ax: null
	,ay: null
	,bx: null
	,by: null
	,cx: null
	,cy: null
	,dx: null
	,dy: null
	,ex: null
	,ey: null
	,dxPrev: null
	,dyPrev: null
	,exPrev: null
	,eyPrev: null
	,dxOld: null
	,dyOld: null
	,exOld: null
	,eyOld: null
	,jx: null
	,jy: null
	,lastClock: null
	,jxOld: null
	,jyOld: null
	,kax: null
	,kay: null
	,kbx: null
	,kby: null
	,kcx: null
	,kcy: null
	,nax: null
	,nay: null
	,nbx: null
	,nby: null
	,ncx: null
	,ncy: null
	,quadIndex: null
	,angleA: null
	,halfA: null
	,beta: null
	,r: null
	,theta: null
	,angle1: null
	,angle2: null
	,reset: function() {
		this.angleA = 0;
		this.count = 0;
		this.kax = 0;
		this.kay = 0;
		this.kbx = 0;
		this.kby = 0;
		this.kcx = 0;
		this.kcy = 0;
		this.nax = 0;
		this.nay = 0;
		this.nbx = 0;
		this.nby = 0;
		this.ncx = 0;
		this.ncy = 0;
		this.ax = 0;
		this.ay = 0;
		this.bx = 0;
		this.by = 0;
		this.cx = 0;
		this.cy = 0;
		this.dx = null;
		this.dy = null;
		this.ex = null;
		this.ey = null;
	}
	,count: null
	,triangleJoin: function(ax_,ay_,bx_,by_,width_,curveEnds,overlap) {
		if(overlap == null) {
			overlap = false;
		}
		if(curveEnds == null) {
			curveEnds = false;
		}
		var oldAngle = this.dx != null ? this.angle1 : null;
		this.halfA = Math.PI / 2;
		this.ax = bx_;
		this.ay = by_;
		this.bx = ax_;
		this.by = ay_;
		this.beta = Math.PI / 2 - this.halfA;
		this.r = width_ / 2 * Math.cos(this.beta);
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		this.ax = ax_;
		this.ay = ay_;
		this.bx = bx_;
		this.by = by_;
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		var x = this.dxOld - bx_;
		var y = this.dyOld - by_;
		var x1 = this.exOld - bx_;
		var y1 = this.eyOld - by_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(this.ay - this.dyOld,this.ax - this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(this.ay - this.eyPrev,this.ax - this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(this.ay - this.eyOld,this.ax - this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(this.ay - this.dyPrev,this.ax - this.dxPrev) - Math.PI / 2;
		}
		var dif;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f = theta0;
			} else {
				var a = theta0 % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this1 = f;
			var za = this1;
			var f1;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f1 = theta1;
			} else {
				var a1 = theta1 % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this2 = f1;
			var zb = this2;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(theta0 - theta1);
			var clockwise = theta0 < theta1;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f2 = theta0;
			} else {
				var a2 = theta0 % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this3 = f2;
			var za1 = this3;
			var f3;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f3 = theta1;
			} else {
				var a3 = theta1 % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this4 = f3;
			var zb1 = this4;
			var fa1 = za1;
			var fb1 = zb1;
			var theta2 = Math.abs(theta0 - theta1);
			var clockwise1 = theta0 < theta1;
			var dif2 = clockwise1 ? theta2 : -theta2;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f4 = theta0;
			} else {
				var a4 = theta0 % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this5 = f4;
			var za2 = this5;
			var f5;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f5 = theta1;
			} else {
				var a5 = theta1 % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this6 = f5;
			var zb2 = this6;
			var fa2 = theta0;
			var fb2 = theta1;
			var theta3 = Math.abs(theta0 - theta1);
			var smallest = theta3 <= Math.PI;
			var clockwise2 = theta0 < theta1;
			var dif3 = clockwise2 ? theta3 : -theta3;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		case 3:
			var f6;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f6 = theta0;
			} else {
				var a6 = theta0 % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this7 = f6;
			var za3 = this7;
			var f7;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f7 = theta1;
			} else {
				var a7 = theta1 % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this8 = f7;
			var zb3 = this8;
			var fa3 = theta0;
			var fb3 = theta1;
			var theta4 = Math.abs(theta0 - theta1);
			var largest = theta4 > Math.PI;
			var clockwise3 = theta0 < theta1;
			var dif4 = clockwise3 ? theta4 : -theta4;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta4) : 2 * Math.PI - theta4;
			break;
		}
		if(!overlap && this.count != 0) {
			var gamma = Math.abs(dif) / 2;
			var h = width_ * Math.sin(gamma);
			var f8;
			if(theta0 <= Math.PI && theta0 > -Math.PI) {
				f8 = theta0;
			} else {
				var a8 = (theta0 + Math.PI) % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 - Math.PI : a8 + Math.PI;
			}
			var this9 = f8;
			var start = this9;
			var start2 = start;
			var delta = start2 + dif / 2 + Math.PI;
			this.jx = this.ax + h * Math.sin(delta);
			this.jy = this.ay + h * Math.cos(delta);
		}
		if(this.count == 0 && (this.endLine == 1 || this.endLine == 3)) {
			var ax = this.ax;
			var ay = this.ay;
			var radius = width_ / 2;
			var beta = -this.angle1 - Math.PI / 2;
			var gamma1 = -this.angle1 - Math.PI / 2 + Math.PI;
			var this10 = this.triArr;
			var t = [];
			var this11;
			if(t == null) {
				var t1 = [];
				var this12;
				if(t1 == null) {
					var t2 = [];
					var this13;
					if(t2 == null) {
						var t3 = [];
						var this14 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
						this13 = this14;
					} else {
						this13 = t2;
					}
					this12 = this13;
				} else {
					this12 = t1;
				}
				this11 = this12;
			} else {
				this11 = t;
			}
			var this15 = this11;
			var out = this15;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif5;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f9;
				if(beta >= 0 && beta > Math.PI) {
					f9 = beta;
				} else {
					var a9 = beta % (2 * Math.PI);
					f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
				}
				var this16 = f9;
				var za4 = this16;
				var f10;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f10 = gamma1;
				} else {
					var a10 = gamma1 % (2 * Math.PI);
					f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
				}
				var this17 = f10;
				var zb4 = this17;
				var fa4 = za4;
				var fb4 = zb4;
				var theta5 = Math.abs(beta - gamma1);
				var clockwise4 = beta < gamma1;
				var dif6 = clockwise4 ? theta5 : -theta5;
				dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
				break;
			case 1:
				var f11;
				if(beta >= 0 && beta > Math.PI) {
					f11 = beta;
				} else {
					var a11 = beta % (2 * Math.PI);
					f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
				}
				var this18 = f11;
				var za5 = this18;
				var f12;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f12 = gamma1;
				} else {
					var a12 = gamma1 % (2 * Math.PI);
					f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
				}
				var this19 = f12;
				var zb5 = this19;
				var fa5 = za5;
				var fb5 = zb5;
				var theta6 = Math.abs(beta - gamma1);
				var clockwise5 = beta < gamma1;
				var dif7 = clockwise5 ? theta6 : -theta6;
				dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
				break;
			case 2:
				var f13;
				if(beta >= 0 && beta > Math.PI) {
					f13 = beta;
				} else {
					var a13 = beta % (2 * Math.PI);
					f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
				}
				var this20 = f13;
				var za6 = this20;
				var f14;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f14 = gamma1;
				} else {
					var a14 = gamma1 % (2 * Math.PI);
					f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
				}
				var this21 = f14;
				var zb6 = this21;
				var fa6 = beta;
				var fb6 = gamma1;
				var theta7 = Math.abs(beta - gamma1);
				var smallest1 = theta7 <= Math.PI;
				var clockwise6 = beta < gamma1;
				var dif8 = clockwise6 ? theta7 : -theta7;
				dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
				break;
			case 3:
				var f15;
				if(beta >= 0 && beta > Math.PI) {
					f15 = beta;
				} else {
					var a15 = beta % (2 * Math.PI);
					f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
				}
				var this22 = f15;
				var za7 = this22;
				var f16;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f16 = gamma1;
				} else {
					var a16 = gamma1 % (2 * Math.PI);
					f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
				}
				var this23 = f16;
				var zb7 = this23;
				var fa7 = beta;
				var fb7 = gamma1;
				var theta8 = Math.abs(beta - gamma1);
				var largest1 = theta8 > Math.PI;
				var clockwise7 = beta < gamma1;
				var dif9 = clockwise7 ? theta8 : -theta8;
				dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta8) : 2 * Math.PI - theta8;
				break;
			}
			var positive = dif5 >= 0;
			var totalSteps = Math.ceil(Math.abs(dif5) / step);
			var step1 = dif5 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(i != 0) {
					var t4 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t4;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t5 = triArr[_g2];
				++_g2;
				this10[this10.length] = t5;
			}
		}
		if(curveEnds) {
			var radius1 = width_ / 2;
			var t6 = [];
			var this24;
			if(t6 == null) {
				var t7 = [];
				var this25;
				if(t7 == null) {
					var t8 = [];
					var this26;
					if(t8 == null) {
						var t9 = [];
						var this27 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
						this26 = this27;
					} else {
						this26 = t8;
					}
					this25 = this26;
				} else {
					this25 = t7;
				}
				this24 = this25;
			} else {
				this24 = t6;
			}
			var this28 = this24;
			var out1 = this28;
			var pi1 = Math.PI;
			var step2 = pi1 * 2 / 36;
			var positive1 = dif >= 0;
			var totalSteps1 = Math.ceil(Math.abs(dif) / step2);
			var step3 = dif / totalSteps1;
			var angle1 = theta0;
			var cx1;
			var cy1;
			var bx1 = 0;
			var by1 = 0;
			var _g3 = 0;
			var _g11 = totalSteps1 + 1;
			while(_g3 < _g11) {
				var i1 = _g3++;
				cx1 = ax_ + radius1 * Math.sin(angle1);
				cy1 = ay_ + radius1 * Math.cos(angle1);
				if(i1 != 0) {
					var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
					out1[out1.length] = t10;
				}
				angle1 += step3;
				bx1 = cx1;
				by1 = cy1;
			}
			var trilateralArray = out1;
			var this29 = this.triArr;
			var _g4 = 0;
			while(_g4 < trilateralArray.length) {
				var t11 = trilateralArray[_g4];
				++_g4;
				this29[this29.length] = t11;
			}
		} else if(this.count != 0) {
			if(overlap) {
				if(clockWise) {
					var this30 = this.triArr;
					var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.ax,this.ay,0);
					this30[this30.length] = tri;
				} else {
					var this31 = this.triArr;
					var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.ax,this.ay,0);
					this31[this31.length] = tri1;
				}
			} else if(clockWise) {
				var this32 = this.triArr;
				var tri2 = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.jx,this.jy,0);
				this32[this32.length] = tri2;
			} else {
				var this33 = this.triArr;
				var tri3 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
				this33[this33.length] = tri3;
			}
		}
		if(overlap) {
			var this34 = this.triArr;
			var tri4 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
			this34[this34.length] = tri4;
			var this35 = this.triArr;
			var tri5 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
			this35[this35.length] = tri5;
		} else {
			if(this.count != 0) {
				if(clockWise && !this.lastClock) {
					if(this.count == 1) {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.jxOld,this.jyOld);
					}
					this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
				}
				if(clockWise && this.lastClock) {
					if(this.count == 1) {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.jx,this.jy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.nbx,this.nby,this.ncx,this.ncy);
					}
				}
				if(!clockWise && !this.lastClock) {
					this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
					if(this.count == 1) {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.jxOld,this.jyOld);
					}
				}
				if(!clockWise && this.lastClock) {
					if(this.count == 1) {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
					} else {
						this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.kcx,this.kcy);
						this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.ncx,this.ncy);
					}
				}
			}
			this.quadIndex = this.triArr.length;
			if(this.count == 0) {
				var this36 = this.triArr;
				var tri6 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
				this36[this36.length] = tri6;
				var this37 = this.triArr;
				var tri7 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this37[this37.length] = tri7;
			} else {
				if(clockWise && !this.lastClock) {
					var this38 = this.triArr;
					var tri8 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this38[this38.length] = tri8;
					var this39 = this.triArr;
					var tri9 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
					this39[this39.length] = tri9;
				}
				if(clockWise && this.lastClock) {
					var this40 = this.triArr;
					var tri10 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this40[this40.length] = tri10;
					var this41 = this.triArr;
					var tri11 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
					this41[this41.length] = tri11;
				}
				if(!clockWise && !this.lastClock) {
					var this42 = this.triArr;
					var tri12 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.jx,this.jy,0);
					this42[this42.length] = tri12;
					var this43 = this.triArr;
					var tri13 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
					this43[this43.length] = tri13;
				}
				if(!clockWise && this.lastClock) {
					var this44 = this.triArr;
					var tri14 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this44[this44.length] = tri14;
					var this45 = this.triArr;
					var tri15 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.jx,this.jy,this.ex,this.ey,0);
					this45[this45.length] = tri15;
				}
			}
		}
		this.nax = this.dxPrev;
		this.nay = this.dyPrev;
		this.nbx = this.dx;
		this.nby = this.dy;
		this.ncx = this.exPrev;
		this.ncy = this.eyPrev;
		this.kax = this.dxPrev;
		this.kay = this.dyPrev;
		this.kbx = this.dx;
		this.kby = this.dy;
		this.kcx = this.ex;
		this.kcy = this.ey;
		if(curveEnds && !overlap && this.count != 0) {
			if(clockWise) {
				var this46 = this.triArr;
				var tri16 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxOld,this.dyOld,this.jx,this.jy,0);
				this46[this46.length] = tri16;
				var this47 = this.triArr;
				var tri17 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exPrev,this.eyPrev,this.jx,this.jy,0);
				this47[this47.length] = tri17;
			} else {
				var this48 = this.triArr;
				var tri18 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exOld,this.eyOld,this.jx,this.jy,0);
				this48[this48.length] = tri18;
				var this49 = this.triArr;
				var tri19 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
				this49[this49.length] = tri19;
			}
		}
		this.jxOld = this.jx;
		this.jyOld = this.jy;
		this.lastClock = clockWise;
		this.count++;
		return this.triArr;
	}
	,overlapQuad: function() {
		var this1 = this.triArr;
		var tri = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
		this1[this1.length] = tri;
		var this2 = this.triArr;
		var tri1 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
		this2[this2.length] = tri1;
	}
	,end: function(width_) {
		var ax = this.bx;
		var ay = this.by;
		var radius = width_ / 2;
		var beta = -this.angle1 - Math.PI / 2;
		var gamma = -this.angle1 - Math.PI / 2 - Math.PI;
		var this1 = this.triArr;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3;
			if(t1 == null) {
				var t2 = [];
				var this4;
				if(t2 == null) {
					var t3 = [];
					var this5 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
					this4 = this5;
				} else {
					this4 = t2;
				}
				this3 = this4;
			} else {
				this3 = t1;
			}
			this2 = this3;
		} else {
			this2 = t;
		}
		var this6 = this2;
		var out = this6;
		var pi = Math.PI;
		var step = pi * 2 / 36;
		var dif;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this7 = f;
			var za = this7;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this8 = f1;
			var zb = this8;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(beta - gamma);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this9 = f2;
			var za1 = this9;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this10 = f3;
			var zb1 = this10;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(beta - gamma);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this11 = f4;
			var za2 = this11;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this12 = f5;
			var zb2 = this12;
			var fa2 = beta;
			var fb2 = gamma;
			var theta2 = Math.abs(beta - gamma);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this13 = f6;
			var za3 = this13;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this14 = f7;
			var zb3 = this14;
			var fa3 = beta;
			var fb3 = gamma;
			var theta3 = Math.abs(beta - gamma);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			if(i != 0) {
				var t4 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t4;
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t5 = triArr[_g2];
			++_g2;
			this1[this1.length] = t5;
		}
	}
	,add: function(trilateral1) {
		var this1 = this.triArr;
		this1[this1.length] = trilateral1;
	}
	,addArray: function(trilateralArray) {
		var this1 = this.triArr;
		var _g = 0;
		while(_g < trilateralArray.length) {
			var t = trilateralArray[_g];
			++_g;
			this1[this1.length] = t;
		}
	}
	,addTri: function(ax_,ay_,bx_,by_,cx_,cy_,mark_) {
		if(mark_ == null) {
			mark_ = 0;
		}
		var this1 = this.triArr;
		var tri = new trilateral_tri_Trilateral(ax_,ay_,bx_,by_,cx_,cy_,mark_);
		this1[this1.length] = tri;
	}
	,addPie: function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
		if(sides == null) {
			sides = 36;
		}
		if(mark == null) {
			mark = 0;
		}
		var this1 = this.triArr;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3;
			if(t1 == null) {
				var t2 = [];
				var this4;
				if(t2 == null) {
					var t3 = [];
					var this5 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
					this4 = this5;
				} else {
					this4 = t2;
				}
				this3 = this4;
			} else {
				this3 = t1;
			}
			this2 = this3;
		} else {
			this2 = t;
		}
		var this6 = this2;
		var out = this6;
		var pi = Math.PI;
		var step = pi * 2 / sides;
		var dif;
		switch(prefer._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this7 = f;
			var za = this7;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this8 = f1;
			var zb = this8;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(beta - gamma);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this9 = f2;
			var za1 = this9;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this10 = f3;
			var zb1 = this10;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(beta - gamma);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this11 = f4;
			var za2 = this11;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this12 = f5;
			var zb2 = this12;
			var fa2 = beta;
			var fb2 = gamma;
			var theta2 = Math.abs(beta - gamma);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this13 = f6;
			var za3 = this13;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this14 = f7;
			var zb3 = this14;
			var fa3 = beta;
			var fb3 = gamma;
			var theta3 = Math.abs(beta - gamma);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			if(i != 0) {
				var t4 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t4;
				if(mark != 0) {
					t4.mark = mark;
				}
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t5 = triArr[_g2];
			++_g2;
			this1[this1.length] = t5;
		}
	}
	,computeJ: function(width_,theta0,dif) {
		var gamma = Math.abs(dif) / 2;
		var h = width_ * Math.sin(gamma);
		var f;
		if(theta0 <= Math.PI && theta0 > -Math.PI) {
			f = theta0;
		} else {
			var a = (theta0 + Math.PI) % (2 * Math.PI);
			f = a >= 0 ? a - Math.PI : a + Math.PI;
		}
		var this1 = f;
		var start = this1;
		var start2 = start;
		var delta = start2 + dif / 2 + Math.PI;
		this.jx = this.ax + h * Math.sin(delta);
		this.jy = this.ay + h * Math.cos(delta);
	}
	,addDot: function(x,y,color) {
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2;
			if(t1 == null) {
				var t2 = [];
				var this3;
				if(t2 == null) {
					var t3 = [];
					var this4 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
					this3 = this4;
				} else {
					this3 = t2;
				}
				this2 = this3;
			} else {
				this2 = t1;
			}
			this1 = this2;
		} else {
			this1 = t;
		}
		var this5 = this1;
		var out = this5;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = 36;
		while(_g < _g1) {
			var i = _g++;
			bx = x + 0.008 * Math.sin(theta);
			by = y + 0.008 * Math.cos(theta);
			theta += step;
			cx = x + 0.008 * Math.sin(theta);
			cy = y + 0.008 * Math.cos(theta);
			var t4 = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = t4;
			t4.mark = color;
		}
		var trilateralArray = out;
		var this6 = this.triArr;
		var _g2 = 0;
		while(_g2 < trilateralArray.length) {
			var t5 = trilateralArray[_g2];
			++_g2;
			this6[this6.length] = t5;
		}
	}
	,addSmallTriangles: function(clockWise) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxOld,this.dyOld,this.jx,this.jy,0);
			this1[this1.length] = tri;
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exPrev,this.eyPrev,this.jx,this.jy,0);
			this2[this2.length] = tri1;
		} else {
			var this3 = this.triArr;
			var tri2 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exOld,this.eyOld,this.jx,this.jy,0);
			this3[this3.length] = tri2;
			var this4 = this.triArr;
			var tri3 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
			this4[this4.length] = tri3;
		}
	}
	,addTriangleCorners: function(oldx_,oldy_,prevx_,prevy_) {
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2;
			if(t1 == null) {
				var t2 = [];
				var this3;
				if(t2 == null) {
					var t3 = [];
					var this4 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
					this3 = this4;
				} else {
					this3 = t2;
				}
				this2 = this3;
			} else {
				this2 = t1;
			}
			this1 = this2;
		} else {
			this1 = t;
		}
		var this5 = this1;
		var out = this5;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = 36;
		while(_g < _g1) {
			var i = _g++;
			bx = oldx_ + 0.01 * Math.sin(theta);
			by = oldy_ + 0.01 * Math.cos(theta);
			theta += step;
			cx = oldx_ + 0.01 * Math.sin(theta);
			cy = oldy_ + 0.01 * Math.cos(theta);
			var t4 = new trilateral_tri_Trilateral(oldx_,oldy_,bx,by,cx,cy);
			out[out.length] = t4;
			t4.mark = 4;
		}
		var trilateralArray = out;
		var this6 = this.triArr;
		var _g2 = 0;
		while(_g2 < trilateralArray.length) {
			var t5 = trilateralArray[_g2];
			++_g2;
			this6[this6.length] = t5;
		}
		var t6 = [];
		var this7;
		if(t6 == null) {
			var t7 = [];
			var this8;
			if(t7 == null) {
				var t8 = [];
				var this9;
				if(t8 == null) {
					var t9 = [];
					var this10 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
					this9 = this10;
				} else {
					this9 = t8;
				}
				this8 = this9;
			} else {
				this8 = t7;
			}
			this7 = this8;
		} else {
			this7 = t6;
		}
		var this11 = this7;
		var out1 = this11;
		var pi1 = Math.PI;
		var theta1 = pi1 / 2;
		var step1 = pi1 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g3 = 0;
		var _g11 = 36;
		while(_g3 < _g11) {
			var i1 = _g3++;
			bx1 = prevx_ + 0.01 * Math.sin(theta1);
			by1 = prevy_ + 0.01 * Math.cos(theta1);
			theta1 += step1;
			cx1 = prevx_ + 0.01 * Math.sin(theta1);
			cy1 = prevy_ + 0.01 * Math.cos(theta1);
			var t10 = new trilateral_tri_Trilateral(prevx_,prevy_,bx1,by1,cx1,cy1);
			out1[out1.length] = t10;
			t10.mark = 3;
		}
		var trilateralArray1 = out1;
		var this12 = this.triArr;
		var _g4 = 0;
		while(_g4 < trilateralArray1.length) {
			var t11 = trilateralArray1[_g4];
			++_g4;
			this12[this12.length] = t11;
		}
		var ax = this.ax;
		var ay = this.ay;
		var t12 = [];
		var this13;
		if(t12 == null) {
			var t13 = [];
			var this14;
			if(t13 == null) {
				var t14 = [];
				var this15;
				if(t14 == null) {
					var t15 = [];
					var this16 = t15 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t15;
					this15 = this16;
				} else {
					this15 = t14;
				}
				this14 = this15;
			} else {
				this14 = t13;
			}
			this13 = this14;
		} else {
			this13 = t12;
		}
		var this17 = this13;
		var out2 = this17;
		var pi2 = Math.PI;
		var theta2 = pi2 / 2;
		var step2 = pi2 * 2 / 36;
		var bx2;
		var by2;
		var cx2;
		var cy2;
		var _g5 = 0;
		var _g12 = 36;
		while(_g5 < _g12) {
			var i2 = _g5++;
			bx2 = ax + 0.01 * Math.sin(theta2);
			by2 = ay + 0.01 * Math.cos(theta2);
			theta2 += step2;
			cx2 = ax + 0.01 * Math.sin(theta2);
			cy2 = ay + 0.01 * Math.cos(theta2);
			var t16 = new trilateral_tri_Trilateral(ax,ay,bx2,by2,cx2,cy2);
			out2[out2.length] = t16;
			t16.mark = 10;
		}
		var trilateralArray2 = out2;
		var this18 = this.triArr;
		var _g6 = 0;
		while(_g6 < trilateralArray2.length) {
			var t17 = trilateralArray2[_g6];
			++_g6;
			this18[this18.length] = t17;
		}
		var ax1 = this.jx;
		var ay1 = this.jy;
		var t18 = [];
		var this19;
		if(t18 == null) {
			var t19 = [];
			var this20;
			if(t19 == null) {
				var t20 = [];
				var this21;
				if(t20 == null) {
					var t21 = [];
					var this22 = t21 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t21;
					this21 = this22;
				} else {
					this21 = t20;
				}
				this20 = this21;
			} else {
				this20 = t19;
			}
			this19 = this20;
		} else {
			this19 = t18;
		}
		var this23 = this19;
		var out3 = this23;
		var pi3 = Math.PI;
		var theta3 = pi3 / 2;
		var step3 = pi3 * 2 / 36;
		var bx3;
		var by3;
		var cx3;
		var cy3;
		var _g7 = 0;
		var _g13 = 36;
		while(_g7 < _g13) {
			var i3 = _g7++;
			bx3 = ax1 + 0.01 * Math.sin(theta3);
			by3 = ay1 + 0.01 * Math.cos(theta3);
			theta3 += step3;
			cx3 = ax1 + 0.01 * Math.sin(theta3);
			cy3 = ay1 + 0.01 * Math.cos(theta3);
			var t22 = new trilateral_tri_Trilateral(ax1,ay1,bx3,by3,cx3,cy3);
			out3[out3.length] = t22;
			t22.mark = 5;
		}
		var trilateralArray3 = out3;
		var this24 = this.triArr;
		var _g8 = 0;
		while(_g8 < trilateralArray3.length) {
			var t23 = trilateralArray3[_g8];
			++_g8;
			this24[this24.length] = t23;
		}
	}
	,addTriangleCornersLess: function(oldx_,oldy_,prevx_,prevy_) {
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2;
			if(t1 == null) {
				var t2 = [];
				var this3;
				if(t2 == null) {
					var t3 = [];
					var this4 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
					this3 = this4;
				} else {
					this3 = t2;
				}
				this2 = this3;
			} else {
				this2 = t1;
			}
			this1 = this2;
		} else {
			this1 = t;
		}
		var this5 = this1;
		var out = this5;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = 36;
		while(_g < _g1) {
			var i = _g++;
			bx = oldx_ + 0.01 * Math.sin(theta);
			by = oldy_ + 0.01 * Math.cos(theta);
			theta += step;
			cx = oldx_ + 0.01 * Math.sin(theta);
			cy = oldy_ + 0.01 * Math.cos(theta);
			var t4 = new trilateral_tri_Trilateral(oldx_,oldy_,bx,by,cx,cy);
			out[out.length] = t4;
			t4.mark = 4;
		}
		var trilateralArray = out;
		var this6 = this.triArr;
		var _g2 = 0;
		while(_g2 < trilateralArray.length) {
			var t5 = trilateralArray[_g2];
			++_g2;
			this6[this6.length] = t5;
		}
		var t6 = [];
		var this7;
		if(t6 == null) {
			var t7 = [];
			var this8;
			if(t7 == null) {
				var t8 = [];
				var this9;
				if(t8 == null) {
					var t9 = [];
					var this10 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
					this9 = this10;
				} else {
					this9 = t8;
				}
				this8 = this9;
			} else {
				this8 = t7;
			}
			this7 = this8;
		} else {
			this7 = t6;
		}
		var this11 = this7;
		var out1 = this11;
		var pi1 = Math.PI;
		var theta1 = pi1 / 2;
		var step1 = pi1 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g3 = 0;
		var _g11 = 36;
		while(_g3 < _g11) {
			var i1 = _g3++;
			bx1 = prevx_ + 0.01 * Math.sin(theta1);
			by1 = prevy_ + 0.01 * Math.cos(theta1);
			theta1 += step1;
			cx1 = prevx_ + 0.01 * Math.sin(theta1);
			cy1 = prevy_ + 0.01 * Math.cos(theta1);
			var t10 = new trilateral_tri_Trilateral(prevx_,prevy_,bx1,by1,cx1,cy1);
			out1[out1.length] = t10;
			t10.mark = 3;
		}
		var trilateralArray1 = out1;
		var this12 = this.triArr;
		var _g4 = 0;
		while(_g4 < trilateralArray1.length) {
			var t11 = trilateralArray1[_g4];
			++_g4;
			this12[this12.length] = t11;
		}
		var ax = this.jx;
		var ay = this.jy;
		var t12 = [];
		var this13;
		if(t12 == null) {
			var t13 = [];
			var this14;
			if(t13 == null) {
				var t14 = [];
				var this15;
				if(t14 == null) {
					var t15 = [];
					var this16 = t15 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t15;
					this15 = this16;
				} else {
					this15 = t14;
				}
				this14 = this15;
			} else {
				this14 = t13;
			}
			this13 = this14;
		} else {
			this13 = t12;
		}
		var this17 = this13;
		var out2 = this17;
		var pi2 = Math.PI;
		var theta2 = pi2 / 2;
		var step2 = pi2 * 2 / 36;
		var bx2;
		var by2;
		var cx2;
		var cy2;
		var _g5 = 0;
		var _g12 = 36;
		while(_g5 < _g12) {
			var i2 = _g5++;
			bx2 = ax + 0.01 * Math.sin(theta2);
			by2 = ay + 0.01 * Math.cos(theta2);
			theta2 += step2;
			cx2 = ax + 0.01 * Math.sin(theta2);
			cy2 = ay + 0.01 * Math.cos(theta2);
			var t16 = new trilateral_tri_Trilateral(ax,ay,bx2,by2,cx2,cy2);
			out2[out2.length] = t16;
			t16.mark = 5;
		}
		var trilateralArray2 = out2;
		var this18 = this.triArr;
		var _g6 = 0;
		while(_g6 < trilateralArray2.length) {
			var t17 = trilateralArray2[_g6];
			++_g6;
			this18[this18.length] = t17;
		}
	}
	,connectQuadsWhenQuadsOverlay: function(clockWise) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.ax,this.ay,0);
			this1[this1.length] = tri;
		} else {
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.ax,this.ay,0);
			this2[this2.length] = tri1;
		}
	}
	,connectQuads: function(clockWise) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.jx,this.jy,0);
			this1[this1.length] = tri;
		} else {
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
			this2[this2.length] = tri1;
		}
	}
	,addInitialQuads: function(clockWise) {
		this.quadIndex = this.triArr.length;
		if(this.count == 0) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
			this1[this1.length] = tri;
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
			this2[this2.length] = tri1;
		} else {
			if(clockWise && !this.lastClock) {
				var this3 = this.triArr;
				var tri2 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this3[this3.length] = tri2;
				var this4 = this.triArr;
				var tri3 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this4[this4.length] = tri3;
			}
			if(clockWise && this.lastClock) {
				var this5 = this.triArr;
				var tri4 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this5[this5.length] = tri4;
				var this6 = this.triArr;
				var tri5 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this6[this6.length] = tri5;
			}
			if(!clockWise && !this.lastClock) {
				var this7 = this.triArr;
				var tri6 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.jx,this.jy,0);
				this7[this7.length] = tri6;
				var this8 = this.triArr;
				var tri7 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
				this8[this8.length] = tri7;
			}
			if(!clockWise && this.lastClock) {
				var this9 = this.triArr;
				var tri8 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this9[this9.length] = tri8;
				var this10 = this.triArr;
				var tri9 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.jx,this.jy,this.ex,this.ey,0);
				this10[this10.length] = tri9;
			}
		}
	}
	,addQuads: function(clockWise) {
		if(clockWise && !this.lastClock) {
			if(this.count == 1) {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.jxOld,this.jyOld);
			}
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
		}
		if(clockWise && this.lastClock) {
			if(this.count == 1) {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.nbx,this.nby,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.nbx,this.nby,this.ncx,this.ncy);
			}
		}
		if(!clockWise && !this.lastClock) {
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
			if(this.count == 1) {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.jxOld,this.jyOld);
			}
		}
		if(!clockWise && this.lastClock) {
			if(this.count == 1) {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.nax,this.nay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.ncx,this.ncy);
			}
		}
	}
	,storeLastQuads: function() {
		this.nax = this.dxPrev;
		this.nay = this.dyPrev;
		this.nbx = this.dx;
		this.nby = this.dy;
		this.ncx = this.exPrev;
		this.ncy = this.eyPrev;
		this.kax = this.dxPrev;
		this.kay = this.dyPrev;
		this.kbx = this.dx;
		this.kby = this.dy;
		this.kcx = this.ex;
		this.kcy = this.ey;
	}
	,isClockwise: function(x,y) {
		var x1 = this.dxOld - x;
		var y1 = this.dyOld - y;
		var x2 = this.exOld - x;
		var y2 = this.eyOld - y;
		return x1 * x1 + y1 * y1 > x2 * x2 + y2 * y2;
	}
	,line: function(ax_,ay_,bx_,by_,width_,endLineCurve) {
		if(endLineCurve == null) {
			endLineCurve = 0;
		}
		this.ax = bx_;
		this.ay = by_;
		this.bx = ax_;
		this.by = ay_;
		this.halfA = Math.PI / 2;
		this.beta = Math.PI / 2 - this.halfA;
		this.r = width_ / 2 * Math.cos(this.beta);
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		var dxPrev_ = this.dx;
		var dyPrev_ = this.dy;
		var exPrev_ = this.ex;
		var eyPrev_ = this.ey;
		this.ax = ax_;
		this.ay = ay_;
		this.bx = bx_;
		this.by = by_;
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		switch(endLineCurve) {
		case 0:
			break;
		case 1:
			var radius = width_ / 2;
			var beta = -this.angle1 - Math.PI / 2;
			var gamma = -this.angle1 - Math.PI / 2 + Math.PI;
			var this1 = this.triArr;
			var t = [];
			var this2;
			if(t == null) {
				var t1 = [];
				var this3;
				if(t1 == null) {
					var t2 = [];
					var this4;
					if(t2 == null) {
						var t3 = [];
						var this5 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
						this4 = this5;
					} else {
						this4 = t2;
					}
					this3 = this4;
				} else {
					this3 = t1;
				}
				this2 = this3;
			} else {
				this2 = t;
			}
			var this6 = this2;
			var out = this6;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f;
				if(beta >= 0 && beta > Math.PI) {
					f = beta;
				} else {
					var a = beta % (2 * Math.PI);
					f = a >= 0 ? a : a + 2 * Math.PI;
				}
				var this7 = f;
				var za = this7;
				var f1;
				if(gamma >= 0 && gamma > Math.PI) {
					f1 = gamma;
				} else {
					var a1 = gamma % (2 * Math.PI);
					f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
				}
				var this8 = f1;
				var zb = this8;
				var fa = za;
				var fb = zb;
				var theta = Math.abs(beta - gamma);
				var clockwise = beta < gamma;
				var dif1 = clockwise ? theta : -theta;
				dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
				break;
			case 1:
				var f2;
				if(beta >= 0 && beta > Math.PI) {
					f2 = beta;
				} else {
					var a2 = beta % (2 * Math.PI);
					f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
				}
				var this9 = f2;
				var za1 = this9;
				var f3;
				if(gamma >= 0 && gamma > Math.PI) {
					f3 = gamma;
				} else {
					var a3 = gamma % (2 * Math.PI);
					f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
				}
				var this10 = f3;
				var zb1 = this10;
				var fa1 = za1;
				var fb1 = zb1;
				var theta1 = Math.abs(beta - gamma);
				var clockwise1 = beta < gamma;
				var dif2 = clockwise1 ? theta1 : -theta1;
				dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
				break;
			case 2:
				var f4;
				if(beta >= 0 && beta > Math.PI) {
					f4 = beta;
				} else {
					var a4 = beta % (2 * Math.PI);
					f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
				}
				var this11 = f4;
				var za2 = this11;
				var f5;
				if(gamma >= 0 && gamma > Math.PI) {
					f5 = gamma;
				} else {
					var a5 = gamma % (2 * Math.PI);
					f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
				}
				var this12 = f5;
				var zb2 = this12;
				var fa2 = beta;
				var fb2 = gamma;
				var theta2 = Math.abs(beta - gamma);
				var smallest = theta2 <= Math.PI;
				var clockwise2 = beta < gamma;
				var dif3 = clockwise2 ? theta2 : -theta2;
				dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
				break;
			case 3:
				var f6;
				if(beta >= 0 && beta > Math.PI) {
					f6 = beta;
				} else {
					var a6 = beta % (2 * Math.PI);
					f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
				}
				var this13 = f6;
				var za3 = this13;
				var f7;
				if(gamma >= 0 && gamma > Math.PI) {
					f7 = gamma;
				} else {
					var a7 = gamma % (2 * Math.PI);
					f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
				}
				var this14 = f7;
				var zb3 = this14;
				var fa3 = beta;
				var fb3 = gamma;
				var theta3 = Math.abs(beta - gamma);
				var largest = theta3 > Math.PI;
				var clockwise3 = beta < gamma;
				var dif4 = clockwise3 ? theta3 : -theta3;
				dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
				break;
			}
			var positive = dif >= 0;
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax_ + radius * Math.sin(angle);
				cy = ay_ + radius * Math.cos(angle);
				if(i != 0) {
					var t4 = new trilateral_tri_Trilateral(ax_,ay_,bx,by,cx,cy);
					out[out.length] = t4;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t5 = triArr[_g2];
				++_g2;
				this1[this1.length] = t5;
			}
			break;
		case 2:
			var radius1 = width_ / 2;
			var beta1 = -this.angle1 - Math.PI / 2;
			var gamma1 = -this.angle1 - Math.PI / 2 - Math.PI;
			var this15 = this.triArr;
			var t6 = [];
			var this16;
			if(t6 == null) {
				var t7 = [];
				var this17;
				if(t7 == null) {
					var t8 = [];
					var this18;
					if(t8 == null) {
						var t9 = [];
						var this19 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
						this18 = this19;
					} else {
						this18 = t8;
					}
					this17 = this18;
				} else {
					this17 = t7;
				}
				this16 = this17;
			} else {
				this16 = t6;
			}
			var this20 = this16;
			var out1 = this20;
			var pi1 = Math.PI;
			var step2 = pi1 * 2 / 36;
			var dif5;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f8;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f8 = beta1;
				} else {
					var a8 = beta1 % (2 * Math.PI);
					f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
				}
				var this21 = f8;
				var za4 = this21;
				var f9;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f9 = gamma1;
				} else {
					var a9 = gamma1 % (2 * Math.PI);
					f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
				}
				var this22 = f9;
				var zb4 = this22;
				var fa4 = za4;
				var fb4 = zb4;
				var theta4 = Math.abs(beta1 - gamma1);
				var clockwise4 = beta1 < gamma1;
				var dif6 = clockwise4 ? theta4 : -theta4;
				dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
				break;
			case 1:
				var f10;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f10 = beta1;
				} else {
					var a10 = beta1 % (2 * Math.PI);
					f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
				}
				var this23 = f10;
				var za5 = this23;
				var f11;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f11 = gamma1;
				} else {
					var a11 = gamma1 % (2 * Math.PI);
					f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
				}
				var this24 = f11;
				var zb5 = this24;
				var fa5 = za5;
				var fb5 = zb5;
				var theta5 = Math.abs(beta1 - gamma1);
				var clockwise5 = beta1 < gamma1;
				var dif7 = clockwise5 ? theta5 : -theta5;
				dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
				break;
			case 2:
				var f12;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f12 = beta1;
				} else {
					var a12 = beta1 % (2 * Math.PI);
					f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
				}
				var this25 = f12;
				var za6 = this25;
				var f13;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f13 = gamma1;
				} else {
					var a13 = gamma1 % (2 * Math.PI);
					f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
				}
				var this26 = f13;
				var zb6 = this26;
				var fa6 = beta1;
				var fb6 = gamma1;
				var theta6 = Math.abs(beta1 - gamma1);
				var smallest1 = theta6 <= Math.PI;
				var clockwise6 = beta1 < gamma1;
				var dif8 = clockwise6 ? theta6 : -theta6;
				dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
				break;
			case 3:
				var f14;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f14 = beta1;
				} else {
					var a14 = beta1 % (2 * Math.PI);
					f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
				}
				var this27 = f14;
				var za7 = this27;
				var f15;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f15 = gamma1;
				} else {
					var a15 = gamma1 % (2 * Math.PI);
					f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
				}
				var this28 = f15;
				var zb7 = this28;
				var fa7 = beta1;
				var fb7 = gamma1;
				var theta7 = Math.abs(beta1 - gamma1);
				var largest1 = theta7 > Math.PI;
				var clockwise7 = beta1 < gamma1;
				var dif9 = clockwise7 ? theta7 : -theta7;
				dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
				break;
			}
			var positive1 = dif5 >= 0;
			var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
			var step3 = dif5 / totalSteps1;
			var angle1 = beta1;
			var cx1;
			var cy1;
			var bx1 = 0;
			var by1 = 0;
			var _g3 = 0;
			var _g11 = totalSteps1 + 1;
			while(_g3 < _g11) {
				var i1 = _g3++;
				cx1 = bx_ + radius1 * Math.sin(angle1);
				cy1 = by_ + radius1 * Math.cos(angle1);
				if(i1 != 0) {
					var t10 = new trilateral_tri_Trilateral(bx_,by_,bx1,by1,cx1,cy1);
					out1[out1.length] = t10;
				}
				angle1 += step3;
				bx1 = cx1;
				by1 = cy1;
			}
			var triArr1 = out1;
			var _g4 = 0;
			while(_g4 < triArr1.length) {
				var t11 = triArr1[_g4];
				++_g4;
				this15[this15.length] = t11;
			}
			break;
		case 3:
			var radius2 = width_ / 2;
			var beta2 = -this.angle1 - Math.PI / 2;
			var gamma2 = -this.angle1 - Math.PI / 2 + Math.PI;
			var this29 = this.triArr;
			var t12 = [];
			var this30;
			if(t12 == null) {
				var t13 = [];
				var this31;
				if(t13 == null) {
					var t14 = [];
					var this32;
					if(t14 == null) {
						var t15 = [];
						var this33 = t15 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t15;
						this32 = this33;
					} else {
						this32 = t14;
					}
					this31 = this32;
				} else {
					this31 = t13;
				}
				this30 = this31;
			} else {
				this30 = t12;
			}
			var this34 = this30;
			var out2 = this34;
			var pi2 = Math.PI;
			var step4 = pi2 * 2 / 36;
			var dif10;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f16;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f16 = beta2;
				} else {
					var a16 = beta2 % (2 * Math.PI);
					f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
				}
				var this35 = f16;
				var za8 = this35;
				var f17;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f17 = gamma2;
				} else {
					var a17 = gamma2 % (2 * Math.PI);
					f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
				}
				var this36 = f17;
				var zb8 = this36;
				var fa8 = za8;
				var fb8 = zb8;
				var theta8 = Math.abs(beta2 - gamma2);
				var clockwise8 = beta2 < gamma2;
				var dif11 = clockwise8 ? theta8 : -theta8;
				dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
				break;
			case 1:
				var f18;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f18 = beta2;
				} else {
					var a18 = beta2 % (2 * Math.PI);
					f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
				}
				var this37 = f18;
				var za9 = this37;
				var f19;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f19 = gamma2;
				} else {
					var a19 = gamma2 % (2 * Math.PI);
					f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
				}
				var this38 = f19;
				var zb9 = this38;
				var fa9 = za9;
				var fb9 = zb9;
				var theta9 = Math.abs(beta2 - gamma2);
				var clockwise9 = beta2 < gamma2;
				var dif12 = clockwise9 ? theta9 : -theta9;
				dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
				break;
			case 2:
				var f20;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f20 = beta2;
				} else {
					var a20 = beta2 % (2 * Math.PI);
					f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
				}
				var this39 = f20;
				var za10 = this39;
				var f21;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f21 = gamma2;
				} else {
					var a21 = gamma2 % (2 * Math.PI);
					f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
				}
				var this40 = f21;
				var zb10 = this40;
				var fa10 = beta2;
				var fb10 = gamma2;
				var theta10 = Math.abs(beta2 - gamma2);
				var smallest2 = theta10 <= Math.PI;
				var clockwise10 = beta2 < gamma2;
				var dif13 = clockwise10 ? theta10 : -theta10;
				dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
				break;
			case 3:
				var f22;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f22 = beta2;
				} else {
					var a22 = beta2 % (2 * Math.PI);
					f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
				}
				var this41 = f22;
				var za11 = this41;
				var f23;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f23 = gamma2;
				} else {
					var a23 = gamma2 % (2 * Math.PI);
					f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
				}
				var this42 = f23;
				var zb11 = this42;
				var fa11 = beta2;
				var fb11 = gamma2;
				var theta11 = Math.abs(beta2 - gamma2);
				var largest2 = theta11 > Math.PI;
				var clockwise11 = beta2 < gamma2;
				var dif14 = clockwise11 ? theta11 : -theta11;
				dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
				break;
			}
			var positive2 = dif10 >= 0;
			var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
			var step5 = dif10 / totalSteps2;
			var angle2 = beta2;
			var cx2;
			var cy2;
			var bx2 = 0;
			var by2 = 0;
			var _g5 = 0;
			var _g12 = totalSteps2 + 1;
			while(_g5 < _g12) {
				var i2 = _g5++;
				cx2 = ax_ + radius2 * Math.sin(angle2);
				cy2 = ay_ + radius2 * Math.cos(angle2);
				if(i2 != 0) {
					var t16 = new trilateral_tri_Trilateral(ax_,ay_,bx2,by2,cx2,cy2);
					out2[out2.length] = t16;
				}
				angle2 += step5;
				bx2 = cx2;
				by2 = cy2;
			}
			var triArr2 = out2;
			var _g6 = 0;
			while(_g6 < triArr2.length) {
				var t17 = triArr2[_g6];
				++_g6;
				this29[this29.length] = t17;
			}
			var radius3 = width_ / 2;
			var beta3 = -this.angle1 - Math.PI / 2;
			var gamma3 = -this.angle1 - Math.PI / 2 - Math.PI;
			var this43 = this.triArr;
			var t18 = [];
			var this44;
			if(t18 == null) {
				var t19 = [];
				var this45;
				if(t19 == null) {
					var t20 = [];
					var this46;
					if(t20 == null) {
						var t21 = [];
						var this47 = t21 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t21;
						this46 = this47;
					} else {
						this46 = t20;
					}
					this45 = this46;
				} else {
					this45 = t19;
				}
				this44 = this45;
			} else {
				this44 = t18;
			}
			var this48 = this44;
			var out3 = this48;
			var pi3 = Math.PI;
			var step6 = pi3 * 2 / 36;
			var dif15;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f24;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f24 = beta3;
				} else {
					var a24 = beta3 % (2 * Math.PI);
					f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
				}
				var this49 = f24;
				var za12 = this49;
				var f25;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f25 = gamma3;
				} else {
					var a25 = gamma3 % (2 * Math.PI);
					f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
				}
				var this50 = f25;
				var zb12 = this50;
				var fa12 = za12;
				var fb12 = zb12;
				var theta12 = Math.abs(beta3 - gamma3);
				var clockwise12 = beta3 < gamma3;
				var dif16 = clockwise12 ? theta12 : -theta12;
				dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
				break;
			case 1:
				var f26;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f26 = beta3;
				} else {
					var a26 = beta3 % (2 * Math.PI);
					f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
				}
				var this51 = f26;
				var za13 = this51;
				var f27;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f27 = gamma3;
				} else {
					var a27 = gamma3 % (2 * Math.PI);
					f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
				}
				var this52 = f27;
				var zb13 = this52;
				var fa13 = za13;
				var fb13 = zb13;
				var theta13 = Math.abs(beta3 - gamma3);
				var clockwise13 = beta3 < gamma3;
				var dif17 = clockwise13 ? theta13 : -theta13;
				dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
				break;
			case 2:
				var f28;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f28 = beta3;
				} else {
					var a28 = beta3 % (2 * Math.PI);
					f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
				}
				var this53 = f28;
				var za14 = this53;
				var f29;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f29 = gamma3;
				} else {
					var a29 = gamma3 % (2 * Math.PI);
					f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
				}
				var this54 = f29;
				var zb14 = this54;
				var fa14 = beta3;
				var fb14 = gamma3;
				var theta14 = Math.abs(beta3 - gamma3);
				var smallest3 = theta14 <= Math.PI;
				var clockwise14 = beta3 < gamma3;
				var dif18 = clockwise14 ? theta14 : -theta14;
				dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
				break;
			case 3:
				var f30;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f30 = beta3;
				} else {
					var a30 = beta3 % (2 * Math.PI);
					f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
				}
				var this55 = f30;
				var za15 = this55;
				var f31;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f31 = gamma3;
				} else {
					var a31 = gamma3 % (2 * Math.PI);
					f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
				}
				var this56 = f31;
				var zb15 = this56;
				var fa15 = beta3;
				var fb15 = gamma3;
				var theta15 = Math.abs(beta3 - gamma3);
				var largest3 = theta15 > Math.PI;
				var clockwise15 = beta3 < gamma3;
				var dif19 = clockwise15 ? theta15 : -theta15;
				dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
				break;
			}
			var positive3 = dif15 >= 0;
			var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
			var step7 = dif15 / totalSteps3;
			var angle3 = beta3;
			var cx3;
			var cy3;
			var bx3 = 0;
			var by3 = 0;
			var _g7 = 0;
			var _g13 = totalSteps3 + 1;
			while(_g7 < _g13) {
				var i3 = _g7++;
				cx3 = bx_ + radius3 * Math.sin(angle3);
				cy3 = by_ + radius3 * Math.cos(angle3);
				if(i3 != 0) {
					var t22 = new trilateral_tri_Trilateral(bx_,by_,bx3,by3,cx3,cy3);
					out3[out3.length] = t22;
				}
				angle3 += step7;
				bx3 = cx3;
				by3 = cy3;
			}
			var triArr3 = out3;
			var _g8 = 0;
			while(_g8 < triArr3.length) {
				var t23 = triArr3[_g8];
				++_g8;
				this43[this43.length] = t23;
			}
			break;
		}
		var this57 = this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,this.dx,this.dy,exPrev_,eyPrev_,0);
		this57[this57.length] = tri;
		var this58 = this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,this.dx,this.dy,this.ex,this.ey,0);
		this58[this58.length] = tri1;
	}
	,computeDE: function() {
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
	}
	,anglesCompute: function() {
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
	}
	,thetaComputeAdj: function(qx,qy) {
		return -Math.atan2(this.ay - qy,this.ax - qx) - Math.PI / 2;
	}
	,__class__: trilateral_geom_Contour
};
var trilateral_justPath_EllipseArc = function(arc_) {
	this.arc = arc_;
};
$hxClasses["trilateral.justPath.EllipseArc"] = trilateral_justPath_EllipseArc;
trilateral_justPath_EllipseArc.__name__ = "trilateral.justPath.EllipseArc";
trilateral_justPath_EllipseArc.prototype = {
	arc: null
	,x: null
	,y: null
	,alphaPoint: function() {
		var theta = this.arc.alpha;
		var px = this.arc.cx + this.arc.rx * Math.cos(theta);
		var py = this.arc.cy + this.arc.ry * Math.sin(theta);
		px -= this.arc.cx;
		py -= this.arc.cy;
		var dx = px;
		var dy = py;
		px = dx * this.arc.phiCos - dy * this.arc.phiSin;
		py = dx * this.arc.phiSin + dy * this.arc.phiCos;
		this.x = px + this.arc.cx;
		this.y = py + this.arc.cy;
	}
	,omegaPoint: function() {
		var theta = this.arc.omega;
		var px = this.arc.cx + this.arc.rx * Math.cos(theta);
		var py = this.arc.cy + this.arc.ry * Math.sin(theta);
		px -= this.arc.cx;
		py -= this.arc.cy;
		var dx = px;
		var dy = py;
		px = dx * this.arc.phiCos - dy * this.arc.phiSin;
		py = dx * this.arc.phiSin + dy * this.arc.phiCos;
		this.x = px + this.arc.cx;
		this.y = py + this.arc.cy;
	}
	,lineRender: function(moveTo,lineTo,dA,renderFirst) {
		if(renderFirst == null) {
			renderFirst = true;
		}
		var sign = this.arc.delta > 0 ? 1 : -1;
		var totalSteps = Math.ceil(Math.abs(this.arc.delta) / dA);
		var theta = this.arc.alpha;
		var step = this.arc.delta / totalSteps;
		if(renderFirst) {
			var px = this.arc.cx + this.arc.rx * Math.cos(theta);
			var py = this.arc.cy + this.arc.ry * Math.sin(theta);
			px -= this.arc.cx;
			py -= this.arc.cy;
			var dx = px;
			var dy = py;
			px = dx * this.arc.phiCos - dy * this.arc.phiSin;
			py = dx * this.arc.phiSin + dy * this.arc.phiCos;
			this.x = px + this.arc.cx;
			this.y = py + this.arc.cy;
			moveTo(this.x,this.y);
		}
		var _g = 1;
		var _g1 = totalSteps;
		while(_g < _g1) {
			var i = _g++;
			theta += step;
			var px1 = this.arc.cx + this.arc.rx * Math.cos(theta);
			var py1 = this.arc.cy + this.arc.ry * Math.sin(theta);
			px1 -= this.arc.cx;
			py1 -= this.arc.cy;
			var dx1 = px1;
			var dy1 = py1;
			px1 = dx1 * this.arc.phiCos - dy1 * this.arc.phiSin;
			py1 = dx1 * this.arc.phiSin + dy1 * this.arc.phiCos;
			this.x = px1 + this.arc.cx;
			this.y = py1 + this.arc.cy;
			lineTo(this.x,this.y);
		}
		var theta1 = this.arc.omega;
		var px2 = this.arc.cx + this.arc.rx * Math.cos(theta1);
		var py2 = this.arc.cy + this.arc.ry * Math.sin(theta1);
		px2 -= this.arc.cx;
		py2 -= this.arc.cy;
		var dx2 = px2;
		var dy2 = py2;
		px2 = dx2 * this.arc.phiCos - dy2 * this.arc.phiSin;
		py2 = dx2 * this.arc.phiSin + dy2 * this.arc.phiCos;
		this.x = px2 + this.arc.cx;
		this.y = py2 + this.arc.cy;
		lineTo(this.x,this.y);
	}
	,calculatePoint: function(theta) {
		var px = this.arc.cx + this.arc.rx * Math.cos(theta);
		var py = this.arc.cy + this.arc.ry * Math.sin(theta);
		px -= this.arc.cx;
		py -= this.arc.cy;
		var dx = px;
		var dy = py;
		px = dx * this.arc.phiCos - dy * this.arc.phiSin;
		py = dx * this.arc.phiSin + dy * this.arc.phiCos;
		this.x = px + this.arc.cx;
		this.y = py + this.arc.cy;
	}
	,__class__: trilateral_justPath_EllipseArc
};
var trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$ = {};
$hxClasses["trilateral.justPath._EllipseArc.ConverterArc_Impl_"] = trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$;
trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$.__name__ = "trilateral.justPath._EllipseArc.ConverterArc_Impl_";
trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$._new = function(sx,sy,xr,yr,phi,large,sweep,ex,ey) {
	var mx = (sx - ex) / 2;
	var my = (sy - ey) / 2;
	var ax = (sx + ex) / 2;
	var ay = (sy + ey) / 2;
	phi %= 360;
	phi = phi * Math.PI / 180;
	var sin = Math.sin(phi);
	var cos = Math.cos(phi);
	var x1 = mx * cos + my * sin;
	var y1 = -mx * sin + my * cos;
	var rx = Math.abs(xr);
	var ry = Math.abs(yr);
	var rxx = rx * rx;
	var ryy = ry * ry;
	var xx1 = x1 * x1;
	var yy1 = y1 * y1;
	var check = xx1 / rxx + yy1 / ryy;
	if(check > 1) {
		rx *= Math.sqrt(check);
		ry *= Math.sqrt(check);
		rxx = rx * rx;
		ryy = ry * ry;
	}
	var sign = large == sweep ? -1 : 1;
	var sq = (rxx * ryy - rxx * yy1 - ryy * xx1) / (rxx * yy1 + ryy * xx1);
	sq = sq < 0 ? 0 : sq;
	var coef = sign * Math.sqrt(sq);
	var cx1 = coef * rx * y1 / ry;
	var cy1 = -coef * ry * x1 / rx;
	var cx = ax + cx1 * cos - cy1 * sin;
	var cy = ay + cx1 * sin + cy1 * cos;
	var phiSin = Math.sin(-phi);
	var phiCos = Math.cos(-phi);
	sx -= cx;
	sy -= cy;
	var dx = sx;
	var dy = sy;
	sx = dx * phiCos - dy * phiSin;
	sy = dx * phiSin + dy * phiCos;
	sx += cx;
	sy += cy;
	ex -= cx;
	ey -= cy;
	var dx1 = ex;
	var dy1 = ey;
	ex = dx1 * phiCos - dy1 * phiSin;
	ey = dx1 * phiSin + dy1 * phiCos;
	ex += cx;
	ey += cy;
	var alpha = Math.atan2(rx * (cy - sy),ry * (cx - sx)) - Math.PI;
	var omega = Math.atan2(rx * (cy - ey),ry * (cx - ex)) - Math.PI;
	var delta = alpha - omega;
	if(sweep == 1 && delta > 0) {
		delta -= 2 * Math.PI;
	} else if(sweep == 0 && delta < 0) {
		delta += 2 * Math.PI;
	}
	var this1 = { cx : cx, cy : cy, rx : rx, ry : ry, alpha : alpha, omega : omega, delta : -delta, phi : phi, phiSin : Math.sin(phi), phiCos : Math.cos(phi)};
	return this1;
};
trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$.zeroto2pi = function(angle) {
	if(angle >= 0 && angle > Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		if(a >= 0) {
			return a;
		} else {
			return a + 2 * Math.PI;
		}
	}
};
var trilateral_justPath_IPathContext = function() { };
$hxClasses["trilateral.justPath.IPathContext"] = trilateral_justPath_IPathContext;
trilateral_justPath_IPathContext.__name__ = "trilateral.justPath.IPathContext";
trilateral_justPath_IPathContext.prototype = {
	moveTo: null
	,lineTo: null
	,quadTo: null
	,curveTo: null
	,__class__: trilateral_justPath_IPathContext
};
var trilateral_justPath_StoreF6 = function() {
	this.count = 0;
	this.l = 0;
};
$hxClasses["trilateral.justPath.StoreF6"] = trilateral_justPath_StoreF6;
trilateral_justPath_StoreF6.__name__ = "trilateral.justPath.StoreF6";
trilateral_justPath_StoreF6.prototype = {
	l: null
	,s0: null
	,s1: null
	,s2: null
	,s3: null
	,s4: null
	,s5: null
	,s6: null
	,clear: function() {
		this.l = 0;
		this.s0 = null;
		this.s1 = null;
		this.s2 = null;
		this.s3 = null;
		this.s4 = null;
		this.s5 = null;
		this.s6 = null;
	}
	,length: function() {
		return this.l;
	}
	,push: function(v) {
		switch(this.l) {
		case 0:
			this.s0 = v;
			break;
		case 1:
			this.s1 = v;
			break;
		case 2:
			this.s2 = v;
			break;
		case 3:
			this.s3 = v;
			break;
		case 4:
			this.s4 = v;
			break;
		case 5:
			this.s5 = v;
			break;
		default:
			if(this.s6 == null) {
				this.s6 = new trilateral_justPath_StoreF6();
			}
			var _this = this.s6;
			switch(_this.l) {
			case 0:
				_this.s0 = v;
				break;
			case 1:
				_this.s1 = v;
				break;
			case 2:
				_this.s2 = v;
				break;
			case 3:
				_this.s3 = v;
				break;
			case 4:
				_this.s4 = v;
				break;
			case 5:
				_this.s5 = v;
				break;
			default:
				if(_this.s6 == null) {
					_this.s6 = new trilateral_justPath_StoreF6();
				}
				var _this1 = _this.s6;
				switch(_this1.l) {
				case 0:
					_this1.s0 = v;
					break;
				case 1:
					_this1.s1 = v;
					break;
				case 2:
					_this1.s2 = v;
					break;
				case 3:
					_this1.s3 = v;
					break;
				case 4:
					_this1.s4 = v;
					break;
				case 5:
					_this1.s5 = v;
					break;
				default:
					if(_this1.s6 == null) {
						_this1.s6 = new trilateral_justPath_StoreF6();
					}
					_this1.s6.push(v);
				}
				_this1.l++;
			}
			_this.l++;
		}
		this.l++;
	}
	,pop: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			this.s0 = null;
			break;
		case 1:
			out = this.s1;
			this.s1 = null;
			break;
		case 2:
			out = this.s2;
			this.s2 = null;
			break;
		case 3:
			out = this.s3;
			this.s3 = null;
			break;
		case 4:
			out = this.s4;
			this.s4 = null;
			break;
		case 5:
			out = this.s5;
			this.s5 = null;
			break;
		default:
			if(this.s6 != null) {
				var _this = this.s6;
				var out1 = null;
				switch(_this.l) {
				case 0:
					out1 = _this.s0;
					_this.s0 = null;
					break;
				case 1:
					out1 = _this.s1;
					_this.s1 = null;
					break;
				case 2:
					out1 = _this.s2;
					_this.s2 = null;
					break;
				case 3:
					out1 = _this.s3;
					_this.s3 = null;
					break;
				case 4:
					out1 = _this.s4;
					_this.s4 = null;
					break;
				case 5:
					out1 = _this.s5;
					_this.s5 = null;
					break;
				default:
					if(_this.s6 != null) {
						var _this1 = _this.s6;
						var out2 = null;
						switch(_this1.l) {
						case 0:
							out2 = _this1.s0;
							_this1.s0 = null;
							break;
						case 1:
							out2 = _this1.s1;
							_this1.s1 = null;
							break;
						case 2:
							out2 = _this1.s2;
							_this1.s2 = null;
							break;
						case 3:
							out2 = _this1.s3;
							_this1.s3 = null;
							break;
						case 4:
							out2 = _this1.s4;
							_this1.s4 = null;
							break;
						case 5:
							out2 = _this1.s5;
							_this1.s5 = null;
							break;
						default:
							if(_this1.s6 != null) {
								_this1.s6.pop();
							}
						}
						_this1.l--;
					}
				}
				_this.l--;
			}
		}
		this.l--;
		return out;
	}
	,unshift: function(v) {
		if(this.s6 == null) {
			this.s6 = new trilateral_justPath_StoreF6();
		}
		var _this = this.s6;
		var v1 = this.s5;
		if(_this.s6 == null) {
			_this.s6 = new trilateral_justPath_StoreF6();
		}
		var _this1 = _this.s6;
		var v2 = _this.s5;
		if(_this1.s6 == null) {
			_this1.s6 = new trilateral_justPath_StoreF6();
		}
		_this1.s6.unshift(_this1.s5);
		_this1.s5 = _this1.s4;
		_this1.s4 = _this1.s3;
		_this1.s3 = _this1.s2;
		_this1.s2 = _this1.s1;
		_this1.s0 = v2;
		_this1.l++;
		_this.s5 = _this.s4;
		_this.s4 = _this.s3;
		_this.s3 = _this.s2;
		_this.s2 = _this.s1;
		_this.s0 = v1;
		_this.l++;
		this.s5 = this.s4;
		this.s4 = this.s3;
		this.s3 = this.s2;
		this.s2 = this.s1;
		this.s0 = v;
		this.l++;
	}
	,shift: function() {
		var out = this.s0;
		if(this.l != 0) {
			this.s0 = this.s1;
			this.s1 = this.s2;
			this.s2 = this.s3;
			this.s3 = this.s4;
			this.s4 = this.s5;
			this.s5 = null;
			if(this.s6 != null) {
				var _this = this.s6;
				var out1 = _this.s0;
				if(_this.l != 0) {
					_this.s0 = _this.s1;
					_this.s1 = _this.s2;
					_this.s2 = _this.s3;
					_this.s3 = _this.s4;
					_this.s4 = _this.s5;
					_this.s5 = null;
					if(_this.s6 != null) {
						var _this1 = _this.s6;
						var out2 = _this1.s0;
						if(_this1.l != 0) {
							_this1.s0 = _this1.s1;
							_this1.s1 = _this1.s2;
							_this1.s2 = _this1.s3;
							_this1.s3 = _this1.s4;
							_this1.s4 = _this1.s5;
							_this1.s5 = null;
							if(_this1.s6 != null) {
								_this1.s5 = _this1.s6.shift();
							}
							_this1.l--;
						}
						_this.s5 = out2;
					}
					_this.l--;
				}
				this.s5 = out1;
			}
			this.l--;
		}
		return out;
	}
	,toString: function() {
		if(this.s6 == null) {
			return "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
		} else {
			var tmp = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			var _this = this.s6;
			var tmp1;
			if(_this.s6 == null) {
				tmp1 = "" + _this.s0 + ", " + _this.s1 + ", " + _this.s2 + ", " + _this.s3 + ", " + _this.s4 + ", " + _this.s5;
			} else {
				var _this1 = _this.s6;
				tmp1 = "" + _this.s0 + ", " + _this.s1 + ", " + _this.s2 + ", " + _this.s3 + ", " + _this.s4 + ", " + _this.s5 + (_this1.s6 == null ? "" + _this1.s0 + ", " + _this1.s1 + ", " + _this1.s2 + ", " + _this1.s3 + ", " + _this1.s4 + ", " + _this1.s5 : "" + _this1.s0 + ", " + _this1.s1 + ", " + _this1.s2 + ", " + _this1.s3 + ", " + _this1.s4 + ", " + _this1.s5 + _this1.s6.toString());
			}
			return tmp + tmp1;
		}
	}
	,populatedToString: function() {
		var out = "";
		switch(this.l - 1) {
		case 0:
			out = "" + this.s0;
			break;
		case 1:
			out = "" + this.s0 + ", " + this.s1;
			break;
		case 2:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2;
			break;
		case 3:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3;
			break;
		case 4:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4;
			break;
		case 5:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			break;
		default:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			if(this.s6 != null) {
				var _this = this.s6;
				var out1 = "";
				switch(_this.l - 1) {
				case 0:
					out1 = "" + _this.s0;
					break;
				case 1:
					out1 = "" + _this.s0 + ", " + _this.s1;
					break;
				case 2:
					out1 = "" + _this.s0 + ", " + _this.s1 + ", " + _this.s2;
					break;
				case 3:
					out1 = "" + _this.s0 + ", " + _this.s1 + ", " + _this.s2 + ", " + _this.s3;
					break;
				case 4:
					out1 = "" + _this.s0 + ", " + _this.s1 + ", " + _this.s2 + ", " + _this.s3 + ", " + _this.s4;
					break;
				case 5:
					out1 = "" + _this.s0 + ", " + _this.s1 + ", " + _this.s2 + ", " + _this.s3 + ", " + _this.s4 + ", " + _this.s5;
					break;
				default:
					out1 = "" + _this.s0 + ", " + _this.s1 + ", " + _this.s2 + ", " + _this.s3 + ", " + _this.s4 + ", " + _this.s5;
					if(_this.s6 != null) {
						var _this1 = _this.s6;
						var out2 = "";
						switch(_this1.l - 1) {
						case 0:
							out2 = "" + _this1.s0;
							break;
						case 1:
							out2 = "" + _this1.s0 + ", " + _this1.s1;
							break;
						case 2:
							out2 = "" + _this1.s0 + ", " + _this1.s1 + ", " + _this1.s2;
							break;
						case 3:
							out2 = "" + _this1.s0 + ", " + _this1.s1 + ", " + _this1.s2 + ", " + _this1.s3;
							break;
						case 4:
							out2 = "" + _this1.s0 + ", " + _this1.s1 + ", " + _this1.s2 + ", " + _this1.s3 + ", " + _this1.s4;
							break;
						case 5:
							out2 = "" + _this1.s0 + ", " + _this1.s1 + ", " + _this1.s2 + ", " + _this1.s3 + ", " + _this1.s4 + ", " + _this1.s5;
							break;
						default:
							out2 = "" + _this1.s0 + ", " + _this1.s1 + ", " + _this1.s2 + ", " + _this1.s3 + ", " + _this1.s4 + ", " + _this1.s5;
							if(_this1.s6 != null) {
								out2 += _this1.s6.populatedToString();
							}
						}
						out1 += out2;
					}
				}
				out += out1;
			}
		}
		return out;
	}
	,count: null
	,hasNext: function() {
		return this.count < this.l + 1;
	}
	,resetIterator: function() {
		this.count = 0;
		if(this.s6 != null) {
			var _this = this.s6;
			_this.count = 0;
			if(_this.s6 != null) {
				var _this1 = _this.s6;
				_this1.count = 0;
				if(_this1.s6 != null) {
					_this1.s6.resetIterator();
				}
			}
		}
	}
	,next: function() {
		var out = null;
		switch(this.count) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
			var _this = this.s6;
			var out1 = null;
			switch(_this.count) {
			case 0:
				out1 = _this.s0;
				break;
			case 1:
				out1 = _this.s1;
				break;
			case 2:
				out1 = _this.s2;
				break;
			case 3:
				out1 = _this.s3;
				break;
			case 4:
				out1 = _this.s4;
				break;
			case 5:
				out1 = _this.s5;
				break;
			default:
				var _this1 = _this.s6;
				var out2 = null;
				switch(_this1.count) {
				case 0:
					out2 = _this1.s0;
					break;
				case 1:
					out2 = _this1.s1;
					break;
				case 2:
					out2 = _this1.s2;
					break;
				case 3:
					out2 = _this1.s3;
					break;
				case 4:
					out2 = _this1.s4;
					break;
				case 5:
					out2 = _this1.s5;
					break;
				default:
					out2 = _this1.s6.next();
				}
				_this1.count++;
				out1 = out2;
			}
			_this.count++;
			out = out1;
		}
		this.count++;
		return out;
	}
	,first: function() {
		return this.s0;
	}
	,last: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
			var _this = this.s6;
			var out1 = null;
			switch(_this.l) {
			case 0:
				out1 = _this.s0;
				break;
			case 1:
				out1 = _this.s1;
				break;
			case 2:
				out1 = _this.s2;
				break;
			case 3:
				out1 = _this.s3;
				break;
			case 4:
				out1 = _this.s4;
				break;
			case 5:
				out1 = _this.s5;
				break;
			default:
				var _this1 = _this.s6;
				var out2 = null;
				switch(_this1.l) {
				case 0:
					out2 = _this1.s0;
					break;
				case 1:
					out2 = _this1.s1;
					break;
				case 2:
					out2 = _this1.s2;
					break;
				case 3:
					out2 = _this1.s3;
					break;
				case 4:
					out2 = _this1.s4;
					break;
				case 5:
					out2 = _this1.s5;
					break;
				default:
					out2 = _this1.s6.last();
				}
				out1 = out2;
			}
			out = out1;
		}
		return out;
	}
	,penultimate: function() {
		var out = null;
		switch(this.l - 1) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
			var _this = this.s6;
			var out1 = null;
			switch(_this.l - 1) {
			case 0:
				out1 = _this.s0;
				break;
			case 1:
				out1 = _this.s1;
				break;
			case 2:
				out1 = _this.s2;
				break;
			case 3:
				out1 = _this.s3;
				break;
			case 4:
				out1 = _this.s4;
				break;
			case 5:
				out1 = _this.s5;
				break;
			default:
				var _this1 = _this.s6;
				var out2 = null;
				switch(_this1.l - 1) {
				case 0:
					out2 = _this1.s0;
					break;
				case 1:
					out2 = _this1.s1;
					break;
				case 2:
					out2 = _this1.s2;
					break;
				case 3:
					out2 = _this1.s3;
					break;
				case 4:
					out2 = _this1.s4;
					break;
				case 5:
					out2 = _this1.s5;
					break;
				default:
					out2 = _this1.s6.penultimate();
				}
				out1 = out2;
			}
			out = out1;
		}
		return out;
	}
	,toArray: function() {
		var arr = [];
		this.count = 0;
		var _g = this;
		while(_g.count < _g.l + 1) {
			var out = null;
			switch(_g.count) {
			case 0:
				out = _g.s0;
				break;
			case 1:
				out = _g.s1;
				break;
			case 2:
				out = _g.s2;
				break;
			case 3:
				out = _g.s3;
				break;
			case 4:
				out = _g.s4;
				break;
			case 5:
				out = _g.s5;
				break;
			default:
				var _this = _g.s6;
				var out1 = null;
				switch(_this.count) {
				case 0:
					out1 = _this.s0;
					break;
				case 1:
					out1 = _this.s1;
					break;
				case 2:
					out1 = _this.s2;
					break;
				case 3:
					out1 = _this.s3;
					break;
				case 4:
					out1 = _this.s4;
					break;
				case 5:
					out1 = _this.s5;
					break;
				default:
					var _this1 = _this.s6;
					var out2 = null;
					switch(_this1.count) {
					case 0:
						out2 = _this1.s0;
						break;
					case 1:
						out2 = _this1.s1;
						break;
					case 2:
						out2 = _this1.s2;
						break;
					case 3:
						out2 = _this1.s3;
						break;
					case 4:
						out2 = _this1.s4;
						break;
					case 5:
						out2 = _this1.s5;
						break;
					default:
						var _this2 = _this1.s6;
						var out3 = null;
						switch(_this2.count) {
						case 0:
							out3 = _this2.s0;
							break;
						case 1:
							out3 = _this2.s1;
							break;
						case 2:
							out3 = _this2.s2;
							break;
						case 3:
							out3 = _this2.s3;
							break;
						case 4:
							out3 = _this2.s4;
							break;
						case 5:
							out3 = _this2.s5;
							break;
						default:
							var _this3 = _this2.s6;
							var out4 = null;
							switch(_this3.count) {
							case 0:
								out4 = _this3.s0;
								break;
							case 1:
								out4 = _this3.s1;
								break;
							case 2:
								out4 = _this3.s2;
								break;
							case 3:
								out4 = _this3.s3;
								break;
							case 4:
								out4 = _this3.s4;
								break;
							case 5:
								out4 = _this3.s5;
								break;
							default:
								var _this4 = _this3.s6;
								var out5 = null;
								switch(_this4.count) {
								case 0:
									out5 = _this4.s0;
									break;
								case 1:
									out5 = _this4.s1;
									break;
								case 2:
									out5 = _this4.s2;
									break;
								case 3:
									out5 = _this4.s3;
									break;
								case 4:
									out5 = _this4.s4;
									break;
								case 5:
									out5 = _this4.s5;
									break;
								default:
									var _this5 = _this4.s6;
									var out6 = null;
									switch(_this5.count) {
									case 0:
										out6 = _this5.s0;
										break;
									case 1:
										out6 = _this5.s1;
										break;
									case 2:
										out6 = _this5.s2;
										break;
									case 3:
										out6 = _this5.s3;
										break;
									case 4:
										out6 = _this5.s4;
										break;
									case 5:
										out6 = _this5.s5;
										break;
									default:
										out6 = _this5.s6.next();
									}
									_this5.count++;
									out5 = out6;
								}
								_this4.count++;
								out4 = out5;
							}
							_this3.count++;
							out3 = out4;
						}
						_this2.count++;
						out2 = out3;
					}
					_this1.count++;
					out1 = out2;
				}
				_this.count++;
				out = out1;
			}
			_g.count++;
			var i = out;
			arr.push(i);
		}
	}
	,__class__: trilateral_justPath_StoreF6
};
var trilateral_justPath_StoreF8 = function() {
	this.count = 0;
	this.l = 0;
};
$hxClasses["trilateral.justPath.StoreF8"] = trilateral_justPath_StoreF8;
trilateral_justPath_StoreF8.__name__ = "trilateral.justPath.StoreF8";
trilateral_justPath_StoreF8.prototype = {
	l: null
	,s0: null
	,s1: null
	,s2: null
	,s3: null
	,s4: null
	,s5: null
	,s6: null
	,s7: null
	,clear: function() {
		this.l = 0;
		this.s0 = null;
		this.s1 = null;
		this.s2 = null;
		this.s3 = null;
		this.s4 = null;
		this.s5 = null;
		this.s6 = null;
		this.s7 = null;
	}
	,length: function() {
		return this.l;
	}
	,push: function(v) {
		switch(this.l) {
		case 0:
			this.s0 = v;
			break;
		case 1:
			this.s1 = v;
			break;
		case 2:
			this.s2 = v;
			break;
		case 3:
			this.s3 = v;
			break;
		case 4:
			this.s4 = v;
			break;
		case 5:
			this.s5 = v;
			break;
		case 6:
			this.s6 = v;
			break;
		case 7:
			this.s7 = v;
			break;
		default:
		}
		this.l++;
	}
	,pop: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			this.s0 = null;
			break;
		case 1:
			out = this.s1;
			this.s1 = null;
			break;
		case 2:
			out = this.s2;
			this.s2 = null;
			break;
		case 3:
			out = this.s3;
			this.s3 = null;
			break;
		case 4:
			out = this.s4;
			this.s4 = null;
			break;
		case 5:
			out = this.s5;
			this.s5 = null;
			break;
		case 6:
			out = this.s6;
			this.s6 = null;
			break;
		case 7:
			out = this.s7;
			this.s6 = null;
			break;
		default:
		}
		this.l--;
		return out;
	}
	,unshift: function(v) {
		this.s7 = this.s6;
		this.s6 = this.s5;
		this.s5 = this.s4;
		this.s4 = this.s3;
		this.s3 = this.s2;
		this.s2 = this.s1;
		this.s0 = v;
		this.l++;
	}
	,shift: function() {
		var out = this.s0;
		if(this.l != 0) {
			this.s0 = this.s1;
			this.s1 = this.s2;
			this.s2 = this.s3;
			this.s3 = this.s4;
			this.s4 = this.s5;
			this.s5 = this.s6;
			this.s6 = this.s7;
			this.s7 = null;
			this.l--;
		}
		return out;
	}
	,toString: function() {
		return "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6 + ", " + this.s7;
	}
	,populatedToString: function() {
		var out = "";
		switch(this.l - 1) {
		case 0:
			out = "" + this.s0;
			break;
		case 1:
			out = "" + this.s0 + ", " + this.s1;
			break;
		case 2:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2;
			break;
		case 3:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3;
			break;
		case 4:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4;
			break;
		case 5:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			break;
		case 6:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6;
			break;
		case 7:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6 + ", " + this.s7;
			break;
		default:
		}
		return out;
	}
	,count: null
	,hasNext: function() {
		return this.count < this.l + 1;
	}
	,resetIterator: function() {
		this.count = 0;
	}
	,next: function() {
		var out = null;
		switch(this.count) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		this.count++;
		return out;
	}
	,first: function() {
		return this.s0;
	}
	,last: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		return out;
	}
	,penultimate: function() {
		var out = null;
		switch(this.l - 1) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		return out;
	}
	,toArray: function() {
		var arr = [];
		this.count = 0;
		var _g = this;
		while(_g.count < _g.l + 1) {
			var out = null;
			switch(_g.count) {
			case 0:
				out = _g.s0;
				break;
			case 1:
				out = _g.s1;
				break;
			case 2:
				out = _g.s2;
				break;
			case 3:
				out = _g.s3;
				break;
			case 4:
				out = _g.s4;
				break;
			case 5:
				out = _g.s5;
				break;
			case 6:
				out = _g.s6;
				break;
			case 7:
				out = _g.s7;
				break;
			default:
			}
			_g.count++;
			var i = out;
			arr.push(i);
		}
	}
	,__class__: trilateral_justPath_StoreF8
};
var trilateral_justPath_SvgPath = function(pathContext_) {
	this.l = 0;
	this.c = 0;
	this.controlY = 0.;
	this.controlX = 0.;
	this.lastY = 0.;
	this.lastX = 0.;
	this.pos = 0;
	this.str = "";
	this.pathContext = pathContext_;
};
$hxClasses["trilateral.justPath.SvgPath"] = trilateral_justPath_SvgPath;
trilateral_justPath_SvgPath.__name__ = "trilateral.justPath.SvgPath";
trilateral_justPath_SvgPath.prototype = {
	str: null
	,pos: null
	,lastX: null
	,lastY: null
	,controlX: null
	,controlY: null
	,c: null
	,l: null
	,pathContext: null
	,store: null
	,quickTriangle: function(x0,y0,off) {
		this.pathContext.moveTo(x0,y0 - off);
		this.pathContext.lineTo(x0 + off,y0 + off);
		this.pathContext.lineTo(x0 - off,y0 + off);
		this.pathContext.lineTo(x0,y0 - off);
	}
	,parse: function(str_) {
		this.str = str_;
		this.pos = 0;
		this.l = this.str.length;
		this.c = this.str.charCodeAt(this.pos++);
		var count = 0;
		this.store = new trilateral_justPath_StoreF6();
		while(this.pos < this.l) {
			switch(this.c) {
			case 65:
				var _this = this.store;
				_this.l = 0;
				_this.s0 = null;
				_this.s1 = null;
				_this.s2 = null;
				_this.s3 = null;
				_this.s4 = null;
				_this.s5 = null;
				_this.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count1 = 0;
				var temp = "";
				var exit = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp != "") {
							if((this.store.l & 1) == 0) {
								var _this1 = this.store;
								var v = parseFloat(temp);
								switch(_this1.l) {
								case 0:
									_this1.s0 = v;
									break;
								case 1:
									_this1.s1 = v;
									break;
								case 2:
									_this1.s2 = v;
									break;
								case 3:
									_this1.s3 = v;
									break;
								case 4:
									_this1.s4 = v;
									break;
								case 5:
									_this1.s5 = v;
									break;
								default:
									if(_this1.s6 == null) {
										_this1.s6 = new trilateral_justPath_StoreF6();
									}
									var _this2 = _this1.s6;
									switch(_this2.l) {
									case 0:
										_this2.s0 = v;
										break;
									case 1:
										_this2.s1 = v;
										break;
									case 2:
										_this2.s2 = v;
										break;
									case 3:
										_this2.s3 = v;
										break;
									case 4:
										_this2.s4 = v;
										break;
									case 5:
										_this2.s5 = v;
										break;
									default:
										if(_this2.s6 == null) {
											_this2.s6 = new trilateral_justPath_StoreF6();
										}
										var _this3 = _this2.s6;
										switch(_this3.l) {
										case 0:
											_this3.s0 = v;
											break;
										case 1:
											_this3.s1 = v;
											break;
										case 2:
											_this3.s2 = v;
											break;
										case 3:
											_this3.s3 = v;
											break;
										case 4:
											_this3.s4 = v;
											break;
										case 5:
											_this3.s5 = v;
											break;
										default:
											if(_this3.s6 == null) {
												_this3.s6 = new trilateral_justPath_StoreF6();
											}
											var _this4 = _this3.s6;
											switch(_this4.l) {
											case 0:
												_this4.s0 = v;
												break;
											case 1:
												_this4.s1 = v;
												break;
											case 2:
												_this4.s2 = v;
												break;
											case 3:
												_this4.s3 = v;
												break;
											case 4:
												_this4.s4 = v;
												break;
											case 5:
												_this4.s5 = v;
												break;
											default:
												if(_this4.s6 == null) {
													_this4.s6 = new trilateral_justPath_StoreF6();
												}
												var _this5 = _this4.s6;
												switch(_this5.l) {
												case 0:
													_this5.s0 = v;
													break;
												case 1:
													_this5.s1 = v;
													break;
												case 2:
													_this5.s2 = v;
													break;
												case 3:
													_this5.s3 = v;
													break;
												case 4:
													_this5.s4 = v;
													break;
												case 5:
													_this5.s5 = v;
													break;
												default:
													if(_this5.s6 == null) {
														_this5.s6 = new trilateral_justPath_StoreF6();
													}
													var _this6 = _this5.s6;
													switch(_this6.l) {
													case 0:
														_this6.s0 = v;
														break;
													case 1:
														_this6.s1 = v;
														break;
													case 2:
														_this6.s2 = v;
														break;
													case 3:
														_this6.s3 = v;
														break;
													case 4:
														_this6.s4 = v;
														break;
													case 5:
														_this6.s5 = v;
														break;
													default:
														if(_this6.s6 == null) {
															_this6.s6 = new trilateral_justPath_StoreF6();
														}
														var _this7 = _this6.s6;
														switch(_this7.l) {
														case 0:
															_this7.s0 = v;
															break;
														case 1:
															_this7.s1 = v;
															break;
														case 2:
															_this7.s2 = v;
															break;
														case 3:
															_this7.s3 = v;
															break;
														case 4:
															_this7.s4 = v;
															break;
														case 5:
															_this7.s5 = v;
															break;
														default:
															if(_this7.s6 == null) {
																_this7.s6 = new trilateral_justPath_StoreF6();
															}
															_this7.s6.push(v);
														}
														_this7.l++;
													}
													_this6.l++;
												}
												_this5.l++;
											}
											_this4.l++;
										}
										_this3.l++;
									}
									_this2.l++;
								}
								_this1.l++;
							} else {
								var _this8 = this.store;
								var v1 = parseFloat(temp);
								switch(_this8.l) {
								case 0:
									_this8.s0 = v1;
									break;
								case 1:
									_this8.s1 = v1;
									break;
								case 2:
									_this8.s2 = v1;
									break;
								case 3:
									_this8.s3 = v1;
									break;
								case 4:
									_this8.s4 = v1;
									break;
								case 5:
									_this8.s5 = v1;
									break;
								default:
									if(_this8.s6 == null) {
										_this8.s6 = new trilateral_justPath_StoreF6();
									}
									var _this9 = _this8.s6;
									switch(_this9.l) {
									case 0:
										_this9.s0 = v1;
										break;
									case 1:
										_this9.s1 = v1;
										break;
									case 2:
										_this9.s2 = v1;
										break;
									case 3:
										_this9.s3 = v1;
										break;
									case 4:
										_this9.s4 = v1;
										break;
									case 5:
										_this9.s5 = v1;
										break;
									default:
										if(_this9.s6 == null) {
											_this9.s6 = new trilateral_justPath_StoreF6();
										}
										var _this10 = _this9.s6;
										switch(_this10.l) {
										case 0:
											_this10.s0 = v1;
											break;
										case 1:
											_this10.s1 = v1;
											break;
										case 2:
											_this10.s2 = v1;
											break;
										case 3:
											_this10.s3 = v1;
											break;
										case 4:
											_this10.s4 = v1;
											break;
										case 5:
											_this10.s5 = v1;
											break;
										default:
											if(_this10.s6 == null) {
												_this10.s6 = new trilateral_justPath_StoreF6();
											}
											var _this11 = _this10.s6;
											switch(_this11.l) {
											case 0:
												_this11.s0 = v1;
												break;
											case 1:
												_this11.s1 = v1;
												break;
											case 2:
												_this11.s2 = v1;
												break;
											case 3:
												_this11.s3 = v1;
												break;
											case 4:
												_this11.s4 = v1;
												break;
											case 5:
												_this11.s5 = v1;
												break;
											default:
												if(_this11.s6 == null) {
													_this11.s6 = new trilateral_justPath_StoreF6();
												}
												var _this12 = _this11.s6;
												switch(_this12.l) {
												case 0:
													_this12.s0 = v1;
													break;
												case 1:
													_this12.s1 = v1;
													break;
												case 2:
													_this12.s2 = v1;
													break;
												case 3:
													_this12.s3 = v1;
													break;
												case 4:
													_this12.s4 = v1;
													break;
												case 5:
													_this12.s5 = v1;
													break;
												default:
													if(_this12.s6 == null) {
														_this12.s6 = new trilateral_justPath_StoreF6();
													}
													var _this13 = _this12.s6;
													switch(_this13.l) {
													case 0:
														_this13.s0 = v1;
														break;
													case 1:
														_this13.s1 = v1;
														break;
													case 2:
														_this13.s2 = v1;
														break;
													case 3:
														_this13.s3 = v1;
														break;
													case 4:
														_this13.s4 = v1;
														break;
													case 5:
														_this13.s5 = v1;
														break;
													default:
														if(_this13.s6 == null) {
															_this13.s6 = new trilateral_justPath_StoreF6();
														}
														var _this14 = _this13.s6;
														switch(_this14.l) {
														case 0:
															_this14.s0 = v1;
															break;
														case 1:
															_this14.s1 = v1;
															break;
														case 2:
															_this14.s2 = v1;
															break;
														case 3:
															_this14.s3 = v1;
															break;
														case 4:
															_this14.s4 = v1;
															break;
														case 5:
															_this14.s5 = v1;
															break;
														default:
															if(_this14.s6 == null) {
																_this14.s6 = new trilateral_justPath_StoreF6();
															}
															_this14.s6.push(v1);
														}
														_this14.l++;
													}
													_this13.l++;
												}
												_this12.l++;
											}
											_this11.l++;
										}
										_this10.l++;
									}
									_this9.l++;
								}
								_this8.l++;
							}
							temp = "";
						}
						break;
					case 45:
						if(temp != "") {
							if((this.store.l & 1) == 0) {
								var _this15 = this.store;
								var v2 = parseFloat(temp);
								switch(_this15.l) {
								case 0:
									_this15.s0 = v2;
									break;
								case 1:
									_this15.s1 = v2;
									break;
								case 2:
									_this15.s2 = v2;
									break;
								case 3:
									_this15.s3 = v2;
									break;
								case 4:
									_this15.s4 = v2;
									break;
								case 5:
									_this15.s5 = v2;
									break;
								default:
									if(_this15.s6 == null) {
										_this15.s6 = new trilateral_justPath_StoreF6();
									}
									var _this16 = _this15.s6;
									switch(_this16.l) {
									case 0:
										_this16.s0 = v2;
										break;
									case 1:
										_this16.s1 = v2;
										break;
									case 2:
										_this16.s2 = v2;
										break;
									case 3:
										_this16.s3 = v2;
										break;
									case 4:
										_this16.s4 = v2;
										break;
									case 5:
										_this16.s5 = v2;
										break;
									default:
										if(_this16.s6 == null) {
											_this16.s6 = new trilateral_justPath_StoreF6();
										}
										var _this17 = _this16.s6;
										switch(_this17.l) {
										case 0:
											_this17.s0 = v2;
											break;
										case 1:
											_this17.s1 = v2;
											break;
										case 2:
											_this17.s2 = v2;
											break;
										case 3:
											_this17.s3 = v2;
											break;
										case 4:
											_this17.s4 = v2;
											break;
										case 5:
											_this17.s5 = v2;
											break;
										default:
											if(_this17.s6 == null) {
												_this17.s6 = new trilateral_justPath_StoreF6();
											}
											var _this18 = _this17.s6;
											switch(_this18.l) {
											case 0:
												_this18.s0 = v2;
												break;
											case 1:
												_this18.s1 = v2;
												break;
											case 2:
												_this18.s2 = v2;
												break;
											case 3:
												_this18.s3 = v2;
												break;
											case 4:
												_this18.s4 = v2;
												break;
											case 5:
												_this18.s5 = v2;
												break;
											default:
												if(_this18.s6 == null) {
													_this18.s6 = new trilateral_justPath_StoreF6();
												}
												var _this19 = _this18.s6;
												switch(_this19.l) {
												case 0:
													_this19.s0 = v2;
													break;
												case 1:
													_this19.s1 = v2;
													break;
												case 2:
													_this19.s2 = v2;
													break;
												case 3:
													_this19.s3 = v2;
													break;
												case 4:
													_this19.s4 = v2;
													break;
												case 5:
													_this19.s5 = v2;
													break;
												default:
													if(_this19.s6 == null) {
														_this19.s6 = new trilateral_justPath_StoreF6();
													}
													var _this20 = _this19.s6;
													switch(_this20.l) {
													case 0:
														_this20.s0 = v2;
														break;
													case 1:
														_this20.s1 = v2;
														break;
													case 2:
														_this20.s2 = v2;
														break;
													case 3:
														_this20.s3 = v2;
														break;
													case 4:
														_this20.s4 = v2;
														break;
													case 5:
														_this20.s5 = v2;
														break;
													default:
														if(_this20.s6 == null) {
															_this20.s6 = new trilateral_justPath_StoreF6();
														}
														var _this21 = _this20.s6;
														switch(_this21.l) {
														case 0:
															_this21.s0 = v2;
															break;
														case 1:
															_this21.s1 = v2;
															break;
														case 2:
															_this21.s2 = v2;
															break;
														case 3:
															_this21.s3 = v2;
															break;
														case 4:
															_this21.s4 = v2;
															break;
														case 5:
															_this21.s5 = v2;
															break;
														default:
															if(_this21.s6 == null) {
																_this21.s6 = new trilateral_justPath_StoreF6();
															}
															_this21.s6.push(v2);
														}
														_this21.l++;
													}
													_this20.l++;
												}
												_this19.l++;
											}
											_this18.l++;
										}
										_this17.l++;
									}
									_this16.l++;
								}
								_this15.l++;
							} else {
								var _this22 = this.store;
								var v3 = parseFloat(temp);
								switch(_this22.l) {
								case 0:
									_this22.s0 = v3;
									break;
								case 1:
									_this22.s1 = v3;
									break;
								case 2:
									_this22.s2 = v3;
									break;
								case 3:
									_this22.s3 = v3;
									break;
								case 4:
									_this22.s4 = v3;
									break;
								case 5:
									_this22.s5 = v3;
									break;
								default:
									if(_this22.s6 == null) {
										_this22.s6 = new trilateral_justPath_StoreF6();
									}
									var _this23 = _this22.s6;
									switch(_this23.l) {
									case 0:
										_this23.s0 = v3;
										break;
									case 1:
										_this23.s1 = v3;
										break;
									case 2:
										_this23.s2 = v3;
										break;
									case 3:
										_this23.s3 = v3;
										break;
									case 4:
										_this23.s4 = v3;
										break;
									case 5:
										_this23.s5 = v3;
										break;
									default:
										if(_this23.s6 == null) {
											_this23.s6 = new trilateral_justPath_StoreF6();
										}
										var _this24 = _this23.s6;
										switch(_this24.l) {
										case 0:
											_this24.s0 = v3;
											break;
										case 1:
											_this24.s1 = v3;
											break;
										case 2:
											_this24.s2 = v3;
											break;
										case 3:
											_this24.s3 = v3;
											break;
										case 4:
											_this24.s4 = v3;
											break;
										case 5:
											_this24.s5 = v3;
											break;
										default:
											if(_this24.s6 == null) {
												_this24.s6 = new trilateral_justPath_StoreF6();
											}
											var _this25 = _this24.s6;
											switch(_this25.l) {
											case 0:
												_this25.s0 = v3;
												break;
											case 1:
												_this25.s1 = v3;
												break;
											case 2:
												_this25.s2 = v3;
												break;
											case 3:
												_this25.s3 = v3;
												break;
											case 4:
												_this25.s4 = v3;
												break;
											case 5:
												_this25.s5 = v3;
												break;
											default:
												if(_this25.s6 == null) {
													_this25.s6 = new trilateral_justPath_StoreF6();
												}
												var _this26 = _this25.s6;
												switch(_this26.l) {
												case 0:
													_this26.s0 = v3;
													break;
												case 1:
													_this26.s1 = v3;
													break;
												case 2:
													_this26.s2 = v3;
													break;
												case 3:
													_this26.s3 = v3;
													break;
												case 4:
													_this26.s4 = v3;
													break;
												case 5:
													_this26.s5 = v3;
													break;
												default:
													if(_this26.s6 == null) {
														_this26.s6 = new trilateral_justPath_StoreF6();
													}
													var _this27 = _this26.s6;
													switch(_this27.l) {
													case 0:
														_this27.s0 = v3;
														break;
													case 1:
														_this27.s1 = v3;
														break;
													case 2:
														_this27.s2 = v3;
														break;
													case 3:
														_this27.s3 = v3;
														break;
													case 4:
														_this27.s4 = v3;
														break;
													case 5:
														_this27.s5 = v3;
														break;
													default:
														if(_this27.s6 == null) {
															_this27.s6 = new trilateral_justPath_StoreF6();
														}
														var _this28 = _this27.s6;
														switch(_this28.l) {
														case 0:
															_this28.s0 = v3;
															break;
														case 1:
															_this28.s1 = v3;
															break;
														case 2:
															_this28.s2 = v3;
															break;
														case 3:
															_this28.s3 = v3;
															break;
														case 4:
															_this28.s4 = v3;
															break;
														case 5:
															_this28.s5 = v3;
															break;
														default:
															if(_this28.s6 == null) {
																_this28.s6 = new trilateral_justPath_StoreF6();
															}
															_this28.s6.push(v3);
														}
														_this28.l++;
													}
													_this27.l++;
												}
												_this26.l++;
											}
											_this25.l++;
										}
										_this24.l++;
									}
									_this23.l++;
								}
								_this22.l++;
							}
						}
						temp = "-";
						break;
					case 46:
						temp += ".";
						break;
					case 48:
						temp += "0";
						break;
					case 49:
						temp += "1";
						break;
					case 50:
						temp += "2";
						break;
					case 51:
						temp += "3";
						break;
					case 52:
						temp += "4";
						break;
					case 53:
						temp += "5";
						break;
					case 54:
						temp += "6";
						break;
					case 55:
						temp += "7";
						break;
					case 56:
						temp += "8";
						break;
					case 57:
						temp += "9";
						break;
					default:
						if(temp != "") {
							if((this.store.l & 1) == 0) {
								var _this29 = this.store;
								var v4 = parseFloat(temp);
								switch(_this29.l) {
								case 0:
									_this29.s0 = v4;
									break;
								case 1:
									_this29.s1 = v4;
									break;
								case 2:
									_this29.s2 = v4;
									break;
								case 3:
									_this29.s3 = v4;
									break;
								case 4:
									_this29.s4 = v4;
									break;
								case 5:
									_this29.s5 = v4;
									break;
								default:
									if(_this29.s6 == null) {
										_this29.s6 = new trilateral_justPath_StoreF6();
									}
									var _this30 = _this29.s6;
									switch(_this30.l) {
									case 0:
										_this30.s0 = v4;
										break;
									case 1:
										_this30.s1 = v4;
										break;
									case 2:
										_this30.s2 = v4;
										break;
									case 3:
										_this30.s3 = v4;
										break;
									case 4:
										_this30.s4 = v4;
										break;
									case 5:
										_this30.s5 = v4;
										break;
									default:
										if(_this30.s6 == null) {
											_this30.s6 = new trilateral_justPath_StoreF6();
										}
										var _this31 = _this30.s6;
										switch(_this31.l) {
										case 0:
											_this31.s0 = v4;
											break;
										case 1:
											_this31.s1 = v4;
											break;
										case 2:
											_this31.s2 = v4;
											break;
										case 3:
											_this31.s3 = v4;
											break;
										case 4:
											_this31.s4 = v4;
											break;
										case 5:
											_this31.s5 = v4;
											break;
										default:
											if(_this31.s6 == null) {
												_this31.s6 = new trilateral_justPath_StoreF6();
											}
											var _this32 = _this31.s6;
											switch(_this32.l) {
											case 0:
												_this32.s0 = v4;
												break;
											case 1:
												_this32.s1 = v4;
												break;
											case 2:
												_this32.s2 = v4;
												break;
											case 3:
												_this32.s3 = v4;
												break;
											case 4:
												_this32.s4 = v4;
												break;
											case 5:
												_this32.s5 = v4;
												break;
											default:
												if(_this32.s6 == null) {
													_this32.s6 = new trilateral_justPath_StoreF6();
												}
												var _this33 = _this32.s6;
												switch(_this33.l) {
												case 0:
													_this33.s0 = v4;
													break;
												case 1:
													_this33.s1 = v4;
													break;
												case 2:
													_this33.s2 = v4;
													break;
												case 3:
													_this33.s3 = v4;
													break;
												case 4:
													_this33.s4 = v4;
													break;
												case 5:
													_this33.s5 = v4;
													break;
												default:
													if(_this33.s6 == null) {
														_this33.s6 = new trilateral_justPath_StoreF6();
													}
													var _this34 = _this33.s6;
													switch(_this34.l) {
													case 0:
														_this34.s0 = v4;
														break;
													case 1:
														_this34.s1 = v4;
														break;
													case 2:
														_this34.s2 = v4;
														break;
													case 3:
														_this34.s3 = v4;
														break;
													case 4:
														_this34.s4 = v4;
														break;
													case 5:
														_this34.s5 = v4;
														break;
													default:
														if(_this34.s6 == null) {
															_this34.s6 = new trilateral_justPath_StoreF6();
														}
														var _this35 = _this34.s6;
														switch(_this35.l) {
														case 0:
															_this35.s0 = v4;
															break;
														case 1:
															_this35.s1 = v4;
															break;
														case 2:
															_this35.s2 = v4;
															break;
														case 3:
															_this35.s3 = v4;
															break;
														case 4:
															_this35.s4 = v4;
															break;
														case 5:
															_this35.s5 = v4;
															break;
														default:
															if(_this35.s6 == null) {
																_this35.s6 = new trilateral_justPath_StoreF6();
															}
															_this35.s6.push(v4);
														}
														_this35.l++;
													}
													_this34.l++;
												}
												_this33.l++;
											}
											_this32.l++;
										}
										_this31.l++;
									}
									_this30.l++;
								}
								_this29.l++;
							} else {
								var _this36 = this.store;
								var v5 = parseFloat(temp);
								switch(_this36.l) {
								case 0:
									_this36.s0 = v5;
									break;
								case 1:
									_this36.s1 = v5;
									break;
								case 2:
									_this36.s2 = v5;
									break;
								case 3:
									_this36.s3 = v5;
									break;
								case 4:
									_this36.s4 = v5;
									break;
								case 5:
									_this36.s5 = v5;
									break;
								default:
									if(_this36.s6 == null) {
										_this36.s6 = new trilateral_justPath_StoreF6();
									}
									var _this37 = _this36.s6;
									switch(_this37.l) {
									case 0:
										_this37.s0 = v5;
										break;
									case 1:
										_this37.s1 = v5;
										break;
									case 2:
										_this37.s2 = v5;
										break;
									case 3:
										_this37.s3 = v5;
										break;
									case 4:
										_this37.s4 = v5;
										break;
									case 5:
										_this37.s5 = v5;
										break;
									default:
										if(_this37.s6 == null) {
											_this37.s6 = new trilateral_justPath_StoreF6();
										}
										var _this38 = _this37.s6;
										switch(_this38.l) {
										case 0:
											_this38.s0 = v5;
											break;
										case 1:
											_this38.s1 = v5;
											break;
										case 2:
											_this38.s2 = v5;
											break;
										case 3:
											_this38.s3 = v5;
											break;
										case 4:
											_this38.s4 = v5;
											break;
										case 5:
											_this38.s5 = v5;
											break;
										default:
											if(_this38.s6 == null) {
												_this38.s6 = new trilateral_justPath_StoreF6();
											}
											var _this39 = _this38.s6;
											switch(_this39.l) {
											case 0:
												_this39.s0 = v5;
												break;
											case 1:
												_this39.s1 = v5;
												break;
											case 2:
												_this39.s2 = v5;
												break;
											case 3:
												_this39.s3 = v5;
												break;
											case 4:
												_this39.s4 = v5;
												break;
											case 5:
												_this39.s5 = v5;
												break;
											default:
												if(_this39.s6 == null) {
													_this39.s6 = new trilateral_justPath_StoreF6();
												}
												var _this40 = _this39.s6;
												switch(_this40.l) {
												case 0:
													_this40.s0 = v5;
													break;
												case 1:
													_this40.s1 = v5;
													break;
												case 2:
													_this40.s2 = v5;
													break;
												case 3:
													_this40.s3 = v5;
													break;
												case 4:
													_this40.s4 = v5;
													break;
												case 5:
													_this40.s5 = v5;
													break;
												default:
													if(_this40.s6 == null) {
														_this40.s6 = new trilateral_justPath_StoreF6();
													}
													var _this41 = _this40.s6;
													switch(_this41.l) {
													case 0:
														_this41.s0 = v5;
														break;
													case 1:
														_this41.s1 = v5;
														break;
													case 2:
														_this41.s2 = v5;
														break;
													case 3:
														_this41.s3 = v5;
														break;
													case 4:
														_this41.s4 = v5;
														break;
													case 5:
														_this41.s5 = v5;
														break;
													default:
														if(_this41.s6 == null) {
															_this41.s6 = new trilateral_justPath_StoreF6();
														}
														var _this42 = _this41.s6;
														switch(_this42.l) {
														case 0:
															_this42.s0 = v5;
															break;
														case 1:
															_this42.s1 = v5;
															break;
														case 2:
															_this42.s2 = v5;
															break;
														case 3:
															_this42.s3 = v5;
															break;
														case 4:
															_this42.s4 = v5;
															break;
														case 5:
															_this42.s5 = v5;
															break;
														default:
															if(_this42.s6 == null) {
																_this42.s6 = new trilateral_justPath_StoreF6();
															}
															_this42.s6.push(v5);
														}
														_this42.l++;
													}
													_this41.l++;
												}
												_this40.l++;
											}
											_this39.l++;
										}
										_this38.l++;
									}
									_this37.l++;
								}
								_this36.l++;
							}
							temp = "";
						}
						this.pos--;
						exit = true;
					}
					if(exit) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 7) {
					var sx = this.lastX;
					var sy = this.lastY;
					var _this43 = this.store;
					var out = _this43.s0;
					if(_this43.l != 0) {
						_this43.s0 = _this43.s1;
						_this43.s1 = _this43.s2;
						_this43.s2 = _this43.s3;
						_this43.s3 = _this43.s4;
						_this43.s4 = _this43.s5;
						_this43.s5 = null;
						if(_this43.s6 != null) {
							var _this44 = _this43.s6;
							var out1 = _this44.s0;
							if(_this44.l != 0) {
								_this44.s0 = _this44.s1;
								_this44.s1 = _this44.s2;
								_this44.s2 = _this44.s3;
								_this44.s3 = _this44.s4;
								_this44.s4 = _this44.s5;
								_this44.s5 = null;
								if(_this44.s6 != null) {
									var _this45 = _this44.s6;
									var out2 = _this45.s0;
									if(_this45.l != 0) {
										_this45.s0 = _this45.s1;
										_this45.s1 = _this45.s2;
										_this45.s2 = _this45.s3;
										_this45.s3 = _this45.s4;
										_this45.s4 = _this45.s5;
										_this45.s5 = null;
										if(_this45.s6 != null) {
											var _this46 = _this45.s6;
											var out3 = _this46.s0;
											if(_this46.l != 0) {
												_this46.s0 = _this46.s1;
												_this46.s1 = _this46.s2;
												_this46.s2 = _this46.s3;
												_this46.s3 = _this46.s4;
												_this46.s4 = _this46.s5;
												_this46.s5 = null;
												if(_this46.s6 != null) {
													var _this47 = _this46.s6;
													var out4 = _this47.s0;
													if(_this47.l != 0) {
														_this47.s0 = _this47.s1;
														_this47.s1 = _this47.s2;
														_this47.s2 = _this47.s3;
														_this47.s3 = _this47.s4;
														_this47.s4 = _this47.s5;
														_this47.s5 = null;
														if(_this47.s6 != null) {
															var _this48 = _this47.s6;
															var out5 = _this48.s0;
															if(_this48.l != 0) {
																_this48.s0 = _this48.s1;
																_this48.s1 = _this48.s2;
																_this48.s2 = _this48.s3;
																_this48.s3 = _this48.s4;
																_this48.s4 = _this48.s5;
																_this48.s5 = null;
																if(_this48.s6 != null) {
																	var _this49 = _this48.s6;
																	var out6 = _this49.s0;
																	if(_this49.l != 0) {
																		_this49.s0 = _this49.s1;
																		_this49.s1 = _this49.s2;
																		_this49.s2 = _this49.s3;
																		_this49.s3 = _this49.s4;
																		_this49.s4 = _this49.s5;
																		_this49.s5 = null;
																		if(_this49.s6 != null) {
																			_this49.s5 = _this49.s6.shift();
																		}
																		_this49.l--;
																	}
																	_this48.s5 = out6;
																}
																_this48.l--;
															}
															_this47.s5 = out5;
														}
														_this47.l--;
													}
													_this46.s5 = out4;
												}
												_this46.l--;
											}
											_this45.s5 = out3;
										}
										_this45.l--;
									}
									_this44.s5 = out2;
								}
								_this44.l--;
							}
							_this43.s5 = out1;
						}
						_this43.l--;
					}
					var xr = out;
					var _this50 = this.store;
					var out7 = _this50.s0;
					if(_this50.l != 0) {
						_this50.s0 = _this50.s1;
						_this50.s1 = _this50.s2;
						_this50.s2 = _this50.s3;
						_this50.s3 = _this50.s4;
						_this50.s4 = _this50.s5;
						_this50.s5 = null;
						if(_this50.s6 != null) {
							var _this51 = _this50.s6;
							var out8 = _this51.s0;
							if(_this51.l != 0) {
								_this51.s0 = _this51.s1;
								_this51.s1 = _this51.s2;
								_this51.s2 = _this51.s3;
								_this51.s3 = _this51.s4;
								_this51.s4 = _this51.s5;
								_this51.s5 = null;
								if(_this51.s6 != null) {
									var _this52 = _this51.s6;
									var out9 = _this52.s0;
									if(_this52.l != 0) {
										_this52.s0 = _this52.s1;
										_this52.s1 = _this52.s2;
										_this52.s2 = _this52.s3;
										_this52.s3 = _this52.s4;
										_this52.s4 = _this52.s5;
										_this52.s5 = null;
										if(_this52.s6 != null) {
											var _this53 = _this52.s6;
											var out10 = _this53.s0;
											if(_this53.l != 0) {
												_this53.s0 = _this53.s1;
												_this53.s1 = _this53.s2;
												_this53.s2 = _this53.s3;
												_this53.s3 = _this53.s4;
												_this53.s4 = _this53.s5;
												_this53.s5 = null;
												if(_this53.s6 != null) {
													var _this54 = _this53.s6;
													var out11 = _this54.s0;
													if(_this54.l != 0) {
														_this54.s0 = _this54.s1;
														_this54.s1 = _this54.s2;
														_this54.s2 = _this54.s3;
														_this54.s3 = _this54.s4;
														_this54.s4 = _this54.s5;
														_this54.s5 = null;
														if(_this54.s6 != null) {
															var _this55 = _this54.s6;
															var out12 = _this55.s0;
															if(_this55.l != 0) {
																_this55.s0 = _this55.s1;
																_this55.s1 = _this55.s2;
																_this55.s2 = _this55.s3;
																_this55.s3 = _this55.s4;
																_this55.s4 = _this55.s5;
																_this55.s5 = null;
																if(_this55.s6 != null) {
																	var _this56 = _this55.s6;
																	var out13 = _this56.s0;
																	if(_this56.l != 0) {
																		_this56.s0 = _this56.s1;
																		_this56.s1 = _this56.s2;
																		_this56.s2 = _this56.s3;
																		_this56.s3 = _this56.s4;
																		_this56.s4 = _this56.s5;
																		_this56.s5 = null;
																		if(_this56.s6 != null) {
																			_this56.s5 = _this56.s6.shift();
																		}
																		_this56.l--;
																	}
																	_this55.s5 = out13;
																}
																_this55.l--;
															}
															_this54.s5 = out12;
														}
														_this54.l--;
													}
													_this53.s5 = out11;
												}
												_this53.l--;
											}
											_this52.s5 = out10;
										}
										_this52.l--;
									}
									_this51.s5 = out9;
								}
								_this51.l--;
							}
							_this50.s5 = out8;
						}
						_this50.l--;
					}
					var yr = out7;
					var _this57 = this.store;
					var out14 = _this57.s0;
					if(_this57.l != 0) {
						_this57.s0 = _this57.s1;
						_this57.s1 = _this57.s2;
						_this57.s2 = _this57.s3;
						_this57.s3 = _this57.s4;
						_this57.s4 = _this57.s5;
						_this57.s5 = null;
						if(_this57.s6 != null) {
							var _this58 = _this57.s6;
							var out15 = _this58.s0;
							if(_this58.l != 0) {
								_this58.s0 = _this58.s1;
								_this58.s1 = _this58.s2;
								_this58.s2 = _this58.s3;
								_this58.s3 = _this58.s4;
								_this58.s4 = _this58.s5;
								_this58.s5 = null;
								if(_this58.s6 != null) {
									var _this59 = _this58.s6;
									var out16 = _this59.s0;
									if(_this59.l != 0) {
										_this59.s0 = _this59.s1;
										_this59.s1 = _this59.s2;
										_this59.s2 = _this59.s3;
										_this59.s3 = _this59.s4;
										_this59.s4 = _this59.s5;
										_this59.s5 = null;
										if(_this59.s6 != null) {
											var _this60 = _this59.s6;
											var out17 = _this60.s0;
											if(_this60.l != 0) {
												_this60.s0 = _this60.s1;
												_this60.s1 = _this60.s2;
												_this60.s2 = _this60.s3;
												_this60.s3 = _this60.s4;
												_this60.s4 = _this60.s5;
												_this60.s5 = null;
												if(_this60.s6 != null) {
													var _this61 = _this60.s6;
													var out18 = _this61.s0;
													if(_this61.l != 0) {
														_this61.s0 = _this61.s1;
														_this61.s1 = _this61.s2;
														_this61.s2 = _this61.s3;
														_this61.s3 = _this61.s4;
														_this61.s4 = _this61.s5;
														_this61.s5 = null;
														if(_this61.s6 != null) {
															var _this62 = _this61.s6;
															var out19 = _this62.s0;
															if(_this62.l != 0) {
																_this62.s0 = _this62.s1;
																_this62.s1 = _this62.s2;
																_this62.s2 = _this62.s3;
																_this62.s3 = _this62.s4;
																_this62.s4 = _this62.s5;
																_this62.s5 = null;
																if(_this62.s6 != null) {
																	var _this63 = _this62.s6;
																	var out20 = _this63.s0;
																	if(_this63.l != 0) {
																		_this63.s0 = _this63.s1;
																		_this63.s1 = _this63.s2;
																		_this63.s2 = _this63.s3;
																		_this63.s3 = _this63.s4;
																		_this63.s4 = _this63.s5;
																		_this63.s5 = null;
																		if(_this63.s6 != null) {
																			_this63.s5 = _this63.s6.shift();
																		}
																		_this63.l--;
																	}
																	_this62.s5 = out20;
																}
																_this62.l--;
															}
															_this61.s5 = out19;
														}
														_this61.l--;
													}
													_this60.s5 = out18;
												}
												_this60.l--;
											}
											_this59.s5 = out17;
										}
										_this59.l--;
									}
									_this58.s5 = out16;
								}
								_this58.l--;
							}
							_this57.s5 = out15;
						}
						_this57.l--;
					}
					var phi = out14;
					var _this64 = this.store;
					var out21 = _this64.s0;
					if(_this64.l != 0) {
						_this64.s0 = _this64.s1;
						_this64.s1 = _this64.s2;
						_this64.s2 = _this64.s3;
						_this64.s3 = _this64.s4;
						_this64.s4 = _this64.s5;
						_this64.s5 = null;
						if(_this64.s6 != null) {
							var _this65 = _this64.s6;
							var out22 = _this65.s0;
							if(_this65.l != 0) {
								_this65.s0 = _this65.s1;
								_this65.s1 = _this65.s2;
								_this65.s2 = _this65.s3;
								_this65.s3 = _this65.s4;
								_this65.s4 = _this65.s5;
								_this65.s5 = null;
								if(_this65.s6 != null) {
									var _this66 = _this65.s6;
									var out23 = _this66.s0;
									if(_this66.l != 0) {
										_this66.s0 = _this66.s1;
										_this66.s1 = _this66.s2;
										_this66.s2 = _this66.s3;
										_this66.s3 = _this66.s4;
										_this66.s4 = _this66.s5;
										_this66.s5 = null;
										if(_this66.s6 != null) {
											var _this67 = _this66.s6;
											var out24 = _this67.s0;
											if(_this67.l != 0) {
												_this67.s0 = _this67.s1;
												_this67.s1 = _this67.s2;
												_this67.s2 = _this67.s3;
												_this67.s3 = _this67.s4;
												_this67.s4 = _this67.s5;
												_this67.s5 = null;
												if(_this67.s6 != null) {
													var _this68 = _this67.s6;
													var out25 = _this68.s0;
													if(_this68.l != 0) {
														_this68.s0 = _this68.s1;
														_this68.s1 = _this68.s2;
														_this68.s2 = _this68.s3;
														_this68.s3 = _this68.s4;
														_this68.s4 = _this68.s5;
														_this68.s5 = null;
														if(_this68.s6 != null) {
															var _this69 = _this68.s6;
															var out26 = _this69.s0;
															if(_this69.l != 0) {
																_this69.s0 = _this69.s1;
																_this69.s1 = _this69.s2;
																_this69.s2 = _this69.s3;
																_this69.s3 = _this69.s4;
																_this69.s4 = _this69.s5;
																_this69.s5 = null;
																if(_this69.s6 != null) {
																	var _this70 = _this69.s6;
																	var out27 = _this70.s0;
																	if(_this70.l != 0) {
																		_this70.s0 = _this70.s1;
																		_this70.s1 = _this70.s2;
																		_this70.s2 = _this70.s3;
																		_this70.s3 = _this70.s4;
																		_this70.s4 = _this70.s5;
																		_this70.s5 = null;
																		if(_this70.s6 != null) {
																			var _this71 = _this70.s6;
																			var out28 = _this71.s0;
																			if(_this71.l != 0) {
																				_this71.s0 = _this71.s1;
																				_this71.s1 = _this71.s2;
																				_this71.s2 = _this71.s3;
																				_this71.s3 = _this71.s4;
																				_this71.s4 = _this71.s5;
																				_this71.s5 = null;
																				if(_this71.s6 != null) {
																					var _this72 = _this71.s6;
																					var out29 = _this72.s0;
																					if(_this72.l != 0) {
																						_this72.s0 = _this72.s1;
																						_this72.s1 = _this72.s2;
																						_this72.s2 = _this72.s3;
																						_this72.s3 = _this72.s4;
																						_this72.s4 = _this72.s5;
																						_this72.s5 = null;
																						if(_this72.s6 != null) {
																							_this72.s5 = _this72.s6.shift();
																						}
																						_this72.l--;
																					}
																					_this71.s5 = out29;
																				}
																				_this71.l--;
																			}
																			_this70.s5 = out28;
																		}
																		_this70.l--;
																	}
																	_this69.s5 = out27;
																}
																_this69.l--;
															}
															_this68.s5 = out26;
														}
														_this68.l--;
													}
													_this67.s5 = out25;
												}
												_this67.l--;
											}
											_this66.s5 = out24;
										}
										_this66.l--;
									}
									_this65.s5 = out23;
								}
								_this65.l--;
							}
							_this64.s5 = out22;
						}
						_this64.l--;
					}
					var large = out21 | 0;
					var _this73 = this.store;
					var out30 = _this73.s0;
					if(_this73.l != 0) {
						_this73.s0 = _this73.s1;
						_this73.s1 = _this73.s2;
						_this73.s2 = _this73.s3;
						_this73.s3 = _this73.s4;
						_this73.s4 = _this73.s5;
						_this73.s5 = null;
						if(_this73.s6 != null) {
							var _this74 = _this73.s6;
							var out31 = _this74.s0;
							if(_this74.l != 0) {
								_this74.s0 = _this74.s1;
								_this74.s1 = _this74.s2;
								_this74.s2 = _this74.s3;
								_this74.s3 = _this74.s4;
								_this74.s4 = _this74.s5;
								_this74.s5 = null;
								if(_this74.s6 != null) {
									var _this75 = _this74.s6;
									var out32 = _this75.s0;
									if(_this75.l != 0) {
										_this75.s0 = _this75.s1;
										_this75.s1 = _this75.s2;
										_this75.s2 = _this75.s3;
										_this75.s3 = _this75.s4;
										_this75.s4 = _this75.s5;
										_this75.s5 = null;
										if(_this75.s6 != null) {
											var _this76 = _this75.s6;
											var out33 = _this76.s0;
											if(_this76.l != 0) {
												_this76.s0 = _this76.s1;
												_this76.s1 = _this76.s2;
												_this76.s2 = _this76.s3;
												_this76.s3 = _this76.s4;
												_this76.s4 = _this76.s5;
												_this76.s5 = null;
												if(_this76.s6 != null) {
													var _this77 = _this76.s6;
													var out34 = _this77.s0;
													if(_this77.l != 0) {
														_this77.s0 = _this77.s1;
														_this77.s1 = _this77.s2;
														_this77.s2 = _this77.s3;
														_this77.s3 = _this77.s4;
														_this77.s4 = _this77.s5;
														_this77.s5 = null;
														if(_this77.s6 != null) {
															var _this78 = _this77.s6;
															var out35 = _this78.s0;
															if(_this78.l != 0) {
																_this78.s0 = _this78.s1;
																_this78.s1 = _this78.s2;
																_this78.s2 = _this78.s3;
																_this78.s3 = _this78.s4;
																_this78.s4 = _this78.s5;
																_this78.s5 = null;
																if(_this78.s6 != null) {
																	var _this79 = _this78.s6;
																	var out36 = _this79.s0;
																	if(_this79.l != 0) {
																		_this79.s0 = _this79.s1;
																		_this79.s1 = _this79.s2;
																		_this79.s2 = _this79.s3;
																		_this79.s3 = _this79.s4;
																		_this79.s4 = _this79.s5;
																		_this79.s5 = null;
																		if(_this79.s6 != null) {
																			var _this80 = _this79.s6;
																			var out37 = _this80.s0;
																			if(_this80.l != 0) {
																				_this80.s0 = _this80.s1;
																				_this80.s1 = _this80.s2;
																				_this80.s2 = _this80.s3;
																				_this80.s3 = _this80.s4;
																				_this80.s4 = _this80.s5;
																				_this80.s5 = null;
																				if(_this80.s6 != null) {
																					var _this81 = _this80.s6;
																					var out38 = _this81.s0;
																					if(_this81.l != 0) {
																						_this81.s0 = _this81.s1;
																						_this81.s1 = _this81.s2;
																						_this81.s2 = _this81.s3;
																						_this81.s3 = _this81.s4;
																						_this81.s4 = _this81.s5;
																						_this81.s5 = null;
																						if(_this81.s6 != null) {
																							_this81.s5 = _this81.s6.shift();
																						}
																						_this81.l--;
																					}
																					_this80.s5 = out38;
																				}
																				_this80.l--;
																			}
																			_this79.s5 = out37;
																		}
																		_this79.l--;
																	}
																	_this78.s5 = out36;
																}
																_this78.l--;
															}
															_this77.s5 = out35;
														}
														_this77.l--;
													}
													_this76.s5 = out34;
												}
												_this76.l--;
											}
											_this75.s5 = out33;
										}
										_this75.l--;
									}
									_this74.s5 = out32;
								}
								_this74.l--;
							}
							_this73.s5 = out31;
						}
						_this73.l--;
					}
					var sweep = out30 | 0;
					var _this82 = this.store;
					var out39 = _this82.s0;
					if(_this82.l != 0) {
						_this82.s0 = _this82.s1;
						_this82.s1 = _this82.s2;
						_this82.s2 = _this82.s3;
						_this82.s3 = _this82.s4;
						_this82.s4 = _this82.s5;
						_this82.s5 = null;
						if(_this82.s6 != null) {
							var _this83 = _this82.s6;
							var out40 = _this83.s0;
							if(_this83.l != 0) {
								_this83.s0 = _this83.s1;
								_this83.s1 = _this83.s2;
								_this83.s2 = _this83.s3;
								_this83.s3 = _this83.s4;
								_this83.s4 = _this83.s5;
								_this83.s5 = null;
								if(_this83.s6 != null) {
									var _this84 = _this83.s6;
									var out41 = _this84.s0;
									if(_this84.l != 0) {
										_this84.s0 = _this84.s1;
										_this84.s1 = _this84.s2;
										_this84.s2 = _this84.s3;
										_this84.s3 = _this84.s4;
										_this84.s4 = _this84.s5;
										_this84.s5 = null;
										if(_this84.s6 != null) {
											var _this85 = _this84.s6;
											var out42 = _this85.s0;
											if(_this85.l != 0) {
												_this85.s0 = _this85.s1;
												_this85.s1 = _this85.s2;
												_this85.s2 = _this85.s3;
												_this85.s3 = _this85.s4;
												_this85.s4 = _this85.s5;
												_this85.s5 = null;
												if(_this85.s6 != null) {
													var _this86 = _this85.s6;
													var out43 = _this86.s0;
													if(_this86.l != 0) {
														_this86.s0 = _this86.s1;
														_this86.s1 = _this86.s2;
														_this86.s2 = _this86.s3;
														_this86.s3 = _this86.s4;
														_this86.s4 = _this86.s5;
														_this86.s5 = null;
														if(_this86.s6 != null) {
															var _this87 = _this86.s6;
															var out44 = _this87.s0;
															if(_this87.l != 0) {
																_this87.s0 = _this87.s1;
																_this87.s1 = _this87.s2;
																_this87.s2 = _this87.s3;
																_this87.s3 = _this87.s4;
																_this87.s4 = _this87.s5;
																_this87.s5 = null;
																if(_this87.s6 != null) {
																	var _this88 = _this87.s6;
																	var out45 = _this88.s0;
																	if(_this88.l != 0) {
																		_this88.s0 = _this88.s1;
																		_this88.s1 = _this88.s2;
																		_this88.s2 = _this88.s3;
																		_this88.s3 = _this88.s4;
																		_this88.s4 = _this88.s5;
																		_this88.s5 = null;
																		if(_this88.s6 != null) {
																			_this88.s5 = _this88.s6.shift();
																		}
																		_this88.l--;
																	}
																	_this87.s5 = out45;
																}
																_this87.l--;
															}
															_this86.s5 = out44;
														}
														_this86.l--;
													}
													_this85.s5 = out43;
												}
												_this85.l--;
											}
											_this84.s5 = out42;
										}
										_this84.l--;
									}
									_this83.s5 = out41;
								}
								_this83.l--;
							}
							_this82.s5 = out40;
						}
						_this82.l--;
					}
					this.lastX = out39;
					var _this89 = this.store;
					var out46 = _this89.s0;
					if(_this89.l != 0) {
						_this89.s0 = _this89.s1;
						_this89.s1 = _this89.s2;
						_this89.s2 = _this89.s3;
						_this89.s3 = _this89.s4;
						_this89.s4 = _this89.s5;
						_this89.s5 = null;
						if(_this89.s6 != null) {
							var _this90 = _this89.s6;
							var out47 = _this90.s0;
							if(_this90.l != 0) {
								_this90.s0 = _this90.s1;
								_this90.s1 = _this90.s2;
								_this90.s2 = _this90.s3;
								_this90.s3 = _this90.s4;
								_this90.s4 = _this90.s5;
								_this90.s5 = null;
								if(_this90.s6 != null) {
									var _this91 = _this90.s6;
									var out48 = _this91.s0;
									if(_this91.l != 0) {
										_this91.s0 = _this91.s1;
										_this91.s1 = _this91.s2;
										_this91.s2 = _this91.s3;
										_this91.s3 = _this91.s4;
										_this91.s4 = _this91.s5;
										_this91.s5 = null;
										if(_this91.s6 != null) {
											var _this92 = _this91.s6;
											var out49 = _this92.s0;
											if(_this92.l != 0) {
												_this92.s0 = _this92.s1;
												_this92.s1 = _this92.s2;
												_this92.s2 = _this92.s3;
												_this92.s3 = _this92.s4;
												_this92.s4 = _this92.s5;
												_this92.s5 = null;
												if(_this92.s6 != null) {
													var _this93 = _this92.s6;
													var out50 = _this93.s0;
													if(_this93.l != 0) {
														_this93.s0 = _this93.s1;
														_this93.s1 = _this93.s2;
														_this93.s2 = _this93.s3;
														_this93.s3 = _this93.s4;
														_this93.s4 = _this93.s5;
														_this93.s5 = null;
														if(_this93.s6 != null) {
															var _this94 = _this93.s6;
															var out51 = _this94.s0;
															if(_this94.l != 0) {
																_this94.s0 = _this94.s1;
																_this94.s1 = _this94.s2;
																_this94.s2 = _this94.s3;
																_this94.s3 = _this94.s4;
																_this94.s4 = _this94.s5;
																_this94.s5 = null;
																if(_this94.s6 != null) {
																	var _this95 = _this94.s6;
																	var out52 = _this95.s0;
																	if(_this95.l != 0) {
																		_this95.s0 = _this95.s1;
																		_this95.s1 = _this95.s2;
																		_this95.s2 = _this95.s3;
																		_this95.s3 = _this95.s4;
																		_this95.s4 = _this95.s5;
																		_this95.s5 = null;
																		if(_this95.s6 != null) {
																			_this95.s5 = _this95.s6.shift();
																		}
																		_this95.l--;
																	}
																	_this94.s5 = out52;
																}
																_this94.l--;
															}
															_this93.s5 = out51;
														}
														_this93.l--;
													}
													_this92.s5 = out50;
												}
												_this92.l--;
											}
											_this91.s5 = out49;
										}
										_this91.l--;
									}
									_this90.s5 = out48;
								}
								_this90.l--;
							}
							_this89.s5 = out47;
						}
						_this89.l--;
					}
					this.lastY = out46;
					var sx1 = sx;
					var sy1 = sy;
					var phi1 = phi;
					var ex = this.lastX;
					var ey = this.lastY;
					var mx = (sx1 - ex) / 2;
					var my = (sy1 - ey) / 2;
					var ax = (sx1 + ex) / 2;
					var ay = (sy1 + ey) / 2;
					phi1 %= 360;
					phi1 = phi1 * Math.PI / 180;
					var sin = Math.sin(phi1);
					var cos = Math.cos(phi1);
					var x1 = mx * cos + my * sin;
					var y1 = -mx * sin + my * cos;
					var rx = Math.abs(xr);
					var ry = Math.abs(yr);
					var rxx = rx * rx;
					var ryy = ry * ry;
					var xx1 = x1 * x1;
					var yy1 = y1 * y1;
					var check = xx1 / rxx + yy1 / ryy;
					if(check > 1) {
						rx *= Math.sqrt(check);
						ry *= Math.sqrt(check);
						rxx = rx * rx;
						ryy = ry * ry;
					}
					var sign = large == sweep ? -1 : 1;
					var sq = (rxx * ryy - rxx * yy1 - ryy * xx1) / (rxx * yy1 + ryy * xx1);
					sq = sq < 0 ? 0 : sq;
					var coef = sign * Math.sqrt(sq);
					var cx1 = coef * rx * y1 / ry;
					var cy1 = -coef * ry * x1 / rx;
					var cx = ax + cx1 * cos - cy1 * sin;
					var cy = ay + cx1 * sin + cy1 * cos;
					var phiSin = Math.sin(-phi1);
					var phiCos = Math.cos(-phi1);
					sx1 -= cx;
					sy1 -= cy;
					var dx = sx1;
					var dy = sy1;
					sx1 = dx * phiCos - dy * phiSin;
					sy1 = dx * phiSin + dy * phiCos;
					sx1 += cx;
					sy1 += cy;
					ex -= cx;
					ey -= cy;
					var dx1 = ex;
					var dy1 = ey;
					ex = dx1 * phiCos - dy1 * phiSin;
					ey = dx1 * phiSin + dy1 * phiCos;
					ex += cx;
					ey += cy;
					var alpha = Math.atan2(rx * (cy - sy1),ry * (cx - sx1)) - Math.PI;
					var omega = Math.atan2(rx * (cy - ey),ry * (cx - ex)) - Math.PI;
					var delta = alpha - omega;
					if(sweep == 1 && delta > 0) {
						delta -= 2 * Math.PI;
					} else if(sweep == 0 && delta < 0) {
						delta += 2 * Math.PI;
					}
					var this1 = { cx : cx, cy : cy, rx : rx, ry : ry, alpha : alpha, omega : omega, delta : -delta, phi : phi1, phiSin : Math.sin(phi1), phiCos : Math.cos(phi1)};
					var ellipseData = this1;
					var ellipse = new trilateral_justPath_EllipseArc(ellipseData);
					ellipse.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
				} else if(this.store.l > 7) {
					while(this.store.l > 6) {
						var sx2 = this.lastX;
						var sy2 = this.lastY;
						var _this96 = this.store;
						var out53 = _this96.s0;
						if(_this96.l != 0) {
							_this96.s0 = _this96.s1;
							_this96.s1 = _this96.s2;
							_this96.s2 = _this96.s3;
							_this96.s3 = _this96.s4;
							_this96.s4 = _this96.s5;
							_this96.s5 = null;
							if(_this96.s6 != null) {
								var _this97 = _this96.s6;
								var out54 = _this97.s0;
								if(_this97.l != 0) {
									_this97.s0 = _this97.s1;
									_this97.s1 = _this97.s2;
									_this97.s2 = _this97.s3;
									_this97.s3 = _this97.s4;
									_this97.s4 = _this97.s5;
									_this97.s5 = null;
									if(_this97.s6 != null) {
										var _this98 = _this97.s6;
										var out55 = _this98.s0;
										if(_this98.l != 0) {
											_this98.s0 = _this98.s1;
											_this98.s1 = _this98.s2;
											_this98.s2 = _this98.s3;
											_this98.s3 = _this98.s4;
											_this98.s4 = _this98.s5;
											_this98.s5 = null;
											if(_this98.s6 != null) {
												var _this99 = _this98.s6;
												var out56 = _this99.s0;
												if(_this99.l != 0) {
													_this99.s0 = _this99.s1;
													_this99.s1 = _this99.s2;
													_this99.s2 = _this99.s3;
													_this99.s3 = _this99.s4;
													_this99.s4 = _this99.s5;
													_this99.s5 = null;
													if(_this99.s6 != null) {
														var _this100 = _this99.s6;
														var out57 = _this100.s0;
														if(_this100.l != 0) {
															_this100.s0 = _this100.s1;
															_this100.s1 = _this100.s2;
															_this100.s2 = _this100.s3;
															_this100.s3 = _this100.s4;
															_this100.s4 = _this100.s5;
															_this100.s5 = null;
															if(_this100.s6 != null) {
																var _this101 = _this100.s6;
																var out58 = _this101.s0;
																if(_this101.l != 0) {
																	_this101.s0 = _this101.s1;
																	_this101.s1 = _this101.s2;
																	_this101.s2 = _this101.s3;
																	_this101.s3 = _this101.s4;
																	_this101.s4 = _this101.s5;
																	_this101.s5 = null;
																	if(_this101.s6 != null) {
																		var _this102 = _this101.s6;
																		var out59 = _this102.s0;
																		if(_this102.l != 0) {
																			_this102.s0 = _this102.s1;
																			_this102.s1 = _this102.s2;
																			_this102.s2 = _this102.s3;
																			_this102.s3 = _this102.s4;
																			_this102.s4 = _this102.s5;
																			_this102.s5 = null;
																			if(_this102.s6 != null) {
																				_this102.s5 = _this102.s6.shift();
																			}
																			_this102.l--;
																		}
																		_this101.s5 = out59;
																	}
																	_this101.l--;
																}
																_this100.s5 = out58;
															}
															_this100.l--;
														}
														_this99.s5 = out57;
													}
													_this99.l--;
												}
												_this98.s5 = out56;
											}
											_this98.l--;
										}
										_this97.s5 = out55;
									}
									_this97.l--;
								}
								_this96.s5 = out54;
							}
							_this96.l--;
						}
						var xr1 = out53;
						var _this103 = this.store;
						var out60 = _this103.s0;
						if(_this103.l != 0) {
							_this103.s0 = _this103.s1;
							_this103.s1 = _this103.s2;
							_this103.s2 = _this103.s3;
							_this103.s3 = _this103.s4;
							_this103.s4 = _this103.s5;
							_this103.s5 = null;
							if(_this103.s6 != null) {
								var _this104 = _this103.s6;
								var out61 = _this104.s0;
								if(_this104.l != 0) {
									_this104.s0 = _this104.s1;
									_this104.s1 = _this104.s2;
									_this104.s2 = _this104.s3;
									_this104.s3 = _this104.s4;
									_this104.s4 = _this104.s5;
									_this104.s5 = null;
									if(_this104.s6 != null) {
										var _this105 = _this104.s6;
										var out62 = _this105.s0;
										if(_this105.l != 0) {
											_this105.s0 = _this105.s1;
											_this105.s1 = _this105.s2;
											_this105.s2 = _this105.s3;
											_this105.s3 = _this105.s4;
											_this105.s4 = _this105.s5;
											_this105.s5 = null;
											if(_this105.s6 != null) {
												var _this106 = _this105.s6;
												var out63 = _this106.s0;
												if(_this106.l != 0) {
													_this106.s0 = _this106.s1;
													_this106.s1 = _this106.s2;
													_this106.s2 = _this106.s3;
													_this106.s3 = _this106.s4;
													_this106.s4 = _this106.s5;
													_this106.s5 = null;
													if(_this106.s6 != null) {
														var _this107 = _this106.s6;
														var out64 = _this107.s0;
														if(_this107.l != 0) {
															_this107.s0 = _this107.s1;
															_this107.s1 = _this107.s2;
															_this107.s2 = _this107.s3;
															_this107.s3 = _this107.s4;
															_this107.s4 = _this107.s5;
															_this107.s5 = null;
															if(_this107.s6 != null) {
																var _this108 = _this107.s6;
																var out65 = _this108.s0;
																if(_this108.l != 0) {
																	_this108.s0 = _this108.s1;
																	_this108.s1 = _this108.s2;
																	_this108.s2 = _this108.s3;
																	_this108.s3 = _this108.s4;
																	_this108.s4 = _this108.s5;
																	_this108.s5 = null;
																	if(_this108.s6 != null) {
																		var _this109 = _this108.s6;
																		var out66 = _this109.s0;
																		if(_this109.l != 0) {
																			_this109.s0 = _this109.s1;
																			_this109.s1 = _this109.s2;
																			_this109.s2 = _this109.s3;
																			_this109.s3 = _this109.s4;
																			_this109.s4 = _this109.s5;
																			_this109.s5 = null;
																			if(_this109.s6 != null) {
																				_this109.s5 = _this109.s6.shift();
																			}
																			_this109.l--;
																		}
																		_this108.s5 = out66;
																	}
																	_this108.l--;
																}
																_this107.s5 = out65;
															}
															_this107.l--;
														}
														_this106.s5 = out64;
													}
													_this106.l--;
												}
												_this105.s5 = out63;
											}
											_this105.l--;
										}
										_this104.s5 = out62;
									}
									_this104.l--;
								}
								_this103.s5 = out61;
							}
							_this103.l--;
						}
						var yr1 = out60;
						var _this110 = this.store;
						var out67 = _this110.s0;
						if(_this110.l != 0) {
							_this110.s0 = _this110.s1;
							_this110.s1 = _this110.s2;
							_this110.s2 = _this110.s3;
							_this110.s3 = _this110.s4;
							_this110.s4 = _this110.s5;
							_this110.s5 = null;
							if(_this110.s6 != null) {
								var _this111 = _this110.s6;
								var out68 = _this111.s0;
								if(_this111.l != 0) {
									_this111.s0 = _this111.s1;
									_this111.s1 = _this111.s2;
									_this111.s2 = _this111.s3;
									_this111.s3 = _this111.s4;
									_this111.s4 = _this111.s5;
									_this111.s5 = null;
									if(_this111.s6 != null) {
										var _this112 = _this111.s6;
										var out69 = _this112.s0;
										if(_this112.l != 0) {
											_this112.s0 = _this112.s1;
											_this112.s1 = _this112.s2;
											_this112.s2 = _this112.s3;
											_this112.s3 = _this112.s4;
											_this112.s4 = _this112.s5;
											_this112.s5 = null;
											if(_this112.s6 != null) {
												var _this113 = _this112.s6;
												var out70 = _this113.s0;
												if(_this113.l != 0) {
													_this113.s0 = _this113.s1;
													_this113.s1 = _this113.s2;
													_this113.s2 = _this113.s3;
													_this113.s3 = _this113.s4;
													_this113.s4 = _this113.s5;
													_this113.s5 = null;
													if(_this113.s6 != null) {
														var _this114 = _this113.s6;
														var out71 = _this114.s0;
														if(_this114.l != 0) {
															_this114.s0 = _this114.s1;
															_this114.s1 = _this114.s2;
															_this114.s2 = _this114.s3;
															_this114.s3 = _this114.s4;
															_this114.s4 = _this114.s5;
															_this114.s5 = null;
															if(_this114.s6 != null) {
																var _this115 = _this114.s6;
																var out72 = _this115.s0;
																if(_this115.l != 0) {
																	_this115.s0 = _this115.s1;
																	_this115.s1 = _this115.s2;
																	_this115.s2 = _this115.s3;
																	_this115.s3 = _this115.s4;
																	_this115.s4 = _this115.s5;
																	_this115.s5 = null;
																	if(_this115.s6 != null) {
																		var _this116 = _this115.s6;
																		var out73 = _this116.s0;
																		if(_this116.l != 0) {
																			_this116.s0 = _this116.s1;
																			_this116.s1 = _this116.s2;
																			_this116.s2 = _this116.s3;
																			_this116.s3 = _this116.s4;
																			_this116.s4 = _this116.s5;
																			_this116.s5 = null;
																			if(_this116.s6 != null) {
																				_this116.s5 = _this116.s6.shift();
																			}
																			_this116.l--;
																		}
																		_this115.s5 = out73;
																	}
																	_this115.l--;
																}
																_this114.s5 = out72;
															}
															_this114.l--;
														}
														_this113.s5 = out71;
													}
													_this113.l--;
												}
												_this112.s5 = out70;
											}
											_this112.l--;
										}
										_this111.s5 = out69;
									}
									_this111.l--;
								}
								_this110.s5 = out68;
							}
							_this110.l--;
						}
						var phi2 = out67;
						var _this117 = this.store;
						var out74 = _this117.s0;
						if(_this117.l != 0) {
							_this117.s0 = _this117.s1;
							_this117.s1 = _this117.s2;
							_this117.s2 = _this117.s3;
							_this117.s3 = _this117.s4;
							_this117.s4 = _this117.s5;
							_this117.s5 = null;
							if(_this117.s6 != null) {
								var _this118 = _this117.s6;
								var out75 = _this118.s0;
								if(_this118.l != 0) {
									_this118.s0 = _this118.s1;
									_this118.s1 = _this118.s2;
									_this118.s2 = _this118.s3;
									_this118.s3 = _this118.s4;
									_this118.s4 = _this118.s5;
									_this118.s5 = null;
									if(_this118.s6 != null) {
										var _this119 = _this118.s6;
										var out76 = _this119.s0;
										if(_this119.l != 0) {
											_this119.s0 = _this119.s1;
											_this119.s1 = _this119.s2;
											_this119.s2 = _this119.s3;
											_this119.s3 = _this119.s4;
											_this119.s4 = _this119.s5;
											_this119.s5 = null;
											if(_this119.s6 != null) {
												var _this120 = _this119.s6;
												var out77 = _this120.s0;
												if(_this120.l != 0) {
													_this120.s0 = _this120.s1;
													_this120.s1 = _this120.s2;
													_this120.s2 = _this120.s3;
													_this120.s3 = _this120.s4;
													_this120.s4 = _this120.s5;
													_this120.s5 = null;
													if(_this120.s6 != null) {
														var _this121 = _this120.s6;
														var out78 = _this121.s0;
														if(_this121.l != 0) {
															_this121.s0 = _this121.s1;
															_this121.s1 = _this121.s2;
															_this121.s2 = _this121.s3;
															_this121.s3 = _this121.s4;
															_this121.s4 = _this121.s5;
															_this121.s5 = null;
															if(_this121.s6 != null) {
																var _this122 = _this121.s6;
																var out79 = _this122.s0;
																if(_this122.l != 0) {
																	_this122.s0 = _this122.s1;
																	_this122.s1 = _this122.s2;
																	_this122.s2 = _this122.s3;
																	_this122.s3 = _this122.s4;
																	_this122.s4 = _this122.s5;
																	_this122.s5 = null;
																	if(_this122.s6 != null) {
																		var _this123 = _this122.s6;
																		var out80 = _this123.s0;
																		if(_this123.l != 0) {
																			_this123.s0 = _this123.s1;
																			_this123.s1 = _this123.s2;
																			_this123.s2 = _this123.s3;
																			_this123.s3 = _this123.s4;
																			_this123.s4 = _this123.s5;
																			_this123.s5 = null;
																			if(_this123.s6 != null) {
																				var _this124 = _this123.s6;
																				var out81 = _this124.s0;
																				if(_this124.l != 0) {
																					_this124.s0 = _this124.s1;
																					_this124.s1 = _this124.s2;
																					_this124.s2 = _this124.s3;
																					_this124.s3 = _this124.s4;
																					_this124.s4 = _this124.s5;
																					_this124.s5 = null;
																					if(_this124.s6 != null) {
																						var _this125 = _this124.s6;
																						var out82 = _this125.s0;
																						if(_this125.l != 0) {
																							_this125.s0 = _this125.s1;
																							_this125.s1 = _this125.s2;
																							_this125.s2 = _this125.s3;
																							_this125.s3 = _this125.s4;
																							_this125.s4 = _this125.s5;
																							_this125.s5 = null;
																							if(_this125.s6 != null) {
																								_this125.s5 = _this125.s6.shift();
																							}
																							_this125.l--;
																						}
																						_this124.s5 = out82;
																					}
																					_this124.l--;
																				}
																				_this123.s5 = out81;
																			}
																			_this123.l--;
																		}
																		_this122.s5 = out80;
																	}
																	_this122.l--;
																}
																_this121.s5 = out79;
															}
															_this121.l--;
														}
														_this120.s5 = out78;
													}
													_this120.l--;
												}
												_this119.s5 = out77;
											}
											_this119.l--;
										}
										_this118.s5 = out76;
									}
									_this118.l--;
								}
								_this117.s5 = out75;
							}
							_this117.l--;
						}
						var large1 = out74 | 0;
						var _this126 = this.store;
						var out83 = _this126.s0;
						if(_this126.l != 0) {
							_this126.s0 = _this126.s1;
							_this126.s1 = _this126.s2;
							_this126.s2 = _this126.s3;
							_this126.s3 = _this126.s4;
							_this126.s4 = _this126.s5;
							_this126.s5 = null;
							if(_this126.s6 != null) {
								var _this127 = _this126.s6;
								var out84 = _this127.s0;
								if(_this127.l != 0) {
									_this127.s0 = _this127.s1;
									_this127.s1 = _this127.s2;
									_this127.s2 = _this127.s3;
									_this127.s3 = _this127.s4;
									_this127.s4 = _this127.s5;
									_this127.s5 = null;
									if(_this127.s6 != null) {
										var _this128 = _this127.s6;
										var out85 = _this128.s0;
										if(_this128.l != 0) {
											_this128.s0 = _this128.s1;
											_this128.s1 = _this128.s2;
											_this128.s2 = _this128.s3;
											_this128.s3 = _this128.s4;
											_this128.s4 = _this128.s5;
											_this128.s5 = null;
											if(_this128.s6 != null) {
												var _this129 = _this128.s6;
												var out86 = _this129.s0;
												if(_this129.l != 0) {
													_this129.s0 = _this129.s1;
													_this129.s1 = _this129.s2;
													_this129.s2 = _this129.s3;
													_this129.s3 = _this129.s4;
													_this129.s4 = _this129.s5;
													_this129.s5 = null;
													if(_this129.s6 != null) {
														var _this130 = _this129.s6;
														var out87 = _this130.s0;
														if(_this130.l != 0) {
															_this130.s0 = _this130.s1;
															_this130.s1 = _this130.s2;
															_this130.s2 = _this130.s3;
															_this130.s3 = _this130.s4;
															_this130.s4 = _this130.s5;
															_this130.s5 = null;
															if(_this130.s6 != null) {
																var _this131 = _this130.s6;
																var out88 = _this131.s0;
																if(_this131.l != 0) {
																	_this131.s0 = _this131.s1;
																	_this131.s1 = _this131.s2;
																	_this131.s2 = _this131.s3;
																	_this131.s3 = _this131.s4;
																	_this131.s4 = _this131.s5;
																	_this131.s5 = null;
																	if(_this131.s6 != null) {
																		var _this132 = _this131.s6;
																		var out89 = _this132.s0;
																		if(_this132.l != 0) {
																			_this132.s0 = _this132.s1;
																			_this132.s1 = _this132.s2;
																			_this132.s2 = _this132.s3;
																			_this132.s3 = _this132.s4;
																			_this132.s4 = _this132.s5;
																			_this132.s5 = null;
																			if(_this132.s6 != null) {
																				var _this133 = _this132.s6;
																				var out90 = _this133.s0;
																				if(_this133.l != 0) {
																					_this133.s0 = _this133.s1;
																					_this133.s1 = _this133.s2;
																					_this133.s2 = _this133.s3;
																					_this133.s3 = _this133.s4;
																					_this133.s4 = _this133.s5;
																					_this133.s5 = null;
																					if(_this133.s6 != null) {
																						var _this134 = _this133.s6;
																						var out91 = _this134.s0;
																						if(_this134.l != 0) {
																							_this134.s0 = _this134.s1;
																							_this134.s1 = _this134.s2;
																							_this134.s2 = _this134.s3;
																							_this134.s3 = _this134.s4;
																							_this134.s4 = _this134.s5;
																							_this134.s5 = null;
																							if(_this134.s6 != null) {
																								_this134.s5 = _this134.s6.shift();
																							}
																							_this134.l--;
																						}
																						_this133.s5 = out91;
																					}
																					_this133.l--;
																				}
																				_this132.s5 = out90;
																			}
																			_this132.l--;
																		}
																		_this131.s5 = out89;
																	}
																	_this131.l--;
																}
																_this130.s5 = out88;
															}
															_this130.l--;
														}
														_this129.s5 = out87;
													}
													_this129.l--;
												}
												_this128.s5 = out86;
											}
											_this128.l--;
										}
										_this127.s5 = out85;
									}
									_this127.l--;
								}
								_this126.s5 = out84;
							}
							_this126.l--;
						}
						var sweep1 = out83 | 0;
						var _this135 = this.store;
						var out92 = _this135.s0;
						if(_this135.l != 0) {
							_this135.s0 = _this135.s1;
							_this135.s1 = _this135.s2;
							_this135.s2 = _this135.s3;
							_this135.s3 = _this135.s4;
							_this135.s4 = _this135.s5;
							_this135.s5 = null;
							if(_this135.s6 != null) {
								var _this136 = _this135.s6;
								var out93 = _this136.s0;
								if(_this136.l != 0) {
									_this136.s0 = _this136.s1;
									_this136.s1 = _this136.s2;
									_this136.s2 = _this136.s3;
									_this136.s3 = _this136.s4;
									_this136.s4 = _this136.s5;
									_this136.s5 = null;
									if(_this136.s6 != null) {
										var _this137 = _this136.s6;
										var out94 = _this137.s0;
										if(_this137.l != 0) {
											_this137.s0 = _this137.s1;
											_this137.s1 = _this137.s2;
											_this137.s2 = _this137.s3;
											_this137.s3 = _this137.s4;
											_this137.s4 = _this137.s5;
											_this137.s5 = null;
											if(_this137.s6 != null) {
												var _this138 = _this137.s6;
												var out95 = _this138.s0;
												if(_this138.l != 0) {
													_this138.s0 = _this138.s1;
													_this138.s1 = _this138.s2;
													_this138.s2 = _this138.s3;
													_this138.s3 = _this138.s4;
													_this138.s4 = _this138.s5;
													_this138.s5 = null;
													if(_this138.s6 != null) {
														var _this139 = _this138.s6;
														var out96 = _this139.s0;
														if(_this139.l != 0) {
															_this139.s0 = _this139.s1;
															_this139.s1 = _this139.s2;
															_this139.s2 = _this139.s3;
															_this139.s3 = _this139.s4;
															_this139.s4 = _this139.s5;
															_this139.s5 = null;
															if(_this139.s6 != null) {
																var _this140 = _this139.s6;
																var out97 = _this140.s0;
																if(_this140.l != 0) {
																	_this140.s0 = _this140.s1;
																	_this140.s1 = _this140.s2;
																	_this140.s2 = _this140.s3;
																	_this140.s3 = _this140.s4;
																	_this140.s4 = _this140.s5;
																	_this140.s5 = null;
																	if(_this140.s6 != null) {
																		var _this141 = _this140.s6;
																		var out98 = _this141.s0;
																		if(_this141.l != 0) {
																			_this141.s0 = _this141.s1;
																			_this141.s1 = _this141.s2;
																			_this141.s2 = _this141.s3;
																			_this141.s3 = _this141.s4;
																			_this141.s4 = _this141.s5;
																			_this141.s5 = null;
																			if(_this141.s6 != null) {
																				_this141.s5 = _this141.s6.shift();
																			}
																			_this141.l--;
																		}
																		_this140.s5 = out98;
																	}
																	_this140.l--;
																}
																_this139.s5 = out97;
															}
															_this139.l--;
														}
														_this138.s5 = out96;
													}
													_this138.l--;
												}
												_this137.s5 = out95;
											}
											_this137.l--;
										}
										_this136.s5 = out94;
									}
									_this136.l--;
								}
								_this135.s5 = out93;
							}
							_this135.l--;
						}
						this.lastX = out92;
						var _this142 = this.store;
						var out99 = _this142.s0;
						if(_this142.l != 0) {
							_this142.s0 = _this142.s1;
							_this142.s1 = _this142.s2;
							_this142.s2 = _this142.s3;
							_this142.s3 = _this142.s4;
							_this142.s4 = _this142.s5;
							_this142.s5 = null;
							if(_this142.s6 != null) {
								var _this143 = _this142.s6;
								var out100 = _this143.s0;
								if(_this143.l != 0) {
									_this143.s0 = _this143.s1;
									_this143.s1 = _this143.s2;
									_this143.s2 = _this143.s3;
									_this143.s3 = _this143.s4;
									_this143.s4 = _this143.s5;
									_this143.s5 = null;
									if(_this143.s6 != null) {
										var _this144 = _this143.s6;
										var out101 = _this144.s0;
										if(_this144.l != 0) {
											_this144.s0 = _this144.s1;
											_this144.s1 = _this144.s2;
											_this144.s2 = _this144.s3;
											_this144.s3 = _this144.s4;
											_this144.s4 = _this144.s5;
											_this144.s5 = null;
											if(_this144.s6 != null) {
												var _this145 = _this144.s6;
												var out102 = _this145.s0;
												if(_this145.l != 0) {
													_this145.s0 = _this145.s1;
													_this145.s1 = _this145.s2;
													_this145.s2 = _this145.s3;
													_this145.s3 = _this145.s4;
													_this145.s4 = _this145.s5;
													_this145.s5 = null;
													if(_this145.s6 != null) {
														var _this146 = _this145.s6;
														var out103 = _this146.s0;
														if(_this146.l != 0) {
															_this146.s0 = _this146.s1;
															_this146.s1 = _this146.s2;
															_this146.s2 = _this146.s3;
															_this146.s3 = _this146.s4;
															_this146.s4 = _this146.s5;
															_this146.s5 = null;
															if(_this146.s6 != null) {
																var _this147 = _this146.s6;
																var out104 = _this147.s0;
																if(_this147.l != 0) {
																	_this147.s0 = _this147.s1;
																	_this147.s1 = _this147.s2;
																	_this147.s2 = _this147.s3;
																	_this147.s3 = _this147.s4;
																	_this147.s4 = _this147.s5;
																	_this147.s5 = null;
																	if(_this147.s6 != null) {
																		var _this148 = _this147.s6;
																		var out105 = _this148.s0;
																		if(_this148.l != 0) {
																			_this148.s0 = _this148.s1;
																			_this148.s1 = _this148.s2;
																			_this148.s2 = _this148.s3;
																			_this148.s3 = _this148.s4;
																			_this148.s4 = _this148.s5;
																			_this148.s5 = null;
																			if(_this148.s6 != null) {
																				_this148.s5 = _this148.s6.shift();
																			}
																			_this148.l--;
																		}
																		_this147.s5 = out105;
																	}
																	_this147.l--;
																}
																_this146.s5 = out104;
															}
															_this146.l--;
														}
														_this145.s5 = out103;
													}
													_this145.l--;
												}
												_this144.s5 = out102;
											}
											_this144.l--;
										}
										_this143.s5 = out101;
									}
									_this143.l--;
								}
								_this142.s5 = out100;
							}
							_this142.l--;
						}
						this.lastY = out99;
						var sx3 = sx2;
						var sy3 = sy2;
						var phi3 = phi2;
						var ex1 = this.lastX;
						var ey1 = this.lastY;
						var mx1 = (sx3 - ex1) / 2;
						var my1 = (sy3 - ey1) / 2;
						var ax1 = (sx3 + ex1) / 2;
						var ay1 = (sy3 + ey1) / 2;
						phi3 %= 360;
						phi3 = phi3 * Math.PI / 180;
						var sin1 = Math.sin(phi3);
						var cos1 = Math.cos(phi3);
						var x11 = mx1 * cos1 + my1 * sin1;
						var y11 = -mx1 * sin1 + my1 * cos1;
						var rx1 = Math.abs(xr1);
						var ry1 = Math.abs(yr1);
						var rxx1 = rx1 * rx1;
						var ryy1 = ry1 * ry1;
						var xx11 = x11 * x11;
						var yy11 = y11 * y11;
						var check1 = xx11 / rxx1 + yy11 / ryy1;
						if(check1 > 1) {
							rx1 *= Math.sqrt(check1);
							ry1 *= Math.sqrt(check1);
							rxx1 = rx1 * rx1;
							ryy1 = ry1 * ry1;
						}
						var sign1 = large1 == sweep1 ? -1 : 1;
						var sq1 = (rxx1 * ryy1 - rxx1 * yy11 - ryy1 * xx11) / (rxx1 * yy11 + ryy1 * xx11);
						sq1 = sq1 < 0 ? 0 : sq1;
						var coef1 = sign1 * Math.sqrt(sq1);
						var cx11 = coef1 * rx1 * y11 / ry1;
						var cy11 = -coef1 * ry1 * x11 / rx1;
						var cx2 = ax1 + cx11 * cos1 - cy11 * sin1;
						var cy2 = ay1 + cx11 * sin1 + cy11 * cos1;
						var phiSin1 = Math.sin(-phi3);
						var phiCos1 = Math.cos(-phi3);
						sx3 -= cx2;
						sy3 -= cy2;
						var dx2 = sx3;
						var dy2 = sy3;
						sx3 = dx2 * phiCos1 - dy2 * phiSin1;
						sy3 = dx2 * phiSin1 + dy2 * phiCos1;
						sx3 += cx2;
						sy3 += cy2;
						ex1 -= cx2;
						ey1 -= cy2;
						var dx3 = ex1;
						var dy3 = ey1;
						ex1 = dx3 * phiCos1 - dy3 * phiSin1;
						ey1 = dx3 * phiSin1 + dy3 * phiCos1;
						ex1 += cx2;
						ey1 += cy2;
						var alpha1 = Math.atan2(rx1 * (cy2 - sy3),ry1 * (cx2 - sx3)) - Math.PI;
						var omega1 = Math.atan2(rx1 * (cy2 - ey1),ry1 * (cx2 - ex1)) - Math.PI;
						var delta1 = alpha1 - omega1;
						if(sweep1 == 1 && delta1 > 0) {
							delta1 -= 2 * Math.PI;
						} else if(sweep1 == 0 && delta1 < 0) {
							delta1 += 2 * Math.PI;
						}
						var this2 = { cx : cx2, cy : cy2, rx : rx1, ry : ry1, alpha : alpha1, omega : omega1, delta : -delta1, phi : phi3, phiSin : Math.sin(phi3), phiCos : Math.cos(phi3)};
						var ellipseData1 = this2;
						var ellipse1 = new trilateral_justPath_EllipseArc(ellipseData1);
						ellipse1.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
					}
				}
				break;
			case 66:
				haxe_Log.trace("bearing - not implemented",{ fileName : "trilateral/justPath/SvgPath.hx", lineNumber : 377, className : "trilateral.justPath.SvgPath", methodName : "parse"});
				throw new js__$Boot_HaxeError("bearing not supported please remove");
			case 67:
				var _this149 = this.store;
				_this149.l = 0;
				_this149.s0 = null;
				_this149.s1 = null;
				_this149.s2 = null;
				_this149.s3 = null;
				_this149.s4 = null;
				_this149.s5 = null;
				_this149.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count2 = 0;
				var temp1 = "";
				var exit1 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp1 != "") {
							if((this.store.l & 1) == 0) {
								var _this150 = this.store;
								var v6 = parseFloat(temp1);
								switch(_this150.l) {
								case 0:
									_this150.s0 = v6;
									break;
								case 1:
									_this150.s1 = v6;
									break;
								case 2:
									_this150.s2 = v6;
									break;
								case 3:
									_this150.s3 = v6;
									break;
								case 4:
									_this150.s4 = v6;
									break;
								case 5:
									_this150.s5 = v6;
									break;
								default:
									if(_this150.s6 == null) {
										_this150.s6 = new trilateral_justPath_StoreF6();
									}
									var _this151 = _this150.s6;
									switch(_this151.l) {
									case 0:
										_this151.s0 = v6;
										break;
									case 1:
										_this151.s1 = v6;
										break;
									case 2:
										_this151.s2 = v6;
										break;
									case 3:
										_this151.s3 = v6;
										break;
									case 4:
										_this151.s4 = v6;
										break;
									case 5:
										_this151.s5 = v6;
										break;
									default:
										if(_this151.s6 == null) {
											_this151.s6 = new trilateral_justPath_StoreF6();
										}
										var _this152 = _this151.s6;
										switch(_this152.l) {
										case 0:
											_this152.s0 = v6;
											break;
										case 1:
											_this152.s1 = v6;
											break;
										case 2:
											_this152.s2 = v6;
											break;
										case 3:
											_this152.s3 = v6;
											break;
										case 4:
											_this152.s4 = v6;
											break;
										case 5:
											_this152.s5 = v6;
											break;
										default:
											if(_this152.s6 == null) {
												_this152.s6 = new trilateral_justPath_StoreF6();
											}
											var _this153 = _this152.s6;
											switch(_this153.l) {
											case 0:
												_this153.s0 = v6;
												break;
											case 1:
												_this153.s1 = v6;
												break;
											case 2:
												_this153.s2 = v6;
												break;
											case 3:
												_this153.s3 = v6;
												break;
											case 4:
												_this153.s4 = v6;
												break;
											case 5:
												_this153.s5 = v6;
												break;
											default:
												if(_this153.s6 == null) {
													_this153.s6 = new trilateral_justPath_StoreF6();
												}
												var _this154 = _this153.s6;
												switch(_this154.l) {
												case 0:
													_this154.s0 = v6;
													break;
												case 1:
													_this154.s1 = v6;
													break;
												case 2:
													_this154.s2 = v6;
													break;
												case 3:
													_this154.s3 = v6;
													break;
												case 4:
													_this154.s4 = v6;
													break;
												case 5:
													_this154.s5 = v6;
													break;
												default:
													if(_this154.s6 == null) {
														_this154.s6 = new trilateral_justPath_StoreF6();
													}
													var _this155 = _this154.s6;
													switch(_this155.l) {
													case 0:
														_this155.s0 = v6;
														break;
													case 1:
														_this155.s1 = v6;
														break;
													case 2:
														_this155.s2 = v6;
														break;
													case 3:
														_this155.s3 = v6;
														break;
													case 4:
														_this155.s4 = v6;
														break;
													case 5:
														_this155.s5 = v6;
														break;
													default:
														if(_this155.s6 == null) {
															_this155.s6 = new trilateral_justPath_StoreF6();
														}
														var _this156 = _this155.s6;
														switch(_this156.l) {
														case 0:
															_this156.s0 = v6;
															break;
														case 1:
															_this156.s1 = v6;
															break;
														case 2:
															_this156.s2 = v6;
															break;
														case 3:
															_this156.s3 = v6;
															break;
														case 4:
															_this156.s4 = v6;
															break;
														case 5:
															_this156.s5 = v6;
															break;
														default:
															if(_this156.s6 == null) {
																_this156.s6 = new trilateral_justPath_StoreF6();
															}
															_this156.s6.push(v6);
														}
														_this156.l++;
													}
													_this155.l++;
												}
												_this154.l++;
											}
											_this153.l++;
										}
										_this152.l++;
									}
									_this151.l++;
								}
								_this150.l++;
							} else {
								var _this157 = this.store;
								var v7 = parseFloat(temp1);
								switch(_this157.l) {
								case 0:
									_this157.s0 = v7;
									break;
								case 1:
									_this157.s1 = v7;
									break;
								case 2:
									_this157.s2 = v7;
									break;
								case 3:
									_this157.s3 = v7;
									break;
								case 4:
									_this157.s4 = v7;
									break;
								case 5:
									_this157.s5 = v7;
									break;
								default:
									if(_this157.s6 == null) {
										_this157.s6 = new trilateral_justPath_StoreF6();
									}
									var _this158 = _this157.s6;
									switch(_this158.l) {
									case 0:
										_this158.s0 = v7;
										break;
									case 1:
										_this158.s1 = v7;
										break;
									case 2:
										_this158.s2 = v7;
										break;
									case 3:
										_this158.s3 = v7;
										break;
									case 4:
										_this158.s4 = v7;
										break;
									case 5:
										_this158.s5 = v7;
										break;
									default:
										if(_this158.s6 == null) {
											_this158.s6 = new trilateral_justPath_StoreF6();
										}
										var _this159 = _this158.s6;
										switch(_this159.l) {
										case 0:
											_this159.s0 = v7;
											break;
										case 1:
											_this159.s1 = v7;
											break;
										case 2:
											_this159.s2 = v7;
											break;
										case 3:
											_this159.s3 = v7;
											break;
										case 4:
											_this159.s4 = v7;
											break;
										case 5:
											_this159.s5 = v7;
											break;
										default:
											if(_this159.s6 == null) {
												_this159.s6 = new trilateral_justPath_StoreF6();
											}
											var _this160 = _this159.s6;
											switch(_this160.l) {
											case 0:
												_this160.s0 = v7;
												break;
											case 1:
												_this160.s1 = v7;
												break;
											case 2:
												_this160.s2 = v7;
												break;
											case 3:
												_this160.s3 = v7;
												break;
											case 4:
												_this160.s4 = v7;
												break;
											case 5:
												_this160.s5 = v7;
												break;
											default:
												if(_this160.s6 == null) {
													_this160.s6 = new trilateral_justPath_StoreF6();
												}
												var _this161 = _this160.s6;
												switch(_this161.l) {
												case 0:
													_this161.s0 = v7;
													break;
												case 1:
													_this161.s1 = v7;
													break;
												case 2:
													_this161.s2 = v7;
													break;
												case 3:
													_this161.s3 = v7;
													break;
												case 4:
													_this161.s4 = v7;
													break;
												case 5:
													_this161.s5 = v7;
													break;
												default:
													if(_this161.s6 == null) {
														_this161.s6 = new trilateral_justPath_StoreF6();
													}
													var _this162 = _this161.s6;
													switch(_this162.l) {
													case 0:
														_this162.s0 = v7;
														break;
													case 1:
														_this162.s1 = v7;
														break;
													case 2:
														_this162.s2 = v7;
														break;
													case 3:
														_this162.s3 = v7;
														break;
													case 4:
														_this162.s4 = v7;
														break;
													case 5:
														_this162.s5 = v7;
														break;
													default:
														if(_this162.s6 == null) {
															_this162.s6 = new trilateral_justPath_StoreF6();
														}
														var _this163 = _this162.s6;
														switch(_this163.l) {
														case 0:
															_this163.s0 = v7;
															break;
														case 1:
															_this163.s1 = v7;
															break;
														case 2:
															_this163.s2 = v7;
															break;
														case 3:
															_this163.s3 = v7;
															break;
														case 4:
															_this163.s4 = v7;
															break;
														case 5:
															_this163.s5 = v7;
															break;
														default:
															if(_this163.s6 == null) {
																_this163.s6 = new trilateral_justPath_StoreF6();
															}
															_this163.s6.push(v7);
														}
														_this163.l++;
													}
													_this162.l++;
												}
												_this161.l++;
											}
											_this160.l++;
										}
										_this159.l++;
									}
									_this158.l++;
								}
								_this157.l++;
							}
							temp1 = "";
						}
						break;
					case 45:
						if(temp1 != "") {
							if((this.store.l & 1) == 0) {
								var _this164 = this.store;
								var v8 = parseFloat(temp1);
								switch(_this164.l) {
								case 0:
									_this164.s0 = v8;
									break;
								case 1:
									_this164.s1 = v8;
									break;
								case 2:
									_this164.s2 = v8;
									break;
								case 3:
									_this164.s3 = v8;
									break;
								case 4:
									_this164.s4 = v8;
									break;
								case 5:
									_this164.s5 = v8;
									break;
								default:
									if(_this164.s6 == null) {
										_this164.s6 = new trilateral_justPath_StoreF6();
									}
									var _this165 = _this164.s6;
									switch(_this165.l) {
									case 0:
										_this165.s0 = v8;
										break;
									case 1:
										_this165.s1 = v8;
										break;
									case 2:
										_this165.s2 = v8;
										break;
									case 3:
										_this165.s3 = v8;
										break;
									case 4:
										_this165.s4 = v8;
										break;
									case 5:
										_this165.s5 = v8;
										break;
									default:
										if(_this165.s6 == null) {
											_this165.s6 = new trilateral_justPath_StoreF6();
										}
										var _this166 = _this165.s6;
										switch(_this166.l) {
										case 0:
											_this166.s0 = v8;
											break;
										case 1:
											_this166.s1 = v8;
											break;
										case 2:
											_this166.s2 = v8;
											break;
										case 3:
											_this166.s3 = v8;
											break;
										case 4:
											_this166.s4 = v8;
											break;
										case 5:
											_this166.s5 = v8;
											break;
										default:
											if(_this166.s6 == null) {
												_this166.s6 = new trilateral_justPath_StoreF6();
											}
											var _this167 = _this166.s6;
											switch(_this167.l) {
											case 0:
												_this167.s0 = v8;
												break;
											case 1:
												_this167.s1 = v8;
												break;
											case 2:
												_this167.s2 = v8;
												break;
											case 3:
												_this167.s3 = v8;
												break;
											case 4:
												_this167.s4 = v8;
												break;
											case 5:
												_this167.s5 = v8;
												break;
											default:
												if(_this167.s6 == null) {
													_this167.s6 = new trilateral_justPath_StoreF6();
												}
												var _this168 = _this167.s6;
												switch(_this168.l) {
												case 0:
													_this168.s0 = v8;
													break;
												case 1:
													_this168.s1 = v8;
													break;
												case 2:
													_this168.s2 = v8;
													break;
												case 3:
													_this168.s3 = v8;
													break;
												case 4:
													_this168.s4 = v8;
													break;
												case 5:
													_this168.s5 = v8;
													break;
												default:
													if(_this168.s6 == null) {
														_this168.s6 = new trilateral_justPath_StoreF6();
													}
													var _this169 = _this168.s6;
													switch(_this169.l) {
													case 0:
														_this169.s0 = v8;
														break;
													case 1:
														_this169.s1 = v8;
														break;
													case 2:
														_this169.s2 = v8;
														break;
													case 3:
														_this169.s3 = v8;
														break;
													case 4:
														_this169.s4 = v8;
														break;
													case 5:
														_this169.s5 = v8;
														break;
													default:
														if(_this169.s6 == null) {
															_this169.s6 = new trilateral_justPath_StoreF6();
														}
														var _this170 = _this169.s6;
														switch(_this170.l) {
														case 0:
															_this170.s0 = v8;
															break;
														case 1:
															_this170.s1 = v8;
															break;
														case 2:
															_this170.s2 = v8;
															break;
														case 3:
															_this170.s3 = v8;
															break;
														case 4:
															_this170.s4 = v8;
															break;
														case 5:
															_this170.s5 = v8;
															break;
														default:
															if(_this170.s6 == null) {
																_this170.s6 = new trilateral_justPath_StoreF6();
															}
															_this170.s6.push(v8);
														}
														_this170.l++;
													}
													_this169.l++;
												}
												_this168.l++;
											}
											_this167.l++;
										}
										_this166.l++;
									}
									_this165.l++;
								}
								_this164.l++;
							} else {
								var _this171 = this.store;
								var v9 = parseFloat(temp1);
								switch(_this171.l) {
								case 0:
									_this171.s0 = v9;
									break;
								case 1:
									_this171.s1 = v9;
									break;
								case 2:
									_this171.s2 = v9;
									break;
								case 3:
									_this171.s3 = v9;
									break;
								case 4:
									_this171.s4 = v9;
									break;
								case 5:
									_this171.s5 = v9;
									break;
								default:
									if(_this171.s6 == null) {
										_this171.s6 = new trilateral_justPath_StoreF6();
									}
									var _this172 = _this171.s6;
									switch(_this172.l) {
									case 0:
										_this172.s0 = v9;
										break;
									case 1:
										_this172.s1 = v9;
										break;
									case 2:
										_this172.s2 = v9;
										break;
									case 3:
										_this172.s3 = v9;
										break;
									case 4:
										_this172.s4 = v9;
										break;
									case 5:
										_this172.s5 = v9;
										break;
									default:
										if(_this172.s6 == null) {
											_this172.s6 = new trilateral_justPath_StoreF6();
										}
										var _this173 = _this172.s6;
										switch(_this173.l) {
										case 0:
											_this173.s0 = v9;
											break;
										case 1:
											_this173.s1 = v9;
											break;
										case 2:
											_this173.s2 = v9;
											break;
										case 3:
											_this173.s3 = v9;
											break;
										case 4:
											_this173.s4 = v9;
											break;
										case 5:
											_this173.s5 = v9;
											break;
										default:
											if(_this173.s6 == null) {
												_this173.s6 = new trilateral_justPath_StoreF6();
											}
											var _this174 = _this173.s6;
											switch(_this174.l) {
											case 0:
												_this174.s0 = v9;
												break;
											case 1:
												_this174.s1 = v9;
												break;
											case 2:
												_this174.s2 = v9;
												break;
											case 3:
												_this174.s3 = v9;
												break;
											case 4:
												_this174.s4 = v9;
												break;
											case 5:
												_this174.s5 = v9;
												break;
											default:
												if(_this174.s6 == null) {
													_this174.s6 = new trilateral_justPath_StoreF6();
												}
												var _this175 = _this174.s6;
												switch(_this175.l) {
												case 0:
													_this175.s0 = v9;
													break;
												case 1:
													_this175.s1 = v9;
													break;
												case 2:
													_this175.s2 = v9;
													break;
												case 3:
													_this175.s3 = v9;
													break;
												case 4:
													_this175.s4 = v9;
													break;
												case 5:
													_this175.s5 = v9;
													break;
												default:
													if(_this175.s6 == null) {
														_this175.s6 = new trilateral_justPath_StoreF6();
													}
													var _this176 = _this175.s6;
													switch(_this176.l) {
													case 0:
														_this176.s0 = v9;
														break;
													case 1:
														_this176.s1 = v9;
														break;
													case 2:
														_this176.s2 = v9;
														break;
													case 3:
														_this176.s3 = v9;
														break;
													case 4:
														_this176.s4 = v9;
														break;
													case 5:
														_this176.s5 = v9;
														break;
													default:
														if(_this176.s6 == null) {
															_this176.s6 = new trilateral_justPath_StoreF6();
														}
														var _this177 = _this176.s6;
														switch(_this177.l) {
														case 0:
															_this177.s0 = v9;
															break;
														case 1:
															_this177.s1 = v9;
															break;
														case 2:
															_this177.s2 = v9;
															break;
														case 3:
															_this177.s3 = v9;
															break;
														case 4:
															_this177.s4 = v9;
															break;
														case 5:
															_this177.s5 = v9;
															break;
														default:
															if(_this177.s6 == null) {
																_this177.s6 = new trilateral_justPath_StoreF6();
															}
															_this177.s6.push(v9);
														}
														_this177.l++;
													}
													_this176.l++;
												}
												_this175.l++;
											}
											_this174.l++;
										}
										_this173.l++;
									}
									_this172.l++;
								}
								_this171.l++;
							}
						}
						temp1 = "-";
						break;
					case 46:
						temp1 += ".";
						break;
					case 48:
						temp1 += "0";
						break;
					case 49:
						temp1 += "1";
						break;
					case 50:
						temp1 += "2";
						break;
					case 51:
						temp1 += "3";
						break;
					case 52:
						temp1 += "4";
						break;
					case 53:
						temp1 += "5";
						break;
					case 54:
						temp1 += "6";
						break;
					case 55:
						temp1 += "7";
						break;
					case 56:
						temp1 += "8";
						break;
					case 57:
						temp1 += "9";
						break;
					default:
						if(temp1 != "") {
							if((this.store.l & 1) == 0) {
								var _this178 = this.store;
								var v10 = parseFloat(temp1);
								switch(_this178.l) {
								case 0:
									_this178.s0 = v10;
									break;
								case 1:
									_this178.s1 = v10;
									break;
								case 2:
									_this178.s2 = v10;
									break;
								case 3:
									_this178.s3 = v10;
									break;
								case 4:
									_this178.s4 = v10;
									break;
								case 5:
									_this178.s5 = v10;
									break;
								default:
									if(_this178.s6 == null) {
										_this178.s6 = new trilateral_justPath_StoreF6();
									}
									var _this179 = _this178.s6;
									switch(_this179.l) {
									case 0:
										_this179.s0 = v10;
										break;
									case 1:
										_this179.s1 = v10;
										break;
									case 2:
										_this179.s2 = v10;
										break;
									case 3:
										_this179.s3 = v10;
										break;
									case 4:
										_this179.s4 = v10;
										break;
									case 5:
										_this179.s5 = v10;
										break;
									default:
										if(_this179.s6 == null) {
											_this179.s6 = new trilateral_justPath_StoreF6();
										}
										var _this180 = _this179.s6;
										switch(_this180.l) {
										case 0:
											_this180.s0 = v10;
											break;
										case 1:
											_this180.s1 = v10;
											break;
										case 2:
											_this180.s2 = v10;
											break;
										case 3:
											_this180.s3 = v10;
											break;
										case 4:
											_this180.s4 = v10;
											break;
										case 5:
											_this180.s5 = v10;
											break;
										default:
											if(_this180.s6 == null) {
												_this180.s6 = new trilateral_justPath_StoreF6();
											}
											var _this181 = _this180.s6;
											switch(_this181.l) {
											case 0:
												_this181.s0 = v10;
												break;
											case 1:
												_this181.s1 = v10;
												break;
											case 2:
												_this181.s2 = v10;
												break;
											case 3:
												_this181.s3 = v10;
												break;
											case 4:
												_this181.s4 = v10;
												break;
											case 5:
												_this181.s5 = v10;
												break;
											default:
												if(_this181.s6 == null) {
													_this181.s6 = new trilateral_justPath_StoreF6();
												}
												var _this182 = _this181.s6;
												switch(_this182.l) {
												case 0:
													_this182.s0 = v10;
													break;
												case 1:
													_this182.s1 = v10;
													break;
												case 2:
													_this182.s2 = v10;
													break;
												case 3:
													_this182.s3 = v10;
													break;
												case 4:
													_this182.s4 = v10;
													break;
												case 5:
													_this182.s5 = v10;
													break;
												default:
													if(_this182.s6 == null) {
														_this182.s6 = new trilateral_justPath_StoreF6();
													}
													var _this183 = _this182.s6;
													switch(_this183.l) {
													case 0:
														_this183.s0 = v10;
														break;
													case 1:
														_this183.s1 = v10;
														break;
													case 2:
														_this183.s2 = v10;
														break;
													case 3:
														_this183.s3 = v10;
														break;
													case 4:
														_this183.s4 = v10;
														break;
													case 5:
														_this183.s5 = v10;
														break;
													default:
														if(_this183.s6 == null) {
															_this183.s6 = new trilateral_justPath_StoreF6();
														}
														var _this184 = _this183.s6;
														switch(_this184.l) {
														case 0:
															_this184.s0 = v10;
															break;
														case 1:
															_this184.s1 = v10;
															break;
														case 2:
															_this184.s2 = v10;
															break;
														case 3:
															_this184.s3 = v10;
															break;
														case 4:
															_this184.s4 = v10;
															break;
														case 5:
															_this184.s5 = v10;
															break;
														default:
															if(_this184.s6 == null) {
																_this184.s6 = new trilateral_justPath_StoreF6();
															}
															_this184.s6.push(v10);
														}
														_this184.l++;
													}
													_this183.l++;
												}
												_this182.l++;
											}
											_this181.l++;
										}
										_this180.l++;
									}
									_this179.l++;
								}
								_this178.l++;
							} else {
								var _this185 = this.store;
								var v11 = parseFloat(temp1);
								switch(_this185.l) {
								case 0:
									_this185.s0 = v11;
									break;
								case 1:
									_this185.s1 = v11;
									break;
								case 2:
									_this185.s2 = v11;
									break;
								case 3:
									_this185.s3 = v11;
									break;
								case 4:
									_this185.s4 = v11;
									break;
								case 5:
									_this185.s5 = v11;
									break;
								default:
									if(_this185.s6 == null) {
										_this185.s6 = new trilateral_justPath_StoreF6();
									}
									var _this186 = _this185.s6;
									switch(_this186.l) {
									case 0:
										_this186.s0 = v11;
										break;
									case 1:
										_this186.s1 = v11;
										break;
									case 2:
										_this186.s2 = v11;
										break;
									case 3:
										_this186.s3 = v11;
										break;
									case 4:
										_this186.s4 = v11;
										break;
									case 5:
										_this186.s5 = v11;
										break;
									default:
										if(_this186.s6 == null) {
											_this186.s6 = new trilateral_justPath_StoreF6();
										}
										var _this187 = _this186.s6;
										switch(_this187.l) {
										case 0:
											_this187.s0 = v11;
											break;
										case 1:
											_this187.s1 = v11;
											break;
										case 2:
											_this187.s2 = v11;
											break;
										case 3:
											_this187.s3 = v11;
											break;
										case 4:
											_this187.s4 = v11;
											break;
										case 5:
											_this187.s5 = v11;
											break;
										default:
											if(_this187.s6 == null) {
												_this187.s6 = new trilateral_justPath_StoreF6();
											}
											var _this188 = _this187.s6;
											switch(_this188.l) {
											case 0:
												_this188.s0 = v11;
												break;
											case 1:
												_this188.s1 = v11;
												break;
											case 2:
												_this188.s2 = v11;
												break;
											case 3:
												_this188.s3 = v11;
												break;
											case 4:
												_this188.s4 = v11;
												break;
											case 5:
												_this188.s5 = v11;
												break;
											default:
												if(_this188.s6 == null) {
													_this188.s6 = new trilateral_justPath_StoreF6();
												}
												var _this189 = _this188.s6;
												switch(_this189.l) {
												case 0:
													_this189.s0 = v11;
													break;
												case 1:
													_this189.s1 = v11;
													break;
												case 2:
													_this189.s2 = v11;
													break;
												case 3:
													_this189.s3 = v11;
													break;
												case 4:
													_this189.s4 = v11;
													break;
												case 5:
													_this189.s5 = v11;
													break;
												default:
													if(_this189.s6 == null) {
														_this189.s6 = new trilateral_justPath_StoreF6();
													}
													var _this190 = _this189.s6;
													switch(_this190.l) {
													case 0:
														_this190.s0 = v11;
														break;
													case 1:
														_this190.s1 = v11;
														break;
													case 2:
														_this190.s2 = v11;
														break;
													case 3:
														_this190.s3 = v11;
														break;
													case 4:
														_this190.s4 = v11;
														break;
													case 5:
														_this190.s5 = v11;
														break;
													default:
														if(_this190.s6 == null) {
															_this190.s6 = new trilateral_justPath_StoreF6();
														}
														var _this191 = _this190.s6;
														switch(_this191.l) {
														case 0:
															_this191.s0 = v11;
															break;
														case 1:
															_this191.s1 = v11;
															break;
														case 2:
															_this191.s2 = v11;
															break;
														case 3:
															_this191.s3 = v11;
															break;
														case 4:
															_this191.s4 = v11;
															break;
														case 5:
															_this191.s5 = v11;
															break;
														default:
															if(_this191.s6 == null) {
																_this191.s6 = new trilateral_justPath_StoreF6();
															}
															_this191.s6.push(v11);
														}
														_this191.l++;
													}
													_this190.l++;
												}
												_this189.l++;
											}
											_this188.l++;
										}
										_this187.l++;
									}
									_this186.l++;
								}
								_this185.l++;
							}
							temp1 = "";
						}
						this.pos--;
						exit1 = true;
					}
					if(exit1) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					this.controlX = this.store.s2;
					this.controlY = this.store.s3;
					this.lastX = this.store.s4;
					this.lastY = this.store.s5;
					this.pathContext.curveTo(this.store.s0,this.store.s1,this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this192 = this.store;
						var out106 = _this192.s0;
						if(_this192.l != 0) {
							_this192.s0 = _this192.s1;
							_this192.s1 = _this192.s2;
							_this192.s2 = _this192.s3;
							_this192.s3 = _this192.s4;
							_this192.s4 = _this192.s5;
							_this192.s5 = null;
							if(_this192.s6 != null) {
								var _this193 = _this192.s6;
								var out107 = _this193.s0;
								if(_this193.l != 0) {
									_this193.s0 = _this193.s1;
									_this193.s1 = _this193.s2;
									_this193.s2 = _this193.s3;
									_this193.s3 = _this193.s4;
									_this193.s4 = _this193.s5;
									_this193.s5 = null;
									if(_this193.s6 != null) {
										var _this194 = _this193.s6;
										var out108 = _this194.s0;
										if(_this194.l != 0) {
											_this194.s0 = _this194.s1;
											_this194.s1 = _this194.s2;
											_this194.s2 = _this194.s3;
											_this194.s3 = _this194.s4;
											_this194.s4 = _this194.s5;
											_this194.s5 = null;
											if(_this194.s6 != null) {
												var _this195 = _this194.s6;
												var out109 = _this195.s0;
												if(_this195.l != 0) {
													_this195.s0 = _this195.s1;
													_this195.s1 = _this195.s2;
													_this195.s2 = _this195.s3;
													_this195.s3 = _this195.s4;
													_this195.s4 = _this195.s5;
													_this195.s5 = null;
													if(_this195.s6 != null) {
														var _this196 = _this195.s6;
														var out110 = _this196.s0;
														if(_this196.l != 0) {
															_this196.s0 = _this196.s1;
															_this196.s1 = _this196.s2;
															_this196.s2 = _this196.s3;
															_this196.s3 = _this196.s4;
															_this196.s4 = _this196.s5;
															_this196.s5 = null;
															if(_this196.s6 != null) {
																var _this197 = _this196.s6;
																var out111 = _this197.s0;
																if(_this197.l != 0) {
																	_this197.s0 = _this197.s1;
																	_this197.s1 = _this197.s2;
																	_this197.s2 = _this197.s3;
																	_this197.s3 = _this197.s4;
																	_this197.s4 = _this197.s5;
																	_this197.s5 = null;
																	if(_this197.s6 != null) {
																		var _this198 = _this197.s6;
																		var out112 = _this198.s0;
																		if(_this198.l != 0) {
																			_this198.s0 = _this198.s1;
																			_this198.s1 = _this198.s2;
																			_this198.s2 = _this198.s3;
																			_this198.s3 = _this198.s4;
																			_this198.s4 = _this198.s5;
																			_this198.s5 = null;
																			if(_this198.s6 != null) {
																				_this198.s5 = _this198.s6.shift();
																			}
																			_this198.l--;
																		}
																		_this197.s5 = out112;
																	}
																	_this197.l--;
																}
																_this196.s5 = out111;
															}
															_this196.l--;
														}
														_this195.s5 = out110;
													}
													_this195.l--;
												}
												_this194.s5 = out109;
											}
											_this194.l--;
										}
										_this193.s5 = out108;
									}
									_this193.l--;
								}
								_this192.s5 = out107;
							}
							_this192.l--;
						}
						var firstX = out106;
						var _this199 = this.store;
						var out113 = _this199.s0;
						if(_this199.l != 0) {
							_this199.s0 = _this199.s1;
							_this199.s1 = _this199.s2;
							_this199.s2 = _this199.s3;
							_this199.s3 = _this199.s4;
							_this199.s4 = _this199.s5;
							_this199.s5 = null;
							if(_this199.s6 != null) {
								var _this200 = _this199.s6;
								var out114 = _this200.s0;
								if(_this200.l != 0) {
									_this200.s0 = _this200.s1;
									_this200.s1 = _this200.s2;
									_this200.s2 = _this200.s3;
									_this200.s3 = _this200.s4;
									_this200.s4 = _this200.s5;
									_this200.s5 = null;
									if(_this200.s6 != null) {
										var _this201 = _this200.s6;
										var out115 = _this201.s0;
										if(_this201.l != 0) {
											_this201.s0 = _this201.s1;
											_this201.s1 = _this201.s2;
											_this201.s2 = _this201.s3;
											_this201.s3 = _this201.s4;
											_this201.s4 = _this201.s5;
											_this201.s5 = null;
											if(_this201.s6 != null) {
												var _this202 = _this201.s6;
												var out116 = _this202.s0;
												if(_this202.l != 0) {
													_this202.s0 = _this202.s1;
													_this202.s1 = _this202.s2;
													_this202.s2 = _this202.s3;
													_this202.s3 = _this202.s4;
													_this202.s4 = _this202.s5;
													_this202.s5 = null;
													if(_this202.s6 != null) {
														var _this203 = _this202.s6;
														var out117 = _this203.s0;
														if(_this203.l != 0) {
															_this203.s0 = _this203.s1;
															_this203.s1 = _this203.s2;
															_this203.s2 = _this203.s3;
															_this203.s3 = _this203.s4;
															_this203.s4 = _this203.s5;
															_this203.s5 = null;
															if(_this203.s6 != null) {
																var _this204 = _this203.s6;
																var out118 = _this204.s0;
																if(_this204.l != 0) {
																	_this204.s0 = _this204.s1;
																	_this204.s1 = _this204.s2;
																	_this204.s2 = _this204.s3;
																	_this204.s3 = _this204.s4;
																	_this204.s4 = _this204.s5;
																	_this204.s5 = null;
																	if(_this204.s6 != null) {
																		var _this205 = _this204.s6;
																		var out119 = _this205.s0;
																		if(_this205.l != 0) {
																			_this205.s0 = _this205.s1;
																			_this205.s1 = _this205.s2;
																			_this205.s2 = _this205.s3;
																			_this205.s3 = _this205.s4;
																			_this205.s4 = _this205.s5;
																			_this205.s5 = null;
																			if(_this205.s6 != null) {
																				_this205.s5 = _this205.s6.shift();
																			}
																			_this205.l--;
																		}
																		_this204.s5 = out119;
																	}
																	_this204.l--;
																}
																_this203.s5 = out118;
															}
															_this203.l--;
														}
														_this202.s5 = out117;
													}
													_this202.l--;
												}
												_this201.s5 = out116;
											}
											_this201.l--;
										}
										_this200.s5 = out115;
									}
									_this200.l--;
								}
								_this199.s5 = out114;
							}
							_this199.l--;
						}
						var firstY = out113;
						var _this206 = this.store;
						var out120 = _this206.s0;
						if(_this206.l != 0) {
							_this206.s0 = _this206.s1;
							_this206.s1 = _this206.s2;
							_this206.s2 = _this206.s3;
							_this206.s3 = _this206.s4;
							_this206.s4 = _this206.s5;
							_this206.s5 = null;
							if(_this206.s6 != null) {
								var _this207 = _this206.s6;
								var out121 = _this207.s0;
								if(_this207.l != 0) {
									_this207.s0 = _this207.s1;
									_this207.s1 = _this207.s2;
									_this207.s2 = _this207.s3;
									_this207.s3 = _this207.s4;
									_this207.s4 = _this207.s5;
									_this207.s5 = null;
									if(_this207.s6 != null) {
										var _this208 = _this207.s6;
										var out122 = _this208.s0;
										if(_this208.l != 0) {
											_this208.s0 = _this208.s1;
											_this208.s1 = _this208.s2;
											_this208.s2 = _this208.s3;
											_this208.s3 = _this208.s4;
											_this208.s4 = _this208.s5;
											_this208.s5 = null;
											if(_this208.s6 != null) {
												var _this209 = _this208.s6;
												var out123 = _this209.s0;
												if(_this209.l != 0) {
													_this209.s0 = _this209.s1;
													_this209.s1 = _this209.s2;
													_this209.s2 = _this209.s3;
													_this209.s3 = _this209.s4;
													_this209.s4 = _this209.s5;
													_this209.s5 = null;
													if(_this209.s6 != null) {
														var _this210 = _this209.s6;
														var out124 = _this210.s0;
														if(_this210.l != 0) {
															_this210.s0 = _this210.s1;
															_this210.s1 = _this210.s2;
															_this210.s2 = _this210.s3;
															_this210.s3 = _this210.s4;
															_this210.s4 = _this210.s5;
															_this210.s5 = null;
															if(_this210.s6 != null) {
																var _this211 = _this210.s6;
																var out125 = _this211.s0;
																if(_this211.l != 0) {
																	_this211.s0 = _this211.s1;
																	_this211.s1 = _this211.s2;
																	_this211.s2 = _this211.s3;
																	_this211.s3 = _this211.s4;
																	_this211.s4 = _this211.s5;
																	_this211.s5 = null;
																	if(_this211.s6 != null) {
																		var _this212 = _this211.s6;
																		var out126 = _this212.s0;
																		if(_this212.l != 0) {
																			_this212.s0 = _this212.s1;
																			_this212.s1 = _this212.s2;
																			_this212.s2 = _this212.s3;
																			_this212.s3 = _this212.s4;
																			_this212.s4 = _this212.s5;
																			_this212.s5 = null;
																			if(_this212.s6 != null) {
																				_this212.s5 = _this212.s6.shift();
																			}
																			_this212.l--;
																		}
																		_this211.s5 = out126;
																	}
																	_this211.l--;
																}
																_this210.s5 = out125;
															}
															_this210.l--;
														}
														_this209.s5 = out124;
													}
													_this209.l--;
												}
												_this208.s5 = out123;
											}
											_this208.l--;
										}
										_this207.s5 = out122;
									}
									_this207.l--;
								}
								_this206.s5 = out121;
							}
							_this206.l--;
						}
						this.controlX = out120;
						var _this213 = this.store;
						var out127 = _this213.s0;
						if(_this213.l != 0) {
							_this213.s0 = _this213.s1;
							_this213.s1 = _this213.s2;
							_this213.s2 = _this213.s3;
							_this213.s3 = _this213.s4;
							_this213.s4 = _this213.s5;
							_this213.s5 = null;
							if(_this213.s6 != null) {
								var _this214 = _this213.s6;
								var out128 = _this214.s0;
								if(_this214.l != 0) {
									_this214.s0 = _this214.s1;
									_this214.s1 = _this214.s2;
									_this214.s2 = _this214.s3;
									_this214.s3 = _this214.s4;
									_this214.s4 = _this214.s5;
									_this214.s5 = null;
									if(_this214.s6 != null) {
										var _this215 = _this214.s6;
										var out129 = _this215.s0;
										if(_this215.l != 0) {
											_this215.s0 = _this215.s1;
											_this215.s1 = _this215.s2;
											_this215.s2 = _this215.s3;
											_this215.s3 = _this215.s4;
											_this215.s4 = _this215.s5;
											_this215.s5 = null;
											if(_this215.s6 != null) {
												var _this216 = _this215.s6;
												var out130 = _this216.s0;
												if(_this216.l != 0) {
													_this216.s0 = _this216.s1;
													_this216.s1 = _this216.s2;
													_this216.s2 = _this216.s3;
													_this216.s3 = _this216.s4;
													_this216.s4 = _this216.s5;
													_this216.s5 = null;
													if(_this216.s6 != null) {
														var _this217 = _this216.s6;
														var out131 = _this217.s0;
														if(_this217.l != 0) {
															_this217.s0 = _this217.s1;
															_this217.s1 = _this217.s2;
															_this217.s2 = _this217.s3;
															_this217.s3 = _this217.s4;
															_this217.s4 = _this217.s5;
															_this217.s5 = null;
															if(_this217.s6 != null) {
																var _this218 = _this217.s6;
																var out132 = _this218.s0;
																if(_this218.l != 0) {
																	_this218.s0 = _this218.s1;
																	_this218.s1 = _this218.s2;
																	_this218.s2 = _this218.s3;
																	_this218.s3 = _this218.s4;
																	_this218.s4 = _this218.s5;
																	_this218.s5 = null;
																	if(_this218.s6 != null) {
																		var _this219 = _this218.s6;
																		var out133 = _this219.s0;
																		if(_this219.l != 0) {
																			_this219.s0 = _this219.s1;
																			_this219.s1 = _this219.s2;
																			_this219.s2 = _this219.s3;
																			_this219.s3 = _this219.s4;
																			_this219.s4 = _this219.s5;
																			_this219.s5 = null;
																			if(_this219.s6 != null) {
																				_this219.s5 = _this219.s6.shift();
																			}
																			_this219.l--;
																		}
																		_this218.s5 = out133;
																	}
																	_this218.l--;
																}
																_this217.s5 = out132;
															}
															_this217.l--;
														}
														_this216.s5 = out131;
													}
													_this216.l--;
												}
												_this215.s5 = out130;
											}
											_this215.l--;
										}
										_this214.s5 = out129;
									}
									_this214.l--;
								}
								_this213.s5 = out128;
							}
							_this213.l--;
						}
						this.controlY = out127;
						var _this220 = this.store;
						var out134 = _this220.s0;
						if(_this220.l != 0) {
							_this220.s0 = _this220.s1;
							_this220.s1 = _this220.s2;
							_this220.s2 = _this220.s3;
							_this220.s3 = _this220.s4;
							_this220.s4 = _this220.s5;
							_this220.s5 = null;
							if(_this220.s6 != null) {
								var _this221 = _this220.s6;
								var out135 = _this221.s0;
								if(_this221.l != 0) {
									_this221.s0 = _this221.s1;
									_this221.s1 = _this221.s2;
									_this221.s2 = _this221.s3;
									_this221.s3 = _this221.s4;
									_this221.s4 = _this221.s5;
									_this221.s5 = null;
									if(_this221.s6 != null) {
										var _this222 = _this221.s6;
										var out136 = _this222.s0;
										if(_this222.l != 0) {
											_this222.s0 = _this222.s1;
											_this222.s1 = _this222.s2;
											_this222.s2 = _this222.s3;
											_this222.s3 = _this222.s4;
											_this222.s4 = _this222.s5;
											_this222.s5 = null;
											if(_this222.s6 != null) {
												var _this223 = _this222.s6;
												var out137 = _this223.s0;
												if(_this223.l != 0) {
													_this223.s0 = _this223.s1;
													_this223.s1 = _this223.s2;
													_this223.s2 = _this223.s3;
													_this223.s3 = _this223.s4;
													_this223.s4 = _this223.s5;
													_this223.s5 = null;
													if(_this223.s6 != null) {
														var _this224 = _this223.s6;
														var out138 = _this224.s0;
														if(_this224.l != 0) {
															_this224.s0 = _this224.s1;
															_this224.s1 = _this224.s2;
															_this224.s2 = _this224.s3;
															_this224.s3 = _this224.s4;
															_this224.s4 = _this224.s5;
															_this224.s5 = null;
															if(_this224.s6 != null) {
																var _this225 = _this224.s6;
																var out139 = _this225.s0;
																if(_this225.l != 0) {
																	_this225.s0 = _this225.s1;
																	_this225.s1 = _this225.s2;
																	_this225.s2 = _this225.s3;
																	_this225.s3 = _this225.s4;
																	_this225.s4 = _this225.s5;
																	_this225.s5 = null;
																	if(_this225.s6 != null) {
																		var _this226 = _this225.s6;
																		var out140 = _this226.s0;
																		if(_this226.l != 0) {
																			_this226.s0 = _this226.s1;
																			_this226.s1 = _this226.s2;
																			_this226.s2 = _this226.s3;
																			_this226.s3 = _this226.s4;
																			_this226.s4 = _this226.s5;
																			_this226.s5 = null;
																			if(_this226.s6 != null) {
																				_this226.s5 = _this226.s6.shift();
																			}
																			_this226.l--;
																		}
																		_this225.s5 = out140;
																	}
																	_this225.l--;
																}
																_this224.s5 = out139;
															}
															_this224.l--;
														}
														_this223.s5 = out138;
													}
													_this223.l--;
												}
												_this222.s5 = out137;
											}
											_this222.l--;
										}
										_this221.s5 = out136;
									}
									_this221.l--;
								}
								_this220.s5 = out135;
							}
							_this220.l--;
						}
						this.lastX = out134;
						var _this227 = this.store;
						var out141 = _this227.s0;
						if(_this227.l != 0) {
							_this227.s0 = _this227.s1;
							_this227.s1 = _this227.s2;
							_this227.s2 = _this227.s3;
							_this227.s3 = _this227.s4;
							_this227.s4 = _this227.s5;
							_this227.s5 = null;
							if(_this227.s6 != null) {
								var _this228 = _this227.s6;
								var out142 = _this228.s0;
								if(_this228.l != 0) {
									_this228.s0 = _this228.s1;
									_this228.s1 = _this228.s2;
									_this228.s2 = _this228.s3;
									_this228.s3 = _this228.s4;
									_this228.s4 = _this228.s5;
									_this228.s5 = null;
									if(_this228.s6 != null) {
										var _this229 = _this228.s6;
										var out143 = _this229.s0;
										if(_this229.l != 0) {
											_this229.s0 = _this229.s1;
											_this229.s1 = _this229.s2;
											_this229.s2 = _this229.s3;
											_this229.s3 = _this229.s4;
											_this229.s4 = _this229.s5;
											_this229.s5 = null;
											if(_this229.s6 != null) {
												var _this230 = _this229.s6;
												var out144 = _this230.s0;
												if(_this230.l != 0) {
													_this230.s0 = _this230.s1;
													_this230.s1 = _this230.s2;
													_this230.s2 = _this230.s3;
													_this230.s3 = _this230.s4;
													_this230.s4 = _this230.s5;
													_this230.s5 = null;
													if(_this230.s6 != null) {
														var _this231 = _this230.s6;
														var out145 = _this231.s0;
														if(_this231.l != 0) {
															_this231.s0 = _this231.s1;
															_this231.s1 = _this231.s2;
															_this231.s2 = _this231.s3;
															_this231.s3 = _this231.s4;
															_this231.s4 = _this231.s5;
															_this231.s5 = null;
															if(_this231.s6 != null) {
																var _this232 = _this231.s6;
																var out146 = _this232.s0;
																if(_this232.l != 0) {
																	_this232.s0 = _this232.s1;
																	_this232.s1 = _this232.s2;
																	_this232.s2 = _this232.s3;
																	_this232.s3 = _this232.s4;
																	_this232.s4 = _this232.s5;
																	_this232.s5 = null;
																	if(_this232.s6 != null) {
																		var _this233 = _this232.s6;
																		var out147 = _this233.s0;
																		if(_this233.l != 0) {
																			_this233.s0 = _this233.s1;
																			_this233.s1 = _this233.s2;
																			_this233.s2 = _this233.s3;
																			_this233.s3 = _this233.s4;
																			_this233.s4 = _this233.s5;
																			_this233.s5 = null;
																			if(_this233.s6 != null) {
																				_this233.s5 = _this233.s6.shift();
																			}
																			_this233.l--;
																		}
																		_this232.s5 = out147;
																	}
																	_this232.l--;
																}
																_this231.s5 = out146;
															}
															_this231.l--;
														}
														_this230.s5 = out145;
													}
													_this230.l--;
												}
												_this229.s5 = out144;
											}
											_this229.l--;
										}
										_this228.s5 = out143;
									}
									_this228.l--;
								}
								_this227.s5 = out142;
							}
							_this227.l--;
						}
						this.lastY = out141;
						this.pathContext.curveTo(firstX,firstY,this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 72:
				var _this234 = this.store;
				_this234.l = 0;
				_this234.s0 = null;
				_this234.s1 = null;
				_this234.s2 = null;
				_this234.s3 = null;
				_this234.s4 = null;
				_this234.s5 = null;
				_this234.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count3 = 0;
				var temp2 = "";
				var exit2 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp2 != "") {
							var _this235 = this.store;
							var v12 = parseFloat(temp2);
							switch(_this235.l) {
							case 0:
								_this235.s0 = v12;
								break;
							case 1:
								_this235.s1 = v12;
								break;
							case 2:
								_this235.s2 = v12;
								break;
							case 3:
								_this235.s3 = v12;
								break;
							case 4:
								_this235.s4 = v12;
								break;
							case 5:
								_this235.s5 = v12;
								break;
							default:
								if(_this235.s6 == null) {
									_this235.s6 = new trilateral_justPath_StoreF6();
								}
								var _this236 = _this235.s6;
								switch(_this236.l) {
								case 0:
									_this236.s0 = v12;
									break;
								case 1:
									_this236.s1 = v12;
									break;
								case 2:
									_this236.s2 = v12;
									break;
								case 3:
									_this236.s3 = v12;
									break;
								case 4:
									_this236.s4 = v12;
									break;
								case 5:
									_this236.s5 = v12;
									break;
								default:
									if(_this236.s6 == null) {
										_this236.s6 = new trilateral_justPath_StoreF6();
									}
									var _this237 = _this236.s6;
									switch(_this237.l) {
									case 0:
										_this237.s0 = v12;
										break;
									case 1:
										_this237.s1 = v12;
										break;
									case 2:
										_this237.s2 = v12;
										break;
									case 3:
										_this237.s3 = v12;
										break;
									case 4:
										_this237.s4 = v12;
										break;
									case 5:
										_this237.s5 = v12;
										break;
									default:
										if(_this237.s6 == null) {
											_this237.s6 = new trilateral_justPath_StoreF6();
										}
										var _this238 = _this237.s6;
										switch(_this238.l) {
										case 0:
											_this238.s0 = v12;
											break;
										case 1:
											_this238.s1 = v12;
											break;
										case 2:
											_this238.s2 = v12;
											break;
										case 3:
											_this238.s3 = v12;
											break;
										case 4:
											_this238.s4 = v12;
											break;
										case 5:
											_this238.s5 = v12;
											break;
										default:
											if(_this238.s6 == null) {
												_this238.s6 = new trilateral_justPath_StoreF6();
											}
											var _this239 = _this238.s6;
											switch(_this239.l) {
											case 0:
												_this239.s0 = v12;
												break;
											case 1:
												_this239.s1 = v12;
												break;
											case 2:
												_this239.s2 = v12;
												break;
											case 3:
												_this239.s3 = v12;
												break;
											case 4:
												_this239.s4 = v12;
												break;
											case 5:
												_this239.s5 = v12;
												break;
											default:
												if(_this239.s6 == null) {
													_this239.s6 = new trilateral_justPath_StoreF6();
												}
												var _this240 = _this239.s6;
												switch(_this240.l) {
												case 0:
													_this240.s0 = v12;
													break;
												case 1:
													_this240.s1 = v12;
													break;
												case 2:
													_this240.s2 = v12;
													break;
												case 3:
													_this240.s3 = v12;
													break;
												case 4:
													_this240.s4 = v12;
													break;
												case 5:
													_this240.s5 = v12;
													break;
												default:
													if(_this240.s6 == null) {
														_this240.s6 = new trilateral_justPath_StoreF6();
													}
													var _this241 = _this240.s6;
													switch(_this241.l) {
													case 0:
														_this241.s0 = v12;
														break;
													case 1:
														_this241.s1 = v12;
														break;
													case 2:
														_this241.s2 = v12;
														break;
													case 3:
														_this241.s3 = v12;
														break;
													case 4:
														_this241.s4 = v12;
														break;
													case 5:
														_this241.s5 = v12;
														break;
													default:
														if(_this241.s6 == null) {
															_this241.s6 = new trilateral_justPath_StoreF6();
														}
														_this241.s6.push(v12);
													}
													_this241.l++;
												}
												_this240.l++;
											}
											_this239.l++;
										}
										_this238.l++;
									}
									_this237.l++;
								}
								_this236.l++;
							}
							_this235.l++;
							temp2 = "";
						}
						break;
					case 45:
						if(temp2 != "") {
							var _this242 = this.store;
							var v13 = parseFloat(temp2);
							switch(_this242.l) {
							case 0:
								_this242.s0 = v13;
								break;
							case 1:
								_this242.s1 = v13;
								break;
							case 2:
								_this242.s2 = v13;
								break;
							case 3:
								_this242.s3 = v13;
								break;
							case 4:
								_this242.s4 = v13;
								break;
							case 5:
								_this242.s5 = v13;
								break;
							default:
								if(_this242.s6 == null) {
									_this242.s6 = new trilateral_justPath_StoreF6();
								}
								var _this243 = _this242.s6;
								switch(_this243.l) {
								case 0:
									_this243.s0 = v13;
									break;
								case 1:
									_this243.s1 = v13;
									break;
								case 2:
									_this243.s2 = v13;
									break;
								case 3:
									_this243.s3 = v13;
									break;
								case 4:
									_this243.s4 = v13;
									break;
								case 5:
									_this243.s5 = v13;
									break;
								default:
									if(_this243.s6 == null) {
										_this243.s6 = new trilateral_justPath_StoreF6();
									}
									var _this244 = _this243.s6;
									switch(_this244.l) {
									case 0:
										_this244.s0 = v13;
										break;
									case 1:
										_this244.s1 = v13;
										break;
									case 2:
										_this244.s2 = v13;
										break;
									case 3:
										_this244.s3 = v13;
										break;
									case 4:
										_this244.s4 = v13;
										break;
									case 5:
										_this244.s5 = v13;
										break;
									default:
										if(_this244.s6 == null) {
											_this244.s6 = new trilateral_justPath_StoreF6();
										}
										var _this245 = _this244.s6;
										switch(_this245.l) {
										case 0:
											_this245.s0 = v13;
											break;
										case 1:
											_this245.s1 = v13;
											break;
										case 2:
											_this245.s2 = v13;
											break;
										case 3:
											_this245.s3 = v13;
											break;
										case 4:
											_this245.s4 = v13;
											break;
										case 5:
											_this245.s5 = v13;
											break;
										default:
											if(_this245.s6 == null) {
												_this245.s6 = new trilateral_justPath_StoreF6();
											}
											var _this246 = _this245.s6;
											switch(_this246.l) {
											case 0:
												_this246.s0 = v13;
												break;
											case 1:
												_this246.s1 = v13;
												break;
											case 2:
												_this246.s2 = v13;
												break;
											case 3:
												_this246.s3 = v13;
												break;
											case 4:
												_this246.s4 = v13;
												break;
											case 5:
												_this246.s5 = v13;
												break;
											default:
												if(_this246.s6 == null) {
													_this246.s6 = new trilateral_justPath_StoreF6();
												}
												var _this247 = _this246.s6;
												switch(_this247.l) {
												case 0:
													_this247.s0 = v13;
													break;
												case 1:
													_this247.s1 = v13;
													break;
												case 2:
													_this247.s2 = v13;
													break;
												case 3:
													_this247.s3 = v13;
													break;
												case 4:
													_this247.s4 = v13;
													break;
												case 5:
													_this247.s5 = v13;
													break;
												default:
													if(_this247.s6 == null) {
														_this247.s6 = new trilateral_justPath_StoreF6();
													}
													var _this248 = _this247.s6;
													switch(_this248.l) {
													case 0:
														_this248.s0 = v13;
														break;
													case 1:
														_this248.s1 = v13;
														break;
													case 2:
														_this248.s2 = v13;
														break;
													case 3:
														_this248.s3 = v13;
														break;
													case 4:
														_this248.s4 = v13;
														break;
													case 5:
														_this248.s5 = v13;
														break;
													default:
														if(_this248.s6 == null) {
															_this248.s6 = new trilateral_justPath_StoreF6();
														}
														_this248.s6.push(v13);
													}
													_this248.l++;
												}
												_this247.l++;
											}
											_this246.l++;
										}
										_this245.l++;
									}
									_this244.l++;
								}
								_this243.l++;
							}
							_this242.l++;
						}
						temp2 = "-";
						break;
					case 46:
						temp2 += ".";
						break;
					case 48:
						temp2 += "0";
						break;
					case 49:
						temp2 += "1";
						break;
					case 50:
						temp2 += "2";
						break;
					case 51:
						temp2 += "3";
						break;
					case 52:
						temp2 += "4";
						break;
					case 53:
						temp2 += "5";
						break;
					case 54:
						temp2 += "6";
						break;
					case 55:
						temp2 += "7";
						break;
					case 56:
						temp2 += "8";
						break;
					case 57:
						temp2 += "9";
						break;
					default:
						if(temp2 != "") {
							var _this249 = this.store;
							var v14 = parseFloat(temp2);
							switch(_this249.l) {
							case 0:
								_this249.s0 = v14;
								break;
							case 1:
								_this249.s1 = v14;
								break;
							case 2:
								_this249.s2 = v14;
								break;
							case 3:
								_this249.s3 = v14;
								break;
							case 4:
								_this249.s4 = v14;
								break;
							case 5:
								_this249.s5 = v14;
								break;
							default:
								if(_this249.s6 == null) {
									_this249.s6 = new trilateral_justPath_StoreF6();
								}
								var _this250 = _this249.s6;
								switch(_this250.l) {
								case 0:
									_this250.s0 = v14;
									break;
								case 1:
									_this250.s1 = v14;
									break;
								case 2:
									_this250.s2 = v14;
									break;
								case 3:
									_this250.s3 = v14;
									break;
								case 4:
									_this250.s4 = v14;
									break;
								case 5:
									_this250.s5 = v14;
									break;
								default:
									if(_this250.s6 == null) {
										_this250.s6 = new trilateral_justPath_StoreF6();
									}
									var _this251 = _this250.s6;
									switch(_this251.l) {
									case 0:
										_this251.s0 = v14;
										break;
									case 1:
										_this251.s1 = v14;
										break;
									case 2:
										_this251.s2 = v14;
										break;
									case 3:
										_this251.s3 = v14;
										break;
									case 4:
										_this251.s4 = v14;
										break;
									case 5:
										_this251.s5 = v14;
										break;
									default:
										if(_this251.s6 == null) {
											_this251.s6 = new trilateral_justPath_StoreF6();
										}
										var _this252 = _this251.s6;
										switch(_this252.l) {
										case 0:
											_this252.s0 = v14;
											break;
										case 1:
											_this252.s1 = v14;
											break;
										case 2:
											_this252.s2 = v14;
											break;
										case 3:
											_this252.s3 = v14;
											break;
										case 4:
											_this252.s4 = v14;
											break;
										case 5:
											_this252.s5 = v14;
											break;
										default:
											if(_this252.s6 == null) {
												_this252.s6 = new trilateral_justPath_StoreF6();
											}
											var _this253 = _this252.s6;
											switch(_this253.l) {
											case 0:
												_this253.s0 = v14;
												break;
											case 1:
												_this253.s1 = v14;
												break;
											case 2:
												_this253.s2 = v14;
												break;
											case 3:
												_this253.s3 = v14;
												break;
											case 4:
												_this253.s4 = v14;
												break;
											case 5:
												_this253.s5 = v14;
												break;
											default:
												if(_this253.s6 == null) {
													_this253.s6 = new trilateral_justPath_StoreF6();
												}
												var _this254 = _this253.s6;
												switch(_this254.l) {
												case 0:
													_this254.s0 = v14;
													break;
												case 1:
													_this254.s1 = v14;
													break;
												case 2:
													_this254.s2 = v14;
													break;
												case 3:
													_this254.s3 = v14;
													break;
												case 4:
													_this254.s4 = v14;
													break;
												case 5:
													_this254.s5 = v14;
													break;
												default:
													if(_this254.s6 == null) {
														_this254.s6 = new trilateral_justPath_StoreF6();
													}
													var _this255 = _this254.s6;
													switch(_this255.l) {
													case 0:
														_this255.s0 = v14;
														break;
													case 1:
														_this255.s1 = v14;
														break;
													case 2:
														_this255.s2 = v14;
														break;
													case 3:
														_this255.s3 = v14;
														break;
													case 4:
														_this255.s4 = v14;
														break;
													case 5:
														_this255.s5 = v14;
														break;
													default:
														if(_this255.s6 == null) {
															_this255.s6 = new trilateral_justPath_StoreF6();
														}
														_this255.s6.push(v14);
													}
													_this255.l++;
												}
												_this254.l++;
											}
											_this253.l++;
										}
										_this252.l++;
									}
									_this251.l++;
								}
								_this250.l++;
							}
							_this249.l++;
							temp2 = "";
						}
						this.pos--;
						exit2 = true;
					}
					if(exit2) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					this.lastX = this.store.s0;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var _this256 = this.store;
						var out148 = _this256.s0;
						if(_this256.l != 0) {
							_this256.s0 = _this256.s1;
							_this256.s1 = _this256.s2;
							_this256.s2 = _this256.s3;
							_this256.s3 = _this256.s4;
							_this256.s4 = _this256.s5;
							_this256.s5 = null;
							if(_this256.s6 != null) {
								var _this257 = _this256.s6;
								var out149 = _this257.s0;
								if(_this257.l != 0) {
									_this257.s0 = _this257.s1;
									_this257.s1 = _this257.s2;
									_this257.s2 = _this257.s3;
									_this257.s3 = _this257.s4;
									_this257.s4 = _this257.s5;
									_this257.s5 = null;
									if(_this257.s6 != null) {
										var _this258 = _this257.s6;
										var out150 = _this258.s0;
										if(_this258.l != 0) {
											_this258.s0 = _this258.s1;
											_this258.s1 = _this258.s2;
											_this258.s2 = _this258.s3;
											_this258.s3 = _this258.s4;
											_this258.s4 = _this258.s5;
											_this258.s5 = null;
											if(_this258.s6 != null) {
												var _this259 = _this258.s6;
												var out151 = _this259.s0;
												if(_this259.l != 0) {
													_this259.s0 = _this259.s1;
													_this259.s1 = _this259.s2;
													_this259.s2 = _this259.s3;
													_this259.s3 = _this259.s4;
													_this259.s4 = _this259.s5;
													_this259.s5 = null;
													if(_this259.s6 != null) {
														var _this260 = _this259.s6;
														var out152 = _this260.s0;
														if(_this260.l != 0) {
															_this260.s0 = _this260.s1;
															_this260.s1 = _this260.s2;
															_this260.s2 = _this260.s3;
															_this260.s3 = _this260.s4;
															_this260.s4 = _this260.s5;
															_this260.s5 = null;
															if(_this260.s6 != null) {
																var _this261 = _this260.s6;
																var out153 = _this261.s0;
																if(_this261.l != 0) {
																	_this261.s0 = _this261.s1;
																	_this261.s1 = _this261.s2;
																	_this261.s2 = _this261.s3;
																	_this261.s3 = _this261.s4;
																	_this261.s4 = _this261.s5;
																	_this261.s5 = null;
																	if(_this261.s6 != null) {
																		var _this262 = _this261.s6;
																		var out154 = _this262.s0;
																		if(_this262.l != 0) {
																			_this262.s0 = _this262.s1;
																			_this262.s1 = _this262.s2;
																			_this262.s2 = _this262.s3;
																			_this262.s3 = _this262.s4;
																			_this262.s4 = _this262.s5;
																			_this262.s5 = null;
																			if(_this262.s6 != null) {
																				_this262.s5 = _this262.s6.shift();
																			}
																			_this262.l--;
																		}
																		_this261.s5 = out154;
																	}
																	_this261.l--;
																}
																_this260.s5 = out153;
															}
															_this260.l--;
														}
														_this259.s5 = out152;
													}
													_this259.l--;
												}
												_this258.s5 = out151;
											}
											_this258.l--;
										}
										_this257.s5 = out150;
									}
									_this257.l--;
								}
								_this256.s5 = out149;
							}
							_this256.l--;
						}
						this.lastX = out148;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 76:
				var _this263 = this.store;
				_this263.l = 0;
				_this263.s0 = null;
				_this263.s1 = null;
				_this263.s2 = null;
				_this263.s3 = null;
				_this263.s4 = null;
				_this263.s5 = null;
				_this263.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count4 = 0;
				var temp3 = "";
				var exit3 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp3 != "") {
							if((this.store.l & 1) == 0) {
								var _this264 = this.store;
								var v15 = parseFloat(temp3);
								switch(_this264.l) {
								case 0:
									_this264.s0 = v15;
									break;
								case 1:
									_this264.s1 = v15;
									break;
								case 2:
									_this264.s2 = v15;
									break;
								case 3:
									_this264.s3 = v15;
									break;
								case 4:
									_this264.s4 = v15;
									break;
								case 5:
									_this264.s5 = v15;
									break;
								default:
									if(_this264.s6 == null) {
										_this264.s6 = new trilateral_justPath_StoreF6();
									}
									var _this265 = _this264.s6;
									switch(_this265.l) {
									case 0:
										_this265.s0 = v15;
										break;
									case 1:
										_this265.s1 = v15;
										break;
									case 2:
										_this265.s2 = v15;
										break;
									case 3:
										_this265.s3 = v15;
										break;
									case 4:
										_this265.s4 = v15;
										break;
									case 5:
										_this265.s5 = v15;
										break;
									default:
										if(_this265.s6 == null) {
											_this265.s6 = new trilateral_justPath_StoreF6();
										}
										var _this266 = _this265.s6;
										switch(_this266.l) {
										case 0:
											_this266.s0 = v15;
											break;
										case 1:
											_this266.s1 = v15;
											break;
										case 2:
											_this266.s2 = v15;
											break;
										case 3:
											_this266.s3 = v15;
											break;
										case 4:
											_this266.s4 = v15;
											break;
										case 5:
											_this266.s5 = v15;
											break;
										default:
											if(_this266.s6 == null) {
												_this266.s6 = new trilateral_justPath_StoreF6();
											}
											var _this267 = _this266.s6;
											switch(_this267.l) {
											case 0:
												_this267.s0 = v15;
												break;
											case 1:
												_this267.s1 = v15;
												break;
											case 2:
												_this267.s2 = v15;
												break;
											case 3:
												_this267.s3 = v15;
												break;
											case 4:
												_this267.s4 = v15;
												break;
											case 5:
												_this267.s5 = v15;
												break;
											default:
												if(_this267.s6 == null) {
													_this267.s6 = new trilateral_justPath_StoreF6();
												}
												var _this268 = _this267.s6;
												switch(_this268.l) {
												case 0:
													_this268.s0 = v15;
													break;
												case 1:
													_this268.s1 = v15;
													break;
												case 2:
													_this268.s2 = v15;
													break;
												case 3:
													_this268.s3 = v15;
													break;
												case 4:
													_this268.s4 = v15;
													break;
												case 5:
													_this268.s5 = v15;
													break;
												default:
													if(_this268.s6 == null) {
														_this268.s6 = new trilateral_justPath_StoreF6();
													}
													var _this269 = _this268.s6;
													switch(_this269.l) {
													case 0:
														_this269.s0 = v15;
														break;
													case 1:
														_this269.s1 = v15;
														break;
													case 2:
														_this269.s2 = v15;
														break;
													case 3:
														_this269.s3 = v15;
														break;
													case 4:
														_this269.s4 = v15;
														break;
													case 5:
														_this269.s5 = v15;
														break;
													default:
														if(_this269.s6 == null) {
															_this269.s6 = new trilateral_justPath_StoreF6();
														}
														var _this270 = _this269.s6;
														switch(_this270.l) {
														case 0:
															_this270.s0 = v15;
															break;
														case 1:
															_this270.s1 = v15;
															break;
														case 2:
															_this270.s2 = v15;
															break;
														case 3:
															_this270.s3 = v15;
															break;
														case 4:
															_this270.s4 = v15;
															break;
														case 5:
															_this270.s5 = v15;
															break;
														default:
															if(_this270.s6 == null) {
																_this270.s6 = new trilateral_justPath_StoreF6();
															}
															_this270.s6.push(v15);
														}
														_this270.l++;
													}
													_this269.l++;
												}
												_this268.l++;
											}
											_this267.l++;
										}
										_this266.l++;
									}
									_this265.l++;
								}
								_this264.l++;
							} else {
								var _this271 = this.store;
								var v16 = parseFloat(temp3);
								switch(_this271.l) {
								case 0:
									_this271.s0 = v16;
									break;
								case 1:
									_this271.s1 = v16;
									break;
								case 2:
									_this271.s2 = v16;
									break;
								case 3:
									_this271.s3 = v16;
									break;
								case 4:
									_this271.s4 = v16;
									break;
								case 5:
									_this271.s5 = v16;
									break;
								default:
									if(_this271.s6 == null) {
										_this271.s6 = new trilateral_justPath_StoreF6();
									}
									var _this272 = _this271.s6;
									switch(_this272.l) {
									case 0:
										_this272.s0 = v16;
										break;
									case 1:
										_this272.s1 = v16;
										break;
									case 2:
										_this272.s2 = v16;
										break;
									case 3:
										_this272.s3 = v16;
										break;
									case 4:
										_this272.s4 = v16;
										break;
									case 5:
										_this272.s5 = v16;
										break;
									default:
										if(_this272.s6 == null) {
											_this272.s6 = new trilateral_justPath_StoreF6();
										}
										var _this273 = _this272.s6;
										switch(_this273.l) {
										case 0:
											_this273.s0 = v16;
											break;
										case 1:
											_this273.s1 = v16;
											break;
										case 2:
											_this273.s2 = v16;
											break;
										case 3:
											_this273.s3 = v16;
											break;
										case 4:
											_this273.s4 = v16;
											break;
										case 5:
											_this273.s5 = v16;
											break;
										default:
											if(_this273.s6 == null) {
												_this273.s6 = new trilateral_justPath_StoreF6();
											}
											var _this274 = _this273.s6;
											switch(_this274.l) {
											case 0:
												_this274.s0 = v16;
												break;
											case 1:
												_this274.s1 = v16;
												break;
											case 2:
												_this274.s2 = v16;
												break;
											case 3:
												_this274.s3 = v16;
												break;
											case 4:
												_this274.s4 = v16;
												break;
											case 5:
												_this274.s5 = v16;
												break;
											default:
												if(_this274.s6 == null) {
													_this274.s6 = new trilateral_justPath_StoreF6();
												}
												var _this275 = _this274.s6;
												switch(_this275.l) {
												case 0:
													_this275.s0 = v16;
													break;
												case 1:
													_this275.s1 = v16;
													break;
												case 2:
													_this275.s2 = v16;
													break;
												case 3:
													_this275.s3 = v16;
													break;
												case 4:
													_this275.s4 = v16;
													break;
												case 5:
													_this275.s5 = v16;
													break;
												default:
													if(_this275.s6 == null) {
														_this275.s6 = new trilateral_justPath_StoreF6();
													}
													var _this276 = _this275.s6;
													switch(_this276.l) {
													case 0:
														_this276.s0 = v16;
														break;
													case 1:
														_this276.s1 = v16;
														break;
													case 2:
														_this276.s2 = v16;
														break;
													case 3:
														_this276.s3 = v16;
														break;
													case 4:
														_this276.s4 = v16;
														break;
													case 5:
														_this276.s5 = v16;
														break;
													default:
														if(_this276.s6 == null) {
															_this276.s6 = new trilateral_justPath_StoreF6();
														}
														var _this277 = _this276.s6;
														switch(_this277.l) {
														case 0:
															_this277.s0 = v16;
															break;
														case 1:
															_this277.s1 = v16;
															break;
														case 2:
															_this277.s2 = v16;
															break;
														case 3:
															_this277.s3 = v16;
															break;
														case 4:
															_this277.s4 = v16;
															break;
														case 5:
															_this277.s5 = v16;
															break;
														default:
															if(_this277.s6 == null) {
																_this277.s6 = new trilateral_justPath_StoreF6();
															}
															_this277.s6.push(v16);
														}
														_this277.l++;
													}
													_this276.l++;
												}
												_this275.l++;
											}
											_this274.l++;
										}
										_this273.l++;
									}
									_this272.l++;
								}
								_this271.l++;
							}
							temp3 = "";
						}
						break;
					case 45:
						if(temp3 != "") {
							if((this.store.l & 1) == 0) {
								var _this278 = this.store;
								var v17 = parseFloat(temp3);
								switch(_this278.l) {
								case 0:
									_this278.s0 = v17;
									break;
								case 1:
									_this278.s1 = v17;
									break;
								case 2:
									_this278.s2 = v17;
									break;
								case 3:
									_this278.s3 = v17;
									break;
								case 4:
									_this278.s4 = v17;
									break;
								case 5:
									_this278.s5 = v17;
									break;
								default:
									if(_this278.s6 == null) {
										_this278.s6 = new trilateral_justPath_StoreF6();
									}
									var _this279 = _this278.s6;
									switch(_this279.l) {
									case 0:
										_this279.s0 = v17;
										break;
									case 1:
										_this279.s1 = v17;
										break;
									case 2:
										_this279.s2 = v17;
										break;
									case 3:
										_this279.s3 = v17;
										break;
									case 4:
										_this279.s4 = v17;
										break;
									case 5:
										_this279.s5 = v17;
										break;
									default:
										if(_this279.s6 == null) {
											_this279.s6 = new trilateral_justPath_StoreF6();
										}
										var _this280 = _this279.s6;
										switch(_this280.l) {
										case 0:
											_this280.s0 = v17;
											break;
										case 1:
											_this280.s1 = v17;
											break;
										case 2:
											_this280.s2 = v17;
											break;
										case 3:
											_this280.s3 = v17;
											break;
										case 4:
											_this280.s4 = v17;
											break;
										case 5:
											_this280.s5 = v17;
											break;
										default:
											if(_this280.s6 == null) {
												_this280.s6 = new trilateral_justPath_StoreF6();
											}
											var _this281 = _this280.s6;
											switch(_this281.l) {
											case 0:
												_this281.s0 = v17;
												break;
											case 1:
												_this281.s1 = v17;
												break;
											case 2:
												_this281.s2 = v17;
												break;
											case 3:
												_this281.s3 = v17;
												break;
											case 4:
												_this281.s4 = v17;
												break;
											case 5:
												_this281.s5 = v17;
												break;
											default:
												if(_this281.s6 == null) {
													_this281.s6 = new trilateral_justPath_StoreF6();
												}
												var _this282 = _this281.s6;
												switch(_this282.l) {
												case 0:
													_this282.s0 = v17;
													break;
												case 1:
													_this282.s1 = v17;
													break;
												case 2:
													_this282.s2 = v17;
													break;
												case 3:
													_this282.s3 = v17;
													break;
												case 4:
													_this282.s4 = v17;
													break;
												case 5:
													_this282.s5 = v17;
													break;
												default:
													if(_this282.s6 == null) {
														_this282.s6 = new trilateral_justPath_StoreF6();
													}
													var _this283 = _this282.s6;
													switch(_this283.l) {
													case 0:
														_this283.s0 = v17;
														break;
													case 1:
														_this283.s1 = v17;
														break;
													case 2:
														_this283.s2 = v17;
														break;
													case 3:
														_this283.s3 = v17;
														break;
													case 4:
														_this283.s4 = v17;
														break;
													case 5:
														_this283.s5 = v17;
														break;
													default:
														if(_this283.s6 == null) {
															_this283.s6 = new trilateral_justPath_StoreF6();
														}
														var _this284 = _this283.s6;
														switch(_this284.l) {
														case 0:
															_this284.s0 = v17;
															break;
														case 1:
															_this284.s1 = v17;
															break;
														case 2:
															_this284.s2 = v17;
															break;
														case 3:
															_this284.s3 = v17;
															break;
														case 4:
															_this284.s4 = v17;
															break;
														case 5:
															_this284.s5 = v17;
															break;
														default:
															if(_this284.s6 == null) {
																_this284.s6 = new trilateral_justPath_StoreF6();
															}
															_this284.s6.push(v17);
														}
														_this284.l++;
													}
													_this283.l++;
												}
												_this282.l++;
											}
											_this281.l++;
										}
										_this280.l++;
									}
									_this279.l++;
								}
								_this278.l++;
							} else {
								var _this285 = this.store;
								var v18 = parseFloat(temp3);
								switch(_this285.l) {
								case 0:
									_this285.s0 = v18;
									break;
								case 1:
									_this285.s1 = v18;
									break;
								case 2:
									_this285.s2 = v18;
									break;
								case 3:
									_this285.s3 = v18;
									break;
								case 4:
									_this285.s4 = v18;
									break;
								case 5:
									_this285.s5 = v18;
									break;
								default:
									if(_this285.s6 == null) {
										_this285.s6 = new trilateral_justPath_StoreF6();
									}
									var _this286 = _this285.s6;
									switch(_this286.l) {
									case 0:
										_this286.s0 = v18;
										break;
									case 1:
										_this286.s1 = v18;
										break;
									case 2:
										_this286.s2 = v18;
										break;
									case 3:
										_this286.s3 = v18;
										break;
									case 4:
										_this286.s4 = v18;
										break;
									case 5:
										_this286.s5 = v18;
										break;
									default:
										if(_this286.s6 == null) {
											_this286.s6 = new trilateral_justPath_StoreF6();
										}
										var _this287 = _this286.s6;
										switch(_this287.l) {
										case 0:
											_this287.s0 = v18;
											break;
										case 1:
											_this287.s1 = v18;
											break;
										case 2:
											_this287.s2 = v18;
											break;
										case 3:
											_this287.s3 = v18;
											break;
										case 4:
											_this287.s4 = v18;
											break;
										case 5:
											_this287.s5 = v18;
											break;
										default:
											if(_this287.s6 == null) {
												_this287.s6 = new trilateral_justPath_StoreF6();
											}
											var _this288 = _this287.s6;
											switch(_this288.l) {
											case 0:
												_this288.s0 = v18;
												break;
											case 1:
												_this288.s1 = v18;
												break;
											case 2:
												_this288.s2 = v18;
												break;
											case 3:
												_this288.s3 = v18;
												break;
											case 4:
												_this288.s4 = v18;
												break;
											case 5:
												_this288.s5 = v18;
												break;
											default:
												if(_this288.s6 == null) {
													_this288.s6 = new trilateral_justPath_StoreF6();
												}
												var _this289 = _this288.s6;
												switch(_this289.l) {
												case 0:
													_this289.s0 = v18;
													break;
												case 1:
													_this289.s1 = v18;
													break;
												case 2:
													_this289.s2 = v18;
													break;
												case 3:
													_this289.s3 = v18;
													break;
												case 4:
													_this289.s4 = v18;
													break;
												case 5:
													_this289.s5 = v18;
													break;
												default:
													if(_this289.s6 == null) {
														_this289.s6 = new trilateral_justPath_StoreF6();
													}
													var _this290 = _this289.s6;
													switch(_this290.l) {
													case 0:
														_this290.s0 = v18;
														break;
													case 1:
														_this290.s1 = v18;
														break;
													case 2:
														_this290.s2 = v18;
														break;
													case 3:
														_this290.s3 = v18;
														break;
													case 4:
														_this290.s4 = v18;
														break;
													case 5:
														_this290.s5 = v18;
														break;
													default:
														if(_this290.s6 == null) {
															_this290.s6 = new trilateral_justPath_StoreF6();
														}
														var _this291 = _this290.s6;
														switch(_this291.l) {
														case 0:
															_this291.s0 = v18;
															break;
														case 1:
															_this291.s1 = v18;
															break;
														case 2:
															_this291.s2 = v18;
															break;
														case 3:
															_this291.s3 = v18;
															break;
														case 4:
															_this291.s4 = v18;
															break;
														case 5:
															_this291.s5 = v18;
															break;
														default:
															if(_this291.s6 == null) {
																_this291.s6 = new trilateral_justPath_StoreF6();
															}
															_this291.s6.push(v18);
														}
														_this291.l++;
													}
													_this290.l++;
												}
												_this289.l++;
											}
											_this288.l++;
										}
										_this287.l++;
									}
									_this286.l++;
								}
								_this285.l++;
							}
						}
						temp3 = "-";
						break;
					case 46:
						temp3 += ".";
						break;
					case 48:
						temp3 += "0";
						break;
					case 49:
						temp3 += "1";
						break;
					case 50:
						temp3 += "2";
						break;
					case 51:
						temp3 += "3";
						break;
					case 52:
						temp3 += "4";
						break;
					case 53:
						temp3 += "5";
						break;
					case 54:
						temp3 += "6";
						break;
					case 55:
						temp3 += "7";
						break;
					case 56:
						temp3 += "8";
						break;
					case 57:
						temp3 += "9";
						break;
					default:
						if(temp3 != "") {
							if((this.store.l & 1) == 0) {
								var _this292 = this.store;
								var v19 = parseFloat(temp3);
								switch(_this292.l) {
								case 0:
									_this292.s0 = v19;
									break;
								case 1:
									_this292.s1 = v19;
									break;
								case 2:
									_this292.s2 = v19;
									break;
								case 3:
									_this292.s3 = v19;
									break;
								case 4:
									_this292.s4 = v19;
									break;
								case 5:
									_this292.s5 = v19;
									break;
								default:
									if(_this292.s6 == null) {
										_this292.s6 = new trilateral_justPath_StoreF6();
									}
									var _this293 = _this292.s6;
									switch(_this293.l) {
									case 0:
										_this293.s0 = v19;
										break;
									case 1:
										_this293.s1 = v19;
										break;
									case 2:
										_this293.s2 = v19;
										break;
									case 3:
										_this293.s3 = v19;
										break;
									case 4:
										_this293.s4 = v19;
										break;
									case 5:
										_this293.s5 = v19;
										break;
									default:
										if(_this293.s6 == null) {
											_this293.s6 = new trilateral_justPath_StoreF6();
										}
										var _this294 = _this293.s6;
										switch(_this294.l) {
										case 0:
											_this294.s0 = v19;
											break;
										case 1:
											_this294.s1 = v19;
											break;
										case 2:
											_this294.s2 = v19;
											break;
										case 3:
											_this294.s3 = v19;
											break;
										case 4:
											_this294.s4 = v19;
											break;
										case 5:
											_this294.s5 = v19;
											break;
										default:
											if(_this294.s6 == null) {
												_this294.s6 = new trilateral_justPath_StoreF6();
											}
											var _this295 = _this294.s6;
											switch(_this295.l) {
											case 0:
												_this295.s0 = v19;
												break;
											case 1:
												_this295.s1 = v19;
												break;
											case 2:
												_this295.s2 = v19;
												break;
											case 3:
												_this295.s3 = v19;
												break;
											case 4:
												_this295.s4 = v19;
												break;
											case 5:
												_this295.s5 = v19;
												break;
											default:
												if(_this295.s6 == null) {
													_this295.s6 = new trilateral_justPath_StoreF6();
												}
												var _this296 = _this295.s6;
												switch(_this296.l) {
												case 0:
													_this296.s0 = v19;
													break;
												case 1:
													_this296.s1 = v19;
													break;
												case 2:
													_this296.s2 = v19;
													break;
												case 3:
													_this296.s3 = v19;
													break;
												case 4:
													_this296.s4 = v19;
													break;
												case 5:
													_this296.s5 = v19;
													break;
												default:
													if(_this296.s6 == null) {
														_this296.s6 = new trilateral_justPath_StoreF6();
													}
													var _this297 = _this296.s6;
													switch(_this297.l) {
													case 0:
														_this297.s0 = v19;
														break;
													case 1:
														_this297.s1 = v19;
														break;
													case 2:
														_this297.s2 = v19;
														break;
													case 3:
														_this297.s3 = v19;
														break;
													case 4:
														_this297.s4 = v19;
														break;
													case 5:
														_this297.s5 = v19;
														break;
													default:
														if(_this297.s6 == null) {
															_this297.s6 = new trilateral_justPath_StoreF6();
														}
														var _this298 = _this297.s6;
														switch(_this298.l) {
														case 0:
															_this298.s0 = v19;
															break;
														case 1:
															_this298.s1 = v19;
															break;
														case 2:
															_this298.s2 = v19;
															break;
														case 3:
															_this298.s3 = v19;
															break;
														case 4:
															_this298.s4 = v19;
															break;
														case 5:
															_this298.s5 = v19;
															break;
														default:
															if(_this298.s6 == null) {
																_this298.s6 = new trilateral_justPath_StoreF6();
															}
															_this298.s6.push(v19);
														}
														_this298.l++;
													}
													_this297.l++;
												}
												_this296.l++;
											}
											_this295.l++;
										}
										_this294.l++;
									}
									_this293.l++;
								}
								_this292.l++;
							} else {
								var _this299 = this.store;
								var v20 = parseFloat(temp3);
								switch(_this299.l) {
								case 0:
									_this299.s0 = v20;
									break;
								case 1:
									_this299.s1 = v20;
									break;
								case 2:
									_this299.s2 = v20;
									break;
								case 3:
									_this299.s3 = v20;
									break;
								case 4:
									_this299.s4 = v20;
									break;
								case 5:
									_this299.s5 = v20;
									break;
								default:
									if(_this299.s6 == null) {
										_this299.s6 = new trilateral_justPath_StoreF6();
									}
									var _this300 = _this299.s6;
									switch(_this300.l) {
									case 0:
										_this300.s0 = v20;
										break;
									case 1:
										_this300.s1 = v20;
										break;
									case 2:
										_this300.s2 = v20;
										break;
									case 3:
										_this300.s3 = v20;
										break;
									case 4:
										_this300.s4 = v20;
										break;
									case 5:
										_this300.s5 = v20;
										break;
									default:
										if(_this300.s6 == null) {
											_this300.s6 = new trilateral_justPath_StoreF6();
										}
										var _this301 = _this300.s6;
										switch(_this301.l) {
										case 0:
											_this301.s0 = v20;
											break;
										case 1:
											_this301.s1 = v20;
											break;
										case 2:
											_this301.s2 = v20;
											break;
										case 3:
											_this301.s3 = v20;
											break;
										case 4:
											_this301.s4 = v20;
											break;
										case 5:
											_this301.s5 = v20;
											break;
										default:
											if(_this301.s6 == null) {
												_this301.s6 = new trilateral_justPath_StoreF6();
											}
											var _this302 = _this301.s6;
											switch(_this302.l) {
											case 0:
												_this302.s0 = v20;
												break;
											case 1:
												_this302.s1 = v20;
												break;
											case 2:
												_this302.s2 = v20;
												break;
											case 3:
												_this302.s3 = v20;
												break;
											case 4:
												_this302.s4 = v20;
												break;
											case 5:
												_this302.s5 = v20;
												break;
											default:
												if(_this302.s6 == null) {
													_this302.s6 = new trilateral_justPath_StoreF6();
												}
												var _this303 = _this302.s6;
												switch(_this303.l) {
												case 0:
													_this303.s0 = v20;
													break;
												case 1:
													_this303.s1 = v20;
													break;
												case 2:
													_this303.s2 = v20;
													break;
												case 3:
													_this303.s3 = v20;
													break;
												case 4:
													_this303.s4 = v20;
													break;
												case 5:
													_this303.s5 = v20;
													break;
												default:
													if(_this303.s6 == null) {
														_this303.s6 = new trilateral_justPath_StoreF6();
													}
													var _this304 = _this303.s6;
													switch(_this304.l) {
													case 0:
														_this304.s0 = v20;
														break;
													case 1:
														_this304.s1 = v20;
														break;
													case 2:
														_this304.s2 = v20;
														break;
													case 3:
														_this304.s3 = v20;
														break;
													case 4:
														_this304.s4 = v20;
														break;
													case 5:
														_this304.s5 = v20;
														break;
													default:
														if(_this304.s6 == null) {
															_this304.s6 = new trilateral_justPath_StoreF6();
														}
														var _this305 = _this304.s6;
														switch(_this305.l) {
														case 0:
															_this305.s0 = v20;
															break;
														case 1:
															_this305.s1 = v20;
															break;
														case 2:
															_this305.s2 = v20;
															break;
														case 3:
															_this305.s3 = v20;
															break;
														case 4:
															_this305.s4 = v20;
															break;
														case 5:
															_this305.s5 = v20;
															break;
														default:
															if(_this305.s6 == null) {
																_this305.s6 = new trilateral_justPath_StoreF6();
															}
															_this305.s6.push(v20);
														}
														_this305.l++;
													}
													_this304.l++;
												}
												_this303.l++;
											}
											_this302.l++;
										}
										_this301.l++;
									}
									_this300.l++;
								}
								_this299.l++;
							}
							temp3 = "";
						}
						this.pos--;
						exit3 = true;
					}
					if(exit3) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0;
					this.lastY = this.store.s1;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 1) {
						var _this306 = this.store;
						var out155 = _this306.s0;
						if(_this306.l != 0) {
							_this306.s0 = _this306.s1;
							_this306.s1 = _this306.s2;
							_this306.s2 = _this306.s3;
							_this306.s3 = _this306.s4;
							_this306.s4 = _this306.s5;
							_this306.s5 = null;
							if(_this306.s6 != null) {
								var _this307 = _this306.s6;
								var out156 = _this307.s0;
								if(_this307.l != 0) {
									_this307.s0 = _this307.s1;
									_this307.s1 = _this307.s2;
									_this307.s2 = _this307.s3;
									_this307.s3 = _this307.s4;
									_this307.s4 = _this307.s5;
									_this307.s5 = null;
									if(_this307.s6 != null) {
										var _this308 = _this307.s6;
										var out157 = _this308.s0;
										if(_this308.l != 0) {
											_this308.s0 = _this308.s1;
											_this308.s1 = _this308.s2;
											_this308.s2 = _this308.s3;
											_this308.s3 = _this308.s4;
											_this308.s4 = _this308.s5;
											_this308.s5 = null;
											if(_this308.s6 != null) {
												var _this309 = _this308.s6;
												var out158 = _this309.s0;
												if(_this309.l != 0) {
													_this309.s0 = _this309.s1;
													_this309.s1 = _this309.s2;
													_this309.s2 = _this309.s3;
													_this309.s3 = _this309.s4;
													_this309.s4 = _this309.s5;
													_this309.s5 = null;
													if(_this309.s6 != null) {
														var _this310 = _this309.s6;
														var out159 = _this310.s0;
														if(_this310.l != 0) {
															_this310.s0 = _this310.s1;
															_this310.s1 = _this310.s2;
															_this310.s2 = _this310.s3;
															_this310.s3 = _this310.s4;
															_this310.s4 = _this310.s5;
															_this310.s5 = null;
															if(_this310.s6 != null) {
																var _this311 = _this310.s6;
																var out160 = _this311.s0;
																if(_this311.l != 0) {
																	_this311.s0 = _this311.s1;
																	_this311.s1 = _this311.s2;
																	_this311.s2 = _this311.s3;
																	_this311.s3 = _this311.s4;
																	_this311.s4 = _this311.s5;
																	_this311.s5 = null;
																	if(_this311.s6 != null) {
																		var _this312 = _this311.s6;
																		var out161 = _this312.s0;
																		if(_this312.l != 0) {
																			_this312.s0 = _this312.s1;
																			_this312.s1 = _this312.s2;
																			_this312.s2 = _this312.s3;
																			_this312.s3 = _this312.s4;
																			_this312.s4 = _this312.s5;
																			_this312.s5 = null;
																			if(_this312.s6 != null) {
																				_this312.s5 = _this312.s6.shift();
																			}
																			_this312.l--;
																		}
																		_this311.s5 = out161;
																	}
																	_this311.l--;
																}
																_this310.s5 = out160;
															}
															_this310.l--;
														}
														_this309.s5 = out159;
													}
													_this309.l--;
												}
												_this308.s5 = out158;
											}
											_this308.l--;
										}
										_this307.s5 = out157;
									}
									_this307.l--;
								}
								_this306.s5 = out156;
							}
							_this306.l--;
						}
						this.lastX = out155;
						var _this313 = this.store;
						var out162 = _this313.s0;
						if(_this313.l != 0) {
							_this313.s0 = _this313.s1;
							_this313.s1 = _this313.s2;
							_this313.s2 = _this313.s3;
							_this313.s3 = _this313.s4;
							_this313.s4 = _this313.s5;
							_this313.s5 = null;
							if(_this313.s6 != null) {
								var _this314 = _this313.s6;
								var out163 = _this314.s0;
								if(_this314.l != 0) {
									_this314.s0 = _this314.s1;
									_this314.s1 = _this314.s2;
									_this314.s2 = _this314.s3;
									_this314.s3 = _this314.s4;
									_this314.s4 = _this314.s5;
									_this314.s5 = null;
									if(_this314.s6 != null) {
										var _this315 = _this314.s6;
										var out164 = _this315.s0;
										if(_this315.l != 0) {
											_this315.s0 = _this315.s1;
											_this315.s1 = _this315.s2;
											_this315.s2 = _this315.s3;
											_this315.s3 = _this315.s4;
											_this315.s4 = _this315.s5;
											_this315.s5 = null;
											if(_this315.s6 != null) {
												var _this316 = _this315.s6;
												var out165 = _this316.s0;
												if(_this316.l != 0) {
													_this316.s0 = _this316.s1;
													_this316.s1 = _this316.s2;
													_this316.s2 = _this316.s3;
													_this316.s3 = _this316.s4;
													_this316.s4 = _this316.s5;
													_this316.s5 = null;
													if(_this316.s6 != null) {
														var _this317 = _this316.s6;
														var out166 = _this317.s0;
														if(_this317.l != 0) {
															_this317.s0 = _this317.s1;
															_this317.s1 = _this317.s2;
															_this317.s2 = _this317.s3;
															_this317.s3 = _this317.s4;
															_this317.s4 = _this317.s5;
															_this317.s5 = null;
															if(_this317.s6 != null) {
																var _this318 = _this317.s6;
																var out167 = _this318.s0;
																if(_this318.l != 0) {
																	_this318.s0 = _this318.s1;
																	_this318.s1 = _this318.s2;
																	_this318.s2 = _this318.s3;
																	_this318.s3 = _this318.s4;
																	_this318.s4 = _this318.s5;
																	_this318.s5 = null;
																	if(_this318.s6 != null) {
																		var _this319 = _this318.s6;
																		var out168 = _this319.s0;
																		if(_this319.l != 0) {
																			_this319.s0 = _this319.s1;
																			_this319.s1 = _this319.s2;
																			_this319.s2 = _this319.s3;
																			_this319.s3 = _this319.s4;
																			_this319.s4 = _this319.s5;
																			_this319.s5 = null;
																			if(_this319.s6 != null) {
																				_this319.s5 = _this319.s6.shift();
																			}
																			_this319.l--;
																		}
																		_this318.s5 = out168;
																	}
																	_this318.l--;
																}
																_this317.s5 = out167;
															}
															_this317.l--;
														}
														_this316.s5 = out166;
													}
													_this316.l--;
												}
												_this315.s5 = out165;
											}
											_this315.l--;
										}
										_this314.s5 = out164;
									}
									_this314.l--;
								}
								_this313.s5 = out163;
							}
							_this313.l--;
						}
						this.lastY = out162;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 77:
				var _this320 = this.store;
				_this320.l = 0;
				_this320.s0 = null;
				_this320.s1 = null;
				_this320.s2 = null;
				_this320.s3 = null;
				_this320.s4 = null;
				_this320.s5 = null;
				_this320.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count5 = 0;
				var temp4 = "";
				var exit4 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp4 != "") {
							if((this.store.l & 1) == 0) {
								var _this321 = this.store;
								var v21 = parseFloat(temp4);
								switch(_this321.l) {
								case 0:
									_this321.s0 = v21;
									break;
								case 1:
									_this321.s1 = v21;
									break;
								case 2:
									_this321.s2 = v21;
									break;
								case 3:
									_this321.s3 = v21;
									break;
								case 4:
									_this321.s4 = v21;
									break;
								case 5:
									_this321.s5 = v21;
									break;
								default:
									if(_this321.s6 == null) {
										_this321.s6 = new trilateral_justPath_StoreF6();
									}
									var _this322 = _this321.s6;
									switch(_this322.l) {
									case 0:
										_this322.s0 = v21;
										break;
									case 1:
										_this322.s1 = v21;
										break;
									case 2:
										_this322.s2 = v21;
										break;
									case 3:
										_this322.s3 = v21;
										break;
									case 4:
										_this322.s4 = v21;
										break;
									case 5:
										_this322.s5 = v21;
										break;
									default:
										if(_this322.s6 == null) {
											_this322.s6 = new trilateral_justPath_StoreF6();
										}
										var _this323 = _this322.s6;
										switch(_this323.l) {
										case 0:
											_this323.s0 = v21;
											break;
										case 1:
											_this323.s1 = v21;
											break;
										case 2:
											_this323.s2 = v21;
											break;
										case 3:
											_this323.s3 = v21;
											break;
										case 4:
											_this323.s4 = v21;
											break;
										case 5:
											_this323.s5 = v21;
											break;
										default:
											if(_this323.s6 == null) {
												_this323.s6 = new trilateral_justPath_StoreF6();
											}
											var _this324 = _this323.s6;
											switch(_this324.l) {
											case 0:
												_this324.s0 = v21;
												break;
											case 1:
												_this324.s1 = v21;
												break;
											case 2:
												_this324.s2 = v21;
												break;
											case 3:
												_this324.s3 = v21;
												break;
											case 4:
												_this324.s4 = v21;
												break;
											case 5:
												_this324.s5 = v21;
												break;
											default:
												if(_this324.s6 == null) {
													_this324.s6 = new trilateral_justPath_StoreF6();
												}
												var _this325 = _this324.s6;
												switch(_this325.l) {
												case 0:
													_this325.s0 = v21;
													break;
												case 1:
													_this325.s1 = v21;
													break;
												case 2:
													_this325.s2 = v21;
													break;
												case 3:
													_this325.s3 = v21;
													break;
												case 4:
													_this325.s4 = v21;
													break;
												case 5:
													_this325.s5 = v21;
													break;
												default:
													if(_this325.s6 == null) {
														_this325.s6 = new trilateral_justPath_StoreF6();
													}
													var _this326 = _this325.s6;
													switch(_this326.l) {
													case 0:
														_this326.s0 = v21;
														break;
													case 1:
														_this326.s1 = v21;
														break;
													case 2:
														_this326.s2 = v21;
														break;
													case 3:
														_this326.s3 = v21;
														break;
													case 4:
														_this326.s4 = v21;
														break;
													case 5:
														_this326.s5 = v21;
														break;
													default:
														if(_this326.s6 == null) {
															_this326.s6 = new trilateral_justPath_StoreF6();
														}
														var _this327 = _this326.s6;
														switch(_this327.l) {
														case 0:
															_this327.s0 = v21;
															break;
														case 1:
															_this327.s1 = v21;
															break;
														case 2:
															_this327.s2 = v21;
															break;
														case 3:
															_this327.s3 = v21;
															break;
														case 4:
															_this327.s4 = v21;
															break;
														case 5:
															_this327.s5 = v21;
															break;
														default:
															if(_this327.s6 == null) {
																_this327.s6 = new trilateral_justPath_StoreF6();
															}
															_this327.s6.push(v21);
														}
														_this327.l++;
													}
													_this326.l++;
												}
												_this325.l++;
											}
											_this324.l++;
										}
										_this323.l++;
									}
									_this322.l++;
								}
								_this321.l++;
							} else {
								var _this328 = this.store;
								var v22 = parseFloat(temp4);
								switch(_this328.l) {
								case 0:
									_this328.s0 = v22;
									break;
								case 1:
									_this328.s1 = v22;
									break;
								case 2:
									_this328.s2 = v22;
									break;
								case 3:
									_this328.s3 = v22;
									break;
								case 4:
									_this328.s4 = v22;
									break;
								case 5:
									_this328.s5 = v22;
									break;
								default:
									if(_this328.s6 == null) {
										_this328.s6 = new trilateral_justPath_StoreF6();
									}
									var _this329 = _this328.s6;
									switch(_this329.l) {
									case 0:
										_this329.s0 = v22;
										break;
									case 1:
										_this329.s1 = v22;
										break;
									case 2:
										_this329.s2 = v22;
										break;
									case 3:
										_this329.s3 = v22;
										break;
									case 4:
										_this329.s4 = v22;
										break;
									case 5:
										_this329.s5 = v22;
										break;
									default:
										if(_this329.s6 == null) {
											_this329.s6 = new trilateral_justPath_StoreF6();
										}
										var _this330 = _this329.s6;
										switch(_this330.l) {
										case 0:
											_this330.s0 = v22;
											break;
										case 1:
											_this330.s1 = v22;
											break;
										case 2:
											_this330.s2 = v22;
											break;
										case 3:
											_this330.s3 = v22;
											break;
										case 4:
											_this330.s4 = v22;
											break;
										case 5:
											_this330.s5 = v22;
											break;
										default:
											if(_this330.s6 == null) {
												_this330.s6 = new trilateral_justPath_StoreF6();
											}
											var _this331 = _this330.s6;
											switch(_this331.l) {
											case 0:
												_this331.s0 = v22;
												break;
											case 1:
												_this331.s1 = v22;
												break;
											case 2:
												_this331.s2 = v22;
												break;
											case 3:
												_this331.s3 = v22;
												break;
											case 4:
												_this331.s4 = v22;
												break;
											case 5:
												_this331.s5 = v22;
												break;
											default:
												if(_this331.s6 == null) {
													_this331.s6 = new trilateral_justPath_StoreF6();
												}
												var _this332 = _this331.s6;
												switch(_this332.l) {
												case 0:
													_this332.s0 = v22;
													break;
												case 1:
													_this332.s1 = v22;
													break;
												case 2:
													_this332.s2 = v22;
													break;
												case 3:
													_this332.s3 = v22;
													break;
												case 4:
													_this332.s4 = v22;
													break;
												case 5:
													_this332.s5 = v22;
													break;
												default:
													if(_this332.s6 == null) {
														_this332.s6 = new trilateral_justPath_StoreF6();
													}
													var _this333 = _this332.s6;
													switch(_this333.l) {
													case 0:
														_this333.s0 = v22;
														break;
													case 1:
														_this333.s1 = v22;
														break;
													case 2:
														_this333.s2 = v22;
														break;
													case 3:
														_this333.s3 = v22;
														break;
													case 4:
														_this333.s4 = v22;
														break;
													case 5:
														_this333.s5 = v22;
														break;
													default:
														if(_this333.s6 == null) {
															_this333.s6 = new trilateral_justPath_StoreF6();
														}
														var _this334 = _this333.s6;
														switch(_this334.l) {
														case 0:
															_this334.s0 = v22;
															break;
														case 1:
															_this334.s1 = v22;
															break;
														case 2:
															_this334.s2 = v22;
															break;
														case 3:
															_this334.s3 = v22;
															break;
														case 4:
															_this334.s4 = v22;
															break;
														case 5:
															_this334.s5 = v22;
															break;
														default:
															if(_this334.s6 == null) {
																_this334.s6 = new trilateral_justPath_StoreF6();
															}
															_this334.s6.push(v22);
														}
														_this334.l++;
													}
													_this333.l++;
												}
												_this332.l++;
											}
											_this331.l++;
										}
										_this330.l++;
									}
									_this329.l++;
								}
								_this328.l++;
							}
							temp4 = "";
						}
						break;
					case 45:
						if(temp4 != "") {
							if((this.store.l & 1) == 0) {
								var _this335 = this.store;
								var v23 = parseFloat(temp4);
								switch(_this335.l) {
								case 0:
									_this335.s0 = v23;
									break;
								case 1:
									_this335.s1 = v23;
									break;
								case 2:
									_this335.s2 = v23;
									break;
								case 3:
									_this335.s3 = v23;
									break;
								case 4:
									_this335.s4 = v23;
									break;
								case 5:
									_this335.s5 = v23;
									break;
								default:
									if(_this335.s6 == null) {
										_this335.s6 = new trilateral_justPath_StoreF6();
									}
									var _this336 = _this335.s6;
									switch(_this336.l) {
									case 0:
										_this336.s0 = v23;
										break;
									case 1:
										_this336.s1 = v23;
										break;
									case 2:
										_this336.s2 = v23;
										break;
									case 3:
										_this336.s3 = v23;
										break;
									case 4:
										_this336.s4 = v23;
										break;
									case 5:
										_this336.s5 = v23;
										break;
									default:
										if(_this336.s6 == null) {
											_this336.s6 = new trilateral_justPath_StoreF6();
										}
										var _this337 = _this336.s6;
										switch(_this337.l) {
										case 0:
											_this337.s0 = v23;
											break;
										case 1:
											_this337.s1 = v23;
											break;
										case 2:
											_this337.s2 = v23;
											break;
										case 3:
											_this337.s3 = v23;
											break;
										case 4:
											_this337.s4 = v23;
											break;
										case 5:
											_this337.s5 = v23;
											break;
										default:
											if(_this337.s6 == null) {
												_this337.s6 = new trilateral_justPath_StoreF6();
											}
											var _this338 = _this337.s6;
											switch(_this338.l) {
											case 0:
												_this338.s0 = v23;
												break;
											case 1:
												_this338.s1 = v23;
												break;
											case 2:
												_this338.s2 = v23;
												break;
											case 3:
												_this338.s3 = v23;
												break;
											case 4:
												_this338.s4 = v23;
												break;
											case 5:
												_this338.s5 = v23;
												break;
											default:
												if(_this338.s6 == null) {
													_this338.s6 = new trilateral_justPath_StoreF6();
												}
												var _this339 = _this338.s6;
												switch(_this339.l) {
												case 0:
													_this339.s0 = v23;
													break;
												case 1:
													_this339.s1 = v23;
													break;
												case 2:
													_this339.s2 = v23;
													break;
												case 3:
													_this339.s3 = v23;
													break;
												case 4:
													_this339.s4 = v23;
													break;
												case 5:
													_this339.s5 = v23;
													break;
												default:
													if(_this339.s6 == null) {
														_this339.s6 = new trilateral_justPath_StoreF6();
													}
													var _this340 = _this339.s6;
													switch(_this340.l) {
													case 0:
														_this340.s0 = v23;
														break;
													case 1:
														_this340.s1 = v23;
														break;
													case 2:
														_this340.s2 = v23;
														break;
													case 3:
														_this340.s3 = v23;
														break;
													case 4:
														_this340.s4 = v23;
														break;
													case 5:
														_this340.s5 = v23;
														break;
													default:
														if(_this340.s6 == null) {
															_this340.s6 = new trilateral_justPath_StoreF6();
														}
														var _this341 = _this340.s6;
														switch(_this341.l) {
														case 0:
															_this341.s0 = v23;
															break;
														case 1:
															_this341.s1 = v23;
															break;
														case 2:
															_this341.s2 = v23;
															break;
														case 3:
															_this341.s3 = v23;
															break;
														case 4:
															_this341.s4 = v23;
															break;
														case 5:
															_this341.s5 = v23;
															break;
														default:
															if(_this341.s6 == null) {
																_this341.s6 = new trilateral_justPath_StoreF6();
															}
															_this341.s6.push(v23);
														}
														_this341.l++;
													}
													_this340.l++;
												}
												_this339.l++;
											}
											_this338.l++;
										}
										_this337.l++;
									}
									_this336.l++;
								}
								_this335.l++;
							} else {
								var _this342 = this.store;
								var v24 = parseFloat(temp4);
								switch(_this342.l) {
								case 0:
									_this342.s0 = v24;
									break;
								case 1:
									_this342.s1 = v24;
									break;
								case 2:
									_this342.s2 = v24;
									break;
								case 3:
									_this342.s3 = v24;
									break;
								case 4:
									_this342.s4 = v24;
									break;
								case 5:
									_this342.s5 = v24;
									break;
								default:
									if(_this342.s6 == null) {
										_this342.s6 = new trilateral_justPath_StoreF6();
									}
									var _this343 = _this342.s6;
									switch(_this343.l) {
									case 0:
										_this343.s0 = v24;
										break;
									case 1:
										_this343.s1 = v24;
										break;
									case 2:
										_this343.s2 = v24;
										break;
									case 3:
										_this343.s3 = v24;
										break;
									case 4:
										_this343.s4 = v24;
										break;
									case 5:
										_this343.s5 = v24;
										break;
									default:
										if(_this343.s6 == null) {
											_this343.s6 = new trilateral_justPath_StoreF6();
										}
										var _this344 = _this343.s6;
										switch(_this344.l) {
										case 0:
											_this344.s0 = v24;
											break;
										case 1:
											_this344.s1 = v24;
											break;
										case 2:
											_this344.s2 = v24;
											break;
										case 3:
											_this344.s3 = v24;
											break;
										case 4:
											_this344.s4 = v24;
											break;
										case 5:
											_this344.s5 = v24;
											break;
										default:
											if(_this344.s6 == null) {
												_this344.s6 = new trilateral_justPath_StoreF6();
											}
											var _this345 = _this344.s6;
											switch(_this345.l) {
											case 0:
												_this345.s0 = v24;
												break;
											case 1:
												_this345.s1 = v24;
												break;
											case 2:
												_this345.s2 = v24;
												break;
											case 3:
												_this345.s3 = v24;
												break;
											case 4:
												_this345.s4 = v24;
												break;
											case 5:
												_this345.s5 = v24;
												break;
											default:
												if(_this345.s6 == null) {
													_this345.s6 = new trilateral_justPath_StoreF6();
												}
												var _this346 = _this345.s6;
												switch(_this346.l) {
												case 0:
													_this346.s0 = v24;
													break;
												case 1:
													_this346.s1 = v24;
													break;
												case 2:
													_this346.s2 = v24;
													break;
												case 3:
													_this346.s3 = v24;
													break;
												case 4:
													_this346.s4 = v24;
													break;
												case 5:
													_this346.s5 = v24;
													break;
												default:
													if(_this346.s6 == null) {
														_this346.s6 = new trilateral_justPath_StoreF6();
													}
													var _this347 = _this346.s6;
													switch(_this347.l) {
													case 0:
														_this347.s0 = v24;
														break;
													case 1:
														_this347.s1 = v24;
														break;
													case 2:
														_this347.s2 = v24;
														break;
													case 3:
														_this347.s3 = v24;
														break;
													case 4:
														_this347.s4 = v24;
														break;
													case 5:
														_this347.s5 = v24;
														break;
													default:
														if(_this347.s6 == null) {
															_this347.s6 = new trilateral_justPath_StoreF6();
														}
														var _this348 = _this347.s6;
														switch(_this348.l) {
														case 0:
															_this348.s0 = v24;
															break;
														case 1:
															_this348.s1 = v24;
															break;
														case 2:
															_this348.s2 = v24;
															break;
														case 3:
															_this348.s3 = v24;
															break;
														case 4:
															_this348.s4 = v24;
															break;
														case 5:
															_this348.s5 = v24;
															break;
														default:
															if(_this348.s6 == null) {
																_this348.s6 = new trilateral_justPath_StoreF6();
															}
															_this348.s6.push(v24);
														}
														_this348.l++;
													}
													_this347.l++;
												}
												_this346.l++;
											}
											_this345.l++;
										}
										_this344.l++;
									}
									_this343.l++;
								}
								_this342.l++;
							}
						}
						temp4 = "-";
						break;
					case 46:
						temp4 += ".";
						break;
					case 48:
						temp4 += "0";
						break;
					case 49:
						temp4 += "1";
						break;
					case 50:
						temp4 += "2";
						break;
					case 51:
						temp4 += "3";
						break;
					case 52:
						temp4 += "4";
						break;
					case 53:
						temp4 += "5";
						break;
					case 54:
						temp4 += "6";
						break;
					case 55:
						temp4 += "7";
						break;
					case 56:
						temp4 += "8";
						break;
					case 57:
						temp4 += "9";
						break;
					default:
						if(temp4 != "") {
							if((this.store.l & 1) == 0) {
								var _this349 = this.store;
								var v25 = parseFloat(temp4);
								switch(_this349.l) {
								case 0:
									_this349.s0 = v25;
									break;
								case 1:
									_this349.s1 = v25;
									break;
								case 2:
									_this349.s2 = v25;
									break;
								case 3:
									_this349.s3 = v25;
									break;
								case 4:
									_this349.s4 = v25;
									break;
								case 5:
									_this349.s5 = v25;
									break;
								default:
									if(_this349.s6 == null) {
										_this349.s6 = new trilateral_justPath_StoreF6();
									}
									var _this350 = _this349.s6;
									switch(_this350.l) {
									case 0:
										_this350.s0 = v25;
										break;
									case 1:
										_this350.s1 = v25;
										break;
									case 2:
										_this350.s2 = v25;
										break;
									case 3:
										_this350.s3 = v25;
										break;
									case 4:
										_this350.s4 = v25;
										break;
									case 5:
										_this350.s5 = v25;
										break;
									default:
										if(_this350.s6 == null) {
											_this350.s6 = new trilateral_justPath_StoreF6();
										}
										var _this351 = _this350.s6;
										switch(_this351.l) {
										case 0:
											_this351.s0 = v25;
											break;
										case 1:
											_this351.s1 = v25;
											break;
										case 2:
											_this351.s2 = v25;
											break;
										case 3:
											_this351.s3 = v25;
											break;
										case 4:
											_this351.s4 = v25;
											break;
										case 5:
											_this351.s5 = v25;
											break;
										default:
											if(_this351.s6 == null) {
												_this351.s6 = new trilateral_justPath_StoreF6();
											}
											var _this352 = _this351.s6;
											switch(_this352.l) {
											case 0:
												_this352.s0 = v25;
												break;
											case 1:
												_this352.s1 = v25;
												break;
											case 2:
												_this352.s2 = v25;
												break;
											case 3:
												_this352.s3 = v25;
												break;
											case 4:
												_this352.s4 = v25;
												break;
											case 5:
												_this352.s5 = v25;
												break;
											default:
												if(_this352.s6 == null) {
													_this352.s6 = new trilateral_justPath_StoreF6();
												}
												var _this353 = _this352.s6;
												switch(_this353.l) {
												case 0:
													_this353.s0 = v25;
													break;
												case 1:
													_this353.s1 = v25;
													break;
												case 2:
													_this353.s2 = v25;
													break;
												case 3:
													_this353.s3 = v25;
													break;
												case 4:
													_this353.s4 = v25;
													break;
												case 5:
													_this353.s5 = v25;
													break;
												default:
													if(_this353.s6 == null) {
														_this353.s6 = new trilateral_justPath_StoreF6();
													}
													var _this354 = _this353.s6;
													switch(_this354.l) {
													case 0:
														_this354.s0 = v25;
														break;
													case 1:
														_this354.s1 = v25;
														break;
													case 2:
														_this354.s2 = v25;
														break;
													case 3:
														_this354.s3 = v25;
														break;
													case 4:
														_this354.s4 = v25;
														break;
													case 5:
														_this354.s5 = v25;
														break;
													default:
														if(_this354.s6 == null) {
															_this354.s6 = new trilateral_justPath_StoreF6();
														}
														var _this355 = _this354.s6;
														switch(_this355.l) {
														case 0:
															_this355.s0 = v25;
															break;
														case 1:
															_this355.s1 = v25;
															break;
														case 2:
															_this355.s2 = v25;
															break;
														case 3:
															_this355.s3 = v25;
															break;
														case 4:
															_this355.s4 = v25;
															break;
														case 5:
															_this355.s5 = v25;
															break;
														default:
															if(_this355.s6 == null) {
																_this355.s6 = new trilateral_justPath_StoreF6();
															}
															_this355.s6.push(v25);
														}
														_this355.l++;
													}
													_this354.l++;
												}
												_this353.l++;
											}
											_this352.l++;
										}
										_this351.l++;
									}
									_this350.l++;
								}
								_this349.l++;
							} else {
								var _this356 = this.store;
								var v26 = parseFloat(temp4);
								switch(_this356.l) {
								case 0:
									_this356.s0 = v26;
									break;
								case 1:
									_this356.s1 = v26;
									break;
								case 2:
									_this356.s2 = v26;
									break;
								case 3:
									_this356.s3 = v26;
									break;
								case 4:
									_this356.s4 = v26;
									break;
								case 5:
									_this356.s5 = v26;
									break;
								default:
									if(_this356.s6 == null) {
										_this356.s6 = new trilateral_justPath_StoreF6();
									}
									var _this357 = _this356.s6;
									switch(_this357.l) {
									case 0:
										_this357.s0 = v26;
										break;
									case 1:
										_this357.s1 = v26;
										break;
									case 2:
										_this357.s2 = v26;
										break;
									case 3:
										_this357.s3 = v26;
										break;
									case 4:
										_this357.s4 = v26;
										break;
									case 5:
										_this357.s5 = v26;
										break;
									default:
										if(_this357.s6 == null) {
											_this357.s6 = new trilateral_justPath_StoreF6();
										}
										var _this358 = _this357.s6;
										switch(_this358.l) {
										case 0:
											_this358.s0 = v26;
											break;
										case 1:
											_this358.s1 = v26;
											break;
										case 2:
											_this358.s2 = v26;
											break;
										case 3:
											_this358.s3 = v26;
											break;
										case 4:
											_this358.s4 = v26;
											break;
										case 5:
											_this358.s5 = v26;
											break;
										default:
											if(_this358.s6 == null) {
												_this358.s6 = new trilateral_justPath_StoreF6();
											}
											var _this359 = _this358.s6;
											switch(_this359.l) {
											case 0:
												_this359.s0 = v26;
												break;
											case 1:
												_this359.s1 = v26;
												break;
											case 2:
												_this359.s2 = v26;
												break;
											case 3:
												_this359.s3 = v26;
												break;
											case 4:
												_this359.s4 = v26;
												break;
											case 5:
												_this359.s5 = v26;
												break;
											default:
												if(_this359.s6 == null) {
													_this359.s6 = new trilateral_justPath_StoreF6();
												}
												var _this360 = _this359.s6;
												switch(_this360.l) {
												case 0:
													_this360.s0 = v26;
													break;
												case 1:
													_this360.s1 = v26;
													break;
												case 2:
													_this360.s2 = v26;
													break;
												case 3:
													_this360.s3 = v26;
													break;
												case 4:
													_this360.s4 = v26;
													break;
												case 5:
													_this360.s5 = v26;
													break;
												default:
													if(_this360.s6 == null) {
														_this360.s6 = new trilateral_justPath_StoreF6();
													}
													var _this361 = _this360.s6;
													switch(_this361.l) {
													case 0:
														_this361.s0 = v26;
														break;
													case 1:
														_this361.s1 = v26;
														break;
													case 2:
														_this361.s2 = v26;
														break;
													case 3:
														_this361.s3 = v26;
														break;
													case 4:
														_this361.s4 = v26;
														break;
													case 5:
														_this361.s5 = v26;
														break;
													default:
														if(_this361.s6 == null) {
															_this361.s6 = new trilateral_justPath_StoreF6();
														}
														var _this362 = _this361.s6;
														switch(_this362.l) {
														case 0:
															_this362.s0 = v26;
															break;
														case 1:
															_this362.s1 = v26;
															break;
														case 2:
															_this362.s2 = v26;
															break;
														case 3:
															_this362.s3 = v26;
															break;
														case 4:
															_this362.s4 = v26;
															break;
														case 5:
															_this362.s5 = v26;
															break;
														default:
															if(_this362.s6 == null) {
																_this362.s6 = new trilateral_justPath_StoreF6();
															}
															_this362.s6.push(v26);
														}
														_this362.l++;
													}
													_this361.l++;
												}
												_this360.l++;
											}
											_this359.l++;
										}
										_this358.l++;
									}
									_this357.l++;
								}
								_this356.l++;
							}
							temp4 = "";
						}
						this.pos--;
						exit4 = true;
					}
					if(exit4) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0;
					this.lastY = this.store.s1;
					this.pathContext.moveTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					var _this363 = this.store;
					var out169 = _this363.s0;
					if(_this363.l != 0) {
						_this363.s0 = _this363.s1;
						_this363.s1 = _this363.s2;
						_this363.s2 = _this363.s3;
						_this363.s3 = _this363.s4;
						_this363.s4 = _this363.s5;
						_this363.s5 = null;
						if(_this363.s6 != null) {
							var _this364 = _this363.s6;
							var out170 = _this364.s0;
							if(_this364.l != 0) {
								_this364.s0 = _this364.s1;
								_this364.s1 = _this364.s2;
								_this364.s2 = _this364.s3;
								_this364.s3 = _this364.s4;
								_this364.s4 = _this364.s5;
								_this364.s5 = null;
								if(_this364.s6 != null) {
									var _this365 = _this364.s6;
									var out171 = _this365.s0;
									if(_this365.l != 0) {
										_this365.s0 = _this365.s1;
										_this365.s1 = _this365.s2;
										_this365.s2 = _this365.s3;
										_this365.s3 = _this365.s4;
										_this365.s4 = _this365.s5;
										_this365.s5 = null;
										if(_this365.s6 != null) {
											var _this366 = _this365.s6;
											var out172 = _this366.s0;
											if(_this366.l != 0) {
												_this366.s0 = _this366.s1;
												_this366.s1 = _this366.s2;
												_this366.s2 = _this366.s3;
												_this366.s3 = _this366.s4;
												_this366.s4 = _this366.s5;
												_this366.s5 = null;
												if(_this366.s6 != null) {
													var _this367 = _this366.s6;
													var out173 = _this367.s0;
													if(_this367.l != 0) {
														_this367.s0 = _this367.s1;
														_this367.s1 = _this367.s2;
														_this367.s2 = _this367.s3;
														_this367.s3 = _this367.s4;
														_this367.s4 = _this367.s5;
														_this367.s5 = null;
														if(_this367.s6 != null) {
															var _this368 = _this367.s6;
															var out174 = _this368.s0;
															if(_this368.l != 0) {
																_this368.s0 = _this368.s1;
																_this368.s1 = _this368.s2;
																_this368.s2 = _this368.s3;
																_this368.s3 = _this368.s4;
																_this368.s4 = _this368.s5;
																_this368.s5 = null;
																if(_this368.s6 != null) {
																	var _this369 = _this368.s6;
																	var out175 = _this369.s0;
																	if(_this369.l != 0) {
																		_this369.s0 = _this369.s1;
																		_this369.s1 = _this369.s2;
																		_this369.s2 = _this369.s3;
																		_this369.s3 = _this369.s4;
																		_this369.s4 = _this369.s5;
																		_this369.s5 = null;
																		if(_this369.s6 != null) {
																			_this369.s5 = _this369.s6.shift();
																		}
																		_this369.l--;
																	}
																	_this368.s5 = out175;
																}
																_this368.l--;
															}
															_this367.s5 = out174;
														}
														_this367.l--;
													}
													_this366.s5 = out173;
												}
												_this366.l--;
											}
											_this365.s5 = out172;
										}
										_this365.l--;
									}
									_this364.s5 = out171;
								}
								_this364.l--;
							}
							_this363.s5 = out170;
						}
						_this363.l--;
					}
					this.lastX = out169;
					var _this370 = this.store;
					var out176 = _this370.s0;
					if(_this370.l != 0) {
						_this370.s0 = _this370.s1;
						_this370.s1 = _this370.s2;
						_this370.s2 = _this370.s3;
						_this370.s3 = _this370.s4;
						_this370.s4 = _this370.s5;
						_this370.s5 = null;
						if(_this370.s6 != null) {
							var _this371 = _this370.s6;
							var out177 = _this371.s0;
							if(_this371.l != 0) {
								_this371.s0 = _this371.s1;
								_this371.s1 = _this371.s2;
								_this371.s2 = _this371.s3;
								_this371.s3 = _this371.s4;
								_this371.s4 = _this371.s5;
								_this371.s5 = null;
								if(_this371.s6 != null) {
									var _this372 = _this371.s6;
									var out178 = _this372.s0;
									if(_this372.l != 0) {
										_this372.s0 = _this372.s1;
										_this372.s1 = _this372.s2;
										_this372.s2 = _this372.s3;
										_this372.s3 = _this372.s4;
										_this372.s4 = _this372.s5;
										_this372.s5 = null;
										if(_this372.s6 != null) {
											var _this373 = _this372.s6;
											var out179 = _this373.s0;
											if(_this373.l != 0) {
												_this373.s0 = _this373.s1;
												_this373.s1 = _this373.s2;
												_this373.s2 = _this373.s3;
												_this373.s3 = _this373.s4;
												_this373.s4 = _this373.s5;
												_this373.s5 = null;
												if(_this373.s6 != null) {
													var _this374 = _this373.s6;
													var out180 = _this374.s0;
													if(_this374.l != 0) {
														_this374.s0 = _this374.s1;
														_this374.s1 = _this374.s2;
														_this374.s2 = _this374.s3;
														_this374.s3 = _this374.s4;
														_this374.s4 = _this374.s5;
														_this374.s5 = null;
														if(_this374.s6 != null) {
															var _this375 = _this374.s6;
															var out181 = _this375.s0;
															if(_this375.l != 0) {
																_this375.s0 = _this375.s1;
																_this375.s1 = _this375.s2;
																_this375.s2 = _this375.s3;
																_this375.s3 = _this375.s4;
																_this375.s4 = _this375.s5;
																_this375.s5 = null;
																if(_this375.s6 != null) {
																	var _this376 = _this375.s6;
																	var out182 = _this376.s0;
																	if(_this376.l != 0) {
																		_this376.s0 = _this376.s1;
																		_this376.s1 = _this376.s2;
																		_this376.s2 = _this376.s3;
																		_this376.s3 = _this376.s4;
																		_this376.s4 = _this376.s5;
																		_this376.s5 = null;
																		if(_this376.s6 != null) {
																			_this376.s5 = _this376.s6.shift();
																		}
																		_this376.l--;
																	}
																	_this375.s5 = out182;
																}
																_this375.l--;
															}
															_this374.s5 = out181;
														}
														_this374.l--;
													}
													_this373.s5 = out180;
												}
												_this373.l--;
											}
											_this372.s5 = out179;
										}
										_this372.l--;
									}
									_this371.s5 = out178;
								}
								_this371.l--;
							}
							_this370.s5 = out177;
						}
						_this370.l--;
					}
					this.lastY = out176;
					this.pathContext.moveTo(this.lastX,this.lastY);
					while(this.store.l > 1) {
						var _this377 = this.store;
						var out183 = _this377.s0;
						if(_this377.l != 0) {
							_this377.s0 = _this377.s1;
							_this377.s1 = _this377.s2;
							_this377.s2 = _this377.s3;
							_this377.s3 = _this377.s4;
							_this377.s4 = _this377.s5;
							_this377.s5 = null;
							if(_this377.s6 != null) {
								var _this378 = _this377.s6;
								var out184 = _this378.s0;
								if(_this378.l != 0) {
									_this378.s0 = _this378.s1;
									_this378.s1 = _this378.s2;
									_this378.s2 = _this378.s3;
									_this378.s3 = _this378.s4;
									_this378.s4 = _this378.s5;
									_this378.s5 = null;
									if(_this378.s6 != null) {
										var _this379 = _this378.s6;
										var out185 = _this379.s0;
										if(_this379.l != 0) {
											_this379.s0 = _this379.s1;
											_this379.s1 = _this379.s2;
											_this379.s2 = _this379.s3;
											_this379.s3 = _this379.s4;
											_this379.s4 = _this379.s5;
											_this379.s5 = null;
											if(_this379.s6 != null) {
												var _this380 = _this379.s6;
												var out186 = _this380.s0;
												if(_this380.l != 0) {
													_this380.s0 = _this380.s1;
													_this380.s1 = _this380.s2;
													_this380.s2 = _this380.s3;
													_this380.s3 = _this380.s4;
													_this380.s4 = _this380.s5;
													_this380.s5 = null;
													if(_this380.s6 != null) {
														var _this381 = _this380.s6;
														var out187 = _this381.s0;
														if(_this381.l != 0) {
															_this381.s0 = _this381.s1;
															_this381.s1 = _this381.s2;
															_this381.s2 = _this381.s3;
															_this381.s3 = _this381.s4;
															_this381.s4 = _this381.s5;
															_this381.s5 = null;
															if(_this381.s6 != null) {
																var _this382 = _this381.s6;
																var out188 = _this382.s0;
																if(_this382.l != 0) {
																	_this382.s0 = _this382.s1;
																	_this382.s1 = _this382.s2;
																	_this382.s2 = _this382.s3;
																	_this382.s3 = _this382.s4;
																	_this382.s4 = _this382.s5;
																	_this382.s5 = null;
																	if(_this382.s6 != null) {
																		var _this383 = _this382.s6;
																		var out189 = _this383.s0;
																		if(_this383.l != 0) {
																			_this383.s0 = _this383.s1;
																			_this383.s1 = _this383.s2;
																			_this383.s2 = _this383.s3;
																			_this383.s3 = _this383.s4;
																			_this383.s4 = _this383.s5;
																			_this383.s5 = null;
																			if(_this383.s6 != null) {
																				_this383.s5 = _this383.s6.shift();
																			}
																			_this383.l--;
																		}
																		_this382.s5 = out189;
																	}
																	_this382.l--;
																}
																_this381.s5 = out188;
															}
															_this381.l--;
														}
														_this380.s5 = out187;
													}
													_this380.l--;
												}
												_this379.s5 = out186;
											}
											_this379.l--;
										}
										_this378.s5 = out185;
									}
									_this378.l--;
								}
								_this377.s5 = out184;
							}
							_this377.l--;
						}
						this.lastX = out183;
						var _this384 = this.store;
						var out190 = _this384.s0;
						if(_this384.l != 0) {
							_this384.s0 = _this384.s1;
							_this384.s1 = _this384.s2;
							_this384.s2 = _this384.s3;
							_this384.s3 = _this384.s4;
							_this384.s4 = _this384.s5;
							_this384.s5 = null;
							if(_this384.s6 != null) {
								var _this385 = _this384.s6;
								var out191 = _this385.s0;
								if(_this385.l != 0) {
									_this385.s0 = _this385.s1;
									_this385.s1 = _this385.s2;
									_this385.s2 = _this385.s3;
									_this385.s3 = _this385.s4;
									_this385.s4 = _this385.s5;
									_this385.s5 = null;
									if(_this385.s6 != null) {
										var _this386 = _this385.s6;
										var out192 = _this386.s0;
										if(_this386.l != 0) {
											_this386.s0 = _this386.s1;
											_this386.s1 = _this386.s2;
											_this386.s2 = _this386.s3;
											_this386.s3 = _this386.s4;
											_this386.s4 = _this386.s5;
											_this386.s5 = null;
											if(_this386.s6 != null) {
												var _this387 = _this386.s6;
												var out193 = _this387.s0;
												if(_this387.l != 0) {
													_this387.s0 = _this387.s1;
													_this387.s1 = _this387.s2;
													_this387.s2 = _this387.s3;
													_this387.s3 = _this387.s4;
													_this387.s4 = _this387.s5;
													_this387.s5 = null;
													if(_this387.s6 != null) {
														var _this388 = _this387.s6;
														var out194 = _this388.s0;
														if(_this388.l != 0) {
															_this388.s0 = _this388.s1;
															_this388.s1 = _this388.s2;
															_this388.s2 = _this388.s3;
															_this388.s3 = _this388.s4;
															_this388.s4 = _this388.s5;
															_this388.s5 = null;
															if(_this388.s6 != null) {
																var _this389 = _this388.s6;
																var out195 = _this389.s0;
																if(_this389.l != 0) {
																	_this389.s0 = _this389.s1;
																	_this389.s1 = _this389.s2;
																	_this389.s2 = _this389.s3;
																	_this389.s3 = _this389.s4;
																	_this389.s4 = _this389.s5;
																	_this389.s5 = null;
																	if(_this389.s6 != null) {
																		var _this390 = _this389.s6;
																		var out196 = _this390.s0;
																		if(_this390.l != 0) {
																			_this390.s0 = _this390.s1;
																			_this390.s1 = _this390.s2;
																			_this390.s2 = _this390.s3;
																			_this390.s3 = _this390.s4;
																			_this390.s4 = _this390.s5;
																			_this390.s5 = null;
																			if(_this390.s6 != null) {
																				_this390.s5 = _this390.s6.shift();
																			}
																			_this390.l--;
																		}
																		_this389.s5 = out196;
																	}
																	_this389.l--;
																}
																_this388.s5 = out195;
															}
															_this388.l--;
														}
														_this387.s5 = out194;
													}
													_this387.l--;
												}
												_this386.s5 = out193;
											}
											_this386.l--;
										}
										_this385.s5 = out192;
									}
									_this385.l--;
								}
								_this384.s5 = out191;
							}
							_this384.l--;
						}
						this.lastY = out190;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 81:
				var _this391 = this.store;
				_this391.l = 0;
				_this391.s0 = null;
				_this391.s1 = null;
				_this391.s2 = null;
				_this391.s3 = null;
				_this391.s4 = null;
				_this391.s5 = null;
				_this391.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count6 = 0;
				var temp5 = "";
				var exit5 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp5 != "") {
							if((this.store.l & 1) == 0) {
								var _this392 = this.store;
								var v27 = parseFloat(temp5);
								switch(_this392.l) {
								case 0:
									_this392.s0 = v27;
									break;
								case 1:
									_this392.s1 = v27;
									break;
								case 2:
									_this392.s2 = v27;
									break;
								case 3:
									_this392.s3 = v27;
									break;
								case 4:
									_this392.s4 = v27;
									break;
								case 5:
									_this392.s5 = v27;
									break;
								default:
									if(_this392.s6 == null) {
										_this392.s6 = new trilateral_justPath_StoreF6();
									}
									var _this393 = _this392.s6;
									switch(_this393.l) {
									case 0:
										_this393.s0 = v27;
										break;
									case 1:
										_this393.s1 = v27;
										break;
									case 2:
										_this393.s2 = v27;
										break;
									case 3:
										_this393.s3 = v27;
										break;
									case 4:
										_this393.s4 = v27;
										break;
									case 5:
										_this393.s5 = v27;
										break;
									default:
										if(_this393.s6 == null) {
											_this393.s6 = new trilateral_justPath_StoreF6();
										}
										var _this394 = _this393.s6;
										switch(_this394.l) {
										case 0:
											_this394.s0 = v27;
											break;
										case 1:
											_this394.s1 = v27;
											break;
										case 2:
											_this394.s2 = v27;
											break;
										case 3:
											_this394.s3 = v27;
											break;
										case 4:
											_this394.s4 = v27;
											break;
										case 5:
											_this394.s5 = v27;
											break;
										default:
											if(_this394.s6 == null) {
												_this394.s6 = new trilateral_justPath_StoreF6();
											}
											var _this395 = _this394.s6;
											switch(_this395.l) {
											case 0:
												_this395.s0 = v27;
												break;
											case 1:
												_this395.s1 = v27;
												break;
											case 2:
												_this395.s2 = v27;
												break;
											case 3:
												_this395.s3 = v27;
												break;
											case 4:
												_this395.s4 = v27;
												break;
											case 5:
												_this395.s5 = v27;
												break;
											default:
												if(_this395.s6 == null) {
													_this395.s6 = new trilateral_justPath_StoreF6();
												}
												var _this396 = _this395.s6;
												switch(_this396.l) {
												case 0:
													_this396.s0 = v27;
													break;
												case 1:
													_this396.s1 = v27;
													break;
												case 2:
													_this396.s2 = v27;
													break;
												case 3:
													_this396.s3 = v27;
													break;
												case 4:
													_this396.s4 = v27;
													break;
												case 5:
													_this396.s5 = v27;
													break;
												default:
													if(_this396.s6 == null) {
														_this396.s6 = new trilateral_justPath_StoreF6();
													}
													var _this397 = _this396.s6;
													switch(_this397.l) {
													case 0:
														_this397.s0 = v27;
														break;
													case 1:
														_this397.s1 = v27;
														break;
													case 2:
														_this397.s2 = v27;
														break;
													case 3:
														_this397.s3 = v27;
														break;
													case 4:
														_this397.s4 = v27;
														break;
													case 5:
														_this397.s5 = v27;
														break;
													default:
														if(_this397.s6 == null) {
															_this397.s6 = new trilateral_justPath_StoreF6();
														}
														var _this398 = _this397.s6;
														switch(_this398.l) {
														case 0:
															_this398.s0 = v27;
															break;
														case 1:
															_this398.s1 = v27;
															break;
														case 2:
															_this398.s2 = v27;
															break;
														case 3:
															_this398.s3 = v27;
															break;
														case 4:
															_this398.s4 = v27;
															break;
														case 5:
															_this398.s5 = v27;
															break;
														default:
															if(_this398.s6 == null) {
																_this398.s6 = new trilateral_justPath_StoreF6();
															}
															_this398.s6.push(v27);
														}
														_this398.l++;
													}
													_this397.l++;
												}
												_this396.l++;
											}
											_this395.l++;
										}
										_this394.l++;
									}
									_this393.l++;
								}
								_this392.l++;
							} else {
								var _this399 = this.store;
								var v28 = parseFloat(temp5);
								switch(_this399.l) {
								case 0:
									_this399.s0 = v28;
									break;
								case 1:
									_this399.s1 = v28;
									break;
								case 2:
									_this399.s2 = v28;
									break;
								case 3:
									_this399.s3 = v28;
									break;
								case 4:
									_this399.s4 = v28;
									break;
								case 5:
									_this399.s5 = v28;
									break;
								default:
									if(_this399.s6 == null) {
										_this399.s6 = new trilateral_justPath_StoreF6();
									}
									var _this400 = _this399.s6;
									switch(_this400.l) {
									case 0:
										_this400.s0 = v28;
										break;
									case 1:
										_this400.s1 = v28;
										break;
									case 2:
										_this400.s2 = v28;
										break;
									case 3:
										_this400.s3 = v28;
										break;
									case 4:
										_this400.s4 = v28;
										break;
									case 5:
										_this400.s5 = v28;
										break;
									default:
										if(_this400.s6 == null) {
											_this400.s6 = new trilateral_justPath_StoreF6();
										}
										var _this401 = _this400.s6;
										switch(_this401.l) {
										case 0:
											_this401.s0 = v28;
											break;
										case 1:
											_this401.s1 = v28;
											break;
										case 2:
											_this401.s2 = v28;
											break;
										case 3:
											_this401.s3 = v28;
											break;
										case 4:
											_this401.s4 = v28;
											break;
										case 5:
											_this401.s5 = v28;
											break;
										default:
											if(_this401.s6 == null) {
												_this401.s6 = new trilateral_justPath_StoreF6();
											}
											var _this402 = _this401.s6;
											switch(_this402.l) {
											case 0:
												_this402.s0 = v28;
												break;
											case 1:
												_this402.s1 = v28;
												break;
											case 2:
												_this402.s2 = v28;
												break;
											case 3:
												_this402.s3 = v28;
												break;
											case 4:
												_this402.s4 = v28;
												break;
											case 5:
												_this402.s5 = v28;
												break;
											default:
												if(_this402.s6 == null) {
													_this402.s6 = new trilateral_justPath_StoreF6();
												}
												var _this403 = _this402.s6;
												switch(_this403.l) {
												case 0:
													_this403.s0 = v28;
													break;
												case 1:
													_this403.s1 = v28;
													break;
												case 2:
													_this403.s2 = v28;
													break;
												case 3:
													_this403.s3 = v28;
													break;
												case 4:
													_this403.s4 = v28;
													break;
												case 5:
													_this403.s5 = v28;
													break;
												default:
													if(_this403.s6 == null) {
														_this403.s6 = new trilateral_justPath_StoreF6();
													}
													var _this404 = _this403.s6;
													switch(_this404.l) {
													case 0:
														_this404.s0 = v28;
														break;
													case 1:
														_this404.s1 = v28;
														break;
													case 2:
														_this404.s2 = v28;
														break;
													case 3:
														_this404.s3 = v28;
														break;
													case 4:
														_this404.s4 = v28;
														break;
													case 5:
														_this404.s5 = v28;
														break;
													default:
														if(_this404.s6 == null) {
															_this404.s6 = new trilateral_justPath_StoreF6();
														}
														var _this405 = _this404.s6;
														switch(_this405.l) {
														case 0:
															_this405.s0 = v28;
															break;
														case 1:
															_this405.s1 = v28;
															break;
														case 2:
															_this405.s2 = v28;
															break;
														case 3:
															_this405.s3 = v28;
															break;
														case 4:
															_this405.s4 = v28;
															break;
														case 5:
															_this405.s5 = v28;
															break;
														default:
															if(_this405.s6 == null) {
																_this405.s6 = new trilateral_justPath_StoreF6();
															}
															_this405.s6.push(v28);
														}
														_this405.l++;
													}
													_this404.l++;
												}
												_this403.l++;
											}
											_this402.l++;
										}
										_this401.l++;
									}
									_this400.l++;
								}
								_this399.l++;
							}
							temp5 = "";
						}
						break;
					case 45:
						if(temp5 != "") {
							if((this.store.l & 1) == 0) {
								var _this406 = this.store;
								var v29 = parseFloat(temp5);
								switch(_this406.l) {
								case 0:
									_this406.s0 = v29;
									break;
								case 1:
									_this406.s1 = v29;
									break;
								case 2:
									_this406.s2 = v29;
									break;
								case 3:
									_this406.s3 = v29;
									break;
								case 4:
									_this406.s4 = v29;
									break;
								case 5:
									_this406.s5 = v29;
									break;
								default:
									if(_this406.s6 == null) {
										_this406.s6 = new trilateral_justPath_StoreF6();
									}
									var _this407 = _this406.s6;
									switch(_this407.l) {
									case 0:
										_this407.s0 = v29;
										break;
									case 1:
										_this407.s1 = v29;
										break;
									case 2:
										_this407.s2 = v29;
										break;
									case 3:
										_this407.s3 = v29;
										break;
									case 4:
										_this407.s4 = v29;
										break;
									case 5:
										_this407.s5 = v29;
										break;
									default:
										if(_this407.s6 == null) {
											_this407.s6 = new trilateral_justPath_StoreF6();
										}
										var _this408 = _this407.s6;
										switch(_this408.l) {
										case 0:
											_this408.s0 = v29;
											break;
										case 1:
											_this408.s1 = v29;
											break;
										case 2:
											_this408.s2 = v29;
											break;
										case 3:
											_this408.s3 = v29;
											break;
										case 4:
											_this408.s4 = v29;
											break;
										case 5:
											_this408.s5 = v29;
											break;
										default:
											if(_this408.s6 == null) {
												_this408.s6 = new trilateral_justPath_StoreF6();
											}
											var _this409 = _this408.s6;
											switch(_this409.l) {
											case 0:
												_this409.s0 = v29;
												break;
											case 1:
												_this409.s1 = v29;
												break;
											case 2:
												_this409.s2 = v29;
												break;
											case 3:
												_this409.s3 = v29;
												break;
											case 4:
												_this409.s4 = v29;
												break;
											case 5:
												_this409.s5 = v29;
												break;
											default:
												if(_this409.s6 == null) {
													_this409.s6 = new trilateral_justPath_StoreF6();
												}
												var _this410 = _this409.s6;
												switch(_this410.l) {
												case 0:
													_this410.s0 = v29;
													break;
												case 1:
													_this410.s1 = v29;
													break;
												case 2:
													_this410.s2 = v29;
													break;
												case 3:
													_this410.s3 = v29;
													break;
												case 4:
													_this410.s4 = v29;
													break;
												case 5:
													_this410.s5 = v29;
													break;
												default:
													if(_this410.s6 == null) {
														_this410.s6 = new trilateral_justPath_StoreF6();
													}
													var _this411 = _this410.s6;
													switch(_this411.l) {
													case 0:
														_this411.s0 = v29;
														break;
													case 1:
														_this411.s1 = v29;
														break;
													case 2:
														_this411.s2 = v29;
														break;
													case 3:
														_this411.s3 = v29;
														break;
													case 4:
														_this411.s4 = v29;
														break;
													case 5:
														_this411.s5 = v29;
														break;
													default:
														if(_this411.s6 == null) {
															_this411.s6 = new trilateral_justPath_StoreF6();
														}
														var _this412 = _this411.s6;
														switch(_this412.l) {
														case 0:
															_this412.s0 = v29;
															break;
														case 1:
															_this412.s1 = v29;
															break;
														case 2:
															_this412.s2 = v29;
															break;
														case 3:
															_this412.s3 = v29;
															break;
														case 4:
															_this412.s4 = v29;
															break;
														case 5:
															_this412.s5 = v29;
															break;
														default:
															if(_this412.s6 == null) {
																_this412.s6 = new trilateral_justPath_StoreF6();
															}
															_this412.s6.push(v29);
														}
														_this412.l++;
													}
													_this411.l++;
												}
												_this410.l++;
											}
											_this409.l++;
										}
										_this408.l++;
									}
									_this407.l++;
								}
								_this406.l++;
							} else {
								var _this413 = this.store;
								var v30 = parseFloat(temp5);
								switch(_this413.l) {
								case 0:
									_this413.s0 = v30;
									break;
								case 1:
									_this413.s1 = v30;
									break;
								case 2:
									_this413.s2 = v30;
									break;
								case 3:
									_this413.s3 = v30;
									break;
								case 4:
									_this413.s4 = v30;
									break;
								case 5:
									_this413.s5 = v30;
									break;
								default:
									if(_this413.s6 == null) {
										_this413.s6 = new trilateral_justPath_StoreF6();
									}
									var _this414 = _this413.s6;
									switch(_this414.l) {
									case 0:
										_this414.s0 = v30;
										break;
									case 1:
										_this414.s1 = v30;
										break;
									case 2:
										_this414.s2 = v30;
										break;
									case 3:
										_this414.s3 = v30;
										break;
									case 4:
										_this414.s4 = v30;
										break;
									case 5:
										_this414.s5 = v30;
										break;
									default:
										if(_this414.s6 == null) {
											_this414.s6 = new trilateral_justPath_StoreF6();
										}
										var _this415 = _this414.s6;
										switch(_this415.l) {
										case 0:
											_this415.s0 = v30;
											break;
										case 1:
											_this415.s1 = v30;
											break;
										case 2:
											_this415.s2 = v30;
											break;
										case 3:
											_this415.s3 = v30;
											break;
										case 4:
											_this415.s4 = v30;
											break;
										case 5:
											_this415.s5 = v30;
											break;
										default:
											if(_this415.s6 == null) {
												_this415.s6 = new trilateral_justPath_StoreF6();
											}
											var _this416 = _this415.s6;
											switch(_this416.l) {
											case 0:
												_this416.s0 = v30;
												break;
											case 1:
												_this416.s1 = v30;
												break;
											case 2:
												_this416.s2 = v30;
												break;
											case 3:
												_this416.s3 = v30;
												break;
											case 4:
												_this416.s4 = v30;
												break;
											case 5:
												_this416.s5 = v30;
												break;
											default:
												if(_this416.s6 == null) {
													_this416.s6 = new trilateral_justPath_StoreF6();
												}
												var _this417 = _this416.s6;
												switch(_this417.l) {
												case 0:
													_this417.s0 = v30;
													break;
												case 1:
													_this417.s1 = v30;
													break;
												case 2:
													_this417.s2 = v30;
													break;
												case 3:
													_this417.s3 = v30;
													break;
												case 4:
													_this417.s4 = v30;
													break;
												case 5:
													_this417.s5 = v30;
													break;
												default:
													if(_this417.s6 == null) {
														_this417.s6 = new trilateral_justPath_StoreF6();
													}
													var _this418 = _this417.s6;
													switch(_this418.l) {
													case 0:
														_this418.s0 = v30;
														break;
													case 1:
														_this418.s1 = v30;
														break;
													case 2:
														_this418.s2 = v30;
														break;
													case 3:
														_this418.s3 = v30;
														break;
													case 4:
														_this418.s4 = v30;
														break;
													case 5:
														_this418.s5 = v30;
														break;
													default:
														if(_this418.s6 == null) {
															_this418.s6 = new trilateral_justPath_StoreF6();
														}
														var _this419 = _this418.s6;
														switch(_this419.l) {
														case 0:
															_this419.s0 = v30;
															break;
														case 1:
															_this419.s1 = v30;
															break;
														case 2:
															_this419.s2 = v30;
															break;
														case 3:
															_this419.s3 = v30;
															break;
														case 4:
															_this419.s4 = v30;
															break;
														case 5:
															_this419.s5 = v30;
															break;
														default:
															if(_this419.s6 == null) {
																_this419.s6 = new trilateral_justPath_StoreF6();
															}
															_this419.s6.push(v30);
														}
														_this419.l++;
													}
													_this418.l++;
												}
												_this417.l++;
											}
											_this416.l++;
										}
										_this415.l++;
									}
									_this414.l++;
								}
								_this413.l++;
							}
						}
						temp5 = "-";
						break;
					case 46:
						temp5 += ".";
						break;
					case 48:
						temp5 += "0";
						break;
					case 49:
						temp5 += "1";
						break;
					case 50:
						temp5 += "2";
						break;
					case 51:
						temp5 += "3";
						break;
					case 52:
						temp5 += "4";
						break;
					case 53:
						temp5 += "5";
						break;
					case 54:
						temp5 += "6";
						break;
					case 55:
						temp5 += "7";
						break;
					case 56:
						temp5 += "8";
						break;
					case 57:
						temp5 += "9";
						break;
					default:
						if(temp5 != "") {
							if((this.store.l & 1) == 0) {
								var _this420 = this.store;
								var v31 = parseFloat(temp5);
								switch(_this420.l) {
								case 0:
									_this420.s0 = v31;
									break;
								case 1:
									_this420.s1 = v31;
									break;
								case 2:
									_this420.s2 = v31;
									break;
								case 3:
									_this420.s3 = v31;
									break;
								case 4:
									_this420.s4 = v31;
									break;
								case 5:
									_this420.s5 = v31;
									break;
								default:
									if(_this420.s6 == null) {
										_this420.s6 = new trilateral_justPath_StoreF6();
									}
									var _this421 = _this420.s6;
									switch(_this421.l) {
									case 0:
										_this421.s0 = v31;
										break;
									case 1:
										_this421.s1 = v31;
										break;
									case 2:
										_this421.s2 = v31;
										break;
									case 3:
										_this421.s3 = v31;
										break;
									case 4:
										_this421.s4 = v31;
										break;
									case 5:
										_this421.s5 = v31;
										break;
									default:
										if(_this421.s6 == null) {
											_this421.s6 = new trilateral_justPath_StoreF6();
										}
										var _this422 = _this421.s6;
										switch(_this422.l) {
										case 0:
											_this422.s0 = v31;
											break;
										case 1:
											_this422.s1 = v31;
											break;
										case 2:
											_this422.s2 = v31;
											break;
										case 3:
											_this422.s3 = v31;
											break;
										case 4:
											_this422.s4 = v31;
											break;
										case 5:
											_this422.s5 = v31;
											break;
										default:
											if(_this422.s6 == null) {
												_this422.s6 = new trilateral_justPath_StoreF6();
											}
											var _this423 = _this422.s6;
											switch(_this423.l) {
											case 0:
												_this423.s0 = v31;
												break;
											case 1:
												_this423.s1 = v31;
												break;
											case 2:
												_this423.s2 = v31;
												break;
											case 3:
												_this423.s3 = v31;
												break;
											case 4:
												_this423.s4 = v31;
												break;
											case 5:
												_this423.s5 = v31;
												break;
											default:
												if(_this423.s6 == null) {
													_this423.s6 = new trilateral_justPath_StoreF6();
												}
												var _this424 = _this423.s6;
												switch(_this424.l) {
												case 0:
													_this424.s0 = v31;
													break;
												case 1:
													_this424.s1 = v31;
													break;
												case 2:
													_this424.s2 = v31;
													break;
												case 3:
													_this424.s3 = v31;
													break;
												case 4:
													_this424.s4 = v31;
													break;
												case 5:
													_this424.s5 = v31;
													break;
												default:
													if(_this424.s6 == null) {
														_this424.s6 = new trilateral_justPath_StoreF6();
													}
													var _this425 = _this424.s6;
													switch(_this425.l) {
													case 0:
														_this425.s0 = v31;
														break;
													case 1:
														_this425.s1 = v31;
														break;
													case 2:
														_this425.s2 = v31;
														break;
													case 3:
														_this425.s3 = v31;
														break;
													case 4:
														_this425.s4 = v31;
														break;
													case 5:
														_this425.s5 = v31;
														break;
													default:
														if(_this425.s6 == null) {
															_this425.s6 = new trilateral_justPath_StoreF6();
														}
														var _this426 = _this425.s6;
														switch(_this426.l) {
														case 0:
															_this426.s0 = v31;
															break;
														case 1:
															_this426.s1 = v31;
															break;
														case 2:
															_this426.s2 = v31;
															break;
														case 3:
															_this426.s3 = v31;
															break;
														case 4:
															_this426.s4 = v31;
															break;
														case 5:
															_this426.s5 = v31;
															break;
														default:
															if(_this426.s6 == null) {
																_this426.s6 = new trilateral_justPath_StoreF6();
															}
															_this426.s6.push(v31);
														}
														_this426.l++;
													}
													_this425.l++;
												}
												_this424.l++;
											}
											_this423.l++;
										}
										_this422.l++;
									}
									_this421.l++;
								}
								_this420.l++;
							} else {
								var _this427 = this.store;
								var v32 = parseFloat(temp5);
								switch(_this427.l) {
								case 0:
									_this427.s0 = v32;
									break;
								case 1:
									_this427.s1 = v32;
									break;
								case 2:
									_this427.s2 = v32;
									break;
								case 3:
									_this427.s3 = v32;
									break;
								case 4:
									_this427.s4 = v32;
									break;
								case 5:
									_this427.s5 = v32;
									break;
								default:
									if(_this427.s6 == null) {
										_this427.s6 = new trilateral_justPath_StoreF6();
									}
									var _this428 = _this427.s6;
									switch(_this428.l) {
									case 0:
										_this428.s0 = v32;
										break;
									case 1:
										_this428.s1 = v32;
										break;
									case 2:
										_this428.s2 = v32;
										break;
									case 3:
										_this428.s3 = v32;
										break;
									case 4:
										_this428.s4 = v32;
										break;
									case 5:
										_this428.s5 = v32;
										break;
									default:
										if(_this428.s6 == null) {
											_this428.s6 = new trilateral_justPath_StoreF6();
										}
										var _this429 = _this428.s6;
										switch(_this429.l) {
										case 0:
											_this429.s0 = v32;
											break;
										case 1:
											_this429.s1 = v32;
											break;
										case 2:
											_this429.s2 = v32;
											break;
										case 3:
											_this429.s3 = v32;
											break;
										case 4:
											_this429.s4 = v32;
											break;
										case 5:
											_this429.s5 = v32;
											break;
										default:
											if(_this429.s6 == null) {
												_this429.s6 = new trilateral_justPath_StoreF6();
											}
											var _this430 = _this429.s6;
											switch(_this430.l) {
											case 0:
												_this430.s0 = v32;
												break;
											case 1:
												_this430.s1 = v32;
												break;
											case 2:
												_this430.s2 = v32;
												break;
											case 3:
												_this430.s3 = v32;
												break;
											case 4:
												_this430.s4 = v32;
												break;
											case 5:
												_this430.s5 = v32;
												break;
											default:
												if(_this430.s6 == null) {
													_this430.s6 = new trilateral_justPath_StoreF6();
												}
												var _this431 = _this430.s6;
												switch(_this431.l) {
												case 0:
													_this431.s0 = v32;
													break;
												case 1:
													_this431.s1 = v32;
													break;
												case 2:
													_this431.s2 = v32;
													break;
												case 3:
													_this431.s3 = v32;
													break;
												case 4:
													_this431.s4 = v32;
													break;
												case 5:
													_this431.s5 = v32;
													break;
												default:
													if(_this431.s6 == null) {
														_this431.s6 = new trilateral_justPath_StoreF6();
													}
													var _this432 = _this431.s6;
													switch(_this432.l) {
													case 0:
														_this432.s0 = v32;
														break;
													case 1:
														_this432.s1 = v32;
														break;
													case 2:
														_this432.s2 = v32;
														break;
													case 3:
														_this432.s3 = v32;
														break;
													case 4:
														_this432.s4 = v32;
														break;
													case 5:
														_this432.s5 = v32;
														break;
													default:
														if(_this432.s6 == null) {
															_this432.s6 = new trilateral_justPath_StoreF6();
														}
														var _this433 = _this432.s6;
														switch(_this433.l) {
														case 0:
															_this433.s0 = v32;
															break;
														case 1:
															_this433.s1 = v32;
															break;
														case 2:
															_this433.s2 = v32;
															break;
														case 3:
															_this433.s3 = v32;
															break;
														case 4:
															_this433.s4 = v32;
															break;
														case 5:
															_this433.s5 = v32;
															break;
														default:
															if(_this433.s6 == null) {
																_this433.s6 = new trilateral_justPath_StoreF6();
															}
															_this433.s6.push(v32);
														}
														_this433.l++;
													}
													_this432.l++;
												}
												_this431.l++;
											}
											_this430.l++;
										}
										_this429.l++;
									}
									_this428.l++;
								}
								_this427.l++;
							}
							temp5 = "";
						}
						this.pos--;
						exit5 = true;
					}
					if(exit5) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					this.controlX = this.store.s0;
					this.controlY = this.store.s1;
					this.lastX = this.store.s2;
					this.lastY = this.store.s3;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this434 = this.store;
						var out197 = _this434.s0;
						if(_this434.l != 0) {
							_this434.s0 = _this434.s1;
							_this434.s1 = _this434.s2;
							_this434.s2 = _this434.s3;
							_this434.s3 = _this434.s4;
							_this434.s4 = _this434.s5;
							_this434.s5 = null;
							if(_this434.s6 != null) {
								var _this435 = _this434.s6;
								var out198 = _this435.s0;
								if(_this435.l != 0) {
									_this435.s0 = _this435.s1;
									_this435.s1 = _this435.s2;
									_this435.s2 = _this435.s3;
									_this435.s3 = _this435.s4;
									_this435.s4 = _this435.s5;
									_this435.s5 = null;
									if(_this435.s6 != null) {
										var _this436 = _this435.s6;
										var out199 = _this436.s0;
										if(_this436.l != 0) {
											_this436.s0 = _this436.s1;
											_this436.s1 = _this436.s2;
											_this436.s2 = _this436.s3;
											_this436.s3 = _this436.s4;
											_this436.s4 = _this436.s5;
											_this436.s5 = null;
											if(_this436.s6 != null) {
												var _this437 = _this436.s6;
												var out200 = _this437.s0;
												if(_this437.l != 0) {
													_this437.s0 = _this437.s1;
													_this437.s1 = _this437.s2;
													_this437.s2 = _this437.s3;
													_this437.s3 = _this437.s4;
													_this437.s4 = _this437.s5;
													_this437.s5 = null;
													if(_this437.s6 != null) {
														var _this438 = _this437.s6;
														var out201 = _this438.s0;
														if(_this438.l != 0) {
															_this438.s0 = _this438.s1;
															_this438.s1 = _this438.s2;
															_this438.s2 = _this438.s3;
															_this438.s3 = _this438.s4;
															_this438.s4 = _this438.s5;
															_this438.s5 = null;
															if(_this438.s6 != null) {
																var _this439 = _this438.s6;
																var out202 = _this439.s0;
																if(_this439.l != 0) {
																	_this439.s0 = _this439.s1;
																	_this439.s1 = _this439.s2;
																	_this439.s2 = _this439.s3;
																	_this439.s3 = _this439.s4;
																	_this439.s4 = _this439.s5;
																	_this439.s5 = null;
																	if(_this439.s6 != null) {
																		var _this440 = _this439.s6;
																		var out203 = _this440.s0;
																		if(_this440.l != 0) {
																			_this440.s0 = _this440.s1;
																			_this440.s1 = _this440.s2;
																			_this440.s2 = _this440.s3;
																			_this440.s3 = _this440.s4;
																			_this440.s4 = _this440.s5;
																			_this440.s5 = null;
																			if(_this440.s6 != null) {
																				_this440.s5 = _this440.s6.shift();
																			}
																			_this440.l--;
																		}
																		_this439.s5 = out203;
																	}
																	_this439.l--;
																}
																_this438.s5 = out202;
															}
															_this438.l--;
														}
														_this437.s5 = out201;
													}
													_this437.l--;
												}
												_this436.s5 = out200;
											}
											_this436.l--;
										}
										_this435.s5 = out199;
									}
									_this435.l--;
								}
								_this434.s5 = out198;
							}
							_this434.l--;
						}
						this.controlX = out197;
						var _this441 = this.store;
						var out204 = _this441.s0;
						if(_this441.l != 0) {
							_this441.s0 = _this441.s1;
							_this441.s1 = _this441.s2;
							_this441.s2 = _this441.s3;
							_this441.s3 = _this441.s4;
							_this441.s4 = _this441.s5;
							_this441.s5 = null;
							if(_this441.s6 != null) {
								var _this442 = _this441.s6;
								var out205 = _this442.s0;
								if(_this442.l != 0) {
									_this442.s0 = _this442.s1;
									_this442.s1 = _this442.s2;
									_this442.s2 = _this442.s3;
									_this442.s3 = _this442.s4;
									_this442.s4 = _this442.s5;
									_this442.s5 = null;
									if(_this442.s6 != null) {
										var _this443 = _this442.s6;
										var out206 = _this443.s0;
										if(_this443.l != 0) {
											_this443.s0 = _this443.s1;
											_this443.s1 = _this443.s2;
											_this443.s2 = _this443.s3;
											_this443.s3 = _this443.s4;
											_this443.s4 = _this443.s5;
											_this443.s5 = null;
											if(_this443.s6 != null) {
												var _this444 = _this443.s6;
												var out207 = _this444.s0;
												if(_this444.l != 0) {
													_this444.s0 = _this444.s1;
													_this444.s1 = _this444.s2;
													_this444.s2 = _this444.s3;
													_this444.s3 = _this444.s4;
													_this444.s4 = _this444.s5;
													_this444.s5 = null;
													if(_this444.s6 != null) {
														var _this445 = _this444.s6;
														var out208 = _this445.s0;
														if(_this445.l != 0) {
															_this445.s0 = _this445.s1;
															_this445.s1 = _this445.s2;
															_this445.s2 = _this445.s3;
															_this445.s3 = _this445.s4;
															_this445.s4 = _this445.s5;
															_this445.s5 = null;
															if(_this445.s6 != null) {
																var _this446 = _this445.s6;
																var out209 = _this446.s0;
																if(_this446.l != 0) {
																	_this446.s0 = _this446.s1;
																	_this446.s1 = _this446.s2;
																	_this446.s2 = _this446.s3;
																	_this446.s3 = _this446.s4;
																	_this446.s4 = _this446.s5;
																	_this446.s5 = null;
																	if(_this446.s6 != null) {
																		var _this447 = _this446.s6;
																		var out210 = _this447.s0;
																		if(_this447.l != 0) {
																			_this447.s0 = _this447.s1;
																			_this447.s1 = _this447.s2;
																			_this447.s2 = _this447.s3;
																			_this447.s3 = _this447.s4;
																			_this447.s4 = _this447.s5;
																			_this447.s5 = null;
																			if(_this447.s6 != null) {
																				_this447.s5 = _this447.s6.shift();
																			}
																			_this447.l--;
																		}
																		_this446.s5 = out210;
																	}
																	_this446.l--;
																}
																_this445.s5 = out209;
															}
															_this445.l--;
														}
														_this444.s5 = out208;
													}
													_this444.l--;
												}
												_this443.s5 = out207;
											}
											_this443.l--;
										}
										_this442.s5 = out206;
									}
									_this442.l--;
								}
								_this441.s5 = out205;
							}
							_this441.l--;
						}
						this.controlY = out204;
						var _this448 = this.store;
						var out211 = _this448.s0;
						if(_this448.l != 0) {
							_this448.s0 = _this448.s1;
							_this448.s1 = _this448.s2;
							_this448.s2 = _this448.s3;
							_this448.s3 = _this448.s4;
							_this448.s4 = _this448.s5;
							_this448.s5 = null;
							if(_this448.s6 != null) {
								var _this449 = _this448.s6;
								var out212 = _this449.s0;
								if(_this449.l != 0) {
									_this449.s0 = _this449.s1;
									_this449.s1 = _this449.s2;
									_this449.s2 = _this449.s3;
									_this449.s3 = _this449.s4;
									_this449.s4 = _this449.s5;
									_this449.s5 = null;
									if(_this449.s6 != null) {
										var _this450 = _this449.s6;
										var out213 = _this450.s0;
										if(_this450.l != 0) {
											_this450.s0 = _this450.s1;
											_this450.s1 = _this450.s2;
											_this450.s2 = _this450.s3;
											_this450.s3 = _this450.s4;
											_this450.s4 = _this450.s5;
											_this450.s5 = null;
											if(_this450.s6 != null) {
												var _this451 = _this450.s6;
												var out214 = _this451.s0;
												if(_this451.l != 0) {
													_this451.s0 = _this451.s1;
													_this451.s1 = _this451.s2;
													_this451.s2 = _this451.s3;
													_this451.s3 = _this451.s4;
													_this451.s4 = _this451.s5;
													_this451.s5 = null;
													if(_this451.s6 != null) {
														var _this452 = _this451.s6;
														var out215 = _this452.s0;
														if(_this452.l != 0) {
															_this452.s0 = _this452.s1;
															_this452.s1 = _this452.s2;
															_this452.s2 = _this452.s3;
															_this452.s3 = _this452.s4;
															_this452.s4 = _this452.s5;
															_this452.s5 = null;
															if(_this452.s6 != null) {
																var _this453 = _this452.s6;
																var out216 = _this453.s0;
																if(_this453.l != 0) {
																	_this453.s0 = _this453.s1;
																	_this453.s1 = _this453.s2;
																	_this453.s2 = _this453.s3;
																	_this453.s3 = _this453.s4;
																	_this453.s4 = _this453.s5;
																	_this453.s5 = null;
																	if(_this453.s6 != null) {
																		var _this454 = _this453.s6;
																		var out217 = _this454.s0;
																		if(_this454.l != 0) {
																			_this454.s0 = _this454.s1;
																			_this454.s1 = _this454.s2;
																			_this454.s2 = _this454.s3;
																			_this454.s3 = _this454.s4;
																			_this454.s4 = _this454.s5;
																			_this454.s5 = null;
																			if(_this454.s6 != null) {
																				_this454.s5 = _this454.s6.shift();
																			}
																			_this454.l--;
																		}
																		_this453.s5 = out217;
																	}
																	_this453.l--;
																}
																_this452.s5 = out216;
															}
															_this452.l--;
														}
														_this451.s5 = out215;
													}
													_this451.l--;
												}
												_this450.s5 = out214;
											}
											_this450.l--;
										}
										_this449.s5 = out213;
									}
									_this449.l--;
								}
								_this448.s5 = out212;
							}
							_this448.l--;
						}
						this.lastX = out211;
						var _this455 = this.store;
						var out218 = _this455.s0;
						if(_this455.l != 0) {
							_this455.s0 = _this455.s1;
							_this455.s1 = _this455.s2;
							_this455.s2 = _this455.s3;
							_this455.s3 = _this455.s4;
							_this455.s4 = _this455.s5;
							_this455.s5 = null;
							if(_this455.s6 != null) {
								var _this456 = _this455.s6;
								var out219 = _this456.s0;
								if(_this456.l != 0) {
									_this456.s0 = _this456.s1;
									_this456.s1 = _this456.s2;
									_this456.s2 = _this456.s3;
									_this456.s3 = _this456.s4;
									_this456.s4 = _this456.s5;
									_this456.s5 = null;
									if(_this456.s6 != null) {
										var _this457 = _this456.s6;
										var out220 = _this457.s0;
										if(_this457.l != 0) {
											_this457.s0 = _this457.s1;
											_this457.s1 = _this457.s2;
											_this457.s2 = _this457.s3;
											_this457.s3 = _this457.s4;
											_this457.s4 = _this457.s5;
											_this457.s5 = null;
											if(_this457.s6 != null) {
												var _this458 = _this457.s6;
												var out221 = _this458.s0;
												if(_this458.l != 0) {
													_this458.s0 = _this458.s1;
													_this458.s1 = _this458.s2;
													_this458.s2 = _this458.s3;
													_this458.s3 = _this458.s4;
													_this458.s4 = _this458.s5;
													_this458.s5 = null;
													if(_this458.s6 != null) {
														var _this459 = _this458.s6;
														var out222 = _this459.s0;
														if(_this459.l != 0) {
															_this459.s0 = _this459.s1;
															_this459.s1 = _this459.s2;
															_this459.s2 = _this459.s3;
															_this459.s3 = _this459.s4;
															_this459.s4 = _this459.s5;
															_this459.s5 = null;
															if(_this459.s6 != null) {
																var _this460 = _this459.s6;
																var out223 = _this460.s0;
																if(_this460.l != 0) {
																	_this460.s0 = _this460.s1;
																	_this460.s1 = _this460.s2;
																	_this460.s2 = _this460.s3;
																	_this460.s3 = _this460.s4;
																	_this460.s4 = _this460.s5;
																	_this460.s5 = null;
																	if(_this460.s6 != null) {
																		var _this461 = _this460.s6;
																		var out224 = _this461.s0;
																		if(_this461.l != 0) {
																			_this461.s0 = _this461.s1;
																			_this461.s1 = _this461.s2;
																			_this461.s2 = _this461.s3;
																			_this461.s3 = _this461.s4;
																			_this461.s4 = _this461.s5;
																			_this461.s5 = null;
																			if(_this461.s6 != null) {
																				_this461.s5 = _this461.s6.shift();
																			}
																			_this461.l--;
																		}
																		_this460.s5 = out224;
																	}
																	_this460.l--;
																}
																_this459.s5 = out223;
															}
															_this459.l--;
														}
														_this458.s5 = out222;
													}
													_this458.l--;
												}
												_this457.s5 = out221;
											}
											_this457.l--;
										}
										_this456.s5 = out220;
									}
									_this456.l--;
								}
								_this455.s5 = out219;
							}
							_this455.l--;
						}
						this.lastY = out218;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 83:
				var _this462 = this.store;
				_this462.l = 0;
				_this462.s0 = null;
				_this462.s1 = null;
				_this462.s2 = null;
				_this462.s3 = null;
				_this462.s4 = null;
				_this462.s5 = null;
				_this462.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count7 = 0;
				var temp6 = "";
				var exit6 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp6 != "") {
							if((this.store.l & 1) == 0) {
								var _this463 = this.store;
								var v33 = parseFloat(temp6);
								switch(_this463.l) {
								case 0:
									_this463.s0 = v33;
									break;
								case 1:
									_this463.s1 = v33;
									break;
								case 2:
									_this463.s2 = v33;
									break;
								case 3:
									_this463.s3 = v33;
									break;
								case 4:
									_this463.s4 = v33;
									break;
								case 5:
									_this463.s5 = v33;
									break;
								default:
									if(_this463.s6 == null) {
										_this463.s6 = new trilateral_justPath_StoreF6();
									}
									var _this464 = _this463.s6;
									switch(_this464.l) {
									case 0:
										_this464.s0 = v33;
										break;
									case 1:
										_this464.s1 = v33;
										break;
									case 2:
										_this464.s2 = v33;
										break;
									case 3:
										_this464.s3 = v33;
										break;
									case 4:
										_this464.s4 = v33;
										break;
									case 5:
										_this464.s5 = v33;
										break;
									default:
										if(_this464.s6 == null) {
											_this464.s6 = new trilateral_justPath_StoreF6();
										}
										var _this465 = _this464.s6;
										switch(_this465.l) {
										case 0:
											_this465.s0 = v33;
											break;
										case 1:
											_this465.s1 = v33;
											break;
										case 2:
											_this465.s2 = v33;
											break;
										case 3:
											_this465.s3 = v33;
											break;
										case 4:
											_this465.s4 = v33;
											break;
										case 5:
											_this465.s5 = v33;
											break;
										default:
											if(_this465.s6 == null) {
												_this465.s6 = new trilateral_justPath_StoreF6();
											}
											var _this466 = _this465.s6;
											switch(_this466.l) {
											case 0:
												_this466.s0 = v33;
												break;
											case 1:
												_this466.s1 = v33;
												break;
											case 2:
												_this466.s2 = v33;
												break;
											case 3:
												_this466.s3 = v33;
												break;
											case 4:
												_this466.s4 = v33;
												break;
											case 5:
												_this466.s5 = v33;
												break;
											default:
												if(_this466.s6 == null) {
													_this466.s6 = new trilateral_justPath_StoreF6();
												}
												var _this467 = _this466.s6;
												switch(_this467.l) {
												case 0:
													_this467.s0 = v33;
													break;
												case 1:
													_this467.s1 = v33;
													break;
												case 2:
													_this467.s2 = v33;
													break;
												case 3:
													_this467.s3 = v33;
													break;
												case 4:
													_this467.s4 = v33;
													break;
												case 5:
													_this467.s5 = v33;
													break;
												default:
													if(_this467.s6 == null) {
														_this467.s6 = new trilateral_justPath_StoreF6();
													}
													var _this468 = _this467.s6;
													switch(_this468.l) {
													case 0:
														_this468.s0 = v33;
														break;
													case 1:
														_this468.s1 = v33;
														break;
													case 2:
														_this468.s2 = v33;
														break;
													case 3:
														_this468.s3 = v33;
														break;
													case 4:
														_this468.s4 = v33;
														break;
													case 5:
														_this468.s5 = v33;
														break;
													default:
														if(_this468.s6 == null) {
															_this468.s6 = new trilateral_justPath_StoreF6();
														}
														var _this469 = _this468.s6;
														switch(_this469.l) {
														case 0:
															_this469.s0 = v33;
															break;
														case 1:
															_this469.s1 = v33;
															break;
														case 2:
															_this469.s2 = v33;
															break;
														case 3:
															_this469.s3 = v33;
															break;
														case 4:
															_this469.s4 = v33;
															break;
														case 5:
															_this469.s5 = v33;
															break;
														default:
															if(_this469.s6 == null) {
																_this469.s6 = new trilateral_justPath_StoreF6();
															}
															_this469.s6.push(v33);
														}
														_this469.l++;
													}
													_this468.l++;
												}
												_this467.l++;
											}
											_this466.l++;
										}
										_this465.l++;
									}
									_this464.l++;
								}
								_this463.l++;
							} else {
								var _this470 = this.store;
								var v34 = parseFloat(temp6);
								switch(_this470.l) {
								case 0:
									_this470.s0 = v34;
									break;
								case 1:
									_this470.s1 = v34;
									break;
								case 2:
									_this470.s2 = v34;
									break;
								case 3:
									_this470.s3 = v34;
									break;
								case 4:
									_this470.s4 = v34;
									break;
								case 5:
									_this470.s5 = v34;
									break;
								default:
									if(_this470.s6 == null) {
										_this470.s6 = new trilateral_justPath_StoreF6();
									}
									var _this471 = _this470.s6;
									switch(_this471.l) {
									case 0:
										_this471.s0 = v34;
										break;
									case 1:
										_this471.s1 = v34;
										break;
									case 2:
										_this471.s2 = v34;
										break;
									case 3:
										_this471.s3 = v34;
										break;
									case 4:
										_this471.s4 = v34;
										break;
									case 5:
										_this471.s5 = v34;
										break;
									default:
										if(_this471.s6 == null) {
											_this471.s6 = new trilateral_justPath_StoreF6();
										}
										var _this472 = _this471.s6;
										switch(_this472.l) {
										case 0:
											_this472.s0 = v34;
											break;
										case 1:
											_this472.s1 = v34;
											break;
										case 2:
											_this472.s2 = v34;
											break;
										case 3:
											_this472.s3 = v34;
											break;
										case 4:
											_this472.s4 = v34;
											break;
										case 5:
											_this472.s5 = v34;
											break;
										default:
											if(_this472.s6 == null) {
												_this472.s6 = new trilateral_justPath_StoreF6();
											}
											var _this473 = _this472.s6;
											switch(_this473.l) {
											case 0:
												_this473.s0 = v34;
												break;
											case 1:
												_this473.s1 = v34;
												break;
											case 2:
												_this473.s2 = v34;
												break;
											case 3:
												_this473.s3 = v34;
												break;
											case 4:
												_this473.s4 = v34;
												break;
											case 5:
												_this473.s5 = v34;
												break;
											default:
												if(_this473.s6 == null) {
													_this473.s6 = new trilateral_justPath_StoreF6();
												}
												var _this474 = _this473.s6;
												switch(_this474.l) {
												case 0:
													_this474.s0 = v34;
													break;
												case 1:
													_this474.s1 = v34;
													break;
												case 2:
													_this474.s2 = v34;
													break;
												case 3:
													_this474.s3 = v34;
													break;
												case 4:
													_this474.s4 = v34;
													break;
												case 5:
													_this474.s5 = v34;
													break;
												default:
													if(_this474.s6 == null) {
														_this474.s6 = new trilateral_justPath_StoreF6();
													}
													var _this475 = _this474.s6;
													switch(_this475.l) {
													case 0:
														_this475.s0 = v34;
														break;
													case 1:
														_this475.s1 = v34;
														break;
													case 2:
														_this475.s2 = v34;
														break;
													case 3:
														_this475.s3 = v34;
														break;
													case 4:
														_this475.s4 = v34;
														break;
													case 5:
														_this475.s5 = v34;
														break;
													default:
														if(_this475.s6 == null) {
															_this475.s6 = new trilateral_justPath_StoreF6();
														}
														var _this476 = _this475.s6;
														switch(_this476.l) {
														case 0:
															_this476.s0 = v34;
															break;
														case 1:
															_this476.s1 = v34;
															break;
														case 2:
															_this476.s2 = v34;
															break;
														case 3:
															_this476.s3 = v34;
															break;
														case 4:
															_this476.s4 = v34;
															break;
														case 5:
															_this476.s5 = v34;
															break;
														default:
															if(_this476.s6 == null) {
																_this476.s6 = new trilateral_justPath_StoreF6();
															}
															_this476.s6.push(v34);
														}
														_this476.l++;
													}
													_this475.l++;
												}
												_this474.l++;
											}
											_this473.l++;
										}
										_this472.l++;
									}
									_this471.l++;
								}
								_this470.l++;
							}
							temp6 = "";
						}
						break;
					case 45:
						if(temp6 != "") {
							if((this.store.l & 1) == 0) {
								var _this477 = this.store;
								var v35 = parseFloat(temp6);
								switch(_this477.l) {
								case 0:
									_this477.s0 = v35;
									break;
								case 1:
									_this477.s1 = v35;
									break;
								case 2:
									_this477.s2 = v35;
									break;
								case 3:
									_this477.s3 = v35;
									break;
								case 4:
									_this477.s4 = v35;
									break;
								case 5:
									_this477.s5 = v35;
									break;
								default:
									if(_this477.s6 == null) {
										_this477.s6 = new trilateral_justPath_StoreF6();
									}
									var _this478 = _this477.s6;
									switch(_this478.l) {
									case 0:
										_this478.s0 = v35;
										break;
									case 1:
										_this478.s1 = v35;
										break;
									case 2:
										_this478.s2 = v35;
										break;
									case 3:
										_this478.s3 = v35;
										break;
									case 4:
										_this478.s4 = v35;
										break;
									case 5:
										_this478.s5 = v35;
										break;
									default:
										if(_this478.s6 == null) {
											_this478.s6 = new trilateral_justPath_StoreF6();
										}
										var _this479 = _this478.s6;
										switch(_this479.l) {
										case 0:
											_this479.s0 = v35;
											break;
										case 1:
											_this479.s1 = v35;
											break;
										case 2:
											_this479.s2 = v35;
											break;
										case 3:
											_this479.s3 = v35;
											break;
										case 4:
											_this479.s4 = v35;
											break;
										case 5:
											_this479.s5 = v35;
											break;
										default:
											if(_this479.s6 == null) {
												_this479.s6 = new trilateral_justPath_StoreF6();
											}
											var _this480 = _this479.s6;
											switch(_this480.l) {
											case 0:
												_this480.s0 = v35;
												break;
											case 1:
												_this480.s1 = v35;
												break;
											case 2:
												_this480.s2 = v35;
												break;
											case 3:
												_this480.s3 = v35;
												break;
											case 4:
												_this480.s4 = v35;
												break;
											case 5:
												_this480.s5 = v35;
												break;
											default:
												if(_this480.s6 == null) {
													_this480.s6 = new trilateral_justPath_StoreF6();
												}
												var _this481 = _this480.s6;
												switch(_this481.l) {
												case 0:
													_this481.s0 = v35;
													break;
												case 1:
													_this481.s1 = v35;
													break;
												case 2:
													_this481.s2 = v35;
													break;
												case 3:
													_this481.s3 = v35;
													break;
												case 4:
													_this481.s4 = v35;
													break;
												case 5:
													_this481.s5 = v35;
													break;
												default:
													if(_this481.s6 == null) {
														_this481.s6 = new trilateral_justPath_StoreF6();
													}
													var _this482 = _this481.s6;
													switch(_this482.l) {
													case 0:
														_this482.s0 = v35;
														break;
													case 1:
														_this482.s1 = v35;
														break;
													case 2:
														_this482.s2 = v35;
														break;
													case 3:
														_this482.s3 = v35;
														break;
													case 4:
														_this482.s4 = v35;
														break;
													case 5:
														_this482.s5 = v35;
														break;
													default:
														if(_this482.s6 == null) {
															_this482.s6 = new trilateral_justPath_StoreF6();
														}
														var _this483 = _this482.s6;
														switch(_this483.l) {
														case 0:
															_this483.s0 = v35;
															break;
														case 1:
															_this483.s1 = v35;
															break;
														case 2:
															_this483.s2 = v35;
															break;
														case 3:
															_this483.s3 = v35;
															break;
														case 4:
															_this483.s4 = v35;
															break;
														case 5:
															_this483.s5 = v35;
															break;
														default:
															if(_this483.s6 == null) {
																_this483.s6 = new trilateral_justPath_StoreF6();
															}
															_this483.s6.push(v35);
														}
														_this483.l++;
													}
													_this482.l++;
												}
												_this481.l++;
											}
											_this480.l++;
										}
										_this479.l++;
									}
									_this478.l++;
								}
								_this477.l++;
							} else {
								var _this484 = this.store;
								var v36 = parseFloat(temp6);
								switch(_this484.l) {
								case 0:
									_this484.s0 = v36;
									break;
								case 1:
									_this484.s1 = v36;
									break;
								case 2:
									_this484.s2 = v36;
									break;
								case 3:
									_this484.s3 = v36;
									break;
								case 4:
									_this484.s4 = v36;
									break;
								case 5:
									_this484.s5 = v36;
									break;
								default:
									if(_this484.s6 == null) {
										_this484.s6 = new trilateral_justPath_StoreF6();
									}
									var _this485 = _this484.s6;
									switch(_this485.l) {
									case 0:
										_this485.s0 = v36;
										break;
									case 1:
										_this485.s1 = v36;
										break;
									case 2:
										_this485.s2 = v36;
										break;
									case 3:
										_this485.s3 = v36;
										break;
									case 4:
										_this485.s4 = v36;
										break;
									case 5:
										_this485.s5 = v36;
										break;
									default:
										if(_this485.s6 == null) {
											_this485.s6 = new trilateral_justPath_StoreF6();
										}
										var _this486 = _this485.s6;
										switch(_this486.l) {
										case 0:
											_this486.s0 = v36;
											break;
										case 1:
											_this486.s1 = v36;
											break;
										case 2:
											_this486.s2 = v36;
											break;
										case 3:
											_this486.s3 = v36;
											break;
										case 4:
											_this486.s4 = v36;
											break;
										case 5:
											_this486.s5 = v36;
											break;
										default:
											if(_this486.s6 == null) {
												_this486.s6 = new trilateral_justPath_StoreF6();
											}
											var _this487 = _this486.s6;
											switch(_this487.l) {
											case 0:
												_this487.s0 = v36;
												break;
											case 1:
												_this487.s1 = v36;
												break;
											case 2:
												_this487.s2 = v36;
												break;
											case 3:
												_this487.s3 = v36;
												break;
											case 4:
												_this487.s4 = v36;
												break;
											case 5:
												_this487.s5 = v36;
												break;
											default:
												if(_this487.s6 == null) {
													_this487.s6 = new trilateral_justPath_StoreF6();
												}
												var _this488 = _this487.s6;
												switch(_this488.l) {
												case 0:
													_this488.s0 = v36;
													break;
												case 1:
													_this488.s1 = v36;
													break;
												case 2:
													_this488.s2 = v36;
													break;
												case 3:
													_this488.s3 = v36;
													break;
												case 4:
													_this488.s4 = v36;
													break;
												case 5:
													_this488.s5 = v36;
													break;
												default:
													if(_this488.s6 == null) {
														_this488.s6 = new trilateral_justPath_StoreF6();
													}
													var _this489 = _this488.s6;
													switch(_this489.l) {
													case 0:
														_this489.s0 = v36;
														break;
													case 1:
														_this489.s1 = v36;
														break;
													case 2:
														_this489.s2 = v36;
														break;
													case 3:
														_this489.s3 = v36;
														break;
													case 4:
														_this489.s4 = v36;
														break;
													case 5:
														_this489.s5 = v36;
														break;
													default:
														if(_this489.s6 == null) {
															_this489.s6 = new trilateral_justPath_StoreF6();
														}
														var _this490 = _this489.s6;
														switch(_this490.l) {
														case 0:
															_this490.s0 = v36;
															break;
														case 1:
															_this490.s1 = v36;
															break;
														case 2:
															_this490.s2 = v36;
															break;
														case 3:
															_this490.s3 = v36;
															break;
														case 4:
															_this490.s4 = v36;
															break;
														case 5:
															_this490.s5 = v36;
															break;
														default:
															if(_this490.s6 == null) {
																_this490.s6 = new trilateral_justPath_StoreF6();
															}
															_this490.s6.push(v36);
														}
														_this490.l++;
													}
													_this489.l++;
												}
												_this488.l++;
											}
											_this487.l++;
										}
										_this486.l++;
									}
									_this485.l++;
								}
								_this484.l++;
							}
						}
						temp6 = "-";
						break;
					case 46:
						temp6 += ".";
						break;
					case 48:
						temp6 += "0";
						break;
					case 49:
						temp6 += "1";
						break;
					case 50:
						temp6 += "2";
						break;
					case 51:
						temp6 += "3";
						break;
					case 52:
						temp6 += "4";
						break;
					case 53:
						temp6 += "5";
						break;
					case 54:
						temp6 += "6";
						break;
					case 55:
						temp6 += "7";
						break;
					case 56:
						temp6 += "8";
						break;
					case 57:
						temp6 += "9";
						break;
					default:
						if(temp6 != "") {
							if((this.store.l & 1) == 0) {
								var _this491 = this.store;
								var v37 = parseFloat(temp6);
								switch(_this491.l) {
								case 0:
									_this491.s0 = v37;
									break;
								case 1:
									_this491.s1 = v37;
									break;
								case 2:
									_this491.s2 = v37;
									break;
								case 3:
									_this491.s3 = v37;
									break;
								case 4:
									_this491.s4 = v37;
									break;
								case 5:
									_this491.s5 = v37;
									break;
								default:
									if(_this491.s6 == null) {
										_this491.s6 = new trilateral_justPath_StoreF6();
									}
									var _this492 = _this491.s6;
									switch(_this492.l) {
									case 0:
										_this492.s0 = v37;
										break;
									case 1:
										_this492.s1 = v37;
										break;
									case 2:
										_this492.s2 = v37;
										break;
									case 3:
										_this492.s3 = v37;
										break;
									case 4:
										_this492.s4 = v37;
										break;
									case 5:
										_this492.s5 = v37;
										break;
									default:
										if(_this492.s6 == null) {
											_this492.s6 = new trilateral_justPath_StoreF6();
										}
										var _this493 = _this492.s6;
										switch(_this493.l) {
										case 0:
											_this493.s0 = v37;
											break;
										case 1:
											_this493.s1 = v37;
											break;
										case 2:
											_this493.s2 = v37;
											break;
										case 3:
											_this493.s3 = v37;
											break;
										case 4:
											_this493.s4 = v37;
											break;
										case 5:
											_this493.s5 = v37;
											break;
										default:
											if(_this493.s6 == null) {
												_this493.s6 = new trilateral_justPath_StoreF6();
											}
											var _this494 = _this493.s6;
											switch(_this494.l) {
											case 0:
												_this494.s0 = v37;
												break;
											case 1:
												_this494.s1 = v37;
												break;
											case 2:
												_this494.s2 = v37;
												break;
											case 3:
												_this494.s3 = v37;
												break;
											case 4:
												_this494.s4 = v37;
												break;
											case 5:
												_this494.s5 = v37;
												break;
											default:
												if(_this494.s6 == null) {
													_this494.s6 = new trilateral_justPath_StoreF6();
												}
												var _this495 = _this494.s6;
												switch(_this495.l) {
												case 0:
													_this495.s0 = v37;
													break;
												case 1:
													_this495.s1 = v37;
													break;
												case 2:
													_this495.s2 = v37;
													break;
												case 3:
													_this495.s3 = v37;
													break;
												case 4:
													_this495.s4 = v37;
													break;
												case 5:
													_this495.s5 = v37;
													break;
												default:
													if(_this495.s6 == null) {
														_this495.s6 = new trilateral_justPath_StoreF6();
													}
													var _this496 = _this495.s6;
													switch(_this496.l) {
													case 0:
														_this496.s0 = v37;
														break;
													case 1:
														_this496.s1 = v37;
														break;
													case 2:
														_this496.s2 = v37;
														break;
													case 3:
														_this496.s3 = v37;
														break;
													case 4:
														_this496.s4 = v37;
														break;
													case 5:
														_this496.s5 = v37;
														break;
													default:
														if(_this496.s6 == null) {
															_this496.s6 = new trilateral_justPath_StoreF6();
														}
														var _this497 = _this496.s6;
														switch(_this497.l) {
														case 0:
															_this497.s0 = v37;
															break;
														case 1:
															_this497.s1 = v37;
															break;
														case 2:
															_this497.s2 = v37;
															break;
														case 3:
															_this497.s3 = v37;
															break;
														case 4:
															_this497.s4 = v37;
															break;
														case 5:
															_this497.s5 = v37;
															break;
														default:
															if(_this497.s6 == null) {
																_this497.s6 = new trilateral_justPath_StoreF6();
															}
															_this497.s6.push(v37);
														}
														_this497.l++;
													}
													_this496.l++;
												}
												_this495.l++;
											}
											_this494.l++;
										}
										_this493.l++;
									}
									_this492.l++;
								}
								_this491.l++;
							} else {
								var _this498 = this.store;
								var v38 = parseFloat(temp6);
								switch(_this498.l) {
								case 0:
									_this498.s0 = v38;
									break;
								case 1:
									_this498.s1 = v38;
									break;
								case 2:
									_this498.s2 = v38;
									break;
								case 3:
									_this498.s3 = v38;
									break;
								case 4:
									_this498.s4 = v38;
									break;
								case 5:
									_this498.s5 = v38;
									break;
								default:
									if(_this498.s6 == null) {
										_this498.s6 = new trilateral_justPath_StoreF6();
									}
									var _this499 = _this498.s6;
									switch(_this499.l) {
									case 0:
										_this499.s0 = v38;
										break;
									case 1:
										_this499.s1 = v38;
										break;
									case 2:
										_this499.s2 = v38;
										break;
									case 3:
										_this499.s3 = v38;
										break;
									case 4:
										_this499.s4 = v38;
										break;
									case 5:
										_this499.s5 = v38;
										break;
									default:
										if(_this499.s6 == null) {
											_this499.s6 = new trilateral_justPath_StoreF6();
										}
										var _this500 = _this499.s6;
										switch(_this500.l) {
										case 0:
											_this500.s0 = v38;
											break;
										case 1:
											_this500.s1 = v38;
											break;
										case 2:
											_this500.s2 = v38;
											break;
										case 3:
											_this500.s3 = v38;
											break;
										case 4:
											_this500.s4 = v38;
											break;
										case 5:
											_this500.s5 = v38;
											break;
										default:
											if(_this500.s6 == null) {
												_this500.s6 = new trilateral_justPath_StoreF6();
											}
											var _this501 = _this500.s6;
											switch(_this501.l) {
											case 0:
												_this501.s0 = v38;
												break;
											case 1:
												_this501.s1 = v38;
												break;
											case 2:
												_this501.s2 = v38;
												break;
											case 3:
												_this501.s3 = v38;
												break;
											case 4:
												_this501.s4 = v38;
												break;
											case 5:
												_this501.s5 = v38;
												break;
											default:
												if(_this501.s6 == null) {
													_this501.s6 = new trilateral_justPath_StoreF6();
												}
												var _this502 = _this501.s6;
												switch(_this502.l) {
												case 0:
													_this502.s0 = v38;
													break;
												case 1:
													_this502.s1 = v38;
													break;
												case 2:
													_this502.s2 = v38;
													break;
												case 3:
													_this502.s3 = v38;
													break;
												case 4:
													_this502.s4 = v38;
													break;
												case 5:
													_this502.s5 = v38;
													break;
												default:
													if(_this502.s6 == null) {
														_this502.s6 = new trilateral_justPath_StoreF6();
													}
													var _this503 = _this502.s6;
													switch(_this503.l) {
													case 0:
														_this503.s0 = v38;
														break;
													case 1:
														_this503.s1 = v38;
														break;
													case 2:
														_this503.s2 = v38;
														break;
													case 3:
														_this503.s3 = v38;
														break;
													case 4:
														_this503.s4 = v38;
														break;
													case 5:
														_this503.s5 = v38;
														break;
													default:
														if(_this503.s6 == null) {
															_this503.s6 = new trilateral_justPath_StoreF6();
														}
														var _this504 = _this503.s6;
														switch(_this504.l) {
														case 0:
															_this504.s0 = v38;
															break;
														case 1:
															_this504.s1 = v38;
															break;
														case 2:
															_this504.s2 = v38;
															break;
														case 3:
															_this504.s3 = v38;
															break;
														case 4:
															_this504.s4 = v38;
															break;
														case 5:
															_this504.s5 = v38;
															break;
														default:
															if(_this504.s6 == null) {
																_this504.s6 = new trilateral_justPath_StoreF6();
															}
															_this504.s6.push(v38);
														}
														_this504.l++;
													}
													_this503.l++;
												}
												_this502.l++;
											}
											_this501.l++;
										}
										_this500.l++;
									}
									_this499.l++;
								}
								_this498.l++;
							}
							temp6 = "";
						}
						this.pos--;
						exit6 = true;
					}
					if(exit6) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					var firstX1 = this.store.s0;
					var firstY1 = this.store.s1;
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					var endX = this.store.s2;
					var endY = this.store.s3;
					this.pathContext.curveTo(this.controlX,this.controlY,firstX1,firstY1,endX,endY);
					this.controlX = this.store.s0;
					this.controlY = this.store.s1;
					this.lastX = endX;
					this.lastY = endY;
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this505 = this.store;
						var out225 = _this505.s0;
						if(_this505.l != 0) {
							_this505.s0 = _this505.s1;
							_this505.s1 = _this505.s2;
							_this505.s2 = _this505.s3;
							_this505.s3 = _this505.s4;
							_this505.s4 = _this505.s5;
							_this505.s5 = null;
							if(_this505.s6 != null) {
								var _this506 = _this505.s6;
								var out226 = _this506.s0;
								if(_this506.l != 0) {
									_this506.s0 = _this506.s1;
									_this506.s1 = _this506.s2;
									_this506.s2 = _this506.s3;
									_this506.s3 = _this506.s4;
									_this506.s4 = _this506.s5;
									_this506.s5 = null;
									if(_this506.s6 != null) {
										var _this507 = _this506.s6;
										var out227 = _this507.s0;
										if(_this507.l != 0) {
											_this507.s0 = _this507.s1;
											_this507.s1 = _this507.s2;
											_this507.s2 = _this507.s3;
											_this507.s3 = _this507.s4;
											_this507.s4 = _this507.s5;
											_this507.s5 = null;
											if(_this507.s6 != null) {
												var _this508 = _this507.s6;
												var out228 = _this508.s0;
												if(_this508.l != 0) {
													_this508.s0 = _this508.s1;
													_this508.s1 = _this508.s2;
													_this508.s2 = _this508.s3;
													_this508.s3 = _this508.s4;
													_this508.s4 = _this508.s5;
													_this508.s5 = null;
													if(_this508.s6 != null) {
														var _this509 = _this508.s6;
														var out229 = _this509.s0;
														if(_this509.l != 0) {
															_this509.s0 = _this509.s1;
															_this509.s1 = _this509.s2;
															_this509.s2 = _this509.s3;
															_this509.s3 = _this509.s4;
															_this509.s4 = _this509.s5;
															_this509.s5 = null;
															if(_this509.s6 != null) {
																var _this510 = _this509.s6;
																var out230 = _this510.s0;
																if(_this510.l != 0) {
																	_this510.s0 = _this510.s1;
																	_this510.s1 = _this510.s2;
																	_this510.s2 = _this510.s3;
																	_this510.s3 = _this510.s4;
																	_this510.s4 = _this510.s5;
																	_this510.s5 = null;
																	if(_this510.s6 != null) {
																		var _this511 = _this510.s6;
																		var out231 = _this511.s0;
																		if(_this511.l != 0) {
																			_this511.s0 = _this511.s1;
																			_this511.s1 = _this511.s2;
																			_this511.s2 = _this511.s3;
																			_this511.s3 = _this511.s4;
																			_this511.s4 = _this511.s5;
																			_this511.s5 = null;
																			if(_this511.s6 != null) {
																				_this511.s5 = _this511.s6.shift();
																			}
																			_this511.l--;
																		}
																		_this510.s5 = out231;
																	}
																	_this510.l--;
																}
																_this509.s5 = out230;
															}
															_this509.l--;
														}
														_this508.s5 = out229;
													}
													_this508.l--;
												}
												_this507.s5 = out228;
											}
											_this507.l--;
										}
										_this506.s5 = out227;
									}
									_this506.l--;
								}
								_this505.s5 = out226;
							}
							_this505.l--;
						}
						var firstX2 = out225;
						var _this512 = this.store;
						var out232 = _this512.s0;
						if(_this512.l != 0) {
							_this512.s0 = _this512.s1;
							_this512.s1 = _this512.s2;
							_this512.s2 = _this512.s3;
							_this512.s3 = _this512.s4;
							_this512.s4 = _this512.s5;
							_this512.s5 = null;
							if(_this512.s6 != null) {
								var _this513 = _this512.s6;
								var out233 = _this513.s0;
								if(_this513.l != 0) {
									_this513.s0 = _this513.s1;
									_this513.s1 = _this513.s2;
									_this513.s2 = _this513.s3;
									_this513.s3 = _this513.s4;
									_this513.s4 = _this513.s5;
									_this513.s5 = null;
									if(_this513.s6 != null) {
										var _this514 = _this513.s6;
										var out234 = _this514.s0;
										if(_this514.l != 0) {
											_this514.s0 = _this514.s1;
											_this514.s1 = _this514.s2;
											_this514.s2 = _this514.s3;
											_this514.s3 = _this514.s4;
											_this514.s4 = _this514.s5;
											_this514.s5 = null;
											if(_this514.s6 != null) {
												var _this515 = _this514.s6;
												var out235 = _this515.s0;
												if(_this515.l != 0) {
													_this515.s0 = _this515.s1;
													_this515.s1 = _this515.s2;
													_this515.s2 = _this515.s3;
													_this515.s3 = _this515.s4;
													_this515.s4 = _this515.s5;
													_this515.s5 = null;
													if(_this515.s6 != null) {
														var _this516 = _this515.s6;
														var out236 = _this516.s0;
														if(_this516.l != 0) {
															_this516.s0 = _this516.s1;
															_this516.s1 = _this516.s2;
															_this516.s2 = _this516.s3;
															_this516.s3 = _this516.s4;
															_this516.s4 = _this516.s5;
															_this516.s5 = null;
															if(_this516.s6 != null) {
																var _this517 = _this516.s6;
																var out237 = _this517.s0;
																if(_this517.l != 0) {
																	_this517.s0 = _this517.s1;
																	_this517.s1 = _this517.s2;
																	_this517.s2 = _this517.s3;
																	_this517.s3 = _this517.s4;
																	_this517.s4 = _this517.s5;
																	_this517.s5 = null;
																	if(_this517.s6 != null) {
																		var _this518 = _this517.s6;
																		var out238 = _this518.s0;
																		if(_this518.l != 0) {
																			_this518.s0 = _this518.s1;
																			_this518.s1 = _this518.s2;
																			_this518.s2 = _this518.s3;
																			_this518.s3 = _this518.s4;
																			_this518.s4 = _this518.s5;
																			_this518.s5 = null;
																			if(_this518.s6 != null) {
																				_this518.s5 = _this518.s6.shift();
																			}
																			_this518.l--;
																		}
																		_this517.s5 = out238;
																	}
																	_this517.l--;
																}
																_this516.s5 = out237;
															}
															_this516.l--;
														}
														_this515.s5 = out236;
													}
													_this515.l--;
												}
												_this514.s5 = out235;
											}
											_this514.l--;
										}
										_this513.s5 = out234;
									}
									_this513.l--;
								}
								_this512.s5 = out233;
							}
							_this512.l--;
						}
						var firstY2 = out232;
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this519 = this.store;
						var out239 = _this519.s0;
						if(_this519.l != 0) {
							_this519.s0 = _this519.s1;
							_this519.s1 = _this519.s2;
							_this519.s2 = _this519.s3;
							_this519.s3 = _this519.s4;
							_this519.s4 = _this519.s5;
							_this519.s5 = null;
							if(_this519.s6 != null) {
								var _this520 = _this519.s6;
								var out240 = _this520.s0;
								if(_this520.l != 0) {
									_this520.s0 = _this520.s1;
									_this520.s1 = _this520.s2;
									_this520.s2 = _this520.s3;
									_this520.s3 = _this520.s4;
									_this520.s4 = _this520.s5;
									_this520.s5 = null;
									if(_this520.s6 != null) {
										var _this521 = _this520.s6;
										var out241 = _this521.s0;
										if(_this521.l != 0) {
											_this521.s0 = _this521.s1;
											_this521.s1 = _this521.s2;
											_this521.s2 = _this521.s3;
											_this521.s3 = _this521.s4;
											_this521.s4 = _this521.s5;
											_this521.s5 = null;
											if(_this521.s6 != null) {
												var _this522 = _this521.s6;
												var out242 = _this522.s0;
												if(_this522.l != 0) {
													_this522.s0 = _this522.s1;
													_this522.s1 = _this522.s2;
													_this522.s2 = _this522.s3;
													_this522.s3 = _this522.s4;
													_this522.s4 = _this522.s5;
													_this522.s5 = null;
													if(_this522.s6 != null) {
														var _this523 = _this522.s6;
														var out243 = _this523.s0;
														if(_this523.l != 0) {
															_this523.s0 = _this523.s1;
															_this523.s1 = _this523.s2;
															_this523.s2 = _this523.s3;
															_this523.s3 = _this523.s4;
															_this523.s4 = _this523.s5;
															_this523.s5 = null;
															if(_this523.s6 != null) {
																var _this524 = _this523.s6;
																var out244 = _this524.s0;
																if(_this524.l != 0) {
																	_this524.s0 = _this524.s1;
																	_this524.s1 = _this524.s2;
																	_this524.s2 = _this524.s3;
																	_this524.s3 = _this524.s4;
																	_this524.s4 = _this524.s5;
																	_this524.s5 = null;
																	if(_this524.s6 != null) {
																		var _this525 = _this524.s6;
																		var out245 = _this525.s0;
																		if(_this525.l != 0) {
																			_this525.s0 = _this525.s1;
																			_this525.s1 = _this525.s2;
																			_this525.s2 = _this525.s3;
																			_this525.s3 = _this525.s4;
																			_this525.s4 = _this525.s5;
																			_this525.s5 = null;
																			if(_this525.s6 != null) {
																				_this525.s5 = _this525.s6.shift();
																			}
																			_this525.l--;
																		}
																		_this524.s5 = out245;
																	}
																	_this524.l--;
																}
																_this523.s5 = out244;
															}
															_this523.l--;
														}
														_this522.s5 = out243;
													}
													_this522.l--;
												}
												_this521.s5 = out242;
											}
											_this521.l--;
										}
										_this520.s5 = out241;
									}
									_this520.l--;
								}
								_this519.s5 = out240;
							}
							_this519.l--;
						}
						this.lastX = out239;
						var _this526 = this.store;
						var out246 = _this526.s0;
						if(_this526.l != 0) {
							_this526.s0 = _this526.s1;
							_this526.s1 = _this526.s2;
							_this526.s2 = _this526.s3;
							_this526.s3 = _this526.s4;
							_this526.s4 = _this526.s5;
							_this526.s5 = null;
							if(_this526.s6 != null) {
								var _this527 = _this526.s6;
								var out247 = _this527.s0;
								if(_this527.l != 0) {
									_this527.s0 = _this527.s1;
									_this527.s1 = _this527.s2;
									_this527.s2 = _this527.s3;
									_this527.s3 = _this527.s4;
									_this527.s4 = _this527.s5;
									_this527.s5 = null;
									if(_this527.s6 != null) {
										var _this528 = _this527.s6;
										var out248 = _this528.s0;
										if(_this528.l != 0) {
											_this528.s0 = _this528.s1;
											_this528.s1 = _this528.s2;
											_this528.s2 = _this528.s3;
											_this528.s3 = _this528.s4;
											_this528.s4 = _this528.s5;
											_this528.s5 = null;
											if(_this528.s6 != null) {
												var _this529 = _this528.s6;
												var out249 = _this529.s0;
												if(_this529.l != 0) {
													_this529.s0 = _this529.s1;
													_this529.s1 = _this529.s2;
													_this529.s2 = _this529.s3;
													_this529.s3 = _this529.s4;
													_this529.s4 = _this529.s5;
													_this529.s5 = null;
													if(_this529.s6 != null) {
														var _this530 = _this529.s6;
														var out250 = _this530.s0;
														if(_this530.l != 0) {
															_this530.s0 = _this530.s1;
															_this530.s1 = _this530.s2;
															_this530.s2 = _this530.s3;
															_this530.s3 = _this530.s4;
															_this530.s4 = _this530.s5;
															_this530.s5 = null;
															if(_this530.s6 != null) {
																var _this531 = _this530.s6;
																var out251 = _this531.s0;
																if(_this531.l != 0) {
																	_this531.s0 = _this531.s1;
																	_this531.s1 = _this531.s2;
																	_this531.s2 = _this531.s3;
																	_this531.s3 = _this531.s4;
																	_this531.s4 = _this531.s5;
																	_this531.s5 = null;
																	if(_this531.s6 != null) {
																		var _this532 = _this531.s6;
																		var out252 = _this532.s0;
																		if(_this532.l != 0) {
																			_this532.s0 = _this532.s1;
																			_this532.s1 = _this532.s2;
																			_this532.s2 = _this532.s3;
																			_this532.s3 = _this532.s4;
																			_this532.s4 = _this532.s5;
																			_this532.s5 = null;
																			if(_this532.s6 != null) {
																				_this532.s5 = _this532.s6.shift();
																			}
																			_this532.l--;
																		}
																		_this531.s5 = out252;
																	}
																	_this531.l--;
																}
																_this530.s5 = out251;
															}
															_this530.l--;
														}
														_this529.s5 = out250;
													}
													_this529.l--;
												}
												_this528.s5 = out249;
											}
											_this528.l--;
										}
										_this527.s5 = out248;
									}
									_this527.l--;
								}
								_this526.s5 = out247;
							}
							_this526.l--;
						}
						this.lastY = out246;
						this.pathContext.curveTo(this.controlX,this.controlY,firstX2,firstY2,this.lastX,this.lastY);
						this.controlX = firstX2;
						this.controlY = firstY2;
					}
				}
				break;
			case 84:
				var _this533 = this.store;
				_this533.l = 0;
				_this533.s0 = null;
				_this533.s1 = null;
				_this533.s2 = null;
				_this533.s3 = null;
				_this533.s4 = null;
				_this533.s5 = null;
				_this533.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count8 = 0;
				var temp7 = "";
				var exit7 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp7 != "") {
							if((this.store.l & 1) == 0) {
								var _this534 = this.store;
								var v39 = parseFloat(temp7);
								switch(_this534.l) {
								case 0:
									_this534.s0 = v39;
									break;
								case 1:
									_this534.s1 = v39;
									break;
								case 2:
									_this534.s2 = v39;
									break;
								case 3:
									_this534.s3 = v39;
									break;
								case 4:
									_this534.s4 = v39;
									break;
								case 5:
									_this534.s5 = v39;
									break;
								default:
									if(_this534.s6 == null) {
										_this534.s6 = new trilateral_justPath_StoreF6();
									}
									var _this535 = _this534.s6;
									switch(_this535.l) {
									case 0:
										_this535.s0 = v39;
										break;
									case 1:
										_this535.s1 = v39;
										break;
									case 2:
										_this535.s2 = v39;
										break;
									case 3:
										_this535.s3 = v39;
										break;
									case 4:
										_this535.s4 = v39;
										break;
									case 5:
										_this535.s5 = v39;
										break;
									default:
										if(_this535.s6 == null) {
											_this535.s6 = new trilateral_justPath_StoreF6();
										}
										var _this536 = _this535.s6;
										switch(_this536.l) {
										case 0:
											_this536.s0 = v39;
											break;
										case 1:
											_this536.s1 = v39;
											break;
										case 2:
											_this536.s2 = v39;
											break;
										case 3:
											_this536.s3 = v39;
											break;
										case 4:
											_this536.s4 = v39;
											break;
										case 5:
											_this536.s5 = v39;
											break;
										default:
											if(_this536.s6 == null) {
												_this536.s6 = new trilateral_justPath_StoreF6();
											}
											var _this537 = _this536.s6;
											switch(_this537.l) {
											case 0:
												_this537.s0 = v39;
												break;
											case 1:
												_this537.s1 = v39;
												break;
											case 2:
												_this537.s2 = v39;
												break;
											case 3:
												_this537.s3 = v39;
												break;
											case 4:
												_this537.s4 = v39;
												break;
											case 5:
												_this537.s5 = v39;
												break;
											default:
												if(_this537.s6 == null) {
													_this537.s6 = new trilateral_justPath_StoreF6();
												}
												var _this538 = _this537.s6;
												switch(_this538.l) {
												case 0:
													_this538.s0 = v39;
													break;
												case 1:
													_this538.s1 = v39;
													break;
												case 2:
													_this538.s2 = v39;
													break;
												case 3:
													_this538.s3 = v39;
													break;
												case 4:
													_this538.s4 = v39;
													break;
												case 5:
													_this538.s5 = v39;
													break;
												default:
													if(_this538.s6 == null) {
														_this538.s6 = new trilateral_justPath_StoreF6();
													}
													var _this539 = _this538.s6;
													switch(_this539.l) {
													case 0:
														_this539.s0 = v39;
														break;
													case 1:
														_this539.s1 = v39;
														break;
													case 2:
														_this539.s2 = v39;
														break;
													case 3:
														_this539.s3 = v39;
														break;
													case 4:
														_this539.s4 = v39;
														break;
													case 5:
														_this539.s5 = v39;
														break;
													default:
														if(_this539.s6 == null) {
															_this539.s6 = new trilateral_justPath_StoreF6();
														}
														var _this540 = _this539.s6;
														switch(_this540.l) {
														case 0:
															_this540.s0 = v39;
															break;
														case 1:
															_this540.s1 = v39;
															break;
														case 2:
															_this540.s2 = v39;
															break;
														case 3:
															_this540.s3 = v39;
															break;
														case 4:
															_this540.s4 = v39;
															break;
														case 5:
															_this540.s5 = v39;
															break;
														default:
															if(_this540.s6 == null) {
																_this540.s6 = new trilateral_justPath_StoreF6();
															}
															_this540.s6.push(v39);
														}
														_this540.l++;
													}
													_this539.l++;
												}
												_this538.l++;
											}
											_this537.l++;
										}
										_this536.l++;
									}
									_this535.l++;
								}
								_this534.l++;
							} else {
								var _this541 = this.store;
								var v40 = parseFloat(temp7);
								switch(_this541.l) {
								case 0:
									_this541.s0 = v40;
									break;
								case 1:
									_this541.s1 = v40;
									break;
								case 2:
									_this541.s2 = v40;
									break;
								case 3:
									_this541.s3 = v40;
									break;
								case 4:
									_this541.s4 = v40;
									break;
								case 5:
									_this541.s5 = v40;
									break;
								default:
									if(_this541.s6 == null) {
										_this541.s6 = new trilateral_justPath_StoreF6();
									}
									var _this542 = _this541.s6;
									switch(_this542.l) {
									case 0:
										_this542.s0 = v40;
										break;
									case 1:
										_this542.s1 = v40;
										break;
									case 2:
										_this542.s2 = v40;
										break;
									case 3:
										_this542.s3 = v40;
										break;
									case 4:
										_this542.s4 = v40;
										break;
									case 5:
										_this542.s5 = v40;
										break;
									default:
										if(_this542.s6 == null) {
											_this542.s6 = new trilateral_justPath_StoreF6();
										}
										var _this543 = _this542.s6;
										switch(_this543.l) {
										case 0:
											_this543.s0 = v40;
											break;
										case 1:
											_this543.s1 = v40;
											break;
										case 2:
											_this543.s2 = v40;
											break;
										case 3:
											_this543.s3 = v40;
											break;
										case 4:
											_this543.s4 = v40;
											break;
										case 5:
											_this543.s5 = v40;
											break;
										default:
											if(_this543.s6 == null) {
												_this543.s6 = new trilateral_justPath_StoreF6();
											}
											var _this544 = _this543.s6;
											switch(_this544.l) {
											case 0:
												_this544.s0 = v40;
												break;
											case 1:
												_this544.s1 = v40;
												break;
											case 2:
												_this544.s2 = v40;
												break;
											case 3:
												_this544.s3 = v40;
												break;
											case 4:
												_this544.s4 = v40;
												break;
											case 5:
												_this544.s5 = v40;
												break;
											default:
												if(_this544.s6 == null) {
													_this544.s6 = new trilateral_justPath_StoreF6();
												}
												var _this545 = _this544.s6;
												switch(_this545.l) {
												case 0:
													_this545.s0 = v40;
													break;
												case 1:
													_this545.s1 = v40;
													break;
												case 2:
													_this545.s2 = v40;
													break;
												case 3:
													_this545.s3 = v40;
													break;
												case 4:
													_this545.s4 = v40;
													break;
												case 5:
													_this545.s5 = v40;
													break;
												default:
													if(_this545.s6 == null) {
														_this545.s6 = new trilateral_justPath_StoreF6();
													}
													var _this546 = _this545.s6;
													switch(_this546.l) {
													case 0:
														_this546.s0 = v40;
														break;
													case 1:
														_this546.s1 = v40;
														break;
													case 2:
														_this546.s2 = v40;
														break;
													case 3:
														_this546.s3 = v40;
														break;
													case 4:
														_this546.s4 = v40;
														break;
													case 5:
														_this546.s5 = v40;
														break;
													default:
														if(_this546.s6 == null) {
															_this546.s6 = new trilateral_justPath_StoreF6();
														}
														var _this547 = _this546.s6;
														switch(_this547.l) {
														case 0:
															_this547.s0 = v40;
															break;
														case 1:
															_this547.s1 = v40;
															break;
														case 2:
															_this547.s2 = v40;
															break;
														case 3:
															_this547.s3 = v40;
															break;
														case 4:
															_this547.s4 = v40;
															break;
														case 5:
															_this547.s5 = v40;
															break;
														default:
															if(_this547.s6 == null) {
																_this547.s6 = new trilateral_justPath_StoreF6();
															}
															_this547.s6.push(v40);
														}
														_this547.l++;
													}
													_this546.l++;
												}
												_this545.l++;
											}
											_this544.l++;
										}
										_this543.l++;
									}
									_this542.l++;
								}
								_this541.l++;
							}
							temp7 = "";
						}
						break;
					case 45:
						if(temp7 != "") {
							if((this.store.l & 1) == 0) {
								var _this548 = this.store;
								var v41 = parseFloat(temp7);
								switch(_this548.l) {
								case 0:
									_this548.s0 = v41;
									break;
								case 1:
									_this548.s1 = v41;
									break;
								case 2:
									_this548.s2 = v41;
									break;
								case 3:
									_this548.s3 = v41;
									break;
								case 4:
									_this548.s4 = v41;
									break;
								case 5:
									_this548.s5 = v41;
									break;
								default:
									if(_this548.s6 == null) {
										_this548.s6 = new trilateral_justPath_StoreF6();
									}
									var _this549 = _this548.s6;
									switch(_this549.l) {
									case 0:
										_this549.s0 = v41;
										break;
									case 1:
										_this549.s1 = v41;
										break;
									case 2:
										_this549.s2 = v41;
										break;
									case 3:
										_this549.s3 = v41;
										break;
									case 4:
										_this549.s4 = v41;
										break;
									case 5:
										_this549.s5 = v41;
										break;
									default:
										if(_this549.s6 == null) {
											_this549.s6 = new trilateral_justPath_StoreF6();
										}
										var _this550 = _this549.s6;
										switch(_this550.l) {
										case 0:
											_this550.s0 = v41;
											break;
										case 1:
											_this550.s1 = v41;
											break;
										case 2:
											_this550.s2 = v41;
											break;
										case 3:
											_this550.s3 = v41;
											break;
										case 4:
											_this550.s4 = v41;
											break;
										case 5:
											_this550.s5 = v41;
											break;
										default:
											if(_this550.s6 == null) {
												_this550.s6 = new trilateral_justPath_StoreF6();
											}
											var _this551 = _this550.s6;
											switch(_this551.l) {
											case 0:
												_this551.s0 = v41;
												break;
											case 1:
												_this551.s1 = v41;
												break;
											case 2:
												_this551.s2 = v41;
												break;
											case 3:
												_this551.s3 = v41;
												break;
											case 4:
												_this551.s4 = v41;
												break;
											case 5:
												_this551.s5 = v41;
												break;
											default:
												if(_this551.s6 == null) {
													_this551.s6 = new trilateral_justPath_StoreF6();
												}
												var _this552 = _this551.s6;
												switch(_this552.l) {
												case 0:
													_this552.s0 = v41;
													break;
												case 1:
													_this552.s1 = v41;
													break;
												case 2:
													_this552.s2 = v41;
													break;
												case 3:
													_this552.s3 = v41;
													break;
												case 4:
													_this552.s4 = v41;
													break;
												case 5:
													_this552.s5 = v41;
													break;
												default:
													if(_this552.s6 == null) {
														_this552.s6 = new trilateral_justPath_StoreF6();
													}
													var _this553 = _this552.s6;
													switch(_this553.l) {
													case 0:
														_this553.s0 = v41;
														break;
													case 1:
														_this553.s1 = v41;
														break;
													case 2:
														_this553.s2 = v41;
														break;
													case 3:
														_this553.s3 = v41;
														break;
													case 4:
														_this553.s4 = v41;
														break;
													case 5:
														_this553.s5 = v41;
														break;
													default:
														if(_this553.s6 == null) {
															_this553.s6 = new trilateral_justPath_StoreF6();
														}
														var _this554 = _this553.s6;
														switch(_this554.l) {
														case 0:
															_this554.s0 = v41;
															break;
														case 1:
															_this554.s1 = v41;
															break;
														case 2:
															_this554.s2 = v41;
															break;
														case 3:
															_this554.s3 = v41;
															break;
														case 4:
															_this554.s4 = v41;
															break;
														case 5:
															_this554.s5 = v41;
															break;
														default:
															if(_this554.s6 == null) {
																_this554.s6 = new trilateral_justPath_StoreF6();
															}
															_this554.s6.push(v41);
														}
														_this554.l++;
													}
													_this553.l++;
												}
												_this552.l++;
											}
											_this551.l++;
										}
										_this550.l++;
									}
									_this549.l++;
								}
								_this548.l++;
							} else {
								var _this555 = this.store;
								var v42 = parseFloat(temp7);
								switch(_this555.l) {
								case 0:
									_this555.s0 = v42;
									break;
								case 1:
									_this555.s1 = v42;
									break;
								case 2:
									_this555.s2 = v42;
									break;
								case 3:
									_this555.s3 = v42;
									break;
								case 4:
									_this555.s4 = v42;
									break;
								case 5:
									_this555.s5 = v42;
									break;
								default:
									if(_this555.s6 == null) {
										_this555.s6 = new trilateral_justPath_StoreF6();
									}
									var _this556 = _this555.s6;
									switch(_this556.l) {
									case 0:
										_this556.s0 = v42;
										break;
									case 1:
										_this556.s1 = v42;
										break;
									case 2:
										_this556.s2 = v42;
										break;
									case 3:
										_this556.s3 = v42;
										break;
									case 4:
										_this556.s4 = v42;
										break;
									case 5:
										_this556.s5 = v42;
										break;
									default:
										if(_this556.s6 == null) {
											_this556.s6 = new trilateral_justPath_StoreF6();
										}
										var _this557 = _this556.s6;
										switch(_this557.l) {
										case 0:
											_this557.s0 = v42;
											break;
										case 1:
											_this557.s1 = v42;
											break;
										case 2:
											_this557.s2 = v42;
											break;
										case 3:
											_this557.s3 = v42;
											break;
										case 4:
											_this557.s4 = v42;
											break;
										case 5:
											_this557.s5 = v42;
											break;
										default:
											if(_this557.s6 == null) {
												_this557.s6 = new trilateral_justPath_StoreF6();
											}
											var _this558 = _this557.s6;
											switch(_this558.l) {
											case 0:
												_this558.s0 = v42;
												break;
											case 1:
												_this558.s1 = v42;
												break;
											case 2:
												_this558.s2 = v42;
												break;
											case 3:
												_this558.s3 = v42;
												break;
											case 4:
												_this558.s4 = v42;
												break;
											case 5:
												_this558.s5 = v42;
												break;
											default:
												if(_this558.s6 == null) {
													_this558.s6 = new trilateral_justPath_StoreF6();
												}
												var _this559 = _this558.s6;
												switch(_this559.l) {
												case 0:
													_this559.s0 = v42;
													break;
												case 1:
													_this559.s1 = v42;
													break;
												case 2:
													_this559.s2 = v42;
													break;
												case 3:
													_this559.s3 = v42;
													break;
												case 4:
													_this559.s4 = v42;
													break;
												case 5:
													_this559.s5 = v42;
													break;
												default:
													if(_this559.s6 == null) {
														_this559.s6 = new trilateral_justPath_StoreF6();
													}
													var _this560 = _this559.s6;
													switch(_this560.l) {
													case 0:
														_this560.s0 = v42;
														break;
													case 1:
														_this560.s1 = v42;
														break;
													case 2:
														_this560.s2 = v42;
														break;
													case 3:
														_this560.s3 = v42;
														break;
													case 4:
														_this560.s4 = v42;
														break;
													case 5:
														_this560.s5 = v42;
														break;
													default:
														if(_this560.s6 == null) {
															_this560.s6 = new trilateral_justPath_StoreF6();
														}
														var _this561 = _this560.s6;
														switch(_this561.l) {
														case 0:
															_this561.s0 = v42;
															break;
														case 1:
															_this561.s1 = v42;
															break;
														case 2:
															_this561.s2 = v42;
															break;
														case 3:
															_this561.s3 = v42;
															break;
														case 4:
															_this561.s4 = v42;
															break;
														case 5:
															_this561.s5 = v42;
															break;
														default:
															if(_this561.s6 == null) {
																_this561.s6 = new trilateral_justPath_StoreF6();
															}
															_this561.s6.push(v42);
														}
														_this561.l++;
													}
													_this560.l++;
												}
												_this559.l++;
											}
											_this558.l++;
										}
										_this557.l++;
									}
									_this556.l++;
								}
								_this555.l++;
							}
						}
						temp7 = "-";
						break;
					case 46:
						temp7 += ".";
						break;
					case 48:
						temp7 += "0";
						break;
					case 49:
						temp7 += "1";
						break;
					case 50:
						temp7 += "2";
						break;
					case 51:
						temp7 += "3";
						break;
					case 52:
						temp7 += "4";
						break;
					case 53:
						temp7 += "5";
						break;
					case 54:
						temp7 += "6";
						break;
					case 55:
						temp7 += "7";
						break;
					case 56:
						temp7 += "8";
						break;
					case 57:
						temp7 += "9";
						break;
					default:
						if(temp7 != "") {
							if((this.store.l & 1) == 0) {
								var _this562 = this.store;
								var v43 = parseFloat(temp7);
								switch(_this562.l) {
								case 0:
									_this562.s0 = v43;
									break;
								case 1:
									_this562.s1 = v43;
									break;
								case 2:
									_this562.s2 = v43;
									break;
								case 3:
									_this562.s3 = v43;
									break;
								case 4:
									_this562.s4 = v43;
									break;
								case 5:
									_this562.s5 = v43;
									break;
								default:
									if(_this562.s6 == null) {
										_this562.s6 = new trilateral_justPath_StoreF6();
									}
									var _this563 = _this562.s6;
									switch(_this563.l) {
									case 0:
										_this563.s0 = v43;
										break;
									case 1:
										_this563.s1 = v43;
										break;
									case 2:
										_this563.s2 = v43;
										break;
									case 3:
										_this563.s3 = v43;
										break;
									case 4:
										_this563.s4 = v43;
										break;
									case 5:
										_this563.s5 = v43;
										break;
									default:
										if(_this563.s6 == null) {
											_this563.s6 = new trilateral_justPath_StoreF6();
										}
										var _this564 = _this563.s6;
										switch(_this564.l) {
										case 0:
											_this564.s0 = v43;
											break;
										case 1:
											_this564.s1 = v43;
											break;
										case 2:
											_this564.s2 = v43;
											break;
										case 3:
											_this564.s3 = v43;
											break;
										case 4:
											_this564.s4 = v43;
											break;
										case 5:
											_this564.s5 = v43;
											break;
										default:
											if(_this564.s6 == null) {
												_this564.s6 = new trilateral_justPath_StoreF6();
											}
											var _this565 = _this564.s6;
											switch(_this565.l) {
											case 0:
												_this565.s0 = v43;
												break;
											case 1:
												_this565.s1 = v43;
												break;
											case 2:
												_this565.s2 = v43;
												break;
											case 3:
												_this565.s3 = v43;
												break;
											case 4:
												_this565.s4 = v43;
												break;
											case 5:
												_this565.s5 = v43;
												break;
											default:
												if(_this565.s6 == null) {
													_this565.s6 = new trilateral_justPath_StoreF6();
												}
												var _this566 = _this565.s6;
												switch(_this566.l) {
												case 0:
													_this566.s0 = v43;
													break;
												case 1:
													_this566.s1 = v43;
													break;
												case 2:
													_this566.s2 = v43;
													break;
												case 3:
													_this566.s3 = v43;
													break;
												case 4:
													_this566.s4 = v43;
													break;
												case 5:
													_this566.s5 = v43;
													break;
												default:
													if(_this566.s6 == null) {
														_this566.s6 = new trilateral_justPath_StoreF6();
													}
													var _this567 = _this566.s6;
													switch(_this567.l) {
													case 0:
														_this567.s0 = v43;
														break;
													case 1:
														_this567.s1 = v43;
														break;
													case 2:
														_this567.s2 = v43;
														break;
													case 3:
														_this567.s3 = v43;
														break;
													case 4:
														_this567.s4 = v43;
														break;
													case 5:
														_this567.s5 = v43;
														break;
													default:
														if(_this567.s6 == null) {
															_this567.s6 = new trilateral_justPath_StoreF6();
														}
														var _this568 = _this567.s6;
														switch(_this568.l) {
														case 0:
															_this568.s0 = v43;
															break;
														case 1:
															_this568.s1 = v43;
															break;
														case 2:
															_this568.s2 = v43;
															break;
														case 3:
															_this568.s3 = v43;
															break;
														case 4:
															_this568.s4 = v43;
															break;
														case 5:
															_this568.s5 = v43;
															break;
														default:
															if(_this568.s6 == null) {
																_this568.s6 = new trilateral_justPath_StoreF6();
															}
															_this568.s6.push(v43);
														}
														_this568.l++;
													}
													_this567.l++;
												}
												_this566.l++;
											}
											_this565.l++;
										}
										_this564.l++;
									}
									_this563.l++;
								}
								_this562.l++;
							} else {
								var _this569 = this.store;
								var v44 = parseFloat(temp7);
								switch(_this569.l) {
								case 0:
									_this569.s0 = v44;
									break;
								case 1:
									_this569.s1 = v44;
									break;
								case 2:
									_this569.s2 = v44;
									break;
								case 3:
									_this569.s3 = v44;
									break;
								case 4:
									_this569.s4 = v44;
									break;
								case 5:
									_this569.s5 = v44;
									break;
								default:
									if(_this569.s6 == null) {
										_this569.s6 = new trilateral_justPath_StoreF6();
									}
									var _this570 = _this569.s6;
									switch(_this570.l) {
									case 0:
										_this570.s0 = v44;
										break;
									case 1:
										_this570.s1 = v44;
										break;
									case 2:
										_this570.s2 = v44;
										break;
									case 3:
										_this570.s3 = v44;
										break;
									case 4:
										_this570.s4 = v44;
										break;
									case 5:
										_this570.s5 = v44;
										break;
									default:
										if(_this570.s6 == null) {
											_this570.s6 = new trilateral_justPath_StoreF6();
										}
										var _this571 = _this570.s6;
										switch(_this571.l) {
										case 0:
											_this571.s0 = v44;
											break;
										case 1:
											_this571.s1 = v44;
											break;
										case 2:
											_this571.s2 = v44;
											break;
										case 3:
											_this571.s3 = v44;
											break;
										case 4:
											_this571.s4 = v44;
											break;
										case 5:
											_this571.s5 = v44;
											break;
										default:
											if(_this571.s6 == null) {
												_this571.s6 = new trilateral_justPath_StoreF6();
											}
											var _this572 = _this571.s6;
											switch(_this572.l) {
											case 0:
												_this572.s0 = v44;
												break;
											case 1:
												_this572.s1 = v44;
												break;
											case 2:
												_this572.s2 = v44;
												break;
											case 3:
												_this572.s3 = v44;
												break;
											case 4:
												_this572.s4 = v44;
												break;
											case 5:
												_this572.s5 = v44;
												break;
											default:
												if(_this572.s6 == null) {
													_this572.s6 = new trilateral_justPath_StoreF6();
												}
												var _this573 = _this572.s6;
												switch(_this573.l) {
												case 0:
													_this573.s0 = v44;
													break;
												case 1:
													_this573.s1 = v44;
													break;
												case 2:
													_this573.s2 = v44;
													break;
												case 3:
													_this573.s3 = v44;
													break;
												case 4:
													_this573.s4 = v44;
													break;
												case 5:
													_this573.s5 = v44;
													break;
												default:
													if(_this573.s6 == null) {
														_this573.s6 = new trilateral_justPath_StoreF6();
													}
													var _this574 = _this573.s6;
													switch(_this574.l) {
													case 0:
														_this574.s0 = v44;
														break;
													case 1:
														_this574.s1 = v44;
														break;
													case 2:
														_this574.s2 = v44;
														break;
													case 3:
														_this574.s3 = v44;
														break;
													case 4:
														_this574.s4 = v44;
														break;
													case 5:
														_this574.s5 = v44;
														break;
													default:
														if(_this574.s6 == null) {
															_this574.s6 = new trilateral_justPath_StoreF6();
														}
														var _this575 = _this574.s6;
														switch(_this575.l) {
														case 0:
															_this575.s0 = v44;
															break;
														case 1:
															_this575.s1 = v44;
															break;
														case 2:
															_this575.s2 = v44;
															break;
														case 3:
															_this575.s3 = v44;
															break;
														case 4:
															_this575.s4 = v44;
															break;
														case 5:
															_this575.s5 = v44;
															break;
														default:
															if(_this575.s6 == null) {
																_this575.s6 = new trilateral_justPath_StoreF6();
															}
															_this575.s6.push(v44);
														}
														_this575.l++;
													}
													_this574.l++;
												}
												_this573.l++;
											}
											_this572.l++;
										}
										_this571.l++;
									}
									_this570.l++;
								}
								_this569.l++;
							}
							temp7 = "";
						}
						this.pos--;
						exit7 = true;
					}
					if(exit7) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					this.lastX = this.store.s0;
					this.lastY = this.store.s1;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 1) {
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this576 = this.store;
						var out253 = _this576.s0;
						if(_this576.l != 0) {
							_this576.s0 = _this576.s1;
							_this576.s1 = _this576.s2;
							_this576.s2 = _this576.s3;
							_this576.s3 = _this576.s4;
							_this576.s4 = _this576.s5;
							_this576.s5 = null;
							if(_this576.s6 != null) {
								var _this577 = _this576.s6;
								var out254 = _this577.s0;
								if(_this577.l != 0) {
									_this577.s0 = _this577.s1;
									_this577.s1 = _this577.s2;
									_this577.s2 = _this577.s3;
									_this577.s3 = _this577.s4;
									_this577.s4 = _this577.s5;
									_this577.s5 = null;
									if(_this577.s6 != null) {
										var _this578 = _this577.s6;
										var out255 = _this578.s0;
										if(_this578.l != 0) {
											_this578.s0 = _this578.s1;
											_this578.s1 = _this578.s2;
											_this578.s2 = _this578.s3;
											_this578.s3 = _this578.s4;
											_this578.s4 = _this578.s5;
											_this578.s5 = null;
											if(_this578.s6 != null) {
												var _this579 = _this578.s6;
												var out256 = _this579.s0;
												if(_this579.l != 0) {
													_this579.s0 = _this579.s1;
													_this579.s1 = _this579.s2;
													_this579.s2 = _this579.s3;
													_this579.s3 = _this579.s4;
													_this579.s4 = _this579.s5;
													_this579.s5 = null;
													if(_this579.s6 != null) {
														var _this580 = _this579.s6;
														var out257 = _this580.s0;
														if(_this580.l != 0) {
															_this580.s0 = _this580.s1;
															_this580.s1 = _this580.s2;
															_this580.s2 = _this580.s3;
															_this580.s3 = _this580.s4;
															_this580.s4 = _this580.s5;
															_this580.s5 = null;
															if(_this580.s6 != null) {
																var _this581 = _this580.s6;
																var out258 = _this581.s0;
																if(_this581.l != 0) {
																	_this581.s0 = _this581.s1;
																	_this581.s1 = _this581.s2;
																	_this581.s2 = _this581.s3;
																	_this581.s3 = _this581.s4;
																	_this581.s4 = _this581.s5;
																	_this581.s5 = null;
																	if(_this581.s6 != null) {
																		var _this582 = _this581.s6;
																		var out259 = _this582.s0;
																		if(_this582.l != 0) {
																			_this582.s0 = _this582.s1;
																			_this582.s1 = _this582.s2;
																			_this582.s2 = _this582.s3;
																			_this582.s3 = _this582.s4;
																			_this582.s4 = _this582.s5;
																			_this582.s5 = null;
																			if(_this582.s6 != null) {
																				_this582.s5 = _this582.s6.shift();
																			}
																			_this582.l--;
																		}
																		_this581.s5 = out259;
																	}
																	_this581.l--;
																}
																_this580.s5 = out258;
															}
															_this580.l--;
														}
														_this579.s5 = out257;
													}
													_this579.l--;
												}
												_this578.s5 = out256;
											}
											_this578.l--;
										}
										_this577.s5 = out255;
									}
									_this577.l--;
								}
								_this576.s5 = out254;
							}
							_this576.l--;
						}
						this.lastX = out253;
						var _this583 = this.store;
						var out260 = _this583.s0;
						if(_this583.l != 0) {
							_this583.s0 = _this583.s1;
							_this583.s1 = _this583.s2;
							_this583.s2 = _this583.s3;
							_this583.s3 = _this583.s4;
							_this583.s4 = _this583.s5;
							_this583.s5 = null;
							if(_this583.s6 != null) {
								var _this584 = _this583.s6;
								var out261 = _this584.s0;
								if(_this584.l != 0) {
									_this584.s0 = _this584.s1;
									_this584.s1 = _this584.s2;
									_this584.s2 = _this584.s3;
									_this584.s3 = _this584.s4;
									_this584.s4 = _this584.s5;
									_this584.s5 = null;
									if(_this584.s6 != null) {
										var _this585 = _this584.s6;
										var out262 = _this585.s0;
										if(_this585.l != 0) {
											_this585.s0 = _this585.s1;
											_this585.s1 = _this585.s2;
											_this585.s2 = _this585.s3;
											_this585.s3 = _this585.s4;
											_this585.s4 = _this585.s5;
											_this585.s5 = null;
											if(_this585.s6 != null) {
												var _this586 = _this585.s6;
												var out263 = _this586.s0;
												if(_this586.l != 0) {
													_this586.s0 = _this586.s1;
													_this586.s1 = _this586.s2;
													_this586.s2 = _this586.s3;
													_this586.s3 = _this586.s4;
													_this586.s4 = _this586.s5;
													_this586.s5 = null;
													if(_this586.s6 != null) {
														var _this587 = _this586.s6;
														var out264 = _this587.s0;
														if(_this587.l != 0) {
															_this587.s0 = _this587.s1;
															_this587.s1 = _this587.s2;
															_this587.s2 = _this587.s3;
															_this587.s3 = _this587.s4;
															_this587.s4 = _this587.s5;
															_this587.s5 = null;
															if(_this587.s6 != null) {
																var _this588 = _this587.s6;
																var out265 = _this588.s0;
																if(_this588.l != 0) {
																	_this588.s0 = _this588.s1;
																	_this588.s1 = _this588.s2;
																	_this588.s2 = _this588.s3;
																	_this588.s3 = _this588.s4;
																	_this588.s4 = _this588.s5;
																	_this588.s5 = null;
																	if(_this588.s6 != null) {
																		var _this589 = _this588.s6;
																		var out266 = _this589.s0;
																		if(_this589.l != 0) {
																			_this589.s0 = _this589.s1;
																			_this589.s1 = _this589.s2;
																			_this589.s2 = _this589.s3;
																			_this589.s3 = _this589.s4;
																			_this589.s4 = _this589.s5;
																			_this589.s5 = null;
																			if(_this589.s6 != null) {
																				_this589.s5 = _this589.s6.shift();
																			}
																			_this589.l--;
																		}
																		_this588.s5 = out266;
																	}
																	_this588.l--;
																}
																_this587.s5 = out265;
															}
															_this587.l--;
														}
														_this586.s5 = out264;
													}
													_this586.l--;
												}
												_this585.s5 = out263;
											}
											_this585.l--;
										}
										_this584.s5 = out262;
									}
									_this584.l--;
								}
								_this583.s5 = out261;
							}
							_this583.l--;
						}
						this.lastY = out260;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 86:
				var _this590 = this.store;
				_this590.l = 0;
				_this590.s0 = null;
				_this590.s1 = null;
				_this590.s2 = null;
				_this590.s3 = null;
				_this590.s4 = null;
				_this590.s5 = null;
				_this590.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count9 = 0;
				var temp8 = "";
				var exit8 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp8 != "") {
							var _this591 = this.store;
							var v45 = parseFloat(temp8);
							switch(_this591.l) {
							case 0:
								_this591.s0 = v45;
								break;
							case 1:
								_this591.s1 = v45;
								break;
							case 2:
								_this591.s2 = v45;
								break;
							case 3:
								_this591.s3 = v45;
								break;
							case 4:
								_this591.s4 = v45;
								break;
							case 5:
								_this591.s5 = v45;
								break;
							default:
								if(_this591.s6 == null) {
									_this591.s6 = new trilateral_justPath_StoreF6();
								}
								var _this592 = _this591.s6;
								switch(_this592.l) {
								case 0:
									_this592.s0 = v45;
									break;
								case 1:
									_this592.s1 = v45;
									break;
								case 2:
									_this592.s2 = v45;
									break;
								case 3:
									_this592.s3 = v45;
									break;
								case 4:
									_this592.s4 = v45;
									break;
								case 5:
									_this592.s5 = v45;
									break;
								default:
									if(_this592.s6 == null) {
										_this592.s6 = new trilateral_justPath_StoreF6();
									}
									var _this593 = _this592.s6;
									switch(_this593.l) {
									case 0:
										_this593.s0 = v45;
										break;
									case 1:
										_this593.s1 = v45;
										break;
									case 2:
										_this593.s2 = v45;
										break;
									case 3:
										_this593.s3 = v45;
										break;
									case 4:
										_this593.s4 = v45;
										break;
									case 5:
										_this593.s5 = v45;
										break;
									default:
										if(_this593.s6 == null) {
											_this593.s6 = new trilateral_justPath_StoreF6();
										}
										var _this594 = _this593.s6;
										switch(_this594.l) {
										case 0:
											_this594.s0 = v45;
											break;
										case 1:
											_this594.s1 = v45;
											break;
										case 2:
											_this594.s2 = v45;
											break;
										case 3:
											_this594.s3 = v45;
											break;
										case 4:
											_this594.s4 = v45;
											break;
										case 5:
											_this594.s5 = v45;
											break;
										default:
											if(_this594.s6 == null) {
												_this594.s6 = new trilateral_justPath_StoreF6();
											}
											var _this595 = _this594.s6;
											switch(_this595.l) {
											case 0:
												_this595.s0 = v45;
												break;
											case 1:
												_this595.s1 = v45;
												break;
											case 2:
												_this595.s2 = v45;
												break;
											case 3:
												_this595.s3 = v45;
												break;
											case 4:
												_this595.s4 = v45;
												break;
											case 5:
												_this595.s5 = v45;
												break;
											default:
												if(_this595.s6 == null) {
													_this595.s6 = new trilateral_justPath_StoreF6();
												}
												var _this596 = _this595.s6;
												switch(_this596.l) {
												case 0:
													_this596.s0 = v45;
													break;
												case 1:
													_this596.s1 = v45;
													break;
												case 2:
													_this596.s2 = v45;
													break;
												case 3:
													_this596.s3 = v45;
													break;
												case 4:
													_this596.s4 = v45;
													break;
												case 5:
													_this596.s5 = v45;
													break;
												default:
													if(_this596.s6 == null) {
														_this596.s6 = new trilateral_justPath_StoreF6();
													}
													var _this597 = _this596.s6;
													switch(_this597.l) {
													case 0:
														_this597.s0 = v45;
														break;
													case 1:
														_this597.s1 = v45;
														break;
													case 2:
														_this597.s2 = v45;
														break;
													case 3:
														_this597.s3 = v45;
														break;
													case 4:
														_this597.s4 = v45;
														break;
													case 5:
														_this597.s5 = v45;
														break;
													default:
														if(_this597.s6 == null) {
															_this597.s6 = new trilateral_justPath_StoreF6();
														}
														_this597.s6.push(v45);
													}
													_this597.l++;
												}
												_this596.l++;
											}
											_this595.l++;
										}
										_this594.l++;
									}
									_this593.l++;
								}
								_this592.l++;
							}
							_this591.l++;
							temp8 = "";
						}
						break;
					case 45:
						if(temp8 != "") {
							var _this598 = this.store;
							var v46 = parseFloat(temp8);
							switch(_this598.l) {
							case 0:
								_this598.s0 = v46;
								break;
							case 1:
								_this598.s1 = v46;
								break;
							case 2:
								_this598.s2 = v46;
								break;
							case 3:
								_this598.s3 = v46;
								break;
							case 4:
								_this598.s4 = v46;
								break;
							case 5:
								_this598.s5 = v46;
								break;
							default:
								if(_this598.s6 == null) {
									_this598.s6 = new trilateral_justPath_StoreF6();
								}
								var _this599 = _this598.s6;
								switch(_this599.l) {
								case 0:
									_this599.s0 = v46;
									break;
								case 1:
									_this599.s1 = v46;
									break;
								case 2:
									_this599.s2 = v46;
									break;
								case 3:
									_this599.s3 = v46;
									break;
								case 4:
									_this599.s4 = v46;
									break;
								case 5:
									_this599.s5 = v46;
									break;
								default:
									if(_this599.s6 == null) {
										_this599.s6 = new trilateral_justPath_StoreF6();
									}
									var _this600 = _this599.s6;
									switch(_this600.l) {
									case 0:
										_this600.s0 = v46;
										break;
									case 1:
										_this600.s1 = v46;
										break;
									case 2:
										_this600.s2 = v46;
										break;
									case 3:
										_this600.s3 = v46;
										break;
									case 4:
										_this600.s4 = v46;
										break;
									case 5:
										_this600.s5 = v46;
										break;
									default:
										if(_this600.s6 == null) {
											_this600.s6 = new trilateral_justPath_StoreF6();
										}
										var _this601 = _this600.s6;
										switch(_this601.l) {
										case 0:
											_this601.s0 = v46;
											break;
										case 1:
											_this601.s1 = v46;
											break;
										case 2:
											_this601.s2 = v46;
											break;
										case 3:
											_this601.s3 = v46;
											break;
										case 4:
											_this601.s4 = v46;
											break;
										case 5:
											_this601.s5 = v46;
											break;
										default:
											if(_this601.s6 == null) {
												_this601.s6 = new trilateral_justPath_StoreF6();
											}
											var _this602 = _this601.s6;
											switch(_this602.l) {
											case 0:
												_this602.s0 = v46;
												break;
											case 1:
												_this602.s1 = v46;
												break;
											case 2:
												_this602.s2 = v46;
												break;
											case 3:
												_this602.s3 = v46;
												break;
											case 4:
												_this602.s4 = v46;
												break;
											case 5:
												_this602.s5 = v46;
												break;
											default:
												if(_this602.s6 == null) {
													_this602.s6 = new trilateral_justPath_StoreF6();
												}
												var _this603 = _this602.s6;
												switch(_this603.l) {
												case 0:
													_this603.s0 = v46;
													break;
												case 1:
													_this603.s1 = v46;
													break;
												case 2:
													_this603.s2 = v46;
													break;
												case 3:
													_this603.s3 = v46;
													break;
												case 4:
													_this603.s4 = v46;
													break;
												case 5:
													_this603.s5 = v46;
													break;
												default:
													if(_this603.s6 == null) {
														_this603.s6 = new trilateral_justPath_StoreF6();
													}
													var _this604 = _this603.s6;
													switch(_this604.l) {
													case 0:
														_this604.s0 = v46;
														break;
													case 1:
														_this604.s1 = v46;
														break;
													case 2:
														_this604.s2 = v46;
														break;
													case 3:
														_this604.s3 = v46;
														break;
													case 4:
														_this604.s4 = v46;
														break;
													case 5:
														_this604.s5 = v46;
														break;
													default:
														if(_this604.s6 == null) {
															_this604.s6 = new trilateral_justPath_StoreF6();
														}
														_this604.s6.push(v46);
													}
													_this604.l++;
												}
												_this603.l++;
											}
											_this602.l++;
										}
										_this601.l++;
									}
									_this600.l++;
								}
								_this599.l++;
							}
							_this598.l++;
						}
						temp8 = "-";
						break;
					case 46:
						temp8 += ".";
						break;
					case 48:
						temp8 += "0";
						break;
					case 49:
						temp8 += "1";
						break;
					case 50:
						temp8 += "2";
						break;
					case 51:
						temp8 += "3";
						break;
					case 52:
						temp8 += "4";
						break;
					case 53:
						temp8 += "5";
						break;
					case 54:
						temp8 += "6";
						break;
					case 55:
						temp8 += "7";
						break;
					case 56:
						temp8 += "8";
						break;
					case 57:
						temp8 += "9";
						break;
					default:
						if(temp8 != "") {
							var _this605 = this.store;
							var v47 = parseFloat(temp8);
							switch(_this605.l) {
							case 0:
								_this605.s0 = v47;
								break;
							case 1:
								_this605.s1 = v47;
								break;
							case 2:
								_this605.s2 = v47;
								break;
							case 3:
								_this605.s3 = v47;
								break;
							case 4:
								_this605.s4 = v47;
								break;
							case 5:
								_this605.s5 = v47;
								break;
							default:
								if(_this605.s6 == null) {
									_this605.s6 = new trilateral_justPath_StoreF6();
								}
								var _this606 = _this605.s6;
								switch(_this606.l) {
								case 0:
									_this606.s0 = v47;
									break;
								case 1:
									_this606.s1 = v47;
									break;
								case 2:
									_this606.s2 = v47;
									break;
								case 3:
									_this606.s3 = v47;
									break;
								case 4:
									_this606.s4 = v47;
									break;
								case 5:
									_this606.s5 = v47;
									break;
								default:
									if(_this606.s6 == null) {
										_this606.s6 = new trilateral_justPath_StoreF6();
									}
									var _this607 = _this606.s6;
									switch(_this607.l) {
									case 0:
										_this607.s0 = v47;
										break;
									case 1:
										_this607.s1 = v47;
										break;
									case 2:
										_this607.s2 = v47;
										break;
									case 3:
										_this607.s3 = v47;
										break;
									case 4:
										_this607.s4 = v47;
										break;
									case 5:
										_this607.s5 = v47;
										break;
									default:
										if(_this607.s6 == null) {
											_this607.s6 = new trilateral_justPath_StoreF6();
										}
										var _this608 = _this607.s6;
										switch(_this608.l) {
										case 0:
											_this608.s0 = v47;
											break;
										case 1:
											_this608.s1 = v47;
											break;
										case 2:
											_this608.s2 = v47;
											break;
										case 3:
											_this608.s3 = v47;
											break;
										case 4:
											_this608.s4 = v47;
											break;
										case 5:
											_this608.s5 = v47;
											break;
										default:
											if(_this608.s6 == null) {
												_this608.s6 = new trilateral_justPath_StoreF6();
											}
											var _this609 = _this608.s6;
											switch(_this609.l) {
											case 0:
												_this609.s0 = v47;
												break;
											case 1:
												_this609.s1 = v47;
												break;
											case 2:
												_this609.s2 = v47;
												break;
											case 3:
												_this609.s3 = v47;
												break;
											case 4:
												_this609.s4 = v47;
												break;
											case 5:
												_this609.s5 = v47;
												break;
											default:
												if(_this609.s6 == null) {
													_this609.s6 = new trilateral_justPath_StoreF6();
												}
												var _this610 = _this609.s6;
												switch(_this610.l) {
												case 0:
													_this610.s0 = v47;
													break;
												case 1:
													_this610.s1 = v47;
													break;
												case 2:
													_this610.s2 = v47;
													break;
												case 3:
													_this610.s3 = v47;
													break;
												case 4:
													_this610.s4 = v47;
													break;
												case 5:
													_this610.s5 = v47;
													break;
												default:
													if(_this610.s6 == null) {
														_this610.s6 = new trilateral_justPath_StoreF6();
													}
													var _this611 = _this610.s6;
													switch(_this611.l) {
													case 0:
														_this611.s0 = v47;
														break;
													case 1:
														_this611.s1 = v47;
														break;
													case 2:
														_this611.s2 = v47;
														break;
													case 3:
														_this611.s3 = v47;
														break;
													case 4:
														_this611.s4 = v47;
														break;
													case 5:
														_this611.s5 = v47;
														break;
													default:
														if(_this611.s6 == null) {
															_this611.s6 = new trilateral_justPath_StoreF6();
														}
														_this611.s6.push(v47);
													}
													_this611.l++;
												}
												_this610.l++;
											}
											_this609.l++;
										}
										_this608.l++;
									}
									_this607.l++;
								}
								_this606.l++;
							}
							_this605.l++;
							temp8 = "";
						}
						this.pos--;
						exit8 = true;
					}
					if(exit8) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					var _this612 = this.store;
					var out267 = _this612.s0;
					if(_this612.l != 0) {
						_this612.s0 = _this612.s1;
						_this612.s1 = _this612.s2;
						_this612.s2 = _this612.s3;
						_this612.s3 = _this612.s4;
						_this612.s4 = _this612.s5;
						_this612.s5 = null;
						if(_this612.s6 != null) {
							var _this613 = _this612.s6;
							var out268 = _this613.s0;
							if(_this613.l != 0) {
								_this613.s0 = _this613.s1;
								_this613.s1 = _this613.s2;
								_this613.s2 = _this613.s3;
								_this613.s3 = _this613.s4;
								_this613.s4 = _this613.s5;
								_this613.s5 = null;
								if(_this613.s6 != null) {
									var _this614 = _this613.s6;
									var out269 = _this614.s0;
									if(_this614.l != 0) {
										_this614.s0 = _this614.s1;
										_this614.s1 = _this614.s2;
										_this614.s2 = _this614.s3;
										_this614.s3 = _this614.s4;
										_this614.s4 = _this614.s5;
										_this614.s5 = null;
										if(_this614.s6 != null) {
											var _this615 = _this614.s6;
											var out270 = _this615.s0;
											if(_this615.l != 0) {
												_this615.s0 = _this615.s1;
												_this615.s1 = _this615.s2;
												_this615.s2 = _this615.s3;
												_this615.s3 = _this615.s4;
												_this615.s4 = _this615.s5;
												_this615.s5 = null;
												if(_this615.s6 != null) {
													var _this616 = _this615.s6;
													var out271 = _this616.s0;
													if(_this616.l != 0) {
														_this616.s0 = _this616.s1;
														_this616.s1 = _this616.s2;
														_this616.s2 = _this616.s3;
														_this616.s3 = _this616.s4;
														_this616.s4 = _this616.s5;
														_this616.s5 = null;
														if(_this616.s6 != null) {
															var _this617 = _this616.s6;
															var out272 = _this617.s0;
															if(_this617.l != 0) {
																_this617.s0 = _this617.s1;
																_this617.s1 = _this617.s2;
																_this617.s2 = _this617.s3;
																_this617.s3 = _this617.s4;
																_this617.s4 = _this617.s5;
																_this617.s5 = null;
																if(_this617.s6 != null) {
																	var _this618 = _this617.s6;
																	var out273 = _this618.s0;
																	if(_this618.l != 0) {
																		_this618.s0 = _this618.s1;
																		_this618.s1 = _this618.s2;
																		_this618.s2 = _this618.s3;
																		_this618.s3 = _this618.s4;
																		_this618.s4 = _this618.s5;
																		_this618.s5 = null;
																		if(_this618.s6 != null) {
																			_this618.s5 = _this618.s6.shift();
																		}
																		_this618.l--;
																	}
																	_this617.s5 = out273;
																}
																_this617.l--;
															}
															_this616.s5 = out272;
														}
														_this616.l--;
													}
													_this615.s5 = out271;
												}
												_this615.l--;
											}
											_this614.s5 = out270;
										}
										_this614.l--;
									}
									_this613.s5 = out269;
								}
								_this613.l--;
							}
							_this612.s5 = out268;
						}
						_this612.l--;
					}
					this.lastY = out267;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var _this619 = this.store;
						var out274 = _this619.s0;
						if(_this619.l != 0) {
							_this619.s0 = _this619.s1;
							_this619.s1 = _this619.s2;
							_this619.s2 = _this619.s3;
							_this619.s3 = _this619.s4;
							_this619.s4 = _this619.s5;
							_this619.s5 = null;
							if(_this619.s6 != null) {
								var _this620 = _this619.s6;
								var out275 = _this620.s0;
								if(_this620.l != 0) {
									_this620.s0 = _this620.s1;
									_this620.s1 = _this620.s2;
									_this620.s2 = _this620.s3;
									_this620.s3 = _this620.s4;
									_this620.s4 = _this620.s5;
									_this620.s5 = null;
									if(_this620.s6 != null) {
										var _this621 = _this620.s6;
										var out276 = _this621.s0;
										if(_this621.l != 0) {
											_this621.s0 = _this621.s1;
											_this621.s1 = _this621.s2;
											_this621.s2 = _this621.s3;
											_this621.s3 = _this621.s4;
											_this621.s4 = _this621.s5;
											_this621.s5 = null;
											if(_this621.s6 != null) {
												var _this622 = _this621.s6;
												var out277 = _this622.s0;
												if(_this622.l != 0) {
													_this622.s0 = _this622.s1;
													_this622.s1 = _this622.s2;
													_this622.s2 = _this622.s3;
													_this622.s3 = _this622.s4;
													_this622.s4 = _this622.s5;
													_this622.s5 = null;
													if(_this622.s6 != null) {
														var _this623 = _this622.s6;
														var out278 = _this623.s0;
														if(_this623.l != 0) {
															_this623.s0 = _this623.s1;
															_this623.s1 = _this623.s2;
															_this623.s2 = _this623.s3;
															_this623.s3 = _this623.s4;
															_this623.s4 = _this623.s5;
															_this623.s5 = null;
															if(_this623.s6 != null) {
																var _this624 = _this623.s6;
																var out279 = _this624.s0;
																if(_this624.l != 0) {
																	_this624.s0 = _this624.s1;
																	_this624.s1 = _this624.s2;
																	_this624.s2 = _this624.s3;
																	_this624.s3 = _this624.s4;
																	_this624.s4 = _this624.s5;
																	_this624.s5 = null;
																	if(_this624.s6 != null) {
																		var _this625 = _this624.s6;
																		var out280 = _this625.s0;
																		if(_this625.l != 0) {
																			_this625.s0 = _this625.s1;
																			_this625.s1 = _this625.s2;
																			_this625.s2 = _this625.s3;
																			_this625.s3 = _this625.s4;
																			_this625.s4 = _this625.s5;
																			_this625.s5 = null;
																			if(_this625.s6 != null) {
																				_this625.s5 = _this625.s6.shift();
																			}
																			_this625.l--;
																		}
																		_this624.s5 = out280;
																	}
																	_this624.l--;
																}
																_this623.s5 = out279;
															}
															_this623.l--;
														}
														_this622.s5 = out278;
													}
													_this622.l--;
												}
												_this621.s5 = out277;
											}
											_this621.l--;
										}
										_this620.s5 = out276;
									}
									_this620.l--;
								}
								_this619.s5 = out275;
							}
							_this619.l--;
						}
						this.lastY = out274;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 90:case 122:
				this.lastX = 0;
				this.lastY = 0;
				break;
			case 97:
				var _this626 = this.store;
				_this626.l = 0;
				_this626.s0 = null;
				_this626.s1 = null;
				_this626.s2 = null;
				_this626.s3 = null;
				_this626.s4 = null;
				_this626.s5 = null;
				_this626.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count10 = 0;
				var temp9 = "";
				var exit9 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp9 != "") {
							if((this.store.l & 1) == 0) {
								var _this627 = this.store;
								var v48 = parseFloat(temp9);
								switch(_this627.l) {
								case 0:
									_this627.s0 = v48;
									break;
								case 1:
									_this627.s1 = v48;
									break;
								case 2:
									_this627.s2 = v48;
									break;
								case 3:
									_this627.s3 = v48;
									break;
								case 4:
									_this627.s4 = v48;
									break;
								case 5:
									_this627.s5 = v48;
									break;
								default:
									if(_this627.s6 == null) {
										_this627.s6 = new trilateral_justPath_StoreF6();
									}
									var _this628 = _this627.s6;
									switch(_this628.l) {
									case 0:
										_this628.s0 = v48;
										break;
									case 1:
										_this628.s1 = v48;
										break;
									case 2:
										_this628.s2 = v48;
										break;
									case 3:
										_this628.s3 = v48;
										break;
									case 4:
										_this628.s4 = v48;
										break;
									case 5:
										_this628.s5 = v48;
										break;
									default:
										if(_this628.s6 == null) {
											_this628.s6 = new trilateral_justPath_StoreF6();
										}
										var _this629 = _this628.s6;
										switch(_this629.l) {
										case 0:
											_this629.s0 = v48;
											break;
										case 1:
											_this629.s1 = v48;
											break;
										case 2:
											_this629.s2 = v48;
											break;
										case 3:
											_this629.s3 = v48;
											break;
										case 4:
											_this629.s4 = v48;
											break;
										case 5:
											_this629.s5 = v48;
											break;
										default:
											if(_this629.s6 == null) {
												_this629.s6 = new trilateral_justPath_StoreF6();
											}
											var _this630 = _this629.s6;
											switch(_this630.l) {
											case 0:
												_this630.s0 = v48;
												break;
											case 1:
												_this630.s1 = v48;
												break;
											case 2:
												_this630.s2 = v48;
												break;
											case 3:
												_this630.s3 = v48;
												break;
											case 4:
												_this630.s4 = v48;
												break;
											case 5:
												_this630.s5 = v48;
												break;
											default:
												if(_this630.s6 == null) {
													_this630.s6 = new trilateral_justPath_StoreF6();
												}
												var _this631 = _this630.s6;
												switch(_this631.l) {
												case 0:
													_this631.s0 = v48;
													break;
												case 1:
													_this631.s1 = v48;
													break;
												case 2:
													_this631.s2 = v48;
													break;
												case 3:
													_this631.s3 = v48;
													break;
												case 4:
													_this631.s4 = v48;
													break;
												case 5:
													_this631.s5 = v48;
													break;
												default:
													if(_this631.s6 == null) {
														_this631.s6 = new trilateral_justPath_StoreF6();
													}
													var _this632 = _this631.s6;
													switch(_this632.l) {
													case 0:
														_this632.s0 = v48;
														break;
													case 1:
														_this632.s1 = v48;
														break;
													case 2:
														_this632.s2 = v48;
														break;
													case 3:
														_this632.s3 = v48;
														break;
													case 4:
														_this632.s4 = v48;
														break;
													case 5:
														_this632.s5 = v48;
														break;
													default:
														if(_this632.s6 == null) {
															_this632.s6 = new trilateral_justPath_StoreF6();
														}
														var _this633 = _this632.s6;
														switch(_this633.l) {
														case 0:
															_this633.s0 = v48;
															break;
														case 1:
															_this633.s1 = v48;
															break;
														case 2:
															_this633.s2 = v48;
															break;
														case 3:
															_this633.s3 = v48;
															break;
														case 4:
															_this633.s4 = v48;
															break;
														case 5:
															_this633.s5 = v48;
															break;
														default:
															if(_this633.s6 == null) {
																_this633.s6 = new trilateral_justPath_StoreF6();
															}
															_this633.s6.push(v48);
														}
														_this633.l++;
													}
													_this632.l++;
												}
												_this631.l++;
											}
											_this630.l++;
										}
										_this629.l++;
									}
									_this628.l++;
								}
								_this627.l++;
							} else {
								var _this634 = this.store;
								var v49 = parseFloat(temp9);
								switch(_this634.l) {
								case 0:
									_this634.s0 = v49;
									break;
								case 1:
									_this634.s1 = v49;
									break;
								case 2:
									_this634.s2 = v49;
									break;
								case 3:
									_this634.s3 = v49;
									break;
								case 4:
									_this634.s4 = v49;
									break;
								case 5:
									_this634.s5 = v49;
									break;
								default:
									if(_this634.s6 == null) {
										_this634.s6 = new trilateral_justPath_StoreF6();
									}
									var _this635 = _this634.s6;
									switch(_this635.l) {
									case 0:
										_this635.s0 = v49;
										break;
									case 1:
										_this635.s1 = v49;
										break;
									case 2:
										_this635.s2 = v49;
										break;
									case 3:
										_this635.s3 = v49;
										break;
									case 4:
										_this635.s4 = v49;
										break;
									case 5:
										_this635.s5 = v49;
										break;
									default:
										if(_this635.s6 == null) {
											_this635.s6 = new trilateral_justPath_StoreF6();
										}
										var _this636 = _this635.s6;
										switch(_this636.l) {
										case 0:
											_this636.s0 = v49;
											break;
										case 1:
											_this636.s1 = v49;
											break;
										case 2:
											_this636.s2 = v49;
											break;
										case 3:
											_this636.s3 = v49;
											break;
										case 4:
											_this636.s4 = v49;
											break;
										case 5:
											_this636.s5 = v49;
											break;
										default:
											if(_this636.s6 == null) {
												_this636.s6 = new trilateral_justPath_StoreF6();
											}
											var _this637 = _this636.s6;
											switch(_this637.l) {
											case 0:
												_this637.s0 = v49;
												break;
											case 1:
												_this637.s1 = v49;
												break;
											case 2:
												_this637.s2 = v49;
												break;
											case 3:
												_this637.s3 = v49;
												break;
											case 4:
												_this637.s4 = v49;
												break;
											case 5:
												_this637.s5 = v49;
												break;
											default:
												if(_this637.s6 == null) {
													_this637.s6 = new trilateral_justPath_StoreF6();
												}
												var _this638 = _this637.s6;
												switch(_this638.l) {
												case 0:
													_this638.s0 = v49;
													break;
												case 1:
													_this638.s1 = v49;
													break;
												case 2:
													_this638.s2 = v49;
													break;
												case 3:
													_this638.s3 = v49;
													break;
												case 4:
													_this638.s4 = v49;
													break;
												case 5:
													_this638.s5 = v49;
													break;
												default:
													if(_this638.s6 == null) {
														_this638.s6 = new trilateral_justPath_StoreF6();
													}
													var _this639 = _this638.s6;
													switch(_this639.l) {
													case 0:
														_this639.s0 = v49;
														break;
													case 1:
														_this639.s1 = v49;
														break;
													case 2:
														_this639.s2 = v49;
														break;
													case 3:
														_this639.s3 = v49;
														break;
													case 4:
														_this639.s4 = v49;
														break;
													case 5:
														_this639.s5 = v49;
														break;
													default:
														if(_this639.s6 == null) {
															_this639.s6 = new trilateral_justPath_StoreF6();
														}
														var _this640 = _this639.s6;
														switch(_this640.l) {
														case 0:
															_this640.s0 = v49;
															break;
														case 1:
															_this640.s1 = v49;
															break;
														case 2:
															_this640.s2 = v49;
															break;
														case 3:
															_this640.s3 = v49;
															break;
														case 4:
															_this640.s4 = v49;
															break;
														case 5:
															_this640.s5 = v49;
															break;
														default:
															if(_this640.s6 == null) {
																_this640.s6 = new trilateral_justPath_StoreF6();
															}
															_this640.s6.push(v49);
														}
														_this640.l++;
													}
													_this639.l++;
												}
												_this638.l++;
											}
											_this637.l++;
										}
										_this636.l++;
									}
									_this635.l++;
								}
								_this634.l++;
							}
							temp9 = "";
						}
						break;
					case 45:
						if(temp9 != "") {
							if((this.store.l & 1) == 0) {
								var _this641 = this.store;
								var v50 = parseFloat(temp9);
								switch(_this641.l) {
								case 0:
									_this641.s0 = v50;
									break;
								case 1:
									_this641.s1 = v50;
									break;
								case 2:
									_this641.s2 = v50;
									break;
								case 3:
									_this641.s3 = v50;
									break;
								case 4:
									_this641.s4 = v50;
									break;
								case 5:
									_this641.s5 = v50;
									break;
								default:
									if(_this641.s6 == null) {
										_this641.s6 = new trilateral_justPath_StoreF6();
									}
									var _this642 = _this641.s6;
									switch(_this642.l) {
									case 0:
										_this642.s0 = v50;
										break;
									case 1:
										_this642.s1 = v50;
										break;
									case 2:
										_this642.s2 = v50;
										break;
									case 3:
										_this642.s3 = v50;
										break;
									case 4:
										_this642.s4 = v50;
										break;
									case 5:
										_this642.s5 = v50;
										break;
									default:
										if(_this642.s6 == null) {
											_this642.s6 = new trilateral_justPath_StoreF6();
										}
										var _this643 = _this642.s6;
										switch(_this643.l) {
										case 0:
											_this643.s0 = v50;
											break;
										case 1:
											_this643.s1 = v50;
											break;
										case 2:
											_this643.s2 = v50;
											break;
										case 3:
											_this643.s3 = v50;
											break;
										case 4:
											_this643.s4 = v50;
											break;
										case 5:
											_this643.s5 = v50;
											break;
										default:
											if(_this643.s6 == null) {
												_this643.s6 = new trilateral_justPath_StoreF6();
											}
											var _this644 = _this643.s6;
											switch(_this644.l) {
											case 0:
												_this644.s0 = v50;
												break;
											case 1:
												_this644.s1 = v50;
												break;
											case 2:
												_this644.s2 = v50;
												break;
											case 3:
												_this644.s3 = v50;
												break;
											case 4:
												_this644.s4 = v50;
												break;
											case 5:
												_this644.s5 = v50;
												break;
											default:
												if(_this644.s6 == null) {
													_this644.s6 = new trilateral_justPath_StoreF6();
												}
												var _this645 = _this644.s6;
												switch(_this645.l) {
												case 0:
													_this645.s0 = v50;
													break;
												case 1:
													_this645.s1 = v50;
													break;
												case 2:
													_this645.s2 = v50;
													break;
												case 3:
													_this645.s3 = v50;
													break;
												case 4:
													_this645.s4 = v50;
													break;
												case 5:
													_this645.s5 = v50;
													break;
												default:
													if(_this645.s6 == null) {
														_this645.s6 = new trilateral_justPath_StoreF6();
													}
													var _this646 = _this645.s6;
													switch(_this646.l) {
													case 0:
														_this646.s0 = v50;
														break;
													case 1:
														_this646.s1 = v50;
														break;
													case 2:
														_this646.s2 = v50;
														break;
													case 3:
														_this646.s3 = v50;
														break;
													case 4:
														_this646.s4 = v50;
														break;
													case 5:
														_this646.s5 = v50;
														break;
													default:
														if(_this646.s6 == null) {
															_this646.s6 = new trilateral_justPath_StoreF6();
														}
														var _this647 = _this646.s6;
														switch(_this647.l) {
														case 0:
															_this647.s0 = v50;
															break;
														case 1:
															_this647.s1 = v50;
															break;
														case 2:
															_this647.s2 = v50;
															break;
														case 3:
															_this647.s3 = v50;
															break;
														case 4:
															_this647.s4 = v50;
															break;
														case 5:
															_this647.s5 = v50;
															break;
														default:
															if(_this647.s6 == null) {
																_this647.s6 = new trilateral_justPath_StoreF6();
															}
															_this647.s6.push(v50);
														}
														_this647.l++;
													}
													_this646.l++;
												}
												_this645.l++;
											}
											_this644.l++;
										}
										_this643.l++;
									}
									_this642.l++;
								}
								_this641.l++;
							} else {
								var _this648 = this.store;
								var v51 = parseFloat(temp9);
								switch(_this648.l) {
								case 0:
									_this648.s0 = v51;
									break;
								case 1:
									_this648.s1 = v51;
									break;
								case 2:
									_this648.s2 = v51;
									break;
								case 3:
									_this648.s3 = v51;
									break;
								case 4:
									_this648.s4 = v51;
									break;
								case 5:
									_this648.s5 = v51;
									break;
								default:
									if(_this648.s6 == null) {
										_this648.s6 = new trilateral_justPath_StoreF6();
									}
									var _this649 = _this648.s6;
									switch(_this649.l) {
									case 0:
										_this649.s0 = v51;
										break;
									case 1:
										_this649.s1 = v51;
										break;
									case 2:
										_this649.s2 = v51;
										break;
									case 3:
										_this649.s3 = v51;
										break;
									case 4:
										_this649.s4 = v51;
										break;
									case 5:
										_this649.s5 = v51;
										break;
									default:
										if(_this649.s6 == null) {
											_this649.s6 = new trilateral_justPath_StoreF6();
										}
										var _this650 = _this649.s6;
										switch(_this650.l) {
										case 0:
											_this650.s0 = v51;
											break;
										case 1:
											_this650.s1 = v51;
											break;
										case 2:
											_this650.s2 = v51;
											break;
										case 3:
											_this650.s3 = v51;
											break;
										case 4:
											_this650.s4 = v51;
											break;
										case 5:
											_this650.s5 = v51;
											break;
										default:
											if(_this650.s6 == null) {
												_this650.s6 = new trilateral_justPath_StoreF6();
											}
											var _this651 = _this650.s6;
											switch(_this651.l) {
											case 0:
												_this651.s0 = v51;
												break;
											case 1:
												_this651.s1 = v51;
												break;
											case 2:
												_this651.s2 = v51;
												break;
											case 3:
												_this651.s3 = v51;
												break;
											case 4:
												_this651.s4 = v51;
												break;
											case 5:
												_this651.s5 = v51;
												break;
											default:
												if(_this651.s6 == null) {
													_this651.s6 = new trilateral_justPath_StoreF6();
												}
												var _this652 = _this651.s6;
												switch(_this652.l) {
												case 0:
													_this652.s0 = v51;
													break;
												case 1:
													_this652.s1 = v51;
													break;
												case 2:
													_this652.s2 = v51;
													break;
												case 3:
													_this652.s3 = v51;
													break;
												case 4:
													_this652.s4 = v51;
													break;
												case 5:
													_this652.s5 = v51;
													break;
												default:
													if(_this652.s6 == null) {
														_this652.s6 = new trilateral_justPath_StoreF6();
													}
													var _this653 = _this652.s6;
													switch(_this653.l) {
													case 0:
														_this653.s0 = v51;
														break;
													case 1:
														_this653.s1 = v51;
														break;
													case 2:
														_this653.s2 = v51;
														break;
													case 3:
														_this653.s3 = v51;
														break;
													case 4:
														_this653.s4 = v51;
														break;
													case 5:
														_this653.s5 = v51;
														break;
													default:
														if(_this653.s6 == null) {
															_this653.s6 = new trilateral_justPath_StoreF6();
														}
														var _this654 = _this653.s6;
														switch(_this654.l) {
														case 0:
															_this654.s0 = v51;
															break;
														case 1:
															_this654.s1 = v51;
															break;
														case 2:
															_this654.s2 = v51;
															break;
														case 3:
															_this654.s3 = v51;
															break;
														case 4:
															_this654.s4 = v51;
															break;
														case 5:
															_this654.s5 = v51;
															break;
														default:
															if(_this654.s6 == null) {
																_this654.s6 = new trilateral_justPath_StoreF6();
															}
															_this654.s6.push(v51);
														}
														_this654.l++;
													}
													_this653.l++;
												}
												_this652.l++;
											}
											_this651.l++;
										}
										_this650.l++;
									}
									_this649.l++;
								}
								_this648.l++;
							}
						}
						temp9 = "-";
						break;
					case 46:
						temp9 += ".";
						break;
					case 48:
						temp9 += "0";
						break;
					case 49:
						temp9 += "1";
						break;
					case 50:
						temp9 += "2";
						break;
					case 51:
						temp9 += "3";
						break;
					case 52:
						temp9 += "4";
						break;
					case 53:
						temp9 += "5";
						break;
					case 54:
						temp9 += "6";
						break;
					case 55:
						temp9 += "7";
						break;
					case 56:
						temp9 += "8";
						break;
					case 57:
						temp9 += "9";
						break;
					default:
						if(temp9 != "") {
							if((this.store.l & 1) == 0) {
								var _this655 = this.store;
								var v52 = parseFloat(temp9);
								switch(_this655.l) {
								case 0:
									_this655.s0 = v52;
									break;
								case 1:
									_this655.s1 = v52;
									break;
								case 2:
									_this655.s2 = v52;
									break;
								case 3:
									_this655.s3 = v52;
									break;
								case 4:
									_this655.s4 = v52;
									break;
								case 5:
									_this655.s5 = v52;
									break;
								default:
									if(_this655.s6 == null) {
										_this655.s6 = new trilateral_justPath_StoreF6();
									}
									var _this656 = _this655.s6;
									switch(_this656.l) {
									case 0:
										_this656.s0 = v52;
										break;
									case 1:
										_this656.s1 = v52;
										break;
									case 2:
										_this656.s2 = v52;
										break;
									case 3:
										_this656.s3 = v52;
										break;
									case 4:
										_this656.s4 = v52;
										break;
									case 5:
										_this656.s5 = v52;
										break;
									default:
										if(_this656.s6 == null) {
											_this656.s6 = new trilateral_justPath_StoreF6();
										}
										var _this657 = _this656.s6;
										switch(_this657.l) {
										case 0:
											_this657.s0 = v52;
											break;
										case 1:
											_this657.s1 = v52;
											break;
										case 2:
											_this657.s2 = v52;
											break;
										case 3:
											_this657.s3 = v52;
											break;
										case 4:
											_this657.s4 = v52;
											break;
										case 5:
											_this657.s5 = v52;
											break;
										default:
											if(_this657.s6 == null) {
												_this657.s6 = new trilateral_justPath_StoreF6();
											}
											var _this658 = _this657.s6;
											switch(_this658.l) {
											case 0:
												_this658.s0 = v52;
												break;
											case 1:
												_this658.s1 = v52;
												break;
											case 2:
												_this658.s2 = v52;
												break;
											case 3:
												_this658.s3 = v52;
												break;
											case 4:
												_this658.s4 = v52;
												break;
											case 5:
												_this658.s5 = v52;
												break;
											default:
												if(_this658.s6 == null) {
													_this658.s6 = new trilateral_justPath_StoreF6();
												}
												var _this659 = _this658.s6;
												switch(_this659.l) {
												case 0:
													_this659.s0 = v52;
													break;
												case 1:
													_this659.s1 = v52;
													break;
												case 2:
													_this659.s2 = v52;
													break;
												case 3:
													_this659.s3 = v52;
													break;
												case 4:
													_this659.s4 = v52;
													break;
												case 5:
													_this659.s5 = v52;
													break;
												default:
													if(_this659.s6 == null) {
														_this659.s6 = new trilateral_justPath_StoreF6();
													}
													var _this660 = _this659.s6;
													switch(_this660.l) {
													case 0:
														_this660.s0 = v52;
														break;
													case 1:
														_this660.s1 = v52;
														break;
													case 2:
														_this660.s2 = v52;
														break;
													case 3:
														_this660.s3 = v52;
														break;
													case 4:
														_this660.s4 = v52;
														break;
													case 5:
														_this660.s5 = v52;
														break;
													default:
														if(_this660.s6 == null) {
															_this660.s6 = new trilateral_justPath_StoreF6();
														}
														var _this661 = _this660.s6;
														switch(_this661.l) {
														case 0:
															_this661.s0 = v52;
															break;
														case 1:
															_this661.s1 = v52;
															break;
														case 2:
															_this661.s2 = v52;
															break;
														case 3:
															_this661.s3 = v52;
															break;
														case 4:
															_this661.s4 = v52;
															break;
														case 5:
															_this661.s5 = v52;
															break;
														default:
															if(_this661.s6 == null) {
																_this661.s6 = new trilateral_justPath_StoreF6();
															}
															_this661.s6.push(v52);
														}
														_this661.l++;
													}
													_this660.l++;
												}
												_this659.l++;
											}
											_this658.l++;
										}
										_this657.l++;
									}
									_this656.l++;
								}
								_this655.l++;
							} else {
								var _this662 = this.store;
								var v53 = parseFloat(temp9);
								switch(_this662.l) {
								case 0:
									_this662.s0 = v53;
									break;
								case 1:
									_this662.s1 = v53;
									break;
								case 2:
									_this662.s2 = v53;
									break;
								case 3:
									_this662.s3 = v53;
									break;
								case 4:
									_this662.s4 = v53;
									break;
								case 5:
									_this662.s5 = v53;
									break;
								default:
									if(_this662.s6 == null) {
										_this662.s6 = new trilateral_justPath_StoreF6();
									}
									var _this663 = _this662.s6;
									switch(_this663.l) {
									case 0:
										_this663.s0 = v53;
										break;
									case 1:
										_this663.s1 = v53;
										break;
									case 2:
										_this663.s2 = v53;
										break;
									case 3:
										_this663.s3 = v53;
										break;
									case 4:
										_this663.s4 = v53;
										break;
									case 5:
										_this663.s5 = v53;
										break;
									default:
										if(_this663.s6 == null) {
											_this663.s6 = new trilateral_justPath_StoreF6();
										}
										var _this664 = _this663.s6;
										switch(_this664.l) {
										case 0:
											_this664.s0 = v53;
											break;
										case 1:
											_this664.s1 = v53;
											break;
										case 2:
											_this664.s2 = v53;
											break;
										case 3:
											_this664.s3 = v53;
											break;
										case 4:
											_this664.s4 = v53;
											break;
										case 5:
											_this664.s5 = v53;
											break;
										default:
											if(_this664.s6 == null) {
												_this664.s6 = new trilateral_justPath_StoreF6();
											}
											var _this665 = _this664.s6;
											switch(_this665.l) {
											case 0:
												_this665.s0 = v53;
												break;
											case 1:
												_this665.s1 = v53;
												break;
											case 2:
												_this665.s2 = v53;
												break;
											case 3:
												_this665.s3 = v53;
												break;
											case 4:
												_this665.s4 = v53;
												break;
											case 5:
												_this665.s5 = v53;
												break;
											default:
												if(_this665.s6 == null) {
													_this665.s6 = new trilateral_justPath_StoreF6();
												}
												var _this666 = _this665.s6;
												switch(_this666.l) {
												case 0:
													_this666.s0 = v53;
													break;
												case 1:
													_this666.s1 = v53;
													break;
												case 2:
													_this666.s2 = v53;
													break;
												case 3:
													_this666.s3 = v53;
													break;
												case 4:
													_this666.s4 = v53;
													break;
												case 5:
													_this666.s5 = v53;
													break;
												default:
													if(_this666.s6 == null) {
														_this666.s6 = new trilateral_justPath_StoreF6();
													}
													var _this667 = _this666.s6;
													switch(_this667.l) {
													case 0:
														_this667.s0 = v53;
														break;
													case 1:
														_this667.s1 = v53;
														break;
													case 2:
														_this667.s2 = v53;
														break;
													case 3:
														_this667.s3 = v53;
														break;
													case 4:
														_this667.s4 = v53;
														break;
													case 5:
														_this667.s5 = v53;
														break;
													default:
														if(_this667.s6 == null) {
															_this667.s6 = new trilateral_justPath_StoreF6();
														}
														var _this668 = _this667.s6;
														switch(_this668.l) {
														case 0:
															_this668.s0 = v53;
															break;
														case 1:
															_this668.s1 = v53;
															break;
														case 2:
															_this668.s2 = v53;
															break;
														case 3:
															_this668.s3 = v53;
															break;
														case 4:
															_this668.s4 = v53;
															break;
														case 5:
															_this668.s5 = v53;
															break;
														default:
															if(_this668.s6 == null) {
																_this668.s6 = new trilateral_justPath_StoreF6();
															}
															_this668.s6.push(v53);
														}
														_this668.l++;
													}
													_this667.l++;
												}
												_this666.l++;
											}
											_this665.l++;
										}
										_this664.l++;
									}
									_this663.l++;
								}
								_this662.l++;
							}
							temp9 = "";
						}
						this.pos--;
						exit9 = true;
					}
					if(exit9) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 7) {
					var sx4 = this.lastX;
					var sy4 = this.lastY;
					var _this669 = this.store;
					var out281 = _this669.s0;
					if(_this669.l != 0) {
						_this669.s0 = _this669.s1;
						_this669.s1 = _this669.s2;
						_this669.s2 = _this669.s3;
						_this669.s3 = _this669.s4;
						_this669.s4 = _this669.s5;
						_this669.s5 = null;
						if(_this669.s6 != null) {
							var _this670 = _this669.s6;
							var out282 = _this670.s0;
							if(_this670.l != 0) {
								_this670.s0 = _this670.s1;
								_this670.s1 = _this670.s2;
								_this670.s2 = _this670.s3;
								_this670.s3 = _this670.s4;
								_this670.s4 = _this670.s5;
								_this670.s5 = null;
								if(_this670.s6 != null) {
									var _this671 = _this670.s6;
									var out283 = _this671.s0;
									if(_this671.l != 0) {
										_this671.s0 = _this671.s1;
										_this671.s1 = _this671.s2;
										_this671.s2 = _this671.s3;
										_this671.s3 = _this671.s4;
										_this671.s4 = _this671.s5;
										_this671.s5 = null;
										if(_this671.s6 != null) {
											var _this672 = _this671.s6;
											var out284 = _this672.s0;
											if(_this672.l != 0) {
												_this672.s0 = _this672.s1;
												_this672.s1 = _this672.s2;
												_this672.s2 = _this672.s3;
												_this672.s3 = _this672.s4;
												_this672.s4 = _this672.s5;
												_this672.s5 = null;
												if(_this672.s6 != null) {
													var _this673 = _this672.s6;
													var out285 = _this673.s0;
													if(_this673.l != 0) {
														_this673.s0 = _this673.s1;
														_this673.s1 = _this673.s2;
														_this673.s2 = _this673.s3;
														_this673.s3 = _this673.s4;
														_this673.s4 = _this673.s5;
														_this673.s5 = null;
														if(_this673.s6 != null) {
															var _this674 = _this673.s6;
															var out286 = _this674.s0;
															if(_this674.l != 0) {
																_this674.s0 = _this674.s1;
																_this674.s1 = _this674.s2;
																_this674.s2 = _this674.s3;
																_this674.s3 = _this674.s4;
																_this674.s4 = _this674.s5;
																_this674.s5 = null;
																if(_this674.s6 != null) {
																	var _this675 = _this674.s6;
																	var out287 = _this675.s0;
																	if(_this675.l != 0) {
																		_this675.s0 = _this675.s1;
																		_this675.s1 = _this675.s2;
																		_this675.s2 = _this675.s3;
																		_this675.s3 = _this675.s4;
																		_this675.s4 = _this675.s5;
																		_this675.s5 = null;
																		if(_this675.s6 != null) {
																			_this675.s5 = _this675.s6.shift();
																		}
																		_this675.l--;
																	}
																	_this674.s5 = out287;
																}
																_this674.l--;
															}
															_this673.s5 = out286;
														}
														_this673.l--;
													}
													_this672.s5 = out285;
												}
												_this672.l--;
											}
											_this671.s5 = out284;
										}
										_this671.l--;
									}
									_this670.s5 = out283;
								}
								_this670.l--;
							}
							_this669.s5 = out282;
						}
						_this669.l--;
					}
					var xr2 = out281;
					var _this676 = this.store;
					var out288 = _this676.s0;
					if(_this676.l != 0) {
						_this676.s0 = _this676.s1;
						_this676.s1 = _this676.s2;
						_this676.s2 = _this676.s3;
						_this676.s3 = _this676.s4;
						_this676.s4 = _this676.s5;
						_this676.s5 = null;
						if(_this676.s6 != null) {
							var _this677 = _this676.s6;
							var out289 = _this677.s0;
							if(_this677.l != 0) {
								_this677.s0 = _this677.s1;
								_this677.s1 = _this677.s2;
								_this677.s2 = _this677.s3;
								_this677.s3 = _this677.s4;
								_this677.s4 = _this677.s5;
								_this677.s5 = null;
								if(_this677.s6 != null) {
									var _this678 = _this677.s6;
									var out290 = _this678.s0;
									if(_this678.l != 0) {
										_this678.s0 = _this678.s1;
										_this678.s1 = _this678.s2;
										_this678.s2 = _this678.s3;
										_this678.s3 = _this678.s4;
										_this678.s4 = _this678.s5;
										_this678.s5 = null;
										if(_this678.s6 != null) {
											var _this679 = _this678.s6;
											var out291 = _this679.s0;
											if(_this679.l != 0) {
												_this679.s0 = _this679.s1;
												_this679.s1 = _this679.s2;
												_this679.s2 = _this679.s3;
												_this679.s3 = _this679.s4;
												_this679.s4 = _this679.s5;
												_this679.s5 = null;
												if(_this679.s6 != null) {
													var _this680 = _this679.s6;
													var out292 = _this680.s0;
													if(_this680.l != 0) {
														_this680.s0 = _this680.s1;
														_this680.s1 = _this680.s2;
														_this680.s2 = _this680.s3;
														_this680.s3 = _this680.s4;
														_this680.s4 = _this680.s5;
														_this680.s5 = null;
														if(_this680.s6 != null) {
															var _this681 = _this680.s6;
															var out293 = _this681.s0;
															if(_this681.l != 0) {
																_this681.s0 = _this681.s1;
																_this681.s1 = _this681.s2;
																_this681.s2 = _this681.s3;
																_this681.s3 = _this681.s4;
																_this681.s4 = _this681.s5;
																_this681.s5 = null;
																if(_this681.s6 != null) {
																	var _this682 = _this681.s6;
																	var out294 = _this682.s0;
																	if(_this682.l != 0) {
																		_this682.s0 = _this682.s1;
																		_this682.s1 = _this682.s2;
																		_this682.s2 = _this682.s3;
																		_this682.s3 = _this682.s4;
																		_this682.s4 = _this682.s5;
																		_this682.s5 = null;
																		if(_this682.s6 != null) {
																			_this682.s5 = _this682.s6.shift();
																		}
																		_this682.l--;
																	}
																	_this681.s5 = out294;
																}
																_this681.l--;
															}
															_this680.s5 = out293;
														}
														_this680.l--;
													}
													_this679.s5 = out292;
												}
												_this679.l--;
											}
											_this678.s5 = out291;
										}
										_this678.l--;
									}
									_this677.s5 = out290;
								}
								_this677.l--;
							}
							_this676.s5 = out289;
						}
						_this676.l--;
					}
					var yr2 = out288;
					var _this683 = this.store;
					var out295 = _this683.s0;
					if(_this683.l != 0) {
						_this683.s0 = _this683.s1;
						_this683.s1 = _this683.s2;
						_this683.s2 = _this683.s3;
						_this683.s3 = _this683.s4;
						_this683.s4 = _this683.s5;
						_this683.s5 = null;
						if(_this683.s6 != null) {
							var _this684 = _this683.s6;
							var out296 = _this684.s0;
							if(_this684.l != 0) {
								_this684.s0 = _this684.s1;
								_this684.s1 = _this684.s2;
								_this684.s2 = _this684.s3;
								_this684.s3 = _this684.s4;
								_this684.s4 = _this684.s5;
								_this684.s5 = null;
								if(_this684.s6 != null) {
									var _this685 = _this684.s6;
									var out297 = _this685.s0;
									if(_this685.l != 0) {
										_this685.s0 = _this685.s1;
										_this685.s1 = _this685.s2;
										_this685.s2 = _this685.s3;
										_this685.s3 = _this685.s4;
										_this685.s4 = _this685.s5;
										_this685.s5 = null;
										if(_this685.s6 != null) {
											var _this686 = _this685.s6;
											var out298 = _this686.s0;
											if(_this686.l != 0) {
												_this686.s0 = _this686.s1;
												_this686.s1 = _this686.s2;
												_this686.s2 = _this686.s3;
												_this686.s3 = _this686.s4;
												_this686.s4 = _this686.s5;
												_this686.s5 = null;
												if(_this686.s6 != null) {
													var _this687 = _this686.s6;
													var out299 = _this687.s0;
													if(_this687.l != 0) {
														_this687.s0 = _this687.s1;
														_this687.s1 = _this687.s2;
														_this687.s2 = _this687.s3;
														_this687.s3 = _this687.s4;
														_this687.s4 = _this687.s5;
														_this687.s5 = null;
														if(_this687.s6 != null) {
															var _this688 = _this687.s6;
															var out300 = _this688.s0;
															if(_this688.l != 0) {
																_this688.s0 = _this688.s1;
																_this688.s1 = _this688.s2;
																_this688.s2 = _this688.s3;
																_this688.s3 = _this688.s4;
																_this688.s4 = _this688.s5;
																_this688.s5 = null;
																if(_this688.s6 != null) {
																	var _this689 = _this688.s6;
																	var out301 = _this689.s0;
																	if(_this689.l != 0) {
																		_this689.s0 = _this689.s1;
																		_this689.s1 = _this689.s2;
																		_this689.s2 = _this689.s3;
																		_this689.s3 = _this689.s4;
																		_this689.s4 = _this689.s5;
																		_this689.s5 = null;
																		if(_this689.s6 != null) {
																			_this689.s5 = _this689.s6.shift();
																		}
																		_this689.l--;
																	}
																	_this688.s5 = out301;
																}
																_this688.l--;
															}
															_this687.s5 = out300;
														}
														_this687.l--;
													}
													_this686.s5 = out299;
												}
												_this686.l--;
											}
											_this685.s5 = out298;
										}
										_this685.l--;
									}
									_this684.s5 = out297;
								}
								_this684.l--;
							}
							_this683.s5 = out296;
						}
						_this683.l--;
					}
					var phi4 = out295;
					var _this690 = this.store;
					var out302 = _this690.s0;
					if(_this690.l != 0) {
						_this690.s0 = _this690.s1;
						_this690.s1 = _this690.s2;
						_this690.s2 = _this690.s3;
						_this690.s3 = _this690.s4;
						_this690.s4 = _this690.s5;
						_this690.s5 = null;
						if(_this690.s6 != null) {
							var _this691 = _this690.s6;
							var out303 = _this691.s0;
							if(_this691.l != 0) {
								_this691.s0 = _this691.s1;
								_this691.s1 = _this691.s2;
								_this691.s2 = _this691.s3;
								_this691.s3 = _this691.s4;
								_this691.s4 = _this691.s5;
								_this691.s5 = null;
								if(_this691.s6 != null) {
									var _this692 = _this691.s6;
									var out304 = _this692.s0;
									if(_this692.l != 0) {
										_this692.s0 = _this692.s1;
										_this692.s1 = _this692.s2;
										_this692.s2 = _this692.s3;
										_this692.s3 = _this692.s4;
										_this692.s4 = _this692.s5;
										_this692.s5 = null;
										if(_this692.s6 != null) {
											var _this693 = _this692.s6;
											var out305 = _this693.s0;
											if(_this693.l != 0) {
												_this693.s0 = _this693.s1;
												_this693.s1 = _this693.s2;
												_this693.s2 = _this693.s3;
												_this693.s3 = _this693.s4;
												_this693.s4 = _this693.s5;
												_this693.s5 = null;
												if(_this693.s6 != null) {
													var _this694 = _this693.s6;
													var out306 = _this694.s0;
													if(_this694.l != 0) {
														_this694.s0 = _this694.s1;
														_this694.s1 = _this694.s2;
														_this694.s2 = _this694.s3;
														_this694.s3 = _this694.s4;
														_this694.s4 = _this694.s5;
														_this694.s5 = null;
														if(_this694.s6 != null) {
															var _this695 = _this694.s6;
															var out307 = _this695.s0;
															if(_this695.l != 0) {
																_this695.s0 = _this695.s1;
																_this695.s1 = _this695.s2;
																_this695.s2 = _this695.s3;
																_this695.s3 = _this695.s4;
																_this695.s4 = _this695.s5;
																_this695.s5 = null;
																if(_this695.s6 != null) {
																	var _this696 = _this695.s6;
																	var out308 = _this696.s0;
																	if(_this696.l != 0) {
																		_this696.s0 = _this696.s1;
																		_this696.s1 = _this696.s2;
																		_this696.s2 = _this696.s3;
																		_this696.s3 = _this696.s4;
																		_this696.s4 = _this696.s5;
																		_this696.s5 = null;
																		if(_this696.s6 != null) {
																			var _this697 = _this696.s6;
																			var out309 = _this697.s0;
																			if(_this697.l != 0) {
																				_this697.s0 = _this697.s1;
																				_this697.s1 = _this697.s2;
																				_this697.s2 = _this697.s3;
																				_this697.s3 = _this697.s4;
																				_this697.s4 = _this697.s5;
																				_this697.s5 = null;
																				if(_this697.s6 != null) {
																					var _this698 = _this697.s6;
																					var out310 = _this698.s0;
																					if(_this698.l != 0) {
																						_this698.s0 = _this698.s1;
																						_this698.s1 = _this698.s2;
																						_this698.s2 = _this698.s3;
																						_this698.s3 = _this698.s4;
																						_this698.s4 = _this698.s5;
																						_this698.s5 = null;
																						if(_this698.s6 != null) {
																							_this698.s5 = _this698.s6.shift();
																						}
																						_this698.l--;
																					}
																					_this697.s5 = out310;
																				}
																				_this697.l--;
																			}
																			_this696.s5 = out309;
																		}
																		_this696.l--;
																	}
																	_this695.s5 = out308;
																}
																_this695.l--;
															}
															_this694.s5 = out307;
														}
														_this694.l--;
													}
													_this693.s5 = out306;
												}
												_this693.l--;
											}
											_this692.s5 = out305;
										}
										_this692.l--;
									}
									_this691.s5 = out304;
								}
								_this691.l--;
							}
							_this690.s5 = out303;
						}
						_this690.l--;
					}
					var large2 = out302 | 0;
					var _this699 = this.store;
					var out311 = _this699.s0;
					if(_this699.l != 0) {
						_this699.s0 = _this699.s1;
						_this699.s1 = _this699.s2;
						_this699.s2 = _this699.s3;
						_this699.s3 = _this699.s4;
						_this699.s4 = _this699.s5;
						_this699.s5 = null;
						if(_this699.s6 != null) {
							var _this700 = _this699.s6;
							var out312 = _this700.s0;
							if(_this700.l != 0) {
								_this700.s0 = _this700.s1;
								_this700.s1 = _this700.s2;
								_this700.s2 = _this700.s3;
								_this700.s3 = _this700.s4;
								_this700.s4 = _this700.s5;
								_this700.s5 = null;
								if(_this700.s6 != null) {
									var _this701 = _this700.s6;
									var out313 = _this701.s0;
									if(_this701.l != 0) {
										_this701.s0 = _this701.s1;
										_this701.s1 = _this701.s2;
										_this701.s2 = _this701.s3;
										_this701.s3 = _this701.s4;
										_this701.s4 = _this701.s5;
										_this701.s5 = null;
										if(_this701.s6 != null) {
											var _this702 = _this701.s6;
											var out314 = _this702.s0;
											if(_this702.l != 0) {
												_this702.s0 = _this702.s1;
												_this702.s1 = _this702.s2;
												_this702.s2 = _this702.s3;
												_this702.s3 = _this702.s4;
												_this702.s4 = _this702.s5;
												_this702.s5 = null;
												if(_this702.s6 != null) {
													var _this703 = _this702.s6;
													var out315 = _this703.s0;
													if(_this703.l != 0) {
														_this703.s0 = _this703.s1;
														_this703.s1 = _this703.s2;
														_this703.s2 = _this703.s3;
														_this703.s3 = _this703.s4;
														_this703.s4 = _this703.s5;
														_this703.s5 = null;
														if(_this703.s6 != null) {
															var _this704 = _this703.s6;
															var out316 = _this704.s0;
															if(_this704.l != 0) {
																_this704.s0 = _this704.s1;
																_this704.s1 = _this704.s2;
																_this704.s2 = _this704.s3;
																_this704.s3 = _this704.s4;
																_this704.s4 = _this704.s5;
																_this704.s5 = null;
																if(_this704.s6 != null) {
																	var _this705 = _this704.s6;
																	var out317 = _this705.s0;
																	if(_this705.l != 0) {
																		_this705.s0 = _this705.s1;
																		_this705.s1 = _this705.s2;
																		_this705.s2 = _this705.s3;
																		_this705.s3 = _this705.s4;
																		_this705.s4 = _this705.s5;
																		_this705.s5 = null;
																		if(_this705.s6 != null) {
																			var _this706 = _this705.s6;
																			var out318 = _this706.s0;
																			if(_this706.l != 0) {
																				_this706.s0 = _this706.s1;
																				_this706.s1 = _this706.s2;
																				_this706.s2 = _this706.s3;
																				_this706.s3 = _this706.s4;
																				_this706.s4 = _this706.s5;
																				_this706.s5 = null;
																				if(_this706.s6 != null) {
																					var _this707 = _this706.s6;
																					var out319 = _this707.s0;
																					if(_this707.l != 0) {
																						_this707.s0 = _this707.s1;
																						_this707.s1 = _this707.s2;
																						_this707.s2 = _this707.s3;
																						_this707.s3 = _this707.s4;
																						_this707.s4 = _this707.s5;
																						_this707.s5 = null;
																						if(_this707.s6 != null) {
																							_this707.s5 = _this707.s6.shift();
																						}
																						_this707.l--;
																					}
																					_this706.s5 = out319;
																				}
																				_this706.l--;
																			}
																			_this705.s5 = out318;
																		}
																		_this705.l--;
																	}
																	_this704.s5 = out317;
																}
																_this704.l--;
															}
															_this703.s5 = out316;
														}
														_this703.l--;
													}
													_this702.s5 = out315;
												}
												_this702.l--;
											}
											_this701.s5 = out314;
										}
										_this701.l--;
									}
									_this700.s5 = out313;
								}
								_this700.l--;
							}
							_this699.s5 = out312;
						}
						_this699.l--;
					}
					var sweep2 = out311 | 0;
					var _this708 = this.store;
					var out320 = _this708.s0;
					if(_this708.l != 0) {
						_this708.s0 = _this708.s1;
						_this708.s1 = _this708.s2;
						_this708.s2 = _this708.s3;
						_this708.s3 = _this708.s4;
						_this708.s4 = _this708.s5;
						_this708.s5 = null;
						if(_this708.s6 != null) {
							var _this709 = _this708.s6;
							var out321 = _this709.s0;
							if(_this709.l != 0) {
								_this709.s0 = _this709.s1;
								_this709.s1 = _this709.s2;
								_this709.s2 = _this709.s3;
								_this709.s3 = _this709.s4;
								_this709.s4 = _this709.s5;
								_this709.s5 = null;
								if(_this709.s6 != null) {
									var _this710 = _this709.s6;
									var out322 = _this710.s0;
									if(_this710.l != 0) {
										_this710.s0 = _this710.s1;
										_this710.s1 = _this710.s2;
										_this710.s2 = _this710.s3;
										_this710.s3 = _this710.s4;
										_this710.s4 = _this710.s5;
										_this710.s5 = null;
										if(_this710.s6 != null) {
											var _this711 = _this710.s6;
											var out323 = _this711.s0;
											if(_this711.l != 0) {
												_this711.s0 = _this711.s1;
												_this711.s1 = _this711.s2;
												_this711.s2 = _this711.s3;
												_this711.s3 = _this711.s4;
												_this711.s4 = _this711.s5;
												_this711.s5 = null;
												if(_this711.s6 != null) {
													var _this712 = _this711.s6;
													var out324 = _this712.s0;
													if(_this712.l != 0) {
														_this712.s0 = _this712.s1;
														_this712.s1 = _this712.s2;
														_this712.s2 = _this712.s3;
														_this712.s3 = _this712.s4;
														_this712.s4 = _this712.s5;
														_this712.s5 = null;
														if(_this712.s6 != null) {
															var _this713 = _this712.s6;
															var out325 = _this713.s0;
															if(_this713.l != 0) {
																_this713.s0 = _this713.s1;
																_this713.s1 = _this713.s2;
																_this713.s2 = _this713.s3;
																_this713.s3 = _this713.s4;
																_this713.s4 = _this713.s5;
																_this713.s5 = null;
																if(_this713.s6 != null) {
																	var _this714 = _this713.s6;
																	var out326 = _this714.s0;
																	if(_this714.l != 0) {
																		_this714.s0 = _this714.s1;
																		_this714.s1 = _this714.s2;
																		_this714.s2 = _this714.s3;
																		_this714.s3 = _this714.s4;
																		_this714.s4 = _this714.s5;
																		_this714.s5 = null;
																		if(_this714.s6 != null) {
																			_this714.s5 = _this714.s6.shift();
																		}
																		_this714.l--;
																	}
																	_this713.s5 = out326;
																}
																_this713.l--;
															}
															_this712.s5 = out325;
														}
														_this712.l--;
													}
													_this711.s5 = out324;
												}
												_this711.l--;
											}
											_this710.s5 = out323;
										}
										_this710.l--;
									}
									_this709.s5 = out322;
								}
								_this709.l--;
							}
							_this708.s5 = out321;
						}
						_this708.l--;
					}
					this.lastX = out320 + this.lastX;
					var _this715 = this.store;
					var out327 = _this715.s0;
					if(_this715.l != 0) {
						_this715.s0 = _this715.s1;
						_this715.s1 = _this715.s2;
						_this715.s2 = _this715.s3;
						_this715.s3 = _this715.s4;
						_this715.s4 = _this715.s5;
						_this715.s5 = null;
						if(_this715.s6 != null) {
							var _this716 = _this715.s6;
							var out328 = _this716.s0;
							if(_this716.l != 0) {
								_this716.s0 = _this716.s1;
								_this716.s1 = _this716.s2;
								_this716.s2 = _this716.s3;
								_this716.s3 = _this716.s4;
								_this716.s4 = _this716.s5;
								_this716.s5 = null;
								if(_this716.s6 != null) {
									var _this717 = _this716.s6;
									var out329 = _this717.s0;
									if(_this717.l != 0) {
										_this717.s0 = _this717.s1;
										_this717.s1 = _this717.s2;
										_this717.s2 = _this717.s3;
										_this717.s3 = _this717.s4;
										_this717.s4 = _this717.s5;
										_this717.s5 = null;
										if(_this717.s6 != null) {
											var _this718 = _this717.s6;
											var out330 = _this718.s0;
											if(_this718.l != 0) {
												_this718.s0 = _this718.s1;
												_this718.s1 = _this718.s2;
												_this718.s2 = _this718.s3;
												_this718.s3 = _this718.s4;
												_this718.s4 = _this718.s5;
												_this718.s5 = null;
												if(_this718.s6 != null) {
													var _this719 = _this718.s6;
													var out331 = _this719.s0;
													if(_this719.l != 0) {
														_this719.s0 = _this719.s1;
														_this719.s1 = _this719.s2;
														_this719.s2 = _this719.s3;
														_this719.s3 = _this719.s4;
														_this719.s4 = _this719.s5;
														_this719.s5 = null;
														if(_this719.s6 != null) {
															var _this720 = _this719.s6;
															var out332 = _this720.s0;
															if(_this720.l != 0) {
																_this720.s0 = _this720.s1;
																_this720.s1 = _this720.s2;
																_this720.s2 = _this720.s3;
																_this720.s3 = _this720.s4;
																_this720.s4 = _this720.s5;
																_this720.s5 = null;
																if(_this720.s6 != null) {
																	var _this721 = _this720.s6;
																	var out333 = _this721.s0;
																	if(_this721.l != 0) {
																		_this721.s0 = _this721.s1;
																		_this721.s1 = _this721.s2;
																		_this721.s2 = _this721.s3;
																		_this721.s3 = _this721.s4;
																		_this721.s4 = _this721.s5;
																		_this721.s5 = null;
																		if(_this721.s6 != null) {
																			_this721.s5 = _this721.s6.shift();
																		}
																		_this721.l--;
																	}
																	_this720.s5 = out333;
																}
																_this720.l--;
															}
															_this719.s5 = out332;
														}
														_this719.l--;
													}
													_this718.s5 = out331;
												}
												_this718.l--;
											}
											_this717.s5 = out330;
										}
										_this717.l--;
									}
									_this716.s5 = out329;
								}
								_this716.l--;
							}
							_this715.s5 = out328;
						}
						_this715.l--;
					}
					this.lastY = out327 + this.lastY;
					var sx5 = sx4;
					var sy5 = sy4;
					var phi5 = phi4;
					var ex2 = this.lastX;
					var ey2 = this.lastY;
					var mx2 = (sx5 - ex2) / 2;
					var my2 = (sy5 - ey2) / 2;
					var ax2 = (sx5 + ex2) / 2;
					var ay2 = (sy5 + ey2) / 2;
					phi5 %= 360;
					phi5 = phi5 * Math.PI / 180;
					var sin2 = Math.sin(phi5);
					var cos2 = Math.cos(phi5);
					var x12 = mx2 * cos2 + my2 * sin2;
					var y12 = -mx2 * sin2 + my2 * cos2;
					var rx2 = Math.abs(xr2);
					var ry2 = Math.abs(yr2);
					var rxx2 = rx2 * rx2;
					var ryy2 = ry2 * ry2;
					var xx12 = x12 * x12;
					var yy12 = y12 * y12;
					var check2 = xx12 / rxx2 + yy12 / ryy2;
					if(check2 > 1) {
						rx2 *= Math.sqrt(check2);
						ry2 *= Math.sqrt(check2);
						rxx2 = rx2 * rx2;
						ryy2 = ry2 * ry2;
					}
					var sign2 = large2 == sweep2 ? -1 : 1;
					var sq2 = (rxx2 * ryy2 - rxx2 * yy12 - ryy2 * xx12) / (rxx2 * yy12 + ryy2 * xx12);
					sq2 = sq2 < 0 ? 0 : sq2;
					var coef2 = sign2 * Math.sqrt(sq2);
					var cx12 = coef2 * rx2 * y12 / ry2;
					var cy12 = -coef2 * ry2 * x12 / rx2;
					var cx3 = ax2 + cx12 * cos2 - cy12 * sin2;
					var cy3 = ay2 + cx12 * sin2 + cy12 * cos2;
					var phiSin2 = Math.sin(-phi5);
					var phiCos2 = Math.cos(-phi5);
					sx5 -= cx3;
					sy5 -= cy3;
					var dx4 = sx5;
					var dy4 = sy5;
					sx5 = dx4 * phiCos2 - dy4 * phiSin2;
					sy5 = dx4 * phiSin2 + dy4 * phiCos2;
					sx5 += cx3;
					sy5 += cy3;
					ex2 -= cx3;
					ey2 -= cy3;
					var dx5 = ex2;
					var dy5 = ey2;
					ex2 = dx5 * phiCos2 - dy5 * phiSin2;
					ey2 = dx5 * phiSin2 + dy5 * phiCos2;
					ex2 += cx3;
					ey2 += cy3;
					var alpha2 = Math.atan2(rx2 * (cy3 - sy5),ry2 * (cx3 - sx5)) - Math.PI;
					var omega2 = Math.atan2(rx2 * (cy3 - ey2),ry2 * (cx3 - ex2)) - Math.PI;
					var delta2 = alpha2 - omega2;
					if(sweep2 == 1 && delta2 > 0) {
						delta2 -= 2 * Math.PI;
					} else if(sweep2 == 0 && delta2 < 0) {
						delta2 += 2 * Math.PI;
					}
					var this3 = { cx : cx3, cy : cy3, rx : rx2, ry : ry2, alpha : alpha2, omega : omega2, delta : -delta2, phi : phi5, phiSin : Math.sin(phi5), phiCos : Math.cos(phi5)};
					var ellipseData2 = this3;
					var ellipse2 = new trilateral_justPath_EllipseArc(ellipseData2);
					ellipse2.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
				} else if(this.store.l > 7) {
					while(this.store.l > 6) {
						var sx6 = this.lastX;
						var sy6 = this.lastY;
						var _this722 = this.store;
						var out334 = _this722.s0;
						if(_this722.l != 0) {
							_this722.s0 = _this722.s1;
							_this722.s1 = _this722.s2;
							_this722.s2 = _this722.s3;
							_this722.s3 = _this722.s4;
							_this722.s4 = _this722.s5;
							_this722.s5 = null;
							if(_this722.s6 != null) {
								var _this723 = _this722.s6;
								var out335 = _this723.s0;
								if(_this723.l != 0) {
									_this723.s0 = _this723.s1;
									_this723.s1 = _this723.s2;
									_this723.s2 = _this723.s3;
									_this723.s3 = _this723.s4;
									_this723.s4 = _this723.s5;
									_this723.s5 = null;
									if(_this723.s6 != null) {
										var _this724 = _this723.s6;
										var out336 = _this724.s0;
										if(_this724.l != 0) {
											_this724.s0 = _this724.s1;
											_this724.s1 = _this724.s2;
											_this724.s2 = _this724.s3;
											_this724.s3 = _this724.s4;
											_this724.s4 = _this724.s5;
											_this724.s5 = null;
											if(_this724.s6 != null) {
												var _this725 = _this724.s6;
												var out337 = _this725.s0;
												if(_this725.l != 0) {
													_this725.s0 = _this725.s1;
													_this725.s1 = _this725.s2;
													_this725.s2 = _this725.s3;
													_this725.s3 = _this725.s4;
													_this725.s4 = _this725.s5;
													_this725.s5 = null;
													if(_this725.s6 != null) {
														var _this726 = _this725.s6;
														var out338 = _this726.s0;
														if(_this726.l != 0) {
															_this726.s0 = _this726.s1;
															_this726.s1 = _this726.s2;
															_this726.s2 = _this726.s3;
															_this726.s3 = _this726.s4;
															_this726.s4 = _this726.s5;
															_this726.s5 = null;
															if(_this726.s6 != null) {
																var _this727 = _this726.s6;
																var out339 = _this727.s0;
																if(_this727.l != 0) {
																	_this727.s0 = _this727.s1;
																	_this727.s1 = _this727.s2;
																	_this727.s2 = _this727.s3;
																	_this727.s3 = _this727.s4;
																	_this727.s4 = _this727.s5;
																	_this727.s5 = null;
																	if(_this727.s6 != null) {
																		var _this728 = _this727.s6;
																		var out340 = _this728.s0;
																		if(_this728.l != 0) {
																			_this728.s0 = _this728.s1;
																			_this728.s1 = _this728.s2;
																			_this728.s2 = _this728.s3;
																			_this728.s3 = _this728.s4;
																			_this728.s4 = _this728.s5;
																			_this728.s5 = null;
																			if(_this728.s6 != null) {
																				_this728.s5 = _this728.s6.shift();
																			}
																			_this728.l--;
																		}
																		_this727.s5 = out340;
																	}
																	_this727.l--;
																}
																_this726.s5 = out339;
															}
															_this726.l--;
														}
														_this725.s5 = out338;
													}
													_this725.l--;
												}
												_this724.s5 = out337;
											}
											_this724.l--;
										}
										_this723.s5 = out336;
									}
									_this723.l--;
								}
								_this722.s5 = out335;
							}
							_this722.l--;
						}
						var xr3 = out334;
						var _this729 = this.store;
						var out341 = _this729.s0;
						if(_this729.l != 0) {
							_this729.s0 = _this729.s1;
							_this729.s1 = _this729.s2;
							_this729.s2 = _this729.s3;
							_this729.s3 = _this729.s4;
							_this729.s4 = _this729.s5;
							_this729.s5 = null;
							if(_this729.s6 != null) {
								var _this730 = _this729.s6;
								var out342 = _this730.s0;
								if(_this730.l != 0) {
									_this730.s0 = _this730.s1;
									_this730.s1 = _this730.s2;
									_this730.s2 = _this730.s3;
									_this730.s3 = _this730.s4;
									_this730.s4 = _this730.s5;
									_this730.s5 = null;
									if(_this730.s6 != null) {
										var _this731 = _this730.s6;
										var out343 = _this731.s0;
										if(_this731.l != 0) {
											_this731.s0 = _this731.s1;
											_this731.s1 = _this731.s2;
											_this731.s2 = _this731.s3;
											_this731.s3 = _this731.s4;
											_this731.s4 = _this731.s5;
											_this731.s5 = null;
											if(_this731.s6 != null) {
												var _this732 = _this731.s6;
												var out344 = _this732.s0;
												if(_this732.l != 0) {
													_this732.s0 = _this732.s1;
													_this732.s1 = _this732.s2;
													_this732.s2 = _this732.s3;
													_this732.s3 = _this732.s4;
													_this732.s4 = _this732.s5;
													_this732.s5 = null;
													if(_this732.s6 != null) {
														var _this733 = _this732.s6;
														var out345 = _this733.s0;
														if(_this733.l != 0) {
															_this733.s0 = _this733.s1;
															_this733.s1 = _this733.s2;
															_this733.s2 = _this733.s3;
															_this733.s3 = _this733.s4;
															_this733.s4 = _this733.s5;
															_this733.s5 = null;
															if(_this733.s6 != null) {
																var _this734 = _this733.s6;
																var out346 = _this734.s0;
																if(_this734.l != 0) {
																	_this734.s0 = _this734.s1;
																	_this734.s1 = _this734.s2;
																	_this734.s2 = _this734.s3;
																	_this734.s3 = _this734.s4;
																	_this734.s4 = _this734.s5;
																	_this734.s5 = null;
																	if(_this734.s6 != null) {
																		var _this735 = _this734.s6;
																		var out347 = _this735.s0;
																		if(_this735.l != 0) {
																			_this735.s0 = _this735.s1;
																			_this735.s1 = _this735.s2;
																			_this735.s2 = _this735.s3;
																			_this735.s3 = _this735.s4;
																			_this735.s4 = _this735.s5;
																			_this735.s5 = null;
																			if(_this735.s6 != null) {
																				_this735.s5 = _this735.s6.shift();
																			}
																			_this735.l--;
																		}
																		_this734.s5 = out347;
																	}
																	_this734.l--;
																}
																_this733.s5 = out346;
															}
															_this733.l--;
														}
														_this732.s5 = out345;
													}
													_this732.l--;
												}
												_this731.s5 = out344;
											}
											_this731.l--;
										}
										_this730.s5 = out343;
									}
									_this730.l--;
								}
								_this729.s5 = out342;
							}
							_this729.l--;
						}
						var yr3 = out341;
						var _this736 = this.store;
						var out348 = _this736.s0;
						if(_this736.l != 0) {
							_this736.s0 = _this736.s1;
							_this736.s1 = _this736.s2;
							_this736.s2 = _this736.s3;
							_this736.s3 = _this736.s4;
							_this736.s4 = _this736.s5;
							_this736.s5 = null;
							if(_this736.s6 != null) {
								var _this737 = _this736.s6;
								var out349 = _this737.s0;
								if(_this737.l != 0) {
									_this737.s0 = _this737.s1;
									_this737.s1 = _this737.s2;
									_this737.s2 = _this737.s3;
									_this737.s3 = _this737.s4;
									_this737.s4 = _this737.s5;
									_this737.s5 = null;
									if(_this737.s6 != null) {
										var _this738 = _this737.s6;
										var out350 = _this738.s0;
										if(_this738.l != 0) {
											_this738.s0 = _this738.s1;
											_this738.s1 = _this738.s2;
											_this738.s2 = _this738.s3;
											_this738.s3 = _this738.s4;
											_this738.s4 = _this738.s5;
											_this738.s5 = null;
											if(_this738.s6 != null) {
												var _this739 = _this738.s6;
												var out351 = _this739.s0;
												if(_this739.l != 0) {
													_this739.s0 = _this739.s1;
													_this739.s1 = _this739.s2;
													_this739.s2 = _this739.s3;
													_this739.s3 = _this739.s4;
													_this739.s4 = _this739.s5;
													_this739.s5 = null;
													if(_this739.s6 != null) {
														var _this740 = _this739.s6;
														var out352 = _this740.s0;
														if(_this740.l != 0) {
															_this740.s0 = _this740.s1;
															_this740.s1 = _this740.s2;
															_this740.s2 = _this740.s3;
															_this740.s3 = _this740.s4;
															_this740.s4 = _this740.s5;
															_this740.s5 = null;
															if(_this740.s6 != null) {
																var _this741 = _this740.s6;
																var out353 = _this741.s0;
																if(_this741.l != 0) {
																	_this741.s0 = _this741.s1;
																	_this741.s1 = _this741.s2;
																	_this741.s2 = _this741.s3;
																	_this741.s3 = _this741.s4;
																	_this741.s4 = _this741.s5;
																	_this741.s5 = null;
																	if(_this741.s6 != null) {
																		var _this742 = _this741.s6;
																		var out354 = _this742.s0;
																		if(_this742.l != 0) {
																			_this742.s0 = _this742.s1;
																			_this742.s1 = _this742.s2;
																			_this742.s2 = _this742.s3;
																			_this742.s3 = _this742.s4;
																			_this742.s4 = _this742.s5;
																			_this742.s5 = null;
																			if(_this742.s6 != null) {
																				_this742.s5 = _this742.s6.shift();
																			}
																			_this742.l--;
																		}
																		_this741.s5 = out354;
																	}
																	_this741.l--;
																}
																_this740.s5 = out353;
															}
															_this740.l--;
														}
														_this739.s5 = out352;
													}
													_this739.l--;
												}
												_this738.s5 = out351;
											}
											_this738.l--;
										}
										_this737.s5 = out350;
									}
									_this737.l--;
								}
								_this736.s5 = out349;
							}
							_this736.l--;
						}
						var phi6 = out348;
						var _this743 = this.store;
						var out355 = _this743.s0;
						if(_this743.l != 0) {
							_this743.s0 = _this743.s1;
							_this743.s1 = _this743.s2;
							_this743.s2 = _this743.s3;
							_this743.s3 = _this743.s4;
							_this743.s4 = _this743.s5;
							_this743.s5 = null;
							if(_this743.s6 != null) {
								var _this744 = _this743.s6;
								var out356 = _this744.s0;
								if(_this744.l != 0) {
									_this744.s0 = _this744.s1;
									_this744.s1 = _this744.s2;
									_this744.s2 = _this744.s3;
									_this744.s3 = _this744.s4;
									_this744.s4 = _this744.s5;
									_this744.s5 = null;
									if(_this744.s6 != null) {
										var _this745 = _this744.s6;
										var out357 = _this745.s0;
										if(_this745.l != 0) {
											_this745.s0 = _this745.s1;
											_this745.s1 = _this745.s2;
											_this745.s2 = _this745.s3;
											_this745.s3 = _this745.s4;
											_this745.s4 = _this745.s5;
											_this745.s5 = null;
											if(_this745.s6 != null) {
												var _this746 = _this745.s6;
												var out358 = _this746.s0;
												if(_this746.l != 0) {
													_this746.s0 = _this746.s1;
													_this746.s1 = _this746.s2;
													_this746.s2 = _this746.s3;
													_this746.s3 = _this746.s4;
													_this746.s4 = _this746.s5;
													_this746.s5 = null;
													if(_this746.s6 != null) {
														var _this747 = _this746.s6;
														var out359 = _this747.s0;
														if(_this747.l != 0) {
															_this747.s0 = _this747.s1;
															_this747.s1 = _this747.s2;
															_this747.s2 = _this747.s3;
															_this747.s3 = _this747.s4;
															_this747.s4 = _this747.s5;
															_this747.s5 = null;
															if(_this747.s6 != null) {
																var _this748 = _this747.s6;
																var out360 = _this748.s0;
																if(_this748.l != 0) {
																	_this748.s0 = _this748.s1;
																	_this748.s1 = _this748.s2;
																	_this748.s2 = _this748.s3;
																	_this748.s3 = _this748.s4;
																	_this748.s4 = _this748.s5;
																	_this748.s5 = null;
																	if(_this748.s6 != null) {
																		var _this749 = _this748.s6;
																		var out361 = _this749.s0;
																		if(_this749.l != 0) {
																			_this749.s0 = _this749.s1;
																			_this749.s1 = _this749.s2;
																			_this749.s2 = _this749.s3;
																			_this749.s3 = _this749.s4;
																			_this749.s4 = _this749.s5;
																			_this749.s5 = null;
																			if(_this749.s6 != null) {
																				var _this750 = _this749.s6;
																				var out362 = _this750.s0;
																				if(_this750.l != 0) {
																					_this750.s0 = _this750.s1;
																					_this750.s1 = _this750.s2;
																					_this750.s2 = _this750.s3;
																					_this750.s3 = _this750.s4;
																					_this750.s4 = _this750.s5;
																					_this750.s5 = null;
																					if(_this750.s6 != null) {
																						var _this751 = _this750.s6;
																						var out363 = _this751.s0;
																						if(_this751.l != 0) {
																							_this751.s0 = _this751.s1;
																							_this751.s1 = _this751.s2;
																							_this751.s2 = _this751.s3;
																							_this751.s3 = _this751.s4;
																							_this751.s4 = _this751.s5;
																							_this751.s5 = null;
																							if(_this751.s6 != null) {
																								_this751.s5 = _this751.s6.shift();
																							}
																							_this751.l--;
																						}
																						_this750.s5 = out363;
																					}
																					_this750.l--;
																				}
																				_this749.s5 = out362;
																			}
																			_this749.l--;
																		}
																		_this748.s5 = out361;
																	}
																	_this748.l--;
																}
																_this747.s5 = out360;
															}
															_this747.l--;
														}
														_this746.s5 = out359;
													}
													_this746.l--;
												}
												_this745.s5 = out358;
											}
											_this745.l--;
										}
										_this744.s5 = out357;
									}
									_this744.l--;
								}
								_this743.s5 = out356;
							}
							_this743.l--;
						}
						var large3 = out355 | 0;
						var _this752 = this.store;
						var out364 = _this752.s0;
						if(_this752.l != 0) {
							_this752.s0 = _this752.s1;
							_this752.s1 = _this752.s2;
							_this752.s2 = _this752.s3;
							_this752.s3 = _this752.s4;
							_this752.s4 = _this752.s5;
							_this752.s5 = null;
							if(_this752.s6 != null) {
								var _this753 = _this752.s6;
								var out365 = _this753.s0;
								if(_this753.l != 0) {
									_this753.s0 = _this753.s1;
									_this753.s1 = _this753.s2;
									_this753.s2 = _this753.s3;
									_this753.s3 = _this753.s4;
									_this753.s4 = _this753.s5;
									_this753.s5 = null;
									if(_this753.s6 != null) {
										var _this754 = _this753.s6;
										var out366 = _this754.s0;
										if(_this754.l != 0) {
											_this754.s0 = _this754.s1;
											_this754.s1 = _this754.s2;
											_this754.s2 = _this754.s3;
											_this754.s3 = _this754.s4;
											_this754.s4 = _this754.s5;
											_this754.s5 = null;
											if(_this754.s6 != null) {
												var _this755 = _this754.s6;
												var out367 = _this755.s0;
												if(_this755.l != 0) {
													_this755.s0 = _this755.s1;
													_this755.s1 = _this755.s2;
													_this755.s2 = _this755.s3;
													_this755.s3 = _this755.s4;
													_this755.s4 = _this755.s5;
													_this755.s5 = null;
													if(_this755.s6 != null) {
														var _this756 = _this755.s6;
														var out368 = _this756.s0;
														if(_this756.l != 0) {
															_this756.s0 = _this756.s1;
															_this756.s1 = _this756.s2;
															_this756.s2 = _this756.s3;
															_this756.s3 = _this756.s4;
															_this756.s4 = _this756.s5;
															_this756.s5 = null;
															if(_this756.s6 != null) {
																var _this757 = _this756.s6;
																var out369 = _this757.s0;
																if(_this757.l != 0) {
																	_this757.s0 = _this757.s1;
																	_this757.s1 = _this757.s2;
																	_this757.s2 = _this757.s3;
																	_this757.s3 = _this757.s4;
																	_this757.s4 = _this757.s5;
																	_this757.s5 = null;
																	if(_this757.s6 != null) {
																		var _this758 = _this757.s6;
																		var out370 = _this758.s0;
																		if(_this758.l != 0) {
																			_this758.s0 = _this758.s1;
																			_this758.s1 = _this758.s2;
																			_this758.s2 = _this758.s3;
																			_this758.s3 = _this758.s4;
																			_this758.s4 = _this758.s5;
																			_this758.s5 = null;
																			if(_this758.s6 != null) {
																				var _this759 = _this758.s6;
																				var out371 = _this759.s0;
																				if(_this759.l != 0) {
																					_this759.s0 = _this759.s1;
																					_this759.s1 = _this759.s2;
																					_this759.s2 = _this759.s3;
																					_this759.s3 = _this759.s4;
																					_this759.s4 = _this759.s5;
																					_this759.s5 = null;
																					if(_this759.s6 != null) {
																						var _this760 = _this759.s6;
																						var out372 = _this760.s0;
																						if(_this760.l != 0) {
																							_this760.s0 = _this760.s1;
																							_this760.s1 = _this760.s2;
																							_this760.s2 = _this760.s3;
																							_this760.s3 = _this760.s4;
																							_this760.s4 = _this760.s5;
																							_this760.s5 = null;
																							if(_this760.s6 != null) {
																								_this760.s5 = _this760.s6.shift();
																							}
																							_this760.l--;
																						}
																						_this759.s5 = out372;
																					}
																					_this759.l--;
																				}
																				_this758.s5 = out371;
																			}
																			_this758.l--;
																		}
																		_this757.s5 = out370;
																	}
																	_this757.l--;
																}
																_this756.s5 = out369;
															}
															_this756.l--;
														}
														_this755.s5 = out368;
													}
													_this755.l--;
												}
												_this754.s5 = out367;
											}
											_this754.l--;
										}
										_this753.s5 = out366;
									}
									_this753.l--;
								}
								_this752.s5 = out365;
							}
							_this752.l--;
						}
						var sweep3 = out364 | 0;
						var _this761 = this.store;
						var out373 = _this761.s0;
						if(_this761.l != 0) {
							_this761.s0 = _this761.s1;
							_this761.s1 = _this761.s2;
							_this761.s2 = _this761.s3;
							_this761.s3 = _this761.s4;
							_this761.s4 = _this761.s5;
							_this761.s5 = null;
							if(_this761.s6 != null) {
								var _this762 = _this761.s6;
								var out374 = _this762.s0;
								if(_this762.l != 0) {
									_this762.s0 = _this762.s1;
									_this762.s1 = _this762.s2;
									_this762.s2 = _this762.s3;
									_this762.s3 = _this762.s4;
									_this762.s4 = _this762.s5;
									_this762.s5 = null;
									if(_this762.s6 != null) {
										var _this763 = _this762.s6;
										var out375 = _this763.s0;
										if(_this763.l != 0) {
											_this763.s0 = _this763.s1;
											_this763.s1 = _this763.s2;
											_this763.s2 = _this763.s3;
											_this763.s3 = _this763.s4;
											_this763.s4 = _this763.s5;
											_this763.s5 = null;
											if(_this763.s6 != null) {
												var _this764 = _this763.s6;
												var out376 = _this764.s0;
												if(_this764.l != 0) {
													_this764.s0 = _this764.s1;
													_this764.s1 = _this764.s2;
													_this764.s2 = _this764.s3;
													_this764.s3 = _this764.s4;
													_this764.s4 = _this764.s5;
													_this764.s5 = null;
													if(_this764.s6 != null) {
														var _this765 = _this764.s6;
														var out377 = _this765.s0;
														if(_this765.l != 0) {
															_this765.s0 = _this765.s1;
															_this765.s1 = _this765.s2;
															_this765.s2 = _this765.s3;
															_this765.s3 = _this765.s4;
															_this765.s4 = _this765.s5;
															_this765.s5 = null;
															if(_this765.s6 != null) {
																var _this766 = _this765.s6;
																var out378 = _this766.s0;
																if(_this766.l != 0) {
																	_this766.s0 = _this766.s1;
																	_this766.s1 = _this766.s2;
																	_this766.s2 = _this766.s3;
																	_this766.s3 = _this766.s4;
																	_this766.s4 = _this766.s5;
																	_this766.s5 = null;
																	if(_this766.s6 != null) {
																		var _this767 = _this766.s6;
																		var out379 = _this767.s0;
																		if(_this767.l != 0) {
																			_this767.s0 = _this767.s1;
																			_this767.s1 = _this767.s2;
																			_this767.s2 = _this767.s3;
																			_this767.s3 = _this767.s4;
																			_this767.s4 = _this767.s5;
																			_this767.s5 = null;
																			if(_this767.s6 != null) {
																				_this767.s5 = _this767.s6.shift();
																			}
																			_this767.l--;
																		}
																		_this766.s5 = out379;
																	}
																	_this766.l--;
																}
																_this765.s5 = out378;
															}
															_this765.l--;
														}
														_this764.s5 = out377;
													}
													_this764.l--;
												}
												_this763.s5 = out376;
											}
											_this763.l--;
										}
										_this762.s5 = out375;
									}
									_this762.l--;
								}
								_this761.s5 = out374;
							}
							_this761.l--;
						}
						this.lastX = out373 + this.lastX;
						var _this768 = this.store;
						var out380 = _this768.s0;
						if(_this768.l != 0) {
							_this768.s0 = _this768.s1;
							_this768.s1 = _this768.s2;
							_this768.s2 = _this768.s3;
							_this768.s3 = _this768.s4;
							_this768.s4 = _this768.s5;
							_this768.s5 = null;
							if(_this768.s6 != null) {
								var _this769 = _this768.s6;
								var out381 = _this769.s0;
								if(_this769.l != 0) {
									_this769.s0 = _this769.s1;
									_this769.s1 = _this769.s2;
									_this769.s2 = _this769.s3;
									_this769.s3 = _this769.s4;
									_this769.s4 = _this769.s5;
									_this769.s5 = null;
									if(_this769.s6 != null) {
										var _this770 = _this769.s6;
										var out382 = _this770.s0;
										if(_this770.l != 0) {
											_this770.s0 = _this770.s1;
											_this770.s1 = _this770.s2;
											_this770.s2 = _this770.s3;
											_this770.s3 = _this770.s4;
											_this770.s4 = _this770.s5;
											_this770.s5 = null;
											if(_this770.s6 != null) {
												var _this771 = _this770.s6;
												var out383 = _this771.s0;
												if(_this771.l != 0) {
													_this771.s0 = _this771.s1;
													_this771.s1 = _this771.s2;
													_this771.s2 = _this771.s3;
													_this771.s3 = _this771.s4;
													_this771.s4 = _this771.s5;
													_this771.s5 = null;
													if(_this771.s6 != null) {
														var _this772 = _this771.s6;
														var out384 = _this772.s0;
														if(_this772.l != 0) {
															_this772.s0 = _this772.s1;
															_this772.s1 = _this772.s2;
															_this772.s2 = _this772.s3;
															_this772.s3 = _this772.s4;
															_this772.s4 = _this772.s5;
															_this772.s5 = null;
															if(_this772.s6 != null) {
																var _this773 = _this772.s6;
																var out385 = _this773.s0;
																if(_this773.l != 0) {
																	_this773.s0 = _this773.s1;
																	_this773.s1 = _this773.s2;
																	_this773.s2 = _this773.s3;
																	_this773.s3 = _this773.s4;
																	_this773.s4 = _this773.s5;
																	_this773.s5 = null;
																	if(_this773.s6 != null) {
																		var _this774 = _this773.s6;
																		var out386 = _this774.s0;
																		if(_this774.l != 0) {
																			_this774.s0 = _this774.s1;
																			_this774.s1 = _this774.s2;
																			_this774.s2 = _this774.s3;
																			_this774.s3 = _this774.s4;
																			_this774.s4 = _this774.s5;
																			_this774.s5 = null;
																			if(_this774.s6 != null) {
																				_this774.s5 = _this774.s6.shift();
																			}
																			_this774.l--;
																		}
																		_this773.s5 = out386;
																	}
																	_this773.l--;
																}
																_this772.s5 = out385;
															}
															_this772.l--;
														}
														_this771.s5 = out384;
													}
													_this771.l--;
												}
												_this770.s5 = out383;
											}
											_this770.l--;
										}
										_this769.s5 = out382;
									}
									_this769.l--;
								}
								_this768.s5 = out381;
							}
							_this768.l--;
						}
						this.lastY = out380 + this.lastY;
						var sx7 = sx6;
						var sy7 = sy6;
						var phi7 = phi6;
						var ex3 = this.lastX;
						var ey3 = this.lastY;
						var mx3 = (sx7 - ex3) / 2;
						var my3 = (sy7 - ey3) / 2;
						var ax3 = (sx7 + ex3) / 2;
						var ay3 = (sy7 + ey3) / 2;
						phi7 %= 360;
						phi7 = phi7 * Math.PI / 180;
						var sin3 = Math.sin(phi7);
						var cos3 = Math.cos(phi7);
						var x13 = mx3 * cos3 + my3 * sin3;
						var y13 = -mx3 * sin3 + my3 * cos3;
						var rx3 = Math.abs(xr3);
						var ry3 = Math.abs(yr3);
						var rxx3 = rx3 * rx3;
						var ryy3 = ry3 * ry3;
						var xx13 = x13 * x13;
						var yy13 = y13 * y13;
						var check3 = xx13 / rxx3 + yy13 / ryy3;
						if(check3 > 1) {
							rx3 *= Math.sqrt(check3);
							ry3 *= Math.sqrt(check3);
							rxx3 = rx3 * rx3;
							ryy3 = ry3 * ry3;
						}
						var sign3 = large3 == sweep3 ? -1 : 1;
						var sq3 = (rxx3 * ryy3 - rxx3 * yy13 - ryy3 * xx13) / (rxx3 * yy13 + ryy3 * xx13);
						sq3 = sq3 < 0 ? 0 : sq3;
						var coef3 = sign3 * Math.sqrt(sq3);
						var cx13 = coef3 * rx3 * y13 / ry3;
						var cy13 = -coef3 * ry3 * x13 / rx3;
						var cx4 = ax3 + cx13 * cos3 - cy13 * sin3;
						var cy4 = ay3 + cx13 * sin3 + cy13 * cos3;
						var phiSin3 = Math.sin(-phi7);
						var phiCos3 = Math.cos(-phi7);
						sx7 -= cx4;
						sy7 -= cy4;
						var dx6 = sx7;
						var dy6 = sy7;
						sx7 = dx6 * phiCos3 - dy6 * phiSin3;
						sy7 = dx6 * phiSin3 + dy6 * phiCos3;
						sx7 += cx4;
						sy7 += cy4;
						ex3 -= cx4;
						ey3 -= cy4;
						var dx7 = ex3;
						var dy7 = ey3;
						ex3 = dx7 * phiCos3 - dy7 * phiSin3;
						ey3 = dx7 * phiSin3 + dy7 * phiCos3;
						ex3 += cx4;
						ey3 += cy4;
						var alpha3 = Math.atan2(rx3 * (cy4 - sy7),ry3 * (cx4 - sx7)) - Math.PI;
						var omega3 = Math.atan2(rx3 * (cy4 - ey3),ry3 * (cx4 - ex3)) - Math.PI;
						var delta3 = alpha3 - omega3;
						if(sweep3 == 1 && delta3 > 0) {
							delta3 -= 2 * Math.PI;
						} else if(sweep3 == 0 && delta3 < 0) {
							delta3 += 2 * Math.PI;
						}
						var this4 = { cx : cx4, cy : cy4, rx : rx3, ry : ry3, alpha : alpha3, omega : omega3, delta : -delta3, phi : phi7, phiSin : Math.sin(phi7), phiCos : Math.cos(phi7)};
						var ellipseData3 = this4;
						var ellipse3 = new trilateral_justPath_EllipseArc(ellipseData3);
						ellipse3.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
					}
				}
				break;
			case 99:
				var _this775 = this.store;
				_this775.l = 0;
				_this775.s0 = null;
				_this775.s1 = null;
				_this775.s2 = null;
				_this775.s3 = null;
				_this775.s4 = null;
				_this775.s5 = null;
				_this775.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count11 = 0;
				var temp10 = "";
				var exit10 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp10 != "") {
							if((this.store.l & 1) == 0) {
								var _this776 = this.store;
								var v54 = parseFloat(temp10);
								switch(_this776.l) {
								case 0:
									_this776.s0 = v54;
									break;
								case 1:
									_this776.s1 = v54;
									break;
								case 2:
									_this776.s2 = v54;
									break;
								case 3:
									_this776.s3 = v54;
									break;
								case 4:
									_this776.s4 = v54;
									break;
								case 5:
									_this776.s5 = v54;
									break;
								default:
									if(_this776.s6 == null) {
										_this776.s6 = new trilateral_justPath_StoreF6();
									}
									var _this777 = _this776.s6;
									switch(_this777.l) {
									case 0:
										_this777.s0 = v54;
										break;
									case 1:
										_this777.s1 = v54;
										break;
									case 2:
										_this777.s2 = v54;
										break;
									case 3:
										_this777.s3 = v54;
										break;
									case 4:
										_this777.s4 = v54;
										break;
									case 5:
										_this777.s5 = v54;
										break;
									default:
										if(_this777.s6 == null) {
											_this777.s6 = new trilateral_justPath_StoreF6();
										}
										var _this778 = _this777.s6;
										switch(_this778.l) {
										case 0:
											_this778.s0 = v54;
											break;
										case 1:
											_this778.s1 = v54;
											break;
										case 2:
											_this778.s2 = v54;
											break;
										case 3:
											_this778.s3 = v54;
											break;
										case 4:
											_this778.s4 = v54;
											break;
										case 5:
											_this778.s5 = v54;
											break;
										default:
											if(_this778.s6 == null) {
												_this778.s6 = new trilateral_justPath_StoreF6();
											}
											var _this779 = _this778.s6;
											switch(_this779.l) {
											case 0:
												_this779.s0 = v54;
												break;
											case 1:
												_this779.s1 = v54;
												break;
											case 2:
												_this779.s2 = v54;
												break;
											case 3:
												_this779.s3 = v54;
												break;
											case 4:
												_this779.s4 = v54;
												break;
											case 5:
												_this779.s5 = v54;
												break;
											default:
												if(_this779.s6 == null) {
													_this779.s6 = new trilateral_justPath_StoreF6();
												}
												var _this780 = _this779.s6;
												switch(_this780.l) {
												case 0:
													_this780.s0 = v54;
													break;
												case 1:
													_this780.s1 = v54;
													break;
												case 2:
													_this780.s2 = v54;
													break;
												case 3:
													_this780.s3 = v54;
													break;
												case 4:
													_this780.s4 = v54;
													break;
												case 5:
													_this780.s5 = v54;
													break;
												default:
													if(_this780.s6 == null) {
														_this780.s6 = new trilateral_justPath_StoreF6();
													}
													var _this781 = _this780.s6;
													switch(_this781.l) {
													case 0:
														_this781.s0 = v54;
														break;
													case 1:
														_this781.s1 = v54;
														break;
													case 2:
														_this781.s2 = v54;
														break;
													case 3:
														_this781.s3 = v54;
														break;
													case 4:
														_this781.s4 = v54;
														break;
													case 5:
														_this781.s5 = v54;
														break;
													default:
														if(_this781.s6 == null) {
															_this781.s6 = new trilateral_justPath_StoreF6();
														}
														var _this782 = _this781.s6;
														switch(_this782.l) {
														case 0:
															_this782.s0 = v54;
															break;
														case 1:
															_this782.s1 = v54;
															break;
														case 2:
															_this782.s2 = v54;
															break;
														case 3:
															_this782.s3 = v54;
															break;
														case 4:
															_this782.s4 = v54;
															break;
														case 5:
															_this782.s5 = v54;
															break;
														default:
															if(_this782.s6 == null) {
																_this782.s6 = new trilateral_justPath_StoreF6();
															}
															_this782.s6.push(v54);
														}
														_this782.l++;
													}
													_this781.l++;
												}
												_this780.l++;
											}
											_this779.l++;
										}
										_this778.l++;
									}
									_this777.l++;
								}
								_this776.l++;
							} else {
								var _this783 = this.store;
								var v55 = parseFloat(temp10);
								switch(_this783.l) {
								case 0:
									_this783.s0 = v55;
									break;
								case 1:
									_this783.s1 = v55;
									break;
								case 2:
									_this783.s2 = v55;
									break;
								case 3:
									_this783.s3 = v55;
									break;
								case 4:
									_this783.s4 = v55;
									break;
								case 5:
									_this783.s5 = v55;
									break;
								default:
									if(_this783.s6 == null) {
										_this783.s6 = new trilateral_justPath_StoreF6();
									}
									var _this784 = _this783.s6;
									switch(_this784.l) {
									case 0:
										_this784.s0 = v55;
										break;
									case 1:
										_this784.s1 = v55;
										break;
									case 2:
										_this784.s2 = v55;
										break;
									case 3:
										_this784.s3 = v55;
										break;
									case 4:
										_this784.s4 = v55;
										break;
									case 5:
										_this784.s5 = v55;
										break;
									default:
										if(_this784.s6 == null) {
											_this784.s6 = new trilateral_justPath_StoreF6();
										}
										var _this785 = _this784.s6;
										switch(_this785.l) {
										case 0:
											_this785.s0 = v55;
											break;
										case 1:
											_this785.s1 = v55;
											break;
										case 2:
											_this785.s2 = v55;
											break;
										case 3:
											_this785.s3 = v55;
											break;
										case 4:
											_this785.s4 = v55;
											break;
										case 5:
											_this785.s5 = v55;
											break;
										default:
											if(_this785.s6 == null) {
												_this785.s6 = new trilateral_justPath_StoreF6();
											}
											var _this786 = _this785.s6;
											switch(_this786.l) {
											case 0:
												_this786.s0 = v55;
												break;
											case 1:
												_this786.s1 = v55;
												break;
											case 2:
												_this786.s2 = v55;
												break;
											case 3:
												_this786.s3 = v55;
												break;
											case 4:
												_this786.s4 = v55;
												break;
											case 5:
												_this786.s5 = v55;
												break;
											default:
												if(_this786.s6 == null) {
													_this786.s6 = new trilateral_justPath_StoreF6();
												}
												var _this787 = _this786.s6;
												switch(_this787.l) {
												case 0:
													_this787.s0 = v55;
													break;
												case 1:
													_this787.s1 = v55;
													break;
												case 2:
													_this787.s2 = v55;
													break;
												case 3:
													_this787.s3 = v55;
													break;
												case 4:
													_this787.s4 = v55;
													break;
												case 5:
													_this787.s5 = v55;
													break;
												default:
													if(_this787.s6 == null) {
														_this787.s6 = new trilateral_justPath_StoreF6();
													}
													var _this788 = _this787.s6;
													switch(_this788.l) {
													case 0:
														_this788.s0 = v55;
														break;
													case 1:
														_this788.s1 = v55;
														break;
													case 2:
														_this788.s2 = v55;
														break;
													case 3:
														_this788.s3 = v55;
														break;
													case 4:
														_this788.s4 = v55;
														break;
													case 5:
														_this788.s5 = v55;
														break;
													default:
														if(_this788.s6 == null) {
															_this788.s6 = new trilateral_justPath_StoreF6();
														}
														var _this789 = _this788.s6;
														switch(_this789.l) {
														case 0:
															_this789.s0 = v55;
															break;
														case 1:
															_this789.s1 = v55;
															break;
														case 2:
															_this789.s2 = v55;
															break;
														case 3:
															_this789.s3 = v55;
															break;
														case 4:
															_this789.s4 = v55;
															break;
														case 5:
															_this789.s5 = v55;
															break;
														default:
															if(_this789.s6 == null) {
																_this789.s6 = new trilateral_justPath_StoreF6();
															}
															_this789.s6.push(v55);
														}
														_this789.l++;
													}
													_this788.l++;
												}
												_this787.l++;
											}
											_this786.l++;
										}
										_this785.l++;
									}
									_this784.l++;
								}
								_this783.l++;
							}
							temp10 = "";
						}
						break;
					case 45:
						if(temp10 != "") {
							if((this.store.l & 1) == 0) {
								var _this790 = this.store;
								var v56 = parseFloat(temp10);
								switch(_this790.l) {
								case 0:
									_this790.s0 = v56;
									break;
								case 1:
									_this790.s1 = v56;
									break;
								case 2:
									_this790.s2 = v56;
									break;
								case 3:
									_this790.s3 = v56;
									break;
								case 4:
									_this790.s4 = v56;
									break;
								case 5:
									_this790.s5 = v56;
									break;
								default:
									if(_this790.s6 == null) {
										_this790.s6 = new trilateral_justPath_StoreF6();
									}
									var _this791 = _this790.s6;
									switch(_this791.l) {
									case 0:
										_this791.s0 = v56;
										break;
									case 1:
										_this791.s1 = v56;
										break;
									case 2:
										_this791.s2 = v56;
										break;
									case 3:
										_this791.s3 = v56;
										break;
									case 4:
										_this791.s4 = v56;
										break;
									case 5:
										_this791.s5 = v56;
										break;
									default:
										if(_this791.s6 == null) {
											_this791.s6 = new trilateral_justPath_StoreF6();
										}
										var _this792 = _this791.s6;
										switch(_this792.l) {
										case 0:
											_this792.s0 = v56;
											break;
										case 1:
											_this792.s1 = v56;
											break;
										case 2:
											_this792.s2 = v56;
											break;
										case 3:
											_this792.s3 = v56;
											break;
										case 4:
											_this792.s4 = v56;
											break;
										case 5:
											_this792.s5 = v56;
											break;
										default:
											if(_this792.s6 == null) {
												_this792.s6 = new trilateral_justPath_StoreF6();
											}
											var _this793 = _this792.s6;
											switch(_this793.l) {
											case 0:
												_this793.s0 = v56;
												break;
											case 1:
												_this793.s1 = v56;
												break;
											case 2:
												_this793.s2 = v56;
												break;
											case 3:
												_this793.s3 = v56;
												break;
											case 4:
												_this793.s4 = v56;
												break;
											case 5:
												_this793.s5 = v56;
												break;
											default:
												if(_this793.s6 == null) {
													_this793.s6 = new trilateral_justPath_StoreF6();
												}
												var _this794 = _this793.s6;
												switch(_this794.l) {
												case 0:
													_this794.s0 = v56;
													break;
												case 1:
													_this794.s1 = v56;
													break;
												case 2:
													_this794.s2 = v56;
													break;
												case 3:
													_this794.s3 = v56;
													break;
												case 4:
													_this794.s4 = v56;
													break;
												case 5:
													_this794.s5 = v56;
													break;
												default:
													if(_this794.s6 == null) {
														_this794.s6 = new trilateral_justPath_StoreF6();
													}
													var _this795 = _this794.s6;
													switch(_this795.l) {
													case 0:
														_this795.s0 = v56;
														break;
													case 1:
														_this795.s1 = v56;
														break;
													case 2:
														_this795.s2 = v56;
														break;
													case 3:
														_this795.s3 = v56;
														break;
													case 4:
														_this795.s4 = v56;
														break;
													case 5:
														_this795.s5 = v56;
														break;
													default:
														if(_this795.s6 == null) {
															_this795.s6 = new trilateral_justPath_StoreF6();
														}
														var _this796 = _this795.s6;
														switch(_this796.l) {
														case 0:
															_this796.s0 = v56;
															break;
														case 1:
															_this796.s1 = v56;
															break;
														case 2:
															_this796.s2 = v56;
															break;
														case 3:
															_this796.s3 = v56;
															break;
														case 4:
															_this796.s4 = v56;
															break;
														case 5:
															_this796.s5 = v56;
															break;
														default:
															if(_this796.s6 == null) {
																_this796.s6 = new trilateral_justPath_StoreF6();
															}
															_this796.s6.push(v56);
														}
														_this796.l++;
													}
													_this795.l++;
												}
												_this794.l++;
											}
											_this793.l++;
										}
										_this792.l++;
									}
									_this791.l++;
								}
								_this790.l++;
							} else {
								var _this797 = this.store;
								var v57 = parseFloat(temp10);
								switch(_this797.l) {
								case 0:
									_this797.s0 = v57;
									break;
								case 1:
									_this797.s1 = v57;
									break;
								case 2:
									_this797.s2 = v57;
									break;
								case 3:
									_this797.s3 = v57;
									break;
								case 4:
									_this797.s4 = v57;
									break;
								case 5:
									_this797.s5 = v57;
									break;
								default:
									if(_this797.s6 == null) {
										_this797.s6 = new trilateral_justPath_StoreF6();
									}
									var _this798 = _this797.s6;
									switch(_this798.l) {
									case 0:
										_this798.s0 = v57;
										break;
									case 1:
										_this798.s1 = v57;
										break;
									case 2:
										_this798.s2 = v57;
										break;
									case 3:
										_this798.s3 = v57;
										break;
									case 4:
										_this798.s4 = v57;
										break;
									case 5:
										_this798.s5 = v57;
										break;
									default:
										if(_this798.s6 == null) {
											_this798.s6 = new trilateral_justPath_StoreF6();
										}
										var _this799 = _this798.s6;
										switch(_this799.l) {
										case 0:
											_this799.s0 = v57;
											break;
										case 1:
											_this799.s1 = v57;
											break;
										case 2:
											_this799.s2 = v57;
											break;
										case 3:
											_this799.s3 = v57;
											break;
										case 4:
											_this799.s4 = v57;
											break;
										case 5:
											_this799.s5 = v57;
											break;
										default:
											if(_this799.s6 == null) {
												_this799.s6 = new trilateral_justPath_StoreF6();
											}
											var _this800 = _this799.s6;
											switch(_this800.l) {
											case 0:
												_this800.s0 = v57;
												break;
											case 1:
												_this800.s1 = v57;
												break;
											case 2:
												_this800.s2 = v57;
												break;
											case 3:
												_this800.s3 = v57;
												break;
											case 4:
												_this800.s4 = v57;
												break;
											case 5:
												_this800.s5 = v57;
												break;
											default:
												if(_this800.s6 == null) {
													_this800.s6 = new trilateral_justPath_StoreF6();
												}
												var _this801 = _this800.s6;
												switch(_this801.l) {
												case 0:
													_this801.s0 = v57;
													break;
												case 1:
													_this801.s1 = v57;
													break;
												case 2:
													_this801.s2 = v57;
													break;
												case 3:
													_this801.s3 = v57;
													break;
												case 4:
													_this801.s4 = v57;
													break;
												case 5:
													_this801.s5 = v57;
													break;
												default:
													if(_this801.s6 == null) {
														_this801.s6 = new trilateral_justPath_StoreF6();
													}
													var _this802 = _this801.s6;
													switch(_this802.l) {
													case 0:
														_this802.s0 = v57;
														break;
													case 1:
														_this802.s1 = v57;
														break;
													case 2:
														_this802.s2 = v57;
														break;
													case 3:
														_this802.s3 = v57;
														break;
													case 4:
														_this802.s4 = v57;
														break;
													case 5:
														_this802.s5 = v57;
														break;
													default:
														if(_this802.s6 == null) {
															_this802.s6 = new trilateral_justPath_StoreF6();
														}
														var _this803 = _this802.s6;
														switch(_this803.l) {
														case 0:
															_this803.s0 = v57;
															break;
														case 1:
															_this803.s1 = v57;
															break;
														case 2:
															_this803.s2 = v57;
															break;
														case 3:
															_this803.s3 = v57;
															break;
														case 4:
															_this803.s4 = v57;
															break;
														case 5:
															_this803.s5 = v57;
															break;
														default:
															if(_this803.s6 == null) {
																_this803.s6 = new trilateral_justPath_StoreF6();
															}
															_this803.s6.push(v57);
														}
														_this803.l++;
													}
													_this802.l++;
												}
												_this801.l++;
											}
											_this800.l++;
										}
										_this799.l++;
									}
									_this798.l++;
								}
								_this797.l++;
							}
						}
						temp10 = "-";
						break;
					case 46:
						temp10 += ".";
						break;
					case 48:
						temp10 += "0";
						break;
					case 49:
						temp10 += "1";
						break;
					case 50:
						temp10 += "2";
						break;
					case 51:
						temp10 += "3";
						break;
					case 52:
						temp10 += "4";
						break;
					case 53:
						temp10 += "5";
						break;
					case 54:
						temp10 += "6";
						break;
					case 55:
						temp10 += "7";
						break;
					case 56:
						temp10 += "8";
						break;
					case 57:
						temp10 += "9";
						break;
					default:
						if(temp10 != "") {
							if((this.store.l & 1) == 0) {
								var _this804 = this.store;
								var v58 = parseFloat(temp10);
								switch(_this804.l) {
								case 0:
									_this804.s0 = v58;
									break;
								case 1:
									_this804.s1 = v58;
									break;
								case 2:
									_this804.s2 = v58;
									break;
								case 3:
									_this804.s3 = v58;
									break;
								case 4:
									_this804.s4 = v58;
									break;
								case 5:
									_this804.s5 = v58;
									break;
								default:
									if(_this804.s6 == null) {
										_this804.s6 = new trilateral_justPath_StoreF6();
									}
									var _this805 = _this804.s6;
									switch(_this805.l) {
									case 0:
										_this805.s0 = v58;
										break;
									case 1:
										_this805.s1 = v58;
										break;
									case 2:
										_this805.s2 = v58;
										break;
									case 3:
										_this805.s3 = v58;
										break;
									case 4:
										_this805.s4 = v58;
										break;
									case 5:
										_this805.s5 = v58;
										break;
									default:
										if(_this805.s6 == null) {
											_this805.s6 = new trilateral_justPath_StoreF6();
										}
										var _this806 = _this805.s6;
										switch(_this806.l) {
										case 0:
											_this806.s0 = v58;
											break;
										case 1:
											_this806.s1 = v58;
											break;
										case 2:
											_this806.s2 = v58;
											break;
										case 3:
											_this806.s3 = v58;
											break;
										case 4:
											_this806.s4 = v58;
											break;
										case 5:
											_this806.s5 = v58;
											break;
										default:
											if(_this806.s6 == null) {
												_this806.s6 = new trilateral_justPath_StoreF6();
											}
											var _this807 = _this806.s6;
											switch(_this807.l) {
											case 0:
												_this807.s0 = v58;
												break;
											case 1:
												_this807.s1 = v58;
												break;
											case 2:
												_this807.s2 = v58;
												break;
											case 3:
												_this807.s3 = v58;
												break;
											case 4:
												_this807.s4 = v58;
												break;
											case 5:
												_this807.s5 = v58;
												break;
											default:
												if(_this807.s6 == null) {
													_this807.s6 = new trilateral_justPath_StoreF6();
												}
												var _this808 = _this807.s6;
												switch(_this808.l) {
												case 0:
													_this808.s0 = v58;
													break;
												case 1:
													_this808.s1 = v58;
													break;
												case 2:
													_this808.s2 = v58;
													break;
												case 3:
													_this808.s3 = v58;
													break;
												case 4:
													_this808.s4 = v58;
													break;
												case 5:
													_this808.s5 = v58;
													break;
												default:
													if(_this808.s6 == null) {
														_this808.s6 = new trilateral_justPath_StoreF6();
													}
													var _this809 = _this808.s6;
													switch(_this809.l) {
													case 0:
														_this809.s0 = v58;
														break;
													case 1:
														_this809.s1 = v58;
														break;
													case 2:
														_this809.s2 = v58;
														break;
													case 3:
														_this809.s3 = v58;
														break;
													case 4:
														_this809.s4 = v58;
														break;
													case 5:
														_this809.s5 = v58;
														break;
													default:
														if(_this809.s6 == null) {
															_this809.s6 = new trilateral_justPath_StoreF6();
														}
														var _this810 = _this809.s6;
														switch(_this810.l) {
														case 0:
															_this810.s0 = v58;
															break;
														case 1:
															_this810.s1 = v58;
															break;
														case 2:
															_this810.s2 = v58;
															break;
														case 3:
															_this810.s3 = v58;
															break;
														case 4:
															_this810.s4 = v58;
															break;
														case 5:
															_this810.s5 = v58;
															break;
														default:
															if(_this810.s6 == null) {
																_this810.s6 = new trilateral_justPath_StoreF6();
															}
															_this810.s6.push(v58);
														}
														_this810.l++;
													}
													_this809.l++;
												}
												_this808.l++;
											}
											_this807.l++;
										}
										_this806.l++;
									}
									_this805.l++;
								}
								_this804.l++;
							} else {
								var _this811 = this.store;
								var v59 = parseFloat(temp10);
								switch(_this811.l) {
								case 0:
									_this811.s0 = v59;
									break;
								case 1:
									_this811.s1 = v59;
									break;
								case 2:
									_this811.s2 = v59;
									break;
								case 3:
									_this811.s3 = v59;
									break;
								case 4:
									_this811.s4 = v59;
									break;
								case 5:
									_this811.s5 = v59;
									break;
								default:
									if(_this811.s6 == null) {
										_this811.s6 = new trilateral_justPath_StoreF6();
									}
									var _this812 = _this811.s6;
									switch(_this812.l) {
									case 0:
										_this812.s0 = v59;
										break;
									case 1:
										_this812.s1 = v59;
										break;
									case 2:
										_this812.s2 = v59;
										break;
									case 3:
										_this812.s3 = v59;
										break;
									case 4:
										_this812.s4 = v59;
										break;
									case 5:
										_this812.s5 = v59;
										break;
									default:
										if(_this812.s6 == null) {
											_this812.s6 = new trilateral_justPath_StoreF6();
										}
										var _this813 = _this812.s6;
										switch(_this813.l) {
										case 0:
											_this813.s0 = v59;
											break;
										case 1:
											_this813.s1 = v59;
											break;
										case 2:
											_this813.s2 = v59;
											break;
										case 3:
											_this813.s3 = v59;
											break;
										case 4:
											_this813.s4 = v59;
											break;
										case 5:
											_this813.s5 = v59;
											break;
										default:
											if(_this813.s6 == null) {
												_this813.s6 = new trilateral_justPath_StoreF6();
											}
											var _this814 = _this813.s6;
											switch(_this814.l) {
											case 0:
												_this814.s0 = v59;
												break;
											case 1:
												_this814.s1 = v59;
												break;
											case 2:
												_this814.s2 = v59;
												break;
											case 3:
												_this814.s3 = v59;
												break;
											case 4:
												_this814.s4 = v59;
												break;
											case 5:
												_this814.s5 = v59;
												break;
											default:
												if(_this814.s6 == null) {
													_this814.s6 = new trilateral_justPath_StoreF6();
												}
												var _this815 = _this814.s6;
												switch(_this815.l) {
												case 0:
													_this815.s0 = v59;
													break;
												case 1:
													_this815.s1 = v59;
													break;
												case 2:
													_this815.s2 = v59;
													break;
												case 3:
													_this815.s3 = v59;
													break;
												case 4:
													_this815.s4 = v59;
													break;
												case 5:
													_this815.s5 = v59;
													break;
												default:
													if(_this815.s6 == null) {
														_this815.s6 = new trilateral_justPath_StoreF6();
													}
													var _this816 = _this815.s6;
													switch(_this816.l) {
													case 0:
														_this816.s0 = v59;
														break;
													case 1:
														_this816.s1 = v59;
														break;
													case 2:
														_this816.s2 = v59;
														break;
													case 3:
														_this816.s3 = v59;
														break;
													case 4:
														_this816.s4 = v59;
														break;
													case 5:
														_this816.s5 = v59;
														break;
													default:
														if(_this816.s6 == null) {
															_this816.s6 = new trilateral_justPath_StoreF6();
														}
														var _this817 = _this816.s6;
														switch(_this817.l) {
														case 0:
															_this817.s0 = v59;
															break;
														case 1:
															_this817.s1 = v59;
															break;
														case 2:
															_this817.s2 = v59;
															break;
														case 3:
															_this817.s3 = v59;
															break;
														case 4:
															_this817.s4 = v59;
															break;
														case 5:
															_this817.s5 = v59;
															break;
														default:
															if(_this817.s6 == null) {
																_this817.s6 = new trilateral_justPath_StoreF6();
															}
															_this817.s6.push(v59);
														}
														_this817.l++;
													}
													_this816.l++;
												}
												_this815.l++;
											}
											_this814.l++;
										}
										_this813.l++;
									}
									_this812.l++;
								}
								_this811.l++;
							}
							temp10 = "";
						}
						this.pos--;
						exit10 = true;
					}
					if(exit10) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					var firstX3 = this.store.s0 + this.lastX;
					var firstY3 = this.store.s1 + this.lastY;
					this.controlX = this.store.s2 + this.lastX;
					this.controlY = this.store.s3 + this.lastY;
					this.lastX = this.store.s4 + this.lastX;
					this.lastY = this.store.s5 + this.lastY;
					this.pathContext.curveTo(firstX3,firstY3,this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this818 = this.store;
						var out387 = _this818.s0;
						if(_this818.l != 0) {
							_this818.s0 = _this818.s1;
							_this818.s1 = _this818.s2;
							_this818.s2 = _this818.s3;
							_this818.s3 = _this818.s4;
							_this818.s4 = _this818.s5;
							_this818.s5 = null;
							if(_this818.s6 != null) {
								var _this819 = _this818.s6;
								var out388 = _this819.s0;
								if(_this819.l != 0) {
									_this819.s0 = _this819.s1;
									_this819.s1 = _this819.s2;
									_this819.s2 = _this819.s3;
									_this819.s3 = _this819.s4;
									_this819.s4 = _this819.s5;
									_this819.s5 = null;
									if(_this819.s6 != null) {
										var _this820 = _this819.s6;
										var out389 = _this820.s0;
										if(_this820.l != 0) {
											_this820.s0 = _this820.s1;
											_this820.s1 = _this820.s2;
											_this820.s2 = _this820.s3;
											_this820.s3 = _this820.s4;
											_this820.s4 = _this820.s5;
											_this820.s5 = null;
											if(_this820.s6 != null) {
												var _this821 = _this820.s6;
												var out390 = _this821.s0;
												if(_this821.l != 0) {
													_this821.s0 = _this821.s1;
													_this821.s1 = _this821.s2;
													_this821.s2 = _this821.s3;
													_this821.s3 = _this821.s4;
													_this821.s4 = _this821.s5;
													_this821.s5 = null;
													if(_this821.s6 != null) {
														var _this822 = _this821.s6;
														var out391 = _this822.s0;
														if(_this822.l != 0) {
															_this822.s0 = _this822.s1;
															_this822.s1 = _this822.s2;
															_this822.s2 = _this822.s3;
															_this822.s3 = _this822.s4;
															_this822.s4 = _this822.s5;
															_this822.s5 = null;
															if(_this822.s6 != null) {
																var _this823 = _this822.s6;
																var out392 = _this823.s0;
																if(_this823.l != 0) {
																	_this823.s0 = _this823.s1;
																	_this823.s1 = _this823.s2;
																	_this823.s2 = _this823.s3;
																	_this823.s3 = _this823.s4;
																	_this823.s4 = _this823.s5;
																	_this823.s5 = null;
																	if(_this823.s6 != null) {
																		var _this824 = _this823.s6;
																		var out393 = _this824.s0;
																		if(_this824.l != 0) {
																			_this824.s0 = _this824.s1;
																			_this824.s1 = _this824.s2;
																			_this824.s2 = _this824.s3;
																			_this824.s3 = _this824.s4;
																			_this824.s4 = _this824.s5;
																			_this824.s5 = null;
																			if(_this824.s6 != null) {
																				_this824.s5 = _this824.s6.shift();
																			}
																			_this824.l--;
																		}
																		_this823.s5 = out393;
																	}
																	_this823.l--;
																}
																_this822.s5 = out392;
															}
															_this822.l--;
														}
														_this821.s5 = out391;
													}
													_this821.l--;
												}
												_this820.s5 = out390;
											}
											_this820.l--;
										}
										_this819.s5 = out389;
									}
									_this819.l--;
								}
								_this818.s5 = out388;
							}
							_this818.l--;
						}
						var firstX4 = out387 + this.lastX;
						var _this825 = this.store;
						var out394 = _this825.s0;
						if(_this825.l != 0) {
							_this825.s0 = _this825.s1;
							_this825.s1 = _this825.s2;
							_this825.s2 = _this825.s3;
							_this825.s3 = _this825.s4;
							_this825.s4 = _this825.s5;
							_this825.s5 = null;
							if(_this825.s6 != null) {
								var _this826 = _this825.s6;
								var out395 = _this826.s0;
								if(_this826.l != 0) {
									_this826.s0 = _this826.s1;
									_this826.s1 = _this826.s2;
									_this826.s2 = _this826.s3;
									_this826.s3 = _this826.s4;
									_this826.s4 = _this826.s5;
									_this826.s5 = null;
									if(_this826.s6 != null) {
										var _this827 = _this826.s6;
										var out396 = _this827.s0;
										if(_this827.l != 0) {
											_this827.s0 = _this827.s1;
											_this827.s1 = _this827.s2;
											_this827.s2 = _this827.s3;
											_this827.s3 = _this827.s4;
											_this827.s4 = _this827.s5;
											_this827.s5 = null;
											if(_this827.s6 != null) {
												var _this828 = _this827.s6;
												var out397 = _this828.s0;
												if(_this828.l != 0) {
													_this828.s0 = _this828.s1;
													_this828.s1 = _this828.s2;
													_this828.s2 = _this828.s3;
													_this828.s3 = _this828.s4;
													_this828.s4 = _this828.s5;
													_this828.s5 = null;
													if(_this828.s6 != null) {
														var _this829 = _this828.s6;
														var out398 = _this829.s0;
														if(_this829.l != 0) {
															_this829.s0 = _this829.s1;
															_this829.s1 = _this829.s2;
															_this829.s2 = _this829.s3;
															_this829.s3 = _this829.s4;
															_this829.s4 = _this829.s5;
															_this829.s5 = null;
															if(_this829.s6 != null) {
																var _this830 = _this829.s6;
																var out399 = _this830.s0;
																if(_this830.l != 0) {
																	_this830.s0 = _this830.s1;
																	_this830.s1 = _this830.s2;
																	_this830.s2 = _this830.s3;
																	_this830.s3 = _this830.s4;
																	_this830.s4 = _this830.s5;
																	_this830.s5 = null;
																	if(_this830.s6 != null) {
																		var _this831 = _this830.s6;
																		var out400 = _this831.s0;
																		if(_this831.l != 0) {
																			_this831.s0 = _this831.s1;
																			_this831.s1 = _this831.s2;
																			_this831.s2 = _this831.s3;
																			_this831.s3 = _this831.s4;
																			_this831.s4 = _this831.s5;
																			_this831.s5 = null;
																			if(_this831.s6 != null) {
																				_this831.s5 = _this831.s6.shift();
																			}
																			_this831.l--;
																		}
																		_this830.s5 = out400;
																	}
																	_this830.l--;
																}
																_this829.s5 = out399;
															}
															_this829.l--;
														}
														_this828.s5 = out398;
													}
													_this828.l--;
												}
												_this827.s5 = out397;
											}
											_this827.l--;
										}
										_this826.s5 = out396;
									}
									_this826.l--;
								}
								_this825.s5 = out395;
							}
							_this825.l--;
						}
						var firstY4 = out394 + this.lastY;
						var _this832 = this.store;
						var out401 = _this832.s0;
						if(_this832.l != 0) {
							_this832.s0 = _this832.s1;
							_this832.s1 = _this832.s2;
							_this832.s2 = _this832.s3;
							_this832.s3 = _this832.s4;
							_this832.s4 = _this832.s5;
							_this832.s5 = null;
							if(_this832.s6 != null) {
								var _this833 = _this832.s6;
								var out402 = _this833.s0;
								if(_this833.l != 0) {
									_this833.s0 = _this833.s1;
									_this833.s1 = _this833.s2;
									_this833.s2 = _this833.s3;
									_this833.s3 = _this833.s4;
									_this833.s4 = _this833.s5;
									_this833.s5 = null;
									if(_this833.s6 != null) {
										var _this834 = _this833.s6;
										var out403 = _this834.s0;
										if(_this834.l != 0) {
											_this834.s0 = _this834.s1;
											_this834.s1 = _this834.s2;
											_this834.s2 = _this834.s3;
											_this834.s3 = _this834.s4;
											_this834.s4 = _this834.s5;
											_this834.s5 = null;
											if(_this834.s6 != null) {
												var _this835 = _this834.s6;
												var out404 = _this835.s0;
												if(_this835.l != 0) {
													_this835.s0 = _this835.s1;
													_this835.s1 = _this835.s2;
													_this835.s2 = _this835.s3;
													_this835.s3 = _this835.s4;
													_this835.s4 = _this835.s5;
													_this835.s5 = null;
													if(_this835.s6 != null) {
														var _this836 = _this835.s6;
														var out405 = _this836.s0;
														if(_this836.l != 0) {
															_this836.s0 = _this836.s1;
															_this836.s1 = _this836.s2;
															_this836.s2 = _this836.s3;
															_this836.s3 = _this836.s4;
															_this836.s4 = _this836.s5;
															_this836.s5 = null;
															if(_this836.s6 != null) {
																var _this837 = _this836.s6;
																var out406 = _this837.s0;
																if(_this837.l != 0) {
																	_this837.s0 = _this837.s1;
																	_this837.s1 = _this837.s2;
																	_this837.s2 = _this837.s3;
																	_this837.s3 = _this837.s4;
																	_this837.s4 = _this837.s5;
																	_this837.s5 = null;
																	if(_this837.s6 != null) {
																		var _this838 = _this837.s6;
																		var out407 = _this838.s0;
																		if(_this838.l != 0) {
																			_this838.s0 = _this838.s1;
																			_this838.s1 = _this838.s2;
																			_this838.s2 = _this838.s3;
																			_this838.s3 = _this838.s4;
																			_this838.s4 = _this838.s5;
																			_this838.s5 = null;
																			if(_this838.s6 != null) {
																				_this838.s5 = _this838.s6.shift();
																			}
																			_this838.l--;
																		}
																		_this837.s5 = out407;
																	}
																	_this837.l--;
																}
																_this836.s5 = out406;
															}
															_this836.l--;
														}
														_this835.s5 = out405;
													}
													_this835.l--;
												}
												_this834.s5 = out404;
											}
											_this834.l--;
										}
										_this833.s5 = out403;
									}
									_this833.l--;
								}
								_this832.s5 = out402;
							}
							_this832.l--;
						}
						this.controlX = out401 + this.lastX;
						var _this839 = this.store;
						var out408 = _this839.s0;
						if(_this839.l != 0) {
							_this839.s0 = _this839.s1;
							_this839.s1 = _this839.s2;
							_this839.s2 = _this839.s3;
							_this839.s3 = _this839.s4;
							_this839.s4 = _this839.s5;
							_this839.s5 = null;
							if(_this839.s6 != null) {
								var _this840 = _this839.s6;
								var out409 = _this840.s0;
								if(_this840.l != 0) {
									_this840.s0 = _this840.s1;
									_this840.s1 = _this840.s2;
									_this840.s2 = _this840.s3;
									_this840.s3 = _this840.s4;
									_this840.s4 = _this840.s5;
									_this840.s5 = null;
									if(_this840.s6 != null) {
										var _this841 = _this840.s6;
										var out410 = _this841.s0;
										if(_this841.l != 0) {
											_this841.s0 = _this841.s1;
											_this841.s1 = _this841.s2;
											_this841.s2 = _this841.s3;
											_this841.s3 = _this841.s4;
											_this841.s4 = _this841.s5;
											_this841.s5 = null;
											if(_this841.s6 != null) {
												var _this842 = _this841.s6;
												var out411 = _this842.s0;
												if(_this842.l != 0) {
													_this842.s0 = _this842.s1;
													_this842.s1 = _this842.s2;
													_this842.s2 = _this842.s3;
													_this842.s3 = _this842.s4;
													_this842.s4 = _this842.s5;
													_this842.s5 = null;
													if(_this842.s6 != null) {
														var _this843 = _this842.s6;
														var out412 = _this843.s0;
														if(_this843.l != 0) {
															_this843.s0 = _this843.s1;
															_this843.s1 = _this843.s2;
															_this843.s2 = _this843.s3;
															_this843.s3 = _this843.s4;
															_this843.s4 = _this843.s5;
															_this843.s5 = null;
															if(_this843.s6 != null) {
																var _this844 = _this843.s6;
																var out413 = _this844.s0;
																if(_this844.l != 0) {
																	_this844.s0 = _this844.s1;
																	_this844.s1 = _this844.s2;
																	_this844.s2 = _this844.s3;
																	_this844.s3 = _this844.s4;
																	_this844.s4 = _this844.s5;
																	_this844.s5 = null;
																	if(_this844.s6 != null) {
																		var _this845 = _this844.s6;
																		var out414 = _this845.s0;
																		if(_this845.l != 0) {
																			_this845.s0 = _this845.s1;
																			_this845.s1 = _this845.s2;
																			_this845.s2 = _this845.s3;
																			_this845.s3 = _this845.s4;
																			_this845.s4 = _this845.s5;
																			_this845.s5 = null;
																			if(_this845.s6 != null) {
																				_this845.s5 = _this845.s6.shift();
																			}
																			_this845.l--;
																		}
																		_this844.s5 = out414;
																	}
																	_this844.l--;
																}
																_this843.s5 = out413;
															}
															_this843.l--;
														}
														_this842.s5 = out412;
													}
													_this842.l--;
												}
												_this841.s5 = out411;
											}
											_this841.l--;
										}
										_this840.s5 = out410;
									}
									_this840.l--;
								}
								_this839.s5 = out409;
							}
							_this839.l--;
						}
						this.controlY = out408 + this.lastY;
						var _this846 = this.store;
						var out415 = _this846.s0;
						if(_this846.l != 0) {
							_this846.s0 = _this846.s1;
							_this846.s1 = _this846.s2;
							_this846.s2 = _this846.s3;
							_this846.s3 = _this846.s4;
							_this846.s4 = _this846.s5;
							_this846.s5 = null;
							if(_this846.s6 != null) {
								var _this847 = _this846.s6;
								var out416 = _this847.s0;
								if(_this847.l != 0) {
									_this847.s0 = _this847.s1;
									_this847.s1 = _this847.s2;
									_this847.s2 = _this847.s3;
									_this847.s3 = _this847.s4;
									_this847.s4 = _this847.s5;
									_this847.s5 = null;
									if(_this847.s6 != null) {
										var _this848 = _this847.s6;
										var out417 = _this848.s0;
										if(_this848.l != 0) {
											_this848.s0 = _this848.s1;
											_this848.s1 = _this848.s2;
											_this848.s2 = _this848.s3;
											_this848.s3 = _this848.s4;
											_this848.s4 = _this848.s5;
											_this848.s5 = null;
											if(_this848.s6 != null) {
												var _this849 = _this848.s6;
												var out418 = _this849.s0;
												if(_this849.l != 0) {
													_this849.s0 = _this849.s1;
													_this849.s1 = _this849.s2;
													_this849.s2 = _this849.s3;
													_this849.s3 = _this849.s4;
													_this849.s4 = _this849.s5;
													_this849.s5 = null;
													if(_this849.s6 != null) {
														var _this850 = _this849.s6;
														var out419 = _this850.s0;
														if(_this850.l != 0) {
															_this850.s0 = _this850.s1;
															_this850.s1 = _this850.s2;
															_this850.s2 = _this850.s3;
															_this850.s3 = _this850.s4;
															_this850.s4 = _this850.s5;
															_this850.s5 = null;
															if(_this850.s6 != null) {
																var _this851 = _this850.s6;
																var out420 = _this851.s0;
																if(_this851.l != 0) {
																	_this851.s0 = _this851.s1;
																	_this851.s1 = _this851.s2;
																	_this851.s2 = _this851.s3;
																	_this851.s3 = _this851.s4;
																	_this851.s4 = _this851.s5;
																	_this851.s5 = null;
																	if(_this851.s6 != null) {
																		var _this852 = _this851.s6;
																		var out421 = _this852.s0;
																		if(_this852.l != 0) {
																			_this852.s0 = _this852.s1;
																			_this852.s1 = _this852.s2;
																			_this852.s2 = _this852.s3;
																			_this852.s3 = _this852.s4;
																			_this852.s4 = _this852.s5;
																			_this852.s5 = null;
																			if(_this852.s6 != null) {
																				_this852.s5 = _this852.s6.shift();
																			}
																			_this852.l--;
																		}
																		_this851.s5 = out421;
																	}
																	_this851.l--;
																}
																_this850.s5 = out420;
															}
															_this850.l--;
														}
														_this849.s5 = out419;
													}
													_this849.l--;
												}
												_this848.s5 = out418;
											}
											_this848.l--;
										}
										_this847.s5 = out417;
									}
									_this847.l--;
								}
								_this846.s5 = out416;
							}
							_this846.l--;
						}
						this.lastX = out415 + this.lastX;
						var _this853 = this.store;
						var out422 = _this853.s0;
						if(_this853.l != 0) {
							_this853.s0 = _this853.s1;
							_this853.s1 = _this853.s2;
							_this853.s2 = _this853.s3;
							_this853.s3 = _this853.s4;
							_this853.s4 = _this853.s5;
							_this853.s5 = null;
							if(_this853.s6 != null) {
								var _this854 = _this853.s6;
								var out423 = _this854.s0;
								if(_this854.l != 0) {
									_this854.s0 = _this854.s1;
									_this854.s1 = _this854.s2;
									_this854.s2 = _this854.s3;
									_this854.s3 = _this854.s4;
									_this854.s4 = _this854.s5;
									_this854.s5 = null;
									if(_this854.s6 != null) {
										var _this855 = _this854.s6;
										var out424 = _this855.s0;
										if(_this855.l != 0) {
											_this855.s0 = _this855.s1;
											_this855.s1 = _this855.s2;
											_this855.s2 = _this855.s3;
											_this855.s3 = _this855.s4;
											_this855.s4 = _this855.s5;
											_this855.s5 = null;
											if(_this855.s6 != null) {
												var _this856 = _this855.s6;
												var out425 = _this856.s0;
												if(_this856.l != 0) {
													_this856.s0 = _this856.s1;
													_this856.s1 = _this856.s2;
													_this856.s2 = _this856.s3;
													_this856.s3 = _this856.s4;
													_this856.s4 = _this856.s5;
													_this856.s5 = null;
													if(_this856.s6 != null) {
														var _this857 = _this856.s6;
														var out426 = _this857.s0;
														if(_this857.l != 0) {
															_this857.s0 = _this857.s1;
															_this857.s1 = _this857.s2;
															_this857.s2 = _this857.s3;
															_this857.s3 = _this857.s4;
															_this857.s4 = _this857.s5;
															_this857.s5 = null;
															if(_this857.s6 != null) {
																var _this858 = _this857.s6;
																var out427 = _this858.s0;
																if(_this858.l != 0) {
																	_this858.s0 = _this858.s1;
																	_this858.s1 = _this858.s2;
																	_this858.s2 = _this858.s3;
																	_this858.s3 = _this858.s4;
																	_this858.s4 = _this858.s5;
																	_this858.s5 = null;
																	if(_this858.s6 != null) {
																		var _this859 = _this858.s6;
																		var out428 = _this859.s0;
																		if(_this859.l != 0) {
																			_this859.s0 = _this859.s1;
																			_this859.s1 = _this859.s2;
																			_this859.s2 = _this859.s3;
																			_this859.s3 = _this859.s4;
																			_this859.s4 = _this859.s5;
																			_this859.s5 = null;
																			if(_this859.s6 != null) {
																				_this859.s5 = _this859.s6.shift();
																			}
																			_this859.l--;
																		}
																		_this858.s5 = out428;
																	}
																	_this858.l--;
																}
																_this857.s5 = out427;
															}
															_this857.l--;
														}
														_this856.s5 = out426;
													}
													_this856.l--;
												}
												_this855.s5 = out425;
											}
											_this855.l--;
										}
										_this854.s5 = out424;
									}
									_this854.l--;
								}
								_this853.s5 = out423;
							}
							_this853.l--;
						}
						this.lastY = out422 + this.lastY;
						this.pathContext.curveTo(firstX4,firstY4,this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 104:
				var _this860 = this.store;
				_this860.l = 0;
				_this860.s0 = null;
				_this860.s1 = null;
				_this860.s2 = null;
				_this860.s3 = null;
				_this860.s4 = null;
				_this860.s5 = null;
				_this860.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count12 = 0;
				var temp11 = "";
				var exit11 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp11 != "") {
							var _this861 = this.store;
							var v60 = parseFloat(temp11);
							switch(_this861.l) {
							case 0:
								_this861.s0 = v60;
								break;
							case 1:
								_this861.s1 = v60;
								break;
							case 2:
								_this861.s2 = v60;
								break;
							case 3:
								_this861.s3 = v60;
								break;
							case 4:
								_this861.s4 = v60;
								break;
							case 5:
								_this861.s5 = v60;
								break;
							default:
								if(_this861.s6 == null) {
									_this861.s6 = new trilateral_justPath_StoreF6();
								}
								var _this862 = _this861.s6;
								switch(_this862.l) {
								case 0:
									_this862.s0 = v60;
									break;
								case 1:
									_this862.s1 = v60;
									break;
								case 2:
									_this862.s2 = v60;
									break;
								case 3:
									_this862.s3 = v60;
									break;
								case 4:
									_this862.s4 = v60;
									break;
								case 5:
									_this862.s5 = v60;
									break;
								default:
									if(_this862.s6 == null) {
										_this862.s6 = new trilateral_justPath_StoreF6();
									}
									var _this863 = _this862.s6;
									switch(_this863.l) {
									case 0:
										_this863.s0 = v60;
										break;
									case 1:
										_this863.s1 = v60;
										break;
									case 2:
										_this863.s2 = v60;
										break;
									case 3:
										_this863.s3 = v60;
										break;
									case 4:
										_this863.s4 = v60;
										break;
									case 5:
										_this863.s5 = v60;
										break;
									default:
										if(_this863.s6 == null) {
											_this863.s6 = new trilateral_justPath_StoreF6();
										}
										var _this864 = _this863.s6;
										switch(_this864.l) {
										case 0:
											_this864.s0 = v60;
											break;
										case 1:
											_this864.s1 = v60;
											break;
										case 2:
											_this864.s2 = v60;
											break;
										case 3:
											_this864.s3 = v60;
											break;
										case 4:
											_this864.s4 = v60;
											break;
										case 5:
											_this864.s5 = v60;
											break;
										default:
											if(_this864.s6 == null) {
												_this864.s6 = new trilateral_justPath_StoreF6();
											}
											var _this865 = _this864.s6;
											switch(_this865.l) {
											case 0:
												_this865.s0 = v60;
												break;
											case 1:
												_this865.s1 = v60;
												break;
											case 2:
												_this865.s2 = v60;
												break;
											case 3:
												_this865.s3 = v60;
												break;
											case 4:
												_this865.s4 = v60;
												break;
											case 5:
												_this865.s5 = v60;
												break;
											default:
												if(_this865.s6 == null) {
													_this865.s6 = new trilateral_justPath_StoreF6();
												}
												var _this866 = _this865.s6;
												switch(_this866.l) {
												case 0:
													_this866.s0 = v60;
													break;
												case 1:
													_this866.s1 = v60;
													break;
												case 2:
													_this866.s2 = v60;
													break;
												case 3:
													_this866.s3 = v60;
													break;
												case 4:
													_this866.s4 = v60;
													break;
												case 5:
													_this866.s5 = v60;
													break;
												default:
													if(_this866.s6 == null) {
														_this866.s6 = new trilateral_justPath_StoreF6();
													}
													var _this867 = _this866.s6;
													switch(_this867.l) {
													case 0:
														_this867.s0 = v60;
														break;
													case 1:
														_this867.s1 = v60;
														break;
													case 2:
														_this867.s2 = v60;
														break;
													case 3:
														_this867.s3 = v60;
														break;
													case 4:
														_this867.s4 = v60;
														break;
													case 5:
														_this867.s5 = v60;
														break;
													default:
														if(_this867.s6 == null) {
															_this867.s6 = new trilateral_justPath_StoreF6();
														}
														_this867.s6.push(v60);
													}
													_this867.l++;
												}
												_this866.l++;
											}
											_this865.l++;
										}
										_this864.l++;
									}
									_this863.l++;
								}
								_this862.l++;
							}
							_this861.l++;
							temp11 = "";
						}
						break;
					case 45:
						if(temp11 != "") {
							var _this868 = this.store;
							var v61 = parseFloat(temp11);
							switch(_this868.l) {
							case 0:
								_this868.s0 = v61;
								break;
							case 1:
								_this868.s1 = v61;
								break;
							case 2:
								_this868.s2 = v61;
								break;
							case 3:
								_this868.s3 = v61;
								break;
							case 4:
								_this868.s4 = v61;
								break;
							case 5:
								_this868.s5 = v61;
								break;
							default:
								if(_this868.s6 == null) {
									_this868.s6 = new trilateral_justPath_StoreF6();
								}
								var _this869 = _this868.s6;
								switch(_this869.l) {
								case 0:
									_this869.s0 = v61;
									break;
								case 1:
									_this869.s1 = v61;
									break;
								case 2:
									_this869.s2 = v61;
									break;
								case 3:
									_this869.s3 = v61;
									break;
								case 4:
									_this869.s4 = v61;
									break;
								case 5:
									_this869.s5 = v61;
									break;
								default:
									if(_this869.s6 == null) {
										_this869.s6 = new trilateral_justPath_StoreF6();
									}
									var _this870 = _this869.s6;
									switch(_this870.l) {
									case 0:
										_this870.s0 = v61;
										break;
									case 1:
										_this870.s1 = v61;
										break;
									case 2:
										_this870.s2 = v61;
										break;
									case 3:
										_this870.s3 = v61;
										break;
									case 4:
										_this870.s4 = v61;
										break;
									case 5:
										_this870.s5 = v61;
										break;
									default:
										if(_this870.s6 == null) {
											_this870.s6 = new trilateral_justPath_StoreF6();
										}
										var _this871 = _this870.s6;
										switch(_this871.l) {
										case 0:
											_this871.s0 = v61;
											break;
										case 1:
											_this871.s1 = v61;
											break;
										case 2:
											_this871.s2 = v61;
											break;
										case 3:
											_this871.s3 = v61;
											break;
										case 4:
											_this871.s4 = v61;
											break;
										case 5:
											_this871.s5 = v61;
											break;
										default:
											if(_this871.s6 == null) {
												_this871.s6 = new trilateral_justPath_StoreF6();
											}
											var _this872 = _this871.s6;
											switch(_this872.l) {
											case 0:
												_this872.s0 = v61;
												break;
											case 1:
												_this872.s1 = v61;
												break;
											case 2:
												_this872.s2 = v61;
												break;
											case 3:
												_this872.s3 = v61;
												break;
											case 4:
												_this872.s4 = v61;
												break;
											case 5:
												_this872.s5 = v61;
												break;
											default:
												if(_this872.s6 == null) {
													_this872.s6 = new trilateral_justPath_StoreF6();
												}
												var _this873 = _this872.s6;
												switch(_this873.l) {
												case 0:
													_this873.s0 = v61;
													break;
												case 1:
													_this873.s1 = v61;
													break;
												case 2:
													_this873.s2 = v61;
													break;
												case 3:
													_this873.s3 = v61;
													break;
												case 4:
													_this873.s4 = v61;
													break;
												case 5:
													_this873.s5 = v61;
													break;
												default:
													if(_this873.s6 == null) {
														_this873.s6 = new trilateral_justPath_StoreF6();
													}
													var _this874 = _this873.s6;
													switch(_this874.l) {
													case 0:
														_this874.s0 = v61;
														break;
													case 1:
														_this874.s1 = v61;
														break;
													case 2:
														_this874.s2 = v61;
														break;
													case 3:
														_this874.s3 = v61;
														break;
													case 4:
														_this874.s4 = v61;
														break;
													case 5:
														_this874.s5 = v61;
														break;
													default:
														if(_this874.s6 == null) {
															_this874.s6 = new trilateral_justPath_StoreF6();
														}
														_this874.s6.push(v61);
													}
													_this874.l++;
												}
												_this873.l++;
											}
											_this872.l++;
										}
										_this871.l++;
									}
									_this870.l++;
								}
								_this869.l++;
							}
							_this868.l++;
						}
						temp11 = "-";
						break;
					case 46:
						temp11 += ".";
						break;
					case 48:
						temp11 += "0";
						break;
					case 49:
						temp11 += "1";
						break;
					case 50:
						temp11 += "2";
						break;
					case 51:
						temp11 += "3";
						break;
					case 52:
						temp11 += "4";
						break;
					case 53:
						temp11 += "5";
						break;
					case 54:
						temp11 += "6";
						break;
					case 55:
						temp11 += "7";
						break;
					case 56:
						temp11 += "8";
						break;
					case 57:
						temp11 += "9";
						break;
					default:
						if(temp11 != "") {
							var _this875 = this.store;
							var v62 = parseFloat(temp11);
							switch(_this875.l) {
							case 0:
								_this875.s0 = v62;
								break;
							case 1:
								_this875.s1 = v62;
								break;
							case 2:
								_this875.s2 = v62;
								break;
							case 3:
								_this875.s3 = v62;
								break;
							case 4:
								_this875.s4 = v62;
								break;
							case 5:
								_this875.s5 = v62;
								break;
							default:
								if(_this875.s6 == null) {
									_this875.s6 = new trilateral_justPath_StoreF6();
								}
								var _this876 = _this875.s6;
								switch(_this876.l) {
								case 0:
									_this876.s0 = v62;
									break;
								case 1:
									_this876.s1 = v62;
									break;
								case 2:
									_this876.s2 = v62;
									break;
								case 3:
									_this876.s3 = v62;
									break;
								case 4:
									_this876.s4 = v62;
									break;
								case 5:
									_this876.s5 = v62;
									break;
								default:
									if(_this876.s6 == null) {
										_this876.s6 = new trilateral_justPath_StoreF6();
									}
									var _this877 = _this876.s6;
									switch(_this877.l) {
									case 0:
										_this877.s0 = v62;
										break;
									case 1:
										_this877.s1 = v62;
										break;
									case 2:
										_this877.s2 = v62;
										break;
									case 3:
										_this877.s3 = v62;
										break;
									case 4:
										_this877.s4 = v62;
										break;
									case 5:
										_this877.s5 = v62;
										break;
									default:
										if(_this877.s6 == null) {
											_this877.s6 = new trilateral_justPath_StoreF6();
										}
										var _this878 = _this877.s6;
										switch(_this878.l) {
										case 0:
											_this878.s0 = v62;
											break;
										case 1:
											_this878.s1 = v62;
											break;
										case 2:
											_this878.s2 = v62;
											break;
										case 3:
											_this878.s3 = v62;
											break;
										case 4:
											_this878.s4 = v62;
											break;
										case 5:
											_this878.s5 = v62;
											break;
										default:
											if(_this878.s6 == null) {
												_this878.s6 = new trilateral_justPath_StoreF6();
											}
											var _this879 = _this878.s6;
											switch(_this879.l) {
											case 0:
												_this879.s0 = v62;
												break;
											case 1:
												_this879.s1 = v62;
												break;
											case 2:
												_this879.s2 = v62;
												break;
											case 3:
												_this879.s3 = v62;
												break;
											case 4:
												_this879.s4 = v62;
												break;
											case 5:
												_this879.s5 = v62;
												break;
											default:
												if(_this879.s6 == null) {
													_this879.s6 = new trilateral_justPath_StoreF6();
												}
												var _this880 = _this879.s6;
												switch(_this880.l) {
												case 0:
													_this880.s0 = v62;
													break;
												case 1:
													_this880.s1 = v62;
													break;
												case 2:
													_this880.s2 = v62;
													break;
												case 3:
													_this880.s3 = v62;
													break;
												case 4:
													_this880.s4 = v62;
													break;
												case 5:
													_this880.s5 = v62;
													break;
												default:
													if(_this880.s6 == null) {
														_this880.s6 = new trilateral_justPath_StoreF6();
													}
													var _this881 = _this880.s6;
													switch(_this881.l) {
													case 0:
														_this881.s0 = v62;
														break;
													case 1:
														_this881.s1 = v62;
														break;
													case 2:
														_this881.s2 = v62;
														break;
													case 3:
														_this881.s3 = v62;
														break;
													case 4:
														_this881.s4 = v62;
														break;
													case 5:
														_this881.s5 = v62;
														break;
													default:
														if(_this881.s6 == null) {
															_this881.s6 = new trilateral_justPath_StoreF6();
														}
														_this881.s6.push(v62);
													}
													_this881.l++;
												}
												_this880.l++;
											}
											_this879.l++;
										}
										_this878.l++;
									}
									_this877.l++;
								}
								_this876.l++;
							}
							_this875.l++;
							temp11 = "";
						}
						this.pos--;
						exit11 = true;
					}
					if(exit11) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					this.lastX += this.store.s0;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var tmp = this.lastX;
						var _this882 = this.store;
						var out429 = _this882.s0;
						if(_this882.l != 0) {
							_this882.s0 = _this882.s1;
							_this882.s1 = _this882.s2;
							_this882.s2 = _this882.s3;
							_this882.s3 = _this882.s4;
							_this882.s4 = _this882.s5;
							_this882.s5 = null;
							if(_this882.s6 != null) {
								var _this883 = _this882.s6;
								var out430 = _this883.s0;
								if(_this883.l != 0) {
									_this883.s0 = _this883.s1;
									_this883.s1 = _this883.s2;
									_this883.s2 = _this883.s3;
									_this883.s3 = _this883.s4;
									_this883.s4 = _this883.s5;
									_this883.s5 = null;
									if(_this883.s6 != null) {
										var _this884 = _this883.s6;
										var out431 = _this884.s0;
										if(_this884.l != 0) {
											_this884.s0 = _this884.s1;
											_this884.s1 = _this884.s2;
											_this884.s2 = _this884.s3;
											_this884.s3 = _this884.s4;
											_this884.s4 = _this884.s5;
											_this884.s5 = null;
											if(_this884.s6 != null) {
												var _this885 = _this884.s6;
												var out432 = _this885.s0;
												if(_this885.l != 0) {
													_this885.s0 = _this885.s1;
													_this885.s1 = _this885.s2;
													_this885.s2 = _this885.s3;
													_this885.s3 = _this885.s4;
													_this885.s4 = _this885.s5;
													_this885.s5 = null;
													if(_this885.s6 != null) {
														var _this886 = _this885.s6;
														var out433 = _this886.s0;
														if(_this886.l != 0) {
															_this886.s0 = _this886.s1;
															_this886.s1 = _this886.s2;
															_this886.s2 = _this886.s3;
															_this886.s3 = _this886.s4;
															_this886.s4 = _this886.s5;
															_this886.s5 = null;
															if(_this886.s6 != null) {
																var _this887 = _this886.s6;
																var out434 = _this887.s0;
																if(_this887.l != 0) {
																	_this887.s0 = _this887.s1;
																	_this887.s1 = _this887.s2;
																	_this887.s2 = _this887.s3;
																	_this887.s3 = _this887.s4;
																	_this887.s4 = _this887.s5;
																	_this887.s5 = null;
																	if(_this887.s6 != null) {
																		var _this888 = _this887.s6;
																		var out435 = _this888.s0;
																		if(_this888.l != 0) {
																			_this888.s0 = _this888.s1;
																			_this888.s1 = _this888.s2;
																			_this888.s2 = _this888.s3;
																			_this888.s3 = _this888.s4;
																			_this888.s4 = _this888.s5;
																			_this888.s5 = null;
																			if(_this888.s6 != null) {
																				_this888.s5 = _this888.s6.shift();
																			}
																			_this888.l--;
																		}
																		_this887.s5 = out435;
																	}
																	_this887.l--;
																}
																_this886.s5 = out434;
															}
															_this886.l--;
														}
														_this885.s5 = out433;
													}
													_this885.l--;
												}
												_this884.s5 = out432;
											}
											_this884.l--;
										}
										_this883.s5 = out431;
									}
									_this883.l--;
								}
								_this882.s5 = out430;
							}
							_this882.l--;
						}
						this.lastX = tmp + out429;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 108:
				var _this889 = this.store;
				_this889.l = 0;
				_this889.s0 = null;
				_this889.s1 = null;
				_this889.s2 = null;
				_this889.s3 = null;
				_this889.s4 = null;
				_this889.s5 = null;
				_this889.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count13 = 0;
				var temp12 = "";
				var exit12 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp12 != "") {
							if((this.store.l & 1) == 0) {
								var _this890 = this.store;
								var v63 = parseFloat(temp12);
								switch(_this890.l) {
								case 0:
									_this890.s0 = v63;
									break;
								case 1:
									_this890.s1 = v63;
									break;
								case 2:
									_this890.s2 = v63;
									break;
								case 3:
									_this890.s3 = v63;
									break;
								case 4:
									_this890.s4 = v63;
									break;
								case 5:
									_this890.s5 = v63;
									break;
								default:
									if(_this890.s6 == null) {
										_this890.s6 = new trilateral_justPath_StoreF6();
									}
									var _this891 = _this890.s6;
									switch(_this891.l) {
									case 0:
										_this891.s0 = v63;
										break;
									case 1:
										_this891.s1 = v63;
										break;
									case 2:
										_this891.s2 = v63;
										break;
									case 3:
										_this891.s3 = v63;
										break;
									case 4:
										_this891.s4 = v63;
										break;
									case 5:
										_this891.s5 = v63;
										break;
									default:
										if(_this891.s6 == null) {
											_this891.s6 = new trilateral_justPath_StoreF6();
										}
										var _this892 = _this891.s6;
										switch(_this892.l) {
										case 0:
											_this892.s0 = v63;
											break;
										case 1:
											_this892.s1 = v63;
											break;
										case 2:
											_this892.s2 = v63;
											break;
										case 3:
											_this892.s3 = v63;
											break;
										case 4:
											_this892.s4 = v63;
											break;
										case 5:
											_this892.s5 = v63;
											break;
										default:
											if(_this892.s6 == null) {
												_this892.s6 = new trilateral_justPath_StoreF6();
											}
											var _this893 = _this892.s6;
											switch(_this893.l) {
											case 0:
												_this893.s0 = v63;
												break;
											case 1:
												_this893.s1 = v63;
												break;
											case 2:
												_this893.s2 = v63;
												break;
											case 3:
												_this893.s3 = v63;
												break;
											case 4:
												_this893.s4 = v63;
												break;
											case 5:
												_this893.s5 = v63;
												break;
											default:
												if(_this893.s6 == null) {
													_this893.s6 = new trilateral_justPath_StoreF6();
												}
												var _this894 = _this893.s6;
												switch(_this894.l) {
												case 0:
													_this894.s0 = v63;
													break;
												case 1:
													_this894.s1 = v63;
													break;
												case 2:
													_this894.s2 = v63;
													break;
												case 3:
													_this894.s3 = v63;
													break;
												case 4:
													_this894.s4 = v63;
													break;
												case 5:
													_this894.s5 = v63;
													break;
												default:
													if(_this894.s6 == null) {
														_this894.s6 = new trilateral_justPath_StoreF6();
													}
													var _this895 = _this894.s6;
													switch(_this895.l) {
													case 0:
														_this895.s0 = v63;
														break;
													case 1:
														_this895.s1 = v63;
														break;
													case 2:
														_this895.s2 = v63;
														break;
													case 3:
														_this895.s3 = v63;
														break;
													case 4:
														_this895.s4 = v63;
														break;
													case 5:
														_this895.s5 = v63;
														break;
													default:
														if(_this895.s6 == null) {
															_this895.s6 = new trilateral_justPath_StoreF6();
														}
														var _this896 = _this895.s6;
														switch(_this896.l) {
														case 0:
															_this896.s0 = v63;
															break;
														case 1:
															_this896.s1 = v63;
															break;
														case 2:
															_this896.s2 = v63;
															break;
														case 3:
															_this896.s3 = v63;
															break;
														case 4:
															_this896.s4 = v63;
															break;
														case 5:
															_this896.s5 = v63;
															break;
														default:
															if(_this896.s6 == null) {
																_this896.s6 = new trilateral_justPath_StoreF6();
															}
															_this896.s6.push(v63);
														}
														_this896.l++;
													}
													_this895.l++;
												}
												_this894.l++;
											}
											_this893.l++;
										}
										_this892.l++;
									}
									_this891.l++;
								}
								_this890.l++;
							} else {
								var _this897 = this.store;
								var v64 = parseFloat(temp12);
								switch(_this897.l) {
								case 0:
									_this897.s0 = v64;
									break;
								case 1:
									_this897.s1 = v64;
									break;
								case 2:
									_this897.s2 = v64;
									break;
								case 3:
									_this897.s3 = v64;
									break;
								case 4:
									_this897.s4 = v64;
									break;
								case 5:
									_this897.s5 = v64;
									break;
								default:
									if(_this897.s6 == null) {
										_this897.s6 = new trilateral_justPath_StoreF6();
									}
									var _this898 = _this897.s6;
									switch(_this898.l) {
									case 0:
										_this898.s0 = v64;
										break;
									case 1:
										_this898.s1 = v64;
										break;
									case 2:
										_this898.s2 = v64;
										break;
									case 3:
										_this898.s3 = v64;
										break;
									case 4:
										_this898.s4 = v64;
										break;
									case 5:
										_this898.s5 = v64;
										break;
									default:
										if(_this898.s6 == null) {
											_this898.s6 = new trilateral_justPath_StoreF6();
										}
										var _this899 = _this898.s6;
										switch(_this899.l) {
										case 0:
											_this899.s0 = v64;
											break;
										case 1:
											_this899.s1 = v64;
											break;
										case 2:
											_this899.s2 = v64;
											break;
										case 3:
											_this899.s3 = v64;
											break;
										case 4:
											_this899.s4 = v64;
											break;
										case 5:
											_this899.s5 = v64;
											break;
										default:
											if(_this899.s6 == null) {
												_this899.s6 = new trilateral_justPath_StoreF6();
											}
											var _this900 = _this899.s6;
											switch(_this900.l) {
											case 0:
												_this900.s0 = v64;
												break;
											case 1:
												_this900.s1 = v64;
												break;
											case 2:
												_this900.s2 = v64;
												break;
											case 3:
												_this900.s3 = v64;
												break;
											case 4:
												_this900.s4 = v64;
												break;
											case 5:
												_this900.s5 = v64;
												break;
											default:
												if(_this900.s6 == null) {
													_this900.s6 = new trilateral_justPath_StoreF6();
												}
												var _this901 = _this900.s6;
												switch(_this901.l) {
												case 0:
													_this901.s0 = v64;
													break;
												case 1:
													_this901.s1 = v64;
													break;
												case 2:
													_this901.s2 = v64;
													break;
												case 3:
													_this901.s3 = v64;
													break;
												case 4:
													_this901.s4 = v64;
													break;
												case 5:
													_this901.s5 = v64;
													break;
												default:
													if(_this901.s6 == null) {
														_this901.s6 = new trilateral_justPath_StoreF6();
													}
													var _this902 = _this901.s6;
													switch(_this902.l) {
													case 0:
														_this902.s0 = v64;
														break;
													case 1:
														_this902.s1 = v64;
														break;
													case 2:
														_this902.s2 = v64;
														break;
													case 3:
														_this902.s3 = v64;
														break;
													case 4:
														_this902.s4 = v64;
														break;
													case 5:
														_this902.s5 = v64;
														break;
													default:
														if(_this902.s6 == null) {
															_this902.s6 = new trilateral_justPath_StoreF6();
														}
														var _this903 = _this902.s6;
														switch(_this903.l) {
														case 0:
															_this903.s0 = v64;
															break;
														case 1:
															_this903.s1 = v64;
															break;
														case 2:
															_this903.s2 = v64;
															break;
														case 3:
															_this903.s3 = v64;
															break;
														case 4:
															_this903.s4 = v64;
															break;
														case 5:
															_this903.s5 = v64;
															break;
														default:
															if(_this903.s6 == null) {
																_this903.s6 = new trilateral_justPath_StoreF6();
															}
															_this903.s6.push(v64);
														}
														_this903.l++;
													}
													_this902.l++;
												}
												_this901.l++;
											}
											_this900.l++;
										}
										_this899.l++;
									}
									_this898.l++;
								}
								_this897.l++;
							}
							temp12 = "";
						}
						break;
					case 45:
						if(temp12 != "") {
							if((this.store.l & 1) == 0) {
								var _this904 = this.store;
								var v65 = parseFloat(temp12);
								switch(_this904.l) {
								case 0:
									_this904.s0 = v65;
									break;
								case 1:
									_this904.s1 = v65;
									break;
								case 2:
									_this904.s2 = v65;
									break;
								case 3:
									_this904.s3 = v65;
									break;
								case 4:
									_this904.s4 = v65;
									break;
								case 5:
									_this904.s5 = v65;
									break;
								default:
									if(_this904.s6 == null) {
										_this904.s6 = new trilateral_justPath_StoreF6();
									}
									var _this905 = _this904.s6;
									switch(_this905.l) {
									case 0:
										_this905.s0 = v65;
										break;
									case 1:
										_this905.s1 = v65;
										break;
									case 2:
										_this905.s2 = v65;
										break;
									case 3:
										_this905.s3 = v65;
										break;
									case 4:
										_this905.s4 = v65;
										break;
									case 5:
										_this905.s5 = v65;
										break;
									default:
										if(_this905.s6 == null) {
											_this905.s6 = new trilateral_justPath_StoreF6();
										}
										var _this906 = _this905.s6;
										switch(_this906.l) {
										case 0:
											_this906.s0 = v65;
											break;
										case 1:
											_this906.s1 = v65;
											break;
										case 2:
											_this906.s2 = v65;
											break;
										case 3:
											_this906.s3 = v65;
											break;
										case 4:
											_this906.s4 = v65;
											break;
										case 5:
											_this906.s5 = v65;
											break;
										default:
											if(_this906.s6 == null) {
												_this906.s6 = new trilateral_justPath_StoreF6();
											}
											var _this907 = _this906.s6;
											switch(_this907.l) {
											case 0:
												_this907.s0 = v65;
												break;
											case 1:
												_this907.s1 = v65;
												break;
											case 2:
												_this907.s2 = v65;
												break;
											case 3:
												_this907.s3 = v65;
												break;
											case 4:
												_this907.s4 = v65;
												break;
											case 5:
												_this907.s5 = v65;
												break;
											default:
												if(_this907.s6 == null) {
													_this907.s6 = new trilateral_justPath_StoreF6();
												}
												var _this908 = _this907.s6;
												switch(_this908.l) {
												case 0:
													_this908.s0 = v65;
													break;
												case 1:
													_this908.s1 = v65;
													break;
												case 2:
													_this908.s2 = v65;
													break;
												case 3:
													_this908.s3 = v65;
													break;
												case 4:
													_this908.s4 = v65;
													break;
												case 5:
													_this908.s5 = v65;
													break;
												default:
													if(_this908.s6 == null) {
														_this908.s6 = new trilateral_justPath_StoreF6();
													}
													var _this909 = _this908.s6;
													switch(_this909.l) {
													case 0:
														_this909.s0 = v65;
														break;
													case 1:
														_this909.s1 = v65;
														break;
													case 2:
														_this909.s2 = v65;
														break;
													case 3:
														_this909.s3 = v65;
														break;
													case 4:
														_this909.s4 = v65;
														break;
													case 5:
														_this909.s5 = v65;
														break;
													default:
														if(_this909.s6 == null) {
															_this909.s6 = new trilateral_justPath_StoreF6();
														}
														var _this910 = _this909.s6;
														switch(_this910.l) {
														case 0:
															_this910.s0 = v65;
															break;
														case 1:
															_this910.s1 = v65;
															break;
														case 2:
															_this910.s2 = v65;
															break;
														case 3:
															_this910.s3 = v65;
															break;
														case 4:
															_this910.s4 = v65;
															break;
														case 5:
															_this910.s5 = v65;
															break;
														default:
															if(_this910.s6 == null) {
																_this910.s6 = new trilateral_justPath_StoreF6();
															}
															_this910.s6.push(v65);
														}
														_this910.l++;
													}
													_this909.l++;
												}
												_this908.l++;
											}
											_this907.l++;
										}
										_this906.l++;
									}
									_this905.l++;
								}
								_this904.l++;
							} else {
								var _this911 = this.store;
								var v66 = parseFloat(temp12);
								switch(_this911.l) {
								case 0:
									_this911.s0 = v66;
									break;
								case 1:
									_this911.s1 = v66;
									break;
								case 2:
									_this911.s2 = v66;
									break;
								case 3:
									_this911.s3 = v66;
									break;
								case 4:
									_this911.s4 = v66;
									break;
								case 5:
									_this911.s5 = v66;
									break;
								default:
									if(_this911.s6 == null) {
										_this911.s6 = new trilateral_justPath_StoreF6();
									}
									var _this912 = _this911.s6;
									switch(_this912.l) {
									case 0:
										_this912.s0 = v66;
										break;
									case 1:
										_this912.s1 = v66;
										break;
									case 2:
										_this912.s2 = v66;
										break;
									case 3:
										_this912.s3 = v66;
										break;
									case 4:
										_this912.s4 = v66;
										break;
									case 5:
										_this912.s5 = v66;
										break;
									default:
										if(_this912.s6 == null) {
											_this912.s6 = new trilateral_justPath_StoreF6();
										}
										var _this913 = _this912.s6;
										switch(_this913.l) {
										case 0:
											_this913.s0 = v66;
											break;
										case 1:
											_this913.s1 = v66;
											break;
										case 2:
											_this913.s2 = v66;
											break;
										case 3:
											_this913.s3 = v66;
											break;
										case 4:
											_this913.s4 = v66;
											break;
										case 5:
											_this913.s5 = v66;
											break;
										default:
											if(_this913.s6 == null) {
												_this913.s6 = new trilateral_justPath_StoreF6();
											}
											var _this914 = _this913.s6;
											switch(_this914.l) {
											case 0:
												_this914.s0 = v66;
												break;
											case 1:
												_this914.s1 = v66;
												break;
											case 2:
												_this914.s2 = v66;
												break;
											case 3:
												_this914.s3 = v66;
												break;
											case 4:
												_this914.s4 = v66;
												break;
											case 5:
												_this914.s5 = v66;
												break;
											default:
												if(_this914.s6 == null) {
													_this914.s6 = new trilateral_justPath_StoreF6();
												}
												var _this915 = _this914.s6;
												switch(_this915.l) {
												case 0:
													_this915.s0 = v66;
													break;
												case 1:
													_this915.s1 = v66;
													break;
												case 2:
													_this915.s2 = v66;
													break;
												case 3:
													_this915.s3 = v66;
													break;
												case 4:
													_this915.s4 = v66;
													break;
												case 5:
													_this915.s5 = v66;
													break;
												default:
													if(_this915.s6 == null) {
														_this915.s6 = new trilateral_justPath_StoreF6();
													}
													var _this916 = _this915.s6;
													switch(_this916.l) {
													case 0:
														_this916.s0 = v66;
														break;
													case 1:
														_this916.s1 = v66;
														break;
													case 2:
														_this916.s2 = v66;
														break;
													case 3:
														_this916.s3 = v66;
														break;
													case 4:
														_this916.s4 = v66;
														break;
													case 5:
														_this916.s5 = v66;
														break;
													default:
														if(_this916.s6 == null) {
															_this916.s6 = new trilateral_justPath_StoreF6();
														}
														var _this917 = _this916.s6;
														switch(_this917.l) {
														case 0:
															_this917.s0 = v66;
															break;
														case 1:
															_this917.s1 = v66;
															break;
														case 2:
															_this917.s2 = v66;
															break;
														case 3:
															_this917.s3 = v66;
															break;
														case 4:
															_this917.s4 = v66;
															break;
														case 5:
															_this917.s5 = v66;
															break;
														default:
															if(_this917.s6 == null) {
																_this917.s6 = new trilateral_justPath_StoreF6();
															}
															_this917.s6.push(v66);
														}
														_this917.l++;
													}
													_this916.l++;
												}
												_this915.l++;
											}
											_this914.l++;
										}
										_this913.l++;
									}
									_this912.l++;
								}
								_this911.l++;
							}
						}
						temp12 = "-";
						break;
					case 46:
						temp12 += ".";
						break;
					case 48:
						temp12 += "0";
						break;
					case 49:
						temp12 += "1";
						break;
					case 50:
						temp12 += "2";
						break;
					case 51:
						temp12 += "3";
						break;
					case 52:
						temp12 += "4";
						break;
					case 53:
						temp12 += "5";
						break;
					case 54:
						temp12 += "6";
						break;
					case 55:
						temp12 += "7";
						break;
					case 56:
						temp12 += "8";
						break;
					case 57:
						temp12 += "9";
						break;
					default:
						if(temp12 != "") {
							if((this.store.l & 1) == 0) {
								var _this918 = this.store;
								var v67 = parseFloat(temp12);
								switch(_this918.l) {
								case 0:
									_this918.s0 = v67;
									break;
								case 1:
									_this918.s1 = v67;
									break;
								case 2:
									_this918.s2 = v67;
									break;
								case 3:
									_this918.s3 = v67;
									break;
								case 4:
									_this918.s4 = v67;
									break;
								case 5:
									_this918.s5 = v67;
									break;
								default:
									if(_this918.s6 == null) {
										_this918.s6 = new trilateral_justPath_StoreF6();
									}
									var _this919 = _this918.s6;
									switch(_this919.l) {
									case 0:
										_this919.s0 = v67;
										break;
									case 1:
										_this919.s1 = v67;
										break;
									case 2:
										_this919.s2 = v67;
										break;
									case 3:
										_this919.s3 = v67;
										break;
									case 4:
										_this919.s4 = v67;
										break;
									case 5:
										_this919.s5 = v67;
										break;
									default:
										if(_this919.s6 == null) {
											_this919.s6 = new trilateral_justPath_StoreF6();
										}
										var _this920 = _this919.s6;
										switch(_this920.l) {
										case 0:
											_this920.s0 = v67;
											break;
										case 1:
											_this920.s1 = v67;
											break;
										case 2:
											_this920.s2 = v67;
											break;
										case 3:
											_this920.s3 = v67;
											break;
										case 4:
											_this920.s4 = v67;
											break;
										case 5:
											_this920.s5 = v67;
											break;
										default:
											if(_this920.s6 == null) {
												_this920.s6 = new trilateral_justPath_StoreF6();
											}
											var _this921 = _this920.s6;
											switch(_this921.l) {
											case 0:
												_this921.s0 = v67;
												break;
											case 1:
												_this921.s1 = v67;
												break;
											case 2:
												_this921.s2 = v67;
												break;
											case 3:
												_this921.s3 = v67;
												break;
											case 4:
												_this921.s4 = v67;
												break;
											case 5:
												_this921.s5 = v67;
												break;
											default:
												if(_this921.s6 == null) {
													_this921.s6 = new trilateral_justPath_StoreF6();
												}
												var _this922 = _this921.s6;
												switch(_this922.l) {
												case 0:
													_this922.s0 = v67;
													break;
												case 1:
													_this922.s1 = v67;
													break;
												case 2:
													_this922.s2 = v67;
													break;
												case 3:
													_this922.s3 = v67;
													break;
												case 4:
													_this922.s4 = v67;
													break;
												case 5:
													_this922.s5 = v67;
													break;
												default:
													if(_this922.s6 == null) {
														_this922.s6 = new trilateral_justPath_StoreF6();
													}
													var _this923 = _this922.s6;
													switch(_this923.l) {
													case 0:
														_this923.s0 = v67;
														break;
													case 1:
														_this923.s1 = v67;
														break;
													case 2:
														_this923.s2 = v67;
														break;
													case 3:
														_this923.s3 = v67;
														break;
													case 4:
														_this923.s4 = v67;
														break;
													case 5:
														_this923.s5 = v67;
														break;
													default:
														if(_this923.s6 == null) {
															_this923.s6 = new trilateral_justPath_StoreF6();
														}
														var _this924 = _this923.s6;
														switch(_this924.l) {
														case 0:
															_this924.s0 = v67;
															break;
														case 1:
															_this924.s1 = v67;
															break;
														case 2:
															_this924.s2 = v67;
															break;
														case 3:
															_this924.s3 = v67;
															break;
														case 4:
															_this924.s4 = v67;
															break;
														case 5:
															_this924.s5 = v67;
															break;
														default:
															if(_this924.s6 == null) {
																_this924.s6 = new trilateral_justPath_StoreF6();
															}
															_this924.s6.push(v67);
														}
														_this924.l++;
													}
													_this923.l++;
												}
												_this922.l++;
											}
											_this921.l++;
										}
										_this920.l++;
									}
									_this919.l++;
								}
								_this918.l++;
							} else {
								var _this925 = this.store;
								var v68 = parseFloat(temp12);
								switch(_this925.l) {
								case 0:
									_this925.s0 = v68;
									break;
								case 1:
									_this925.s1 = v68;
									break;
								case 2:
									_this925.s2 = v68;
									break;
								case 3:
									_this925.s3 = v68;
									break;
								case 4:
									_this925.s4 = v68;
									break;
								case 5:
									_this925.s5 = v68;
									break;
								default:
									if(_this925.s6 == null) {
										_this925.s6 = new trilateral_justPath_StoreF6();
									}
									var _this926 = _this925.s6;
									switch(_this926.l) {
									case 0:
										_this926.s0 = v68;
										break;
									case 1:
										_this926.s1 = v68;
										break;
									case 2:
										_this926.s2 = v68;
										break;
									case 3:
										_this926.s3 = v68;
										break;
									case 4:
										_this926.s4 = v68;
										break;
									case 5:
										_this926.s5 = v68;
										break;
									default:
										if(_this926.s6 == null) {
											_this926.s6 = new trilateral_justPath_StoreF6();
										}
										var _this927 = _this926.s6;
										switch(_this927.l) {
										case 0:
											_this927.s0 = v68;
											break;
										case 1:
											_this927.s1 = v68;
											break;
										case 2:
											_this927.s2 = v68;
											break;
										case 3:
											_this927.s3 = v68;
											break;
										case 4:
											_this927.s4 = v68;
											break;
										case 5:
											_this927.s5 = v68;
											break;
										default:
											if(_this927.s6 == null) {
												_this927.s6 = new trilateral_justPath_StoreF6();
											}
											var _this928 = _this927.s6;
											switch(_this928.l) {
											case 0:
												_this928.s0 = v68;
												break;
											case 1:
												_this928.s1 = v68;
												break;
											case 2:
												_this928.s2 = v68;
												break;
											case 3:
												_this928.s3 = v68;
												break;
											case 4:
												_this928.s4 = v68;
												break;
											case 5:
												_this928.s5 = v68;
												break;
											default:
												if(_this928.s6 == null) {
													_this928.s6 = new trilateral_justPath_StoreF6();
												}
												var _this929 = _this928.s6;
												switch(_this929.l) {
												case 0:
													_this929.s0 = v68;
													break;
												case 1:
													_this929.s1 = v68;
													break;
												case 2:
													_this929.s2 = v68;
													break;
												case 3:
													_this929.s3 = v68;
													break;
												case 4:
													_this929.s4 = v68;
													break;
												case 5:
													_this929.s5 = v68;
													break;
												default:
													if(_this929.s6 == null) {
														_this929.s6 = new trilateral_justPath_StoreF6();
													}
													var _this930 = _this929.s6;
													switch(_this930.l) {
													case 0:
														_this930.s0 = v68;
														break;
													case 1:
														_this930.s1 = v68;
														break;
													case 2:
														_this930.s2 = v68;
														break;
													case 3:
														_this930.s3 = v68;
														break;
													case 4:
														_this930.s4 = v68;
														break;
													case 5:
														_this930.s5 = v68;
														break;
													default:
														if(_this930.s6 == null) {
															_this930.s6 = new trilateral_justPath_StoreF6();
														}
														var _this931 = _this930.s6;
														switch(_this931.l) {
														case 0:
															_this931.s0 = v68;
															break;
														case 1:
															_this931.s1 = v68;
															break;
														case 2:
															_this931.s2 = v68;
															break;
														case 3:
															_this931.s3 = v68;
															break;
														case 4:
															_this931.s4 = v68;
															break;
														case 5:
															_this931.s5 = v68;
															break;
														default:
															if(_this931.s6 == null) {
																_this931.s6 = new trilateral_justPath_StoreF6();
															}
															_this931.s6.push(v68);
														}
														_this931.l++;
													}
													_this930.l++;
												}
												_this929.l++;
											}
											_this928.l++;
										}
										_this927.l++;
									}
									_this926.l++;
								}
								_this925.l++;
							}
							temp12 = "";
						}
						this.pos--;
						exit12 = true;
					}
					if(exit12) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0 + this.lastX;
					this.lastY = this.store.s1 + this.lastY;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 2) {
						var _this932 = this.store;
						var out436 = _this932.s0;
						if(_this932.l != 0) {
							_this932.s0 = _this932.s1;
							_this932.s1 = _this932.s2;
							_this932.s2 = _this932.s3;
							_this932.s3 = _this932.s4;
							_this932.s4 = _this932.s5;
							_this932.s5 = null;
							if(_this932.s6 != null) {
								var _this933 = _this932.s6;
								var out437 = _this933.s0;
								if(_this933.l != 0) {
									_this933.s0 = _this933.s1;
									_this933.s1 = _this933.s2;
									_this933.s2 = _this933.s3;
									_this933.s3 = _this933.s4;
									_this933.s4 = _this933.s5;
									_this933.s5 = null;
									if(_this933.s6 != null) {
										var _this934 = _this933.s6;
										var out438 = _this934.s0;
										if(_this934.l != 0) {
											_this934.s0 = _this934.s1;
											_this934.s1 = _this934.s2;
											_this934.s2 = _this934.s3;
											_this934.s3 = _this934.s4;
											_this934.s4 = _this934.s5;
											_this934.s5 = null;
											if(_this934.s6 != null) {
												var _this935 = _this934.s6;
												var out439 = _this935.s0;
												if(_this935.l != 0) {
													_this935.s0 = _this935.s1;
													_this935.s1 = _this935.s2;
													_this935.s2 = _this935.s3;
													_this935.s3 = _this935.s4;
													_this935.s4 = _this935.s5;
													_this935.s5 = null;
													if(_this935.s6 != null) {
														var _this936 = _this935.s6;
														var out440 = _this936.s0;
														if(_this936.l != 0) {
															_this936.s0 = _this936.s1;
															_this936.s1 = _this936.s2;
															_this936.s2 = _this936.s3;
															_this936.s3 = _this936.s4;
															_this936.s4 = _this936.s5;
															_this936.s5 = null;
															if(_this936.s6 != null) {
																var _this937 = _this936.s6;
																var out441 = _this937.s0;
																if(_this937.l != 0) {
																	_this937.s0 = _this937.s1;
																	_this937.s1 = _this937.s2;
																	_this937.s2 = _this937.s3;
																	_this937.s3 = _this937.s4;
																	_this937.s4 = _this937.s5;
																	_this937.s5 = null;
																	if(_this937.s6 != null) {
																		var _this938 = _this937.s6;
																		var out442 = _this938.s0;
																		if(_this938.l != 0) {
																			_this938.s0 = _this938.s1;
																			_this938.s1 = _this938.s2;
																			_this938.s2 = _this938.s3;
																			_this938.s3 = _this938.s4;
																			_this938.s4 = _this938.s5;
																			_this938.s5 = null;
																			if(_this938.s6 != null) {
																				_this938.s5 = _this938.s6.shift();
																			}
																			_this938.l--;
																		}
																		_this937.s5 = out442;
																	}
																	_this937.l--;
																}
																_this936.s5 = out441;
															}
															_this936.l--;
														}
														_this935.s5 = out440;
													}
													_this935.l--;
												}
												_this934.s5 = out439;
											}
											_this934.l--;
										}
										_this933.s5 = out438;
									}
									_this933.l--;
								}
								_this932.s5 = out437;
							}
							_this932.l--;
						}
						this.lastX = out436 + this.lastX;
						var _this939 = this.store;
						var out443 = _this939.s0;
						if(_this939.l != 0) {
							_this939.s0 = _this939.s1;
							_this939.s1 = _this939.s2;
							_this939.s2 = _this939.s3;
							_this939.s3 = _this939.s4;
							_this939.s4 = _this939.s5;
							_this939.s5 = null;
							if(_this939.s6 != null) {
								var _this940 = _this939.s6;
								var out444 = _this940.s0;
								if(_this940.l != 0) {
									_this940.s0 = _this940.s1;
									_this940.s1 = _this940.s2;
									_this940.s2 = _this940.s3;
									_this940.s3 = _this940.s4;
									_this940.s4 = _this940.s5;
									_this940.s5 = null;
									if(_this940.s6 != null) {
										var _this941 = _this940.s6;
										var out445 = _this941.s0;
										if(_this941.l != 0) {
											_this941.s0 = _this941.s1;
											_this941.s1 = _this941.s2;
											_this941.s2 = _this941.s3;
											_this941.s3 = _this941.s4;
											_this941.s4 = _this941.s5;
											_this941.s5 = null;
											if(_this941.s6 != null) {
												var _this942 = _this941.s6;
												var out446 = _this942.s0;
												if(_this942.l != 0) {
													_this942.s0 = _this942.s1;
													_this942.s1 = _this942.s2;
													_this942.s2 = _this942.s3;
													_this942.s3 = _this942.s4;
													_this942.s4 = _this942.s5;
													_this942.s5 = null;
													if(_this942.s6 != null) {
														var _this943 = _this942.s6;
														var out447 = _this943.s0;
														if(_this943.l != 0) {
															_this943.s0 = _this943.s1;
															_this943.s1 = _this943.s2;
															_this943.s2 = _this943.s3;
															_this943.s3 = _this943.s4;
															_this943.s4 = _this943.s5;
															_this943.s5 = null;
															if(_this943.s6 != null) {
																var _this944 = _this943.s6;
																var out448 = _this944.s0;
																if(_this944.l != 0) {
																	_this944.s0 = _this944.s1;
																	_this944.s1 = _this944.s2;
																	_this944.s2 = _this944.s3;
																	_this944.s3 = _this944.s4;
																	_this944.s4 = _this944.s5;
																	_this944.s5 = null;
																	if(_this944.s6 != null) {
																		var _this945 = _this944.s6;
																		var out449 = _this945.s0;
																		if(_this945.l != 0) {
																			_this945.s0 = _this945.s1;
																			_this945.s1 = _this945.s2;
																			_this945.s2 = _this945.s3;
																			_this945.s3 = _this945.s4;
																			_this945.s4 = _this945.s5;
																			_this945.s5 = null;
																			if(_this945.s6 != null) {
																				_this945.s5 = _this945.s6.shift();
																			}
																			_this945.l--;
																		}
																		_this944.s5 = out449;
																	}
																	_this944.l--;
																}
																_this943.s5 = out448;
															}
															_this943.l--;
														}
														_this942.s5 = out447;
													}
													_this942.l--;
												}
												_this941.s5 = out446;
											}
											_this941.l--;
										}
										_this940.s5 = out445;
									}
									_this940.l--;
								}
								_this939.s5 = out444;
							}
							_this939.l--;
						}
						this.lastY = out443 + this.lastY;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 109:
				var _this946 = this.store;
				_this946.l = 0;
				_this946.s0 = null;
				_this946.s1 = null;
				_this946.s2 = null;
				_this946.s3 = null;
				_this946.s4 = null;
				_this946.s5 = null;
				_this946.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count14 = 0;
				var temp13 = "";
				var exit13 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp13 != "") {
							if((this.store.l & 1) == 0) {
								var _this947 = this.store;
								var v69 = parseFloat(temp13);
								switch(_this947.l) {
								case 0:
									_this947.s0 = v69;
									break;
								case 1:
									_this947.s1 = v69;
									break;
								case 2:
									_this947.s2 = v69;
									break;
								case 3:
									_this947.s3 = v69;
									break;
								case 4:
									_this947.s4 = v69;
									break;
								case 5:
									_this947.s5 = v69;
									break;
								default:
									if(_this947.s6 == null) {
										_this947.s6 = new trilateral_justPath_StoreF6();
									}
									var _this948 = _this947.s6;
									switch(_this948.l) {
									case 0:
										_this948.s0 = v69;
										break;
									case 1:
										_this948.s1 = v69;
										break;
									case 2:
										_this948.s2 = v69;
										break;
									case 3:
										_this948.s3 = v69;
										break;
									case 4:
										_this948.s4 = v69;
										break;
									case 5:
										_this948.s5 = v69;
										break;
									default:
										if(_this948.s6 == null) {
											_this948.s6 = new trilateral_justPath_StoreF6();
										}
										var _this949 = _this948.s6;
										switch(_this949.l) {
										case 0:
											_this949.s0 = v69;
											break;
										case 1:
											_this949.s1 = v69;
											break;
										case 2:
											_this949.s2 = v69;
											break;
										case 3:
											_this949.s3 = v69;
											break;
										case 4:
											_this949.s4 = v69;
											break;
										case 5:
											_this949.s5 = v69;
											break;
										default:
											if(_this949.s6 == null) {
												_this949.s6 = new trilateral_justPath_StoreF6();
											}
											var _this950 = _this949.s6;
											switch(_this950.l) {
											case 0:
												_this950.s0 = v69;
												break;
											case 1:
												_this950.s1 = v69;
												break;
											case 2:
												_this950.s2 = v69;
												break;
											case 3:
												_this950.s3 = v69;
												break;
											case 4:
												_this950.s4 = v69;
												break;
											case 5:
												_this950.s5 = v69;
												break;
											default:
												if(_this950.s6 == null) {
													_this950.s6 = new trilateral_justPath_StoreF6();
												}
												var _this951 = _this950.s6;
												switch(_this951.l) {
												case 0:
													_this951.s0 = v69;
													break;
												case 1:
													_this951.s1 = v69;
													break;
												case 2:
													_this951.s2 = v69;
													break;
												case 3:
													_this951.s3 = v69;
													break;
												case 4:
													_this951.s4 = v69;
													break;
												case 5:
													_this951.s5 = v69;
													break;
												default:
													if(_this951.s6 == null) {
														_this951.s6 = new trilateral_justPath_StoreF6();
													}
													var _this952 = _this951.s6;
													switch(_this952.l) {
													case 0:
														_this952.s0 = v69;
														break;
													case 1:
														_this952.s1 = v69;
														break;
													case 2:
														_this952.s2 = v69;
														break;
													case 3:
														_this952.s3 = v69;
														break;
													case 4:
														_this952.s4 = v69;
														break;
													case 5:
														_this952.s5 = v69;
														break;
													default:
														if(_this952.s6 == null) {
															_this952.s6 = new trilateral_justPath_StoreF6();
														}
														var _this953 = _this952.s6;
														switch(_this953.l) {
														case 0:
															_this953.s0 = v69;
															break;
														case 1:
															_this953.s1 = v69;
															break;
														case 2:
															_this953.s2 = v69;
															break;
														case 3:
															_this953.s3 = v69;
															break;
														case 4:
															_this953.s4 = v69;
															break;
														case 5:
															_this953.s5 = v69;
															break;
														default:
															if(_this953.s6 == null) {
																_this953.s6 = new trilateral_justPath_StoreF6();
															}
															_this953.s6.push(v69);
														}
														_this953.l++;
													}
													_this952.l++;
												}
												_this951.l++;
											}
											_this950.l++;
										}
										_this949.l++;
									}
									_this948.l++;
								}
								_this947.l++;
							} else {
								var _this954 = this.store;
								var v70 = parseFloat(temp13);
								switch(_this954.l) {
								case 0:
									_this954.s0 = v70;
									break;
								case 1:
									_this954.s1 = v70;
									break;
								case 2:
									_this954.s2 = v70;
									break;
								case 3:
									_this954.s3 = v70;
									break;
								case 4:
									_this954.s4 = v70;
									break;
								case 5:
									_this954.s5 = v70;
									break;
								default:
									if(_this954.s6 == null) {
										_this954.s6 = new trilateral_justPath_StoreF6();
									}
									var _this955 = _this954.s6;
									switch(_this955.l) {
									case 0:
										_this955.s0 = v70;
										break;
									case 1:
										_this955.s1 = v70;
										break;
									case 2:
										_this955.s2 = v70;
										break;
									case 3:
										_this955.s3 = v70;
										break;
									case 4:
										_this955.s4 = v70;
										break;
									case 5:
										_this955.s5 = v70;
										break;
									default:
										if(_this955.s6 == null) {
											_this955.s6 = new trilateral_justPath_StoreF6();
										}
										var _this956 = _this955.s6;
										switch(_this956.l) {
										case 0:
											_this956.s0 = v70;
											break;
										case 1:
											_this956.s1 = v70;
											break;
										case 2:
											_this956.s2 = v70;
											break;
										case 3:
											_this956.s3 = v70;
											break;
										case 4:
											_this956.s4 = v70;
											break;
										case 5:
											_this956.s5 = v70;
											break;
										default:
											if(_this956.s6 == null) {
												_this956.s6 = new trilateral_justPath_StoreF6();
											}
											var _this957 = _this956.s6;
											switch(_this957.l) {
											case 0:
												_this957.s0 = v70;
												break;
											case 1:
												_this957.s1 = v70;
												break;
											case 2:
												_this957.s2 = v70;
												break;
											case 3:
												_this957.s3 = v70;
												break;
											case 4:
												_this957.s4 = v70;
												break;
											case 5:
												_this957.s5 = v70;
												break;
											default:
												if(_this957.s6 == null) {
													_this957.s6 = new trilateral_justPath_StoreF6();
												}
												var _this958 = _this957.s6;
												switch(_this958.l) {
												case 0:
													_this958.s0 = v70;
													break;
												case 1:
													_this958.s1 = v70;
													break;
												case 2:
													_this958.s2 = v70;
													break;
												case 3:
													_this958.s3 = v70;
													break;
												case 4:
													_this958.s4 = v70;
													break;
												case 5:
													_this958.s5 = v70;
													break;
												default:
													if(_this958.s6 == null) {
														_this958.s6 = new trilateral_justPath_StoreF6();
													}
													var _this959 = _this958.s6;
													switch(_this959.l) {
													case 0:
														_this959.s0 = v70;
														break;
													case 1:
														_this959.s1 = v70;
														break;
													case 2:
														_this959.s2 = v70;
														break;
													case 3:
														_this959.s3 = v70;
														break;
													case 4:
														_this959.s4 = v70;
														break;
													case 5:
														_this959.s5 = v70;
														break;
													default:
														if(_this959.s6 == null) {
															_this959.s6 = new trilateral_justPath_StoreF6();
														}
														var _this960 = _this959.s6;
														switch(_this960.l) {
														case 0:
															_this960.s0 = v70;
															break;
														case 1:
															_this960.s1 = v70;
															break;
														case 2:
															_this960.s2 = v70;
															break;
														case 3:
															_this960.s3 = v70;
															break;
														case 4:
															_this960.s4 = v70;
															break;
														case 5:
															_this960.s5 = v70;
															break;
														default:
															if(_this960.s6 == null) {
																_this960.s6 = new trilateral_justPath_StoreF6();
															}
															_this960.s6.push(v70);
														}
														_this960.l++;
													}
													_this959.l++;
												}
												_this958.l++;
											}
											_this957.l++;
										}
										_this956.l++;
									}
									_this955.l++;
								}
								_this954.l++;
							}
							temp13 = "";
						}
						break;
					case 45:
						if(temp13 != "") {
							if((this.store.l & 1) == 0) {
								var _this961 = this.store;
								var v71 = parseFloat(temp13);
								switch(_this961.l) {
								case 0:
									_this961.s0 = v71;
									break;
								case 1:
									_this961.s1 = v71;
									break;
								case 2:
									_this961.s2 = v71;
									break;
								case 3:
									_this961.s3 = v71;
									break;
								case 4:
									_this961.s4 = v71;
									break;
								case 5:
									_this961.s5 = v71;
									break;
								default:
									if(_this961.s6 == null) {
										_this961.s6 = new trilateral_justPath_StoreF6();
									}
									var _this962 = _this961.s6;
									switch(_this962.l) {
									case 0:
										_this962.s0 = v71;
										break;
									case 1:
										_this962.s1 = v71;
										break;
									case 2:
										_this962.s2 = v71;
										break;
									case 3:
										_this962.s3 = v71;
										break;
									case 4:
										_this962.s4 = v71;
										break;
									case 5:
										_this962.s5 = v71;
										break;
									default:
										if(_this962.s6 == null) {
											_this962.s6 = new trilateral_justPath_StoreF6();
										}
										var _this963 = _this962.s6;
										switch(_this963.l) {
										case 0:
											_this963.s0 = v71;
											break;
										case 1:
											_this963.s1 = v71;
											break;
										case 2:
											_this963.s2 = v71;
											break;
										case 3:
											_this963.s3 = v71;
											break;
										case 4:
											_this963.s4 = v71;
											break;
										case 5:
											_this963.s5 = v71;
											break;
										default:
											if(_this963.s6 == null) {
												_this963.s6 = new trilateral_justPath_StoreF6();
											}
											var _this964 = _this963.s6;
											switch(_this964.l) {
											case 0:
												_this964.s0 = v71;
												break;
											case 1:
												_this964.s1 = v71;
												break;
											case 2:
												_this964.s2 = v71;
												break;
											case 3:
												_this964.s3 = v71;
												break;
											case 4:
												_this964.s4 = v71;
												break;
											case 5:
												_this964.s5 = v71;
												break;
											default:
												if(_this964.s6 == null) {
													_this964.s6 = new trilateral_justPath_StoreF6();
												}
												var _this965 = _this964.s6;
												switch(_this965.l) {
												case 0:
													_this965.s0 = v71;
													break;
												case 1:
													_this965.s1 = v71;
													break;
												case 2:
													_this965.s2 = v71;
													break;
												case 3:
													_this965.s3 = v71;
													break;
												case 4:
													_this965.s4 = v71;
													break;
												case 5:
													_this965.s5 = v71;
													break;
												default:
													if(_this965.s6 == null) {
														_this965.s6 = new trilateral_justPath_StoreF6();
													}
													var _this966 = _this965.s6;
													switch(_this966.l) {
													case 0:
														_this966.s0 = v71;
														break;
													case 1:
														_this966.s1 = v71;
														break;
													case 2:
														_this966.s2 = v71;
														break;
													case 3:
														_this966.s3 = v71;
														break;
													case 4:
														_this966.s4 = v71;
														break;
													case 5:
														_this966.s5 = v71;
														break;
													default:
														if(_this966.s6 == null) {
															_this966.s6 = new trilateral_justPath_StoreF6();
														}
														var _this967 = _this966.s6;
														switch(_this967.l) {
														case 0:
															_this967.s0 = v71;
															break;
														case 1:
															_this967.s1 = v71;
															break;
														case 2:
															_this967.s2 = v71;
															break;
														case 3:
															_this967.s3 = v71;
															break;
														case 4:
															_this967.s4 = v71;
															break;
														case 5:
															_this967.s5 = v71;
															break;
														default:
															if(_this967.s6 == null) {
																_this967.s6 = new trilateral_justPath_StoreF6();
															}
															_this967.s6.push(v71);
														}
														_this967.l++;
													}
													_this966.l++;
												}
												_this965.l++;
											}
											_this964.l++;
										}
										_this963.l++;
									}
									_this962.l++;
								}
								_this961.l++;
							} else {
								var _this968 = this.store;
								var v72 = parseFloat(temp13);
								switch(_this968.l) {
								case 0:
									_this968.s0 = v72;
									break;
								case 1:
									_this968.s1 = v72;
									break;
								case 2:
									_this968.s2 = v72;
									break;
								case 3:
									_this968.s3 = v72;
									break;
								case 4:
									_this968.s4 = v72;
									break;
								case 5:
									_this968.s5 = v72;
									break;
								default:
									if(_this968.s6 == null) {
										_this968.s6 = new trilateral_justPath_StoreF6();
									}
									var _this969 = _this968.s6;
									switch(_this969.l) {
									case 0:
										_this969.s0 = v72;
										break;
									case 1:
										_this969.s1 = v72;
										break;
									case 2:
										_this969.s2 = v72;
										break;
									case 3:
										_this969.s3 = v72;
										break;
									case 4:
										_this969.s4 = v72;
										break;
									case 5:
										_this969.s5 = v72;
										break;
									default:
										if(_this969.s6 == null) {
											_this969.s6 = new trilateral_justPath_StoreF6();
										}
										var _this970 = _this969.s6;
										switch(_this970.l) {
										case 0:
											_this970.s0 = v72;
											break;
										case 1:
											_this970.s1 = v72;
											break;
										case 2:
											_this970.s2 = v72;
											break;
										case 3:
											_this970.s3 = v72;
											break;
										case 4:
											_this970.s4 = v72;
											break;
										case 5:
											_this970.s5 = v72;
											break;
										default:
											if(_this970.s6 == null) {
												_this970.s6 = new trilateral_justPath_StoreF6();
											}
											var _this971 = _this970.s6;
											switch(_this971.l) {
											case 0:
												_this971.s0 = v72;
												break;
											case 1:
												_this971.s1 = v72;
												break;
											case 2:
												_this971.s2 = v72;
												break;
											case 3:
												_this971.s3 = v72;
												break;
											case 4:
												_this971.s4 = v72;
												break;
											case 5:
												_this971.s5 = v72;
												break;
											default:
												if(_this971.s6 == null) {
													_this971.s6 = new trilateral_justPath_StoreF6();
												}
												var _this972 = _this971.s6;
												switch(_this972.l) {
												case 0:
													_this972.s0 = v72;
													break;
												case 1:
													_this972.s1 = v72;
													break;
												case 2:
													_this972.s2 = v72;
													break;
												case 3:
													_this972.s3 = v72;
													break;
												case 4:
													_this972.s4 = v72;
													break;
												case 5:
													_this972.s5 = v72;
													break;
												default:
													if(_this972.s6 == null) {
														_this972.s6 = new trilateral_justPath_StoreF6();
													}
													var _this973 = _this972.s6;
													switch(_this973.l) {
													case 0:
														_this973.s0 = v72;
														break;
													case 1:
														_this973.s1 = v72;
														break;
													case 2:
														_this973.s2 = v72;
														break;
													case 3:
														_this973.s3 = v72;
														break;
													case 4:
														_this973.s4 = v72;
														break;
													case 5:
														_this973.s5 = v72;
														break;
													default:
														if(_this973.s6 == null) {
															_this973.s6 = new trilateral_justPath_StoreF6();
														}
														var _this974 = _this973.s6;
														switch(_this974.l) {
														case 0:
															_this974.s0 = v72;
															break;
														case 1:
															_this974.s1 = v72;
															break;
														case 2:
															_this974.s2 = v72;
															break;
														case 3:
															_this974.s3 = v72;
															break;
														case 4:
															_this974.s4 = v72;
															break;
														case 5:
															_this974.s5 = v72;
															break;
														default:
															if(_this974.s6 == null) {
																_this974.s6 = new trilateral_justPath_StoreF6();
															}
															_this974.s6.push(v72);
														}
														_this974.l++;
													}
													_this973.l++;
												}
												_this972.l++;
											}
											_this971.l++;
										}
										_this970.l++;
									}
									_this969.l++;
								}
								_this968.l++;
							}
						}
						temp13 = "-";
						break;
					case 46:
						temp13 += ".";
						break;
					case 48:
						temp13 += "0";
						break;
					case 49:
						temp13 += "1";
						break;
					case 50:
						temp13 += "2";
						break;
					case 51:
						temp13 += "3";
						break;
					case 52:
						temp13 += "4";
						break;
					case 53:
						temp13 += "5";
						break;
					case 54:
						temp13 += "6";
						break;
					case 55:
						temp13 += "7";
						break;
					case 56:
						temp13 += "8";
						break;
					case 57:
						temp13 += "9";
						break;
					default:
						if(temp13 != "") {
							if((this.store.l & 1) == 0) {
								var _this975 = this.store;
								var v73 = parseFloat(temp13);
								switch(_this975.l) {
								case 0:
									_this975.s0 = v73;
									break;
								case 1:
									_this975.s1 = v73;
									break;
								case 2:
									_this975.s2 = v73;
									break;
								case 3:
									_this975.s3 = v73;
									break;
								case 4:
									_this975.s4 = v73;
									break;
								case 5:
									_this975.s5 = v73;
									break;
								default:
									if(_this975.s6 == null) {
										_this975.s6 = new trilateral_justPath_StoreF6();
									}
									var _this976 = _this975.s6;
									switch(_this976.l) {
									case 0:
										_this976.s0 = v73;
										break;
									case 1:
										_this976.s1 = v73;
										break;
									case 2:
										_this976.s2 = v73;
										break;
									case 3:
										_this976.s3 = v73;
										break;
									case 4:
										_this976.s4 = v73;
										break;
									case 5:
										_this976.s5 = v73;
										break;
									default:
										if(_this976.s6 == null) {
											_this976.s6 = new trilateral_justPath_StoreF6();
										}
										var _this977 = _this976.s6;
										switch(_this977.l) {
										case 0:
											_this977.s0 = v73;
											break;
										case 1:
											_this977.s1 = v73;
											break;
										case 2:
											_this977.s2 = v73;
											break;
										case 3:
											_this977.s3 = v73;
											break;
										case 4:
											_this977.s4 = v73;
											break;
										case 5:
											_this977.s5 = v73;
											break;
										default:
											if(_this977.s6 == null) {
												_this977.s6 = new trilateral_justPath_StoreF6();
											}
											var _this978 = _this977.s6;
											switch(_this978.l) {
											case 0:
												_this978.s0 = v73;
												break;
											case 1:
												_this978.s1 = v73;
												break;
											case 2:
												_this978.s2 = v73;
												break;
											case 3:
												_this978.s3 = v73;
												break;
											case 4:
												_this978.s4 = v73;
												break;
											case 5:
												_this978.s5 = v73;
												break;
											default:
												if(_this978.s6 == null) {
													_this978.s6 = new trilateral_justPath_StoreF6();
												}
												var _this979 = _this978.s6;
												switch(_this979.l) {
												case 0:
													_this979.s0 = v73;
													break;
												case 1:
													_this979.s1 = v73;
													break;
												case 2:
													_this979.s2 = v73;
													break;
												case 3:
													_this979.s3 = v73;
													break;
												case 4:
													_this979.s4 = v73;
													break;
												case 5:
													_this979.s5 = v73;
													break;
												default:
													if(_this979.s6 == null) {
														_this979.s6 = new trilateral_justPath_StoreF6();
													}
													var _this980 = _this979.s6;
													switch(_this980.l) {
													case 0:
														_this980.s0 = v73;
														break;
													case 1:
														_this980.s1 = v73;
														break;
													case 2:
														_this980.s2 = v73;
														break;
													case 3:
														_this980.s3 = v73;
														break;
													case 4:
														_this980.s4 = v73;
														break;
													case 5:
														_this980.s5 = v73;
														break;
													default:
														if(_this980.s6 == null) {
															_this980.s6 = new trilateral_justPath_StoreF6();
														}
														var _this981 = _this980.s6;
														switch(_this981.l) {
														case 0:
															_this981.s0 = v73;
															break;
														case 1:
															_this981.s1 = v73;
															break;
														case 2:
															_this981.s2 = v73;
															break;
														case 3:
															_this981.s3 = v73;
															break;
														case 4:
															_this981.s4 = v73;
															break;
														case 5:
															_this981.s5 = v73;
															break;
														default:
															if(_this981.s6 == null) {
																_this981.s6 = new trilateral_justPath_StoreF6();
															}
															_this981.s6.push(v73);
														}
														_this981.l++;
													}
													_this980.l++;
												}
												_this979.l++;
											}
											_this978.l++;
										}
										_this977.l++;
									}
									_this976.l++;
								}
								_this975.l++;
							} else {
								var _this982 = this.store;
								var v74 = parseFloat(temp13);
								switch(_this982.l) {
								case 0:
									_this982.s0 = v74;
									break;
								case 1:
									_this982.s1 = v74;
									break;
								case 2:
									_this982.s2 = v74;
									break;
								case 3:
									_this982.s3 = v74;
									break;
								case 4:
									_this982.s4 = v74;
									break;
								case 5:
									_this982.s5 = v74;
									break;
								default:
									if(_this982.s6 == null) {
										_this982.s6 = new trilateral_justPath_StoreF6();
									}
									var _this983 = _this982.s6;
									switch(_this983.l) {
									case 0:
										_this983.s0 = v74;
										break;
									case 1:
										_this983.s1 = v74;
										break;
									case 2:
										_this983.s2 = v74;
										break;
									case 3:
										_this983.s3 = v74;
										break;
									case 4:
										_this983.s4 = v74;
										break;
									case 5:
										_this983.s5 = v74;
										break;
									default:
										if(_this983.s6 == null) {
											_this983.s6 = new trilateral_justPath_StoreF6();
										}
										var _this984 = _this983.s6;
										switch(_this984.l) {
										case 0:
											_this984.s0 = v74;
											break;
										case 1:
											_this984.s1 = v74;
											break;
										case 2:
											_this984.s2 = v74;
											break;
										case 3:
											_this984.s3 = v74;
											break;
										case 4:
											_this984.s4 = v74;
											break;
										case 5:
											_this984.s5 = v74;
											break;
										default:
											if(_this984.s6 == null) {
												_this984.s6 = new trilateral_justPath_StoreF6();
											}
											var _this985 = _this984.s6;
											switch(_this985.l) {
											case 0:
												_this985.s0 = v74;
												break;
											case 1:
												_this985.s1 = v74;
												break;
											case 2:
												_this985.s2 = v74;
												break;
											case 3:
												_this985.s3 = v74;
												break;
											case 4:
												_this985.s4 = v74;
												break;
											case 5:
												_this985.s5 = v74;
												break;
											default:
												if(_this985.s6 == null) {
													_this985.s6 = new trilateral_justPath_StoreF6();
												}
												var _this986 = _this985.s6;
												switch(_this986.l) {
												case 0:
													_this986.s0 = v74;
													break;
												case 1:
													_this986.s1 = v74;
													break;
												case 2:
													_this986.s2 = v74;
													break;
												case 3:
													_this986.s3 = v74;
													break;
												case 4:
													_this986.s4 = v74;
													break;
												case 5:
													_this986.s5 = v74;
													break;
												default:
													if(_this986.s6 == null) {
														_this986.s6 = new trilateral_justPath_StoreF6();
													}
													var _this987 = _this986.s6;
													switch(_this987.l) {
													case 0:
														_this987.s0 = v74;
														break;
													case 1:
														_this987.s1 = v74;
														break;
													case 2:
														_this987.s2 = v74;
														break;
													case 3:
														_this987.s3 = v74;
														break;
													case 4:
														_this987.s4 = v74;
														break;
													case 5:
														_this987.s5 = v74;
														break;
													default:
														if(_this987.s6 == null) {
															_this987.s6 = new trilateral_justPath_StoreF6();
														}
														var _this988 = _this987.s6;
														switch(_this988.l) {
														case 0:
															_this988.s0 = v74;
															break;
														case 1:
															_this988.s1 = v74;
															break;
														case 2:
															_this988.s2 = v74;
															break;
														case 3:
															_this988.s3 = v74;
															break;
														case 4:
															_this988.s4 = v74;
															break;
														case 5:
															_this988.s5 = v74;
															break;
														default:
															if(_this988.s6 == null) {
																_this988.s6 = new trilateral_justPath_StoreF6();
															}
															_this988.s6.push(v74);
														}
														_this988.l++;
													}
													_this987.l++;
												}
												_this986.l++;
											}
											_this985.l++;
										}
										_this984.l++;
									}
									_this983.l++;
								}
								_this982.l++;
							}
							temp13 = "";
						}
						this.pos--;
						exit13 = true;
					}
					if(exit13) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0 + this.lastX;
					this.lastY = this.store.s1 + this.lastY;
					this.pathContext.moveTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					var _this989 = this.store;
					var out450 = _this989.s0;
					if(_this989.l != 0) {
						_this989.s0 = _this989.s1;
						_this989.s1 = _this989.s2;
						_this989.s2 = _this989.s3;
						_this989.s3 = _this989.s4;
						_this989.s4 = _this989.s5;
						_this989.s5 = null;
						if(_this989.s6 != null) {
							var _this990 = _this989.s6;
							var out451 = _this990.s0;
							if(_this990.l != 0) {
								_this990.s0 = _this990.s1;
								_this990.s1 = _this990.s2;
								_this990.s2 = _this990.s3;
								_this990.s3 = _this990.s4;
								_this990.s4 = _this990.s5;
								_this990.s5 = null;
								if(_this990.s6 != null) {
									var _this991 = _this990.s6;
									var out452 = _this991.s0;
									if(_this991.l != 0) {
										_this991.s0 = _this991.s1;
										_this991.s1 = _this991.s2;
										_this991.s2 = _this991.s3;
										_this991.s3 = _this991.s4;
										_this991.s4 = _this991.s5;
										_this991.s5 = null;
										if(_this991.s6 != null) {
											var _this992 = _this991.s6;
											var out453 = _this992.s0;
											if(_this992.l != 0) {
												_this992.s0 = _this992.s1;
												_this992.s1 = _this992.s2;
												_this992.s2 = _this992.s3;
												_this992.s3 = _this992.s4;
												_this992.s4 = _this992.s5;
												_this992.s5 = null;
												if(_this992.s6 != null) {
													var _this993 = _this992.s6;
													var out454 = _this993.s0;
													if(_this993.l != 0) {
														_this993.s0 = _this993.s1;
														_this993.s1 = _this993.s2;
														_this993.s2 = _this993.s3;
														_this993.s3 = _this993.s4;
														_this993.s4 = _this993.s5;
														_this993.s5 = null;
														if(_this993.s6 != null) {
															var _this994 = _this993.s6;
															var out455 = _this994.s0;
															if(_this994.l != 0) {
																_this994.s0 = _this994.s1;
																_this994.s1 = _this994.s2;
																_this994.s2 = _this994.s3;
																_this994.s3 = _this994.s4;
																_this994.s4 = _this994.s5;
																_this994.s5 = null;
																if(_this994.s6 != null) {
																	var _this995 = _this994.s6;
																	var out456 = _this995.s0;
																	if(_this995.l != 0) {
																		_this995.s0 = _this995.s1;
																		_this995.s1 = _this995.s2;
																		_this995.s2 = _this995.s3;
																		_this995.s3 = _this995.s4;
																		_this995.s4 = _this995.s5;
																		_this995.s5 = null;
																		if(_this995.s6 != null) {
																			_this995.s5 = _this995.s6.shift();
																		}
																		_this995.l--;
																	}
																	_this994.s5 = out456;
																}
																_this994.l--;
															}
															_this993.s5 = out455;
														}
														_this993.l--;
													}
													_this992.s5 = out454;
												}
												_this992.l--;
											}
											_this991.s5 = out453;
										}
										_this991.l--;
									}
									_this990.s5 = out452;
								}
								_this990.l--;
							}
							_this989.s5 = out451;
						}
						_this989.l--;
					}
					this.lastX = out450 + this.lastX;
					var _this996 = this.store;
					var out457 = _this996.s0;
					if(_this996.l != 0) {
						_this996.s0 = _this996.s1;
						_this996.s1 = _this996.s2;
						_this996.s2 = _this996.s3;
						_this996.s3 = _this996.s4;
						_this996.s4 = _this996.s5;
						_this996.s5 = null;
						if(_this996.s6 != null) {
							var _this997 = _this996.s6;
							var out458 = _this997.s0;
							if(_this997.l != 0) {
								_this997.s0 = _this997.s1;
								_this997.s1 = _this997.s2;
								_this997.s2 = _this997.s3;
								_this997.s3 = _this997.s4;
								_this997.s4 = _this997.s5;
								_this997.s5 = null;
								if(_this997.s6 != null) {
									var _this998 = _this997.s6;
									var out459 = _this998.s0;
									if(_this998.l != 0) {
										_this998.s0 = _this998.s1;
										_this998.s1 = _this998.s2;
										_this998.s2 = _this998.s3;
										_this998.s3 = _this998.s4;
										_this998.s4 = _this998.s5;
										_this998.s5 = null;
										if(_this998.s6 != null) {
											var _this999 = _this998.s6;
											var out460 = _this999.s0;
											if(_this999.l != 0) {
												_this999.s0 = _this999.s1;
												_this999.s1 = _this999.s2;
												_this999.s2 = _this999.s3;
												_this999.s3 = _this999.s4;
												_this999.s4 = _this999.s5;
												_this999.s5 = null;
												if(_this999.s6 != null) {
													var _this1000 = _this999.s6;
													var out461 = _this1000.s0;
													if(_this1000.l != 0) {
														_this1000.s0 = _this1000.s1;
														_this1000.s1 = _this1000.s2;
														_this1000.s2 = _this1000.s3;
														_this1000.s3 = _this1000.s4;
														_this1000.s4 = _this1000.s5;
														_this1000.s5 = null;
														if(_this1000.s6 != null) {
															var _this1001 = _this1000.s6;
															var out462 = _this1001.s0;
															if(_this1001.l != 0) {
																_this1001.s0 = _this1001.s1;
																_this1001.s1 = _this1001.s2;
																_this1001.s2 = _this1001.s3;
																_this1001.s3 = _this1001.s4;
																_this1001.s4 = _this1001.s5;
																_this1001.s5 = null;
																if(_this1001.s6 != null) {
																	var _this1002 = _this1001.s6;
																	var out463 = _this1002.s0;
																	if(_this1002.l != 0) {
																		_this1002.s0 = _this1002.s1;
																		_this1002.s1 = _this1002.s2;
																		_this1002.s2 = _this1002.s3;
																		_this1002.s3 = _this1002.s4;
																		_this1002.s4 = _this1002.s5;
																		_this1002.s5 = null;
																		if(_this1002.s6 != null) {
																			_this1002.s5 = _this1002.s6.shift();
																		}
																		_this1002.l--;
																	}
																	_this1001.s5 = out463;
																}
																_this1001.l--;
															}
															_this1000.s5 = out462;
														}
														_this1000.l--;
													}
													_this999.s5 = out461;
												}
												_this999.l--;
											}
											_this998.s5 = out460;
										}
										_this998.l--;
									}
									_this997.s5 = out459;
								}
								_this997.l--;
							}
							_this996.s5 = out458;
						}
						_this996.l--;
					}
					this.lastY = out457 + this.lastY;
					this.pathContext.moveTo(this.lastX,this.lastY);
					while(this.store.l > 1) {
						var _this1003 = this.store;
						var out464 = _this1003.s0;
						if(_this1003.l != 0) {
							_this1003.s0 = _this1003.s1;
							_this1003.s1 = _this1003.s2;
							_this1003.s2 = _this1003.s3;
							_this1003.s3 = _this1003.s4;
							_this1003.s4 = _this1003.s5;
							_this1003.s5 = null;
							if(_this1003.s6 != null) {
								var _this1004 = _this1003.s6;
								var out465 = _this1004.s0;
								if(_this1004.l != 0) {
									_this1004.s0 = _this1004.s1;
									_this1004.s1 = _this1004.s2;
									_this1004.s2 = _this1004.s3;
									_this1004.s3 = _this1004.s4;
									_this1004.s4 = _this1004.s5;
									_this1004.s5 = null;
									if(_this1004.s6 != null) {
										var _this1005 = _this1004.s6;
										var out466 = _this1005.s0;
										if(_this1005.l != 0) {
											_this1005.s0 = _this1005.s1;
											_this1005.s1 = _this1005.s2;
											_this1005.s2 = _this1005.s3;
											_this1005.s3 = _this1005.s4;
											_this1005.s4 = _this1005.s5;
											_this1005.s5 = null;
											if(_this1005.s6 != null) {
												var _this1006 = _this1005.s6;
												var out467 = _this1006.s0;
												if(_this1006.l != 0) {
													_this1006.s0 = _this1006.s1;
													_this1006.s1 = _this1006.s2;
													_this1006.s2 = _this1006.s3;
													_this1006.s3 = _this1006.s4;
													_this1006.s4 = _this1006.s5;
													_this1006.s5 = null;
													if(_this1006.s6 != null) {
														var _this1007 = _this1006.s6;
														var out468 = _this1007.s0;
														if(_this1007.l != 0) {
															_this1007.s0 = _this1007.s1;
															_this1007.s1 = _this1007.s2;
															_this1007.s2 = _this1007.s3;
															_this1007.s3 = _this1007.s4;
															_this1007.s4 = _this1007.s5;
															_this1007.s5 = null;
															if(_this1007.s6 != null) {
																var _this1008 = _this1007.s6;
																var out469 = _this1008.s0;
																if(_this1008.l != 0) {
																	_this1008.s0 = _this1008.s1;
																	_this1008.s1 = _this1008.s2;
																	_this1008.s2 = _this1008.s3;
																	_this1008.s3 = _this1008.s4;
																	_this1008.s4 = _this1008.s5;
																	_this1008.s5 = null;
																	if(_this1008.s6 != null) {
																		var _this1009 = _this1008.s6;
																		var out470 = _this1009.s0;
																		if(_this1009.l != 0) {
																			_this1009.s0 = _this1009.s1;
																			_this1009.s1 = _this1009.s2;
																			_this1009.s2 = _this1009.s3;
																			_this1009.s3 = _this1009.s4;
																			_this1009.s4 = _this1009.s5;
																			_this1009.s5 = null;
																			if(_this1009.s6 != null) {
																				_this1009.s5 = _this1009.s6.shift();
																			}
																			_this1009.l--;
																		}
																		_this1008.s5 = out470;
																	}
																	_this1008.l--;
																}
																_this1007.s5 = out469;
															}
															_this1007.l--;
														}
														_this1006.s5 = out468;
													}
													_this1006.l--;
												}
												_this1005.s5 = out467;
											}
											_this1005.l--;
										}
										_this1004.s5 = out466;
									}
									_this1004.l--;
								}
								_this1003.s5 = out465;
							}
							_this1003.l--;
						}
						this.lastX = out464 + this.lastX;
						var _this1010 = this.store;
						var out471 = _this1010.s0;
						if(_this1010.l != 0) {
							_this1010.s0 = _this1010.s1;
							_this1010.s1 = _this1010.s2;
							_this1010.s2 = _this1010.s3;
							_this1010.s3 = _this1010.s4;
							_this1010.s4 = _this1010.s5;
							_this1010.s5 = null;
							if(_this1010.s6 != null) {
								var _this1011 = _this1010.s6;
								var out472 = _this1011.s0;
								if(_this1011.l != 0) {
									_this1011.s0 = _this1011.s1;
									_this1011.s1 = _this1011.s2;
									_this1011.s2 = _this1011.s3;
									_this1011.s3 = _this1011.s4;
									_this1011.s4 = _this1011.s5;
									_this1011.s5 = null;
									if(_this1011.s6 != null) {
										var _this1012 = _this1011.s6;
										var out473 = _this1012.s0;
										if(_this1012.l != 0) {
											_this1012.s0 = _this1012.s1;
											_this1012.s1 = _this1012.s2;
											_this1012.s2 = _this1012.s3;
											_this1012.s3 = _this1012.s4;
											_this1012.s4 = _this1012.s5;
											_this1012.s5 = null;
											if(_this1012.s6 != null) {
												var _this1013 = _this1012.s6;
												var out474 = _this1013.s0;
												if(_this1013.l != 0) {
													_this1013.s0 = _this1013.s1;
													_this1013.s1 = _this1013.s2;
													_this1013.s2 = _this1013.s3;
													_this1013.s3 = _this1013.s4;
													_this1013.s4 = _this1013.s5;
													_this1013.s5 = null;
													if(_this1013.s6 != null) {
														var _this1014 = _this1013.s6;
														var out475 = _this1014.s0;
														if(_this1014.l != 0) {
															_this1014.s0 = _this1014.s1;
															_this1014.s1 = _this1014.s2;
															_this1014.s2 = _this1014.s3;
															_this1014.s3 = _this1014.s4;
															_this1014.s4 = _this1014.s5;
															_this1014.s5 = null;
															if(_this1014.s6 != null) {
																var _this1015 = _this1014.s6;
																var out476 = _this1015.s0;
																if(_this1015.l != 0) {
																	_this1015.s0 = _this1015.s1;
																	_this1015.s1 = _this1015.s2;
																	_this1015.s2 = _this1015.s3;
																	_this1015.s3 = _this1015.s4;
																	_this1015.s4 = _this1015.s5;
																	_this1015.s5 = null;
																	if(_this1015.s6 != null) {
																		var _this1016 = _this1015.s6;
																		var out477 = _this1016.s0;
																		if(_this1016.l != 0) {
																			_this1016.s0 = _this1016.s1;
																			_this1016.s1 = _this1016.s2;
																			_this1016.s2 = _this1016.s3;
																			_this1016.s3 = _this1016.s4;
																			_this1016.s4 = _this1016.s5;
																			_this1016.s5 = null;
																			if(_this1016.s6 != null) {
																				_this1016.s5 = _this1016.s6.shift();
																			}
																			_this1016.l--;
																		}
																		_this1015.s5 = out477;
																	}
																	_this1015.l--;
																}
																_this1014.s5 = out476;
															}
															_this1014.l--;
														}
														_this1013.s5 = out475;
													}
													_this1013.l--;
												}
												_this1012.s5 = out474;
											}
											_this1012.l--;
										}
										_this1011.s5 = out473;
									}
									_this1011.l--;
								}
								_this1010.s5 = out472;
							}
							_this1010.l--;
						}
						this.lastY = out471 + this.lastY;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 113:
				var _this1017 = this.store;
				_this1017.l = 0;
				_this1017.s0 = null;
				_this1017.s1 = null;
				_this1017.s2 = null;
				_this1017.s3 = null;
				_this1017.s4 = null;
				_this1017.s5 = null;
				_this1017.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count15 = 0;
				var temp14 = "";
				var exit14 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp14 != "") {
							if((this.store.l & 1) == 0) {
								var _this1018 = this.store;
								var v75 = parseFloat(temp14);
								switch(_this1018.l) {
								case 0:
									_this1018.s0 = v75;
									break;
								case 1:
									_this1018.s1 = v75;
									break;
								case 2:
									_this1018.s2 = v75;
									break;
								case 3:
									_this1018.s3 = v75;
									break;
								case 4:
									_this1018.s4 = v75;
									break;
								case 5:
									_this1018.s5 = v75;
									break;
								default:
									if(_this1018.s6 == null) {
										_this1018.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1019 = _this1018.s6;
									switch(_this1019.l) {
									case 0:
										_this1019.s0 = v75;
										break;
									case 1:
										_this1019.s1 = v75;
										break;
									case 2:
										_this1019.s2 = v75;
										break;
									case 3:
										_this1019.s3 = v75;
										break;
									case 4:
										_this1019.s4 = v75;
										break;
									case 5:
										_this1019.s5 = v75;
										break;
									default:
										if(_this1019.s6 == null) {
											_this1019.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1020 = _this1019.s6;
										switch(_this1020.l) {
										case 0:
											_this1020.s0 = v75;
											break;
										case 1:
											_this1020.s1 = v75;
											break;
										case 2:
											_this1020.s2 = v75;
											break;
										case 3:
											_this1020.s3 = v75;
											break;
										case 4:
											_this1020.s4 = v75;
											break;
										case 5:
											_this1020.s5 = v75;
											break;
										default:
											if(_this1020.s6 == null) {
												_this1020.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1021 = _this1020.s6;
											switch(_this1021.l) {
											case 0:
												_this1021.s0 = v75;
												break;
											case 1:
												_this1021.s1 = v75;
												break;
											case 2:
												_this1021.s2 = v75;
												break;
											case 3:
												_this1021.s3 = v75;
												break;
											case 4:
												_this1021.s4 = v75;
												break;
											case 5:
												_this1021.s5 = v75;
												break;
											default:
												if(_this1021.s6 == null) {
													_this1021.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1022 = _this1021.s6;
												switch(_this1022.l) {
												case 0:
													_this1022.s0 = v75;
													break;
												case 1:
													_this1022.s1 = v75;
													break;
												case 2:
													_this1022.s2 = v75;
													break;
												case 3:
													_this1022.s3 = v75;
													break;
												case 4:
													_this1022.s4 = v75;
													break;
												case 5:
													_this1022.s5 = v75;
													break;
												default:
													if(_this1022.s6 == null) {
														_this1022.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1023 = _this1022.s6;
													switch(_this1023.l) {
													case 0:
														_this1023.s0 = v75;
														break;
													case 1:
														_this1023.s1 = v75;
														break;
													case 2:
														_this1023.s2 = v75;
														break;
													case 3:
														_this1023.s3 = v75;
														break;
													case 4:
														_this1023.s4 = v75;
														break;
													case 5:
														_this1023.s5 = v75;
														break;
													default:
														if(_this1023.s6 == null) {
															_this1023.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1024 = _this1023.s6;
														switch(_this1024.l) {
														case 0:
															_this1024.s0 = v75;
															break;
														case 1:
															_this1024.s1 = v75;
															break;
														case 2:
															_this1024.s2 = v75;
															break;
														case 3:
															_this1024.s3 = v75;
															break;
														case 4:
															_this1024.s4 = v75;
															break;
														case 5:
															_this1024.s5 = v75;
															break;
														default:
															if(_this1024.s6 == null) {
																_this1024.s6 = new trilateral_justPath_StoreF6();
															}
															_this1024.s6.push(v75);
														}
														_this1024.l++;
													}
													_this1023.l++;
												}
												_this1022.l++;
											}
											_this1021.l++;
										}
										_this1020.l++;
									}
									_this1019.l++;
								}
								_this1018.l++;
							} else {
								var _this1025 = this.store;
								var v76 = parseFloat(temp14);
								switch(_this1025.l) {
								case 0:
									_this1025.s0 = v76;
									break;
								case 1:
									_this1025.s1 = v76;
									break;
								case 2:
									_this1025.s2 = v76;
									break;
								case 3:
									_this1025.s3 = v76;
									break;
								case 4:
									_this1025.s4 = v76;
									break;
								case 5:
									_this1025.s5 = v76;
									break;
								default:
									if(_this1025.s6 == null) {
										_this1025.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1026 = _this1025.s6;
									switch(_this1026.l) {
									case 0:
										_this1026.s0 = v76;
										break;
									case 1:
										_this1026.s1 = v76;
										break;
									case 2:
										_this1026.s2 = v76;
										break;
									case 3:
										_this1026.s3 = v76;
										break;
									case 4:
										_this1026.s4 = v76;
										break;
									case 5:
										_this1026.s5 = v76;
										break;
									default:
										if(_this1026.s6 == null) {
											_this1026.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1027 = _this1026.s6;
										switch(_this1027.l) {
										case 0:
											_this1027.s0 = v76;
											break;
										case 1:
											_this1027.s1 = v76;
											break;
										case 2:
											_this1027.s2 = v76;
											break;
										case 3:
											_this1027.s3 = v76;
											break;
										case 4:
											_this1027.s4 = v76;
											break;
										case 5:
											_this1027.s5 = v76;
											break;
										default:
											if(_this1027.s6 == null) {
												_this1027.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1028 = _this1027.s6;
											switch(_this1028.l) {
											case 0:
												_this1028.s0 = v76;
												break;
											case 1:
												_this1028.s1 = v76;
												break;
											case 2:
												_this1028.s2 = v76;
												break;
											case 3:
												_this1028.s3 = v76;
												break;
											case 4:
												_this1028.s4 = v76;
												break;
											case 5:
												_this1028.s5 = v76;
												break;
											default:
												if(_this1028.s6 == null) {
													_this1028.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1029 = _this1028.s6;
												switch(_this1029.l) {
												case 0:
													_this1029.s0 = v76;
													break;
												case 1:
													_this1029.s1 = v76;
													break;
												case 2:
													_this1029.s2 = v76;
													break;
												case 3:
													_this1029.s3 = v76;
													break;
												case 4:
													_this1029.s4 = v76;
													break;
												case 5:
													_this1029.s5 = v76;
													break;
												default:
													if(_this1029.s6 == null) {
														_this1029.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1030 = _this1029.s6;
													switch(_this1030.l) {
													case 0:
														_this1030.s0 = v76;
														break;
													case 1:
														_this1030.s1 = v76;
														break;
													case 2:
														_this1030.s2 = v76;
														break;
													case 3:
														_this1030.s3 = v76;
														break;
													case 4:
														_this1030.s4 = v76;
														break;
													case 5:
														_this1030.s5 = v76;
														break;
													default:
														if(_this1030.s6 == null) {
															_this1030.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1031 = _this1030.s6;
														switch(_this1031.l) {
														case 0:
															_this1031.s0 = v76;
															break;
														case 1:
															_this1031.s1 = v76;
															break;
														case 2:
															_this1031.s2 = v76;
															break;
														case 3:
															_this1031.s3 = v76;
															break;
														case 4:
															_this1031.s4 = v76;
															break;
														case 5:
															_this1031.s5 = v76;
															break;
														default:
															if(_this1031.s6 == null) {
																_this1031.s6 = new trilateral_justPath_StoreF6();
															}
															_this1031.s6.push(v76);
														}
														_this1031.l++;
													}
													_this1030.l++;
												}
												_this1029.l++;
											}
											_this1028.l++;
										}
										_this1027.l++;
									}
									_this1026.l++;
								}
								_this1025.l++;
							}
							temp14 = "";
						}
						break;
					case 45:
						if(temp14 != "") {
							if((this.store.l & 1) == 0) {
								var _this1032 = this.store;
								var v77 = parseFloat(temp14);
								switch(_this1032.l) {
								case 0:
									_this1032.s0 = v77;
									break;
								case 1:
									_this1032.s1 = v77;
									break;
								case 2:
									_this1032.s2 = v77;
									break;
								case 3:
									_this1032.s3 = v77;
									break;
								case 4:
									_this1032.s4 = v77;
									break;
								case 5:
									_this1032.s5 = v77;
									break;
								default:
									if(_this1032.s6 == null) {
										_this1032.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1033 = _this1032.s6;
									switch(_this1033.l) {
									case 0:
										_this1033.s0 = v77;
										break;
									case 1:
										_this1033.s1 = v77;
										break;
									case 2:
										_this1033.s2 = v77;
										break;
									case 3:
										_this1033.s3 = v77;
										break;
									case 4:
										_this1033.s4 = v77;
										break;
									case 5:
										_this1033.s5 = v77;
										break;
									default:
										if(_this1033.s6 == null) {
											_this1033.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1034 = _this1033.s6;
										switch(_this1034.l) {
										case 0:
											_this1034.s0 = v77;
											break;
										case 1:
											_this1034.s1 = v77;
											break;
										case 2:
											_this1034.s2 = v77;
											break;
										case 3:
											_this1034.s3 = v77;
											break;
										case 4:
											_this1034.s4 = v77;
											break;
										case 5:
											_this1034.s5 = v77;
											break;
										default:
											if(_this1034.s6 == null) {
												_this1034.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1035 = _this1034.s6;
											switch(_this1035.l) {
											case 0:
												_this1035.s0 = v77;
												break;
											case 1:
												_this1035.s1 = v77;
												break;
											case 2:
												_this1035.s2 = v77;
												break;
											case 3:
												_this1035.s3 = v77;
												break;
											case 4:
												_this1035.s4 = v77;
												break;
											case 5:
												_this1035.s5 = v77;
												break;
											default:
												if(_this1035.s6 == null) {
													_this1035.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1036 = _this1035.s6;
												switch(_this1036.l) {
												case 0:
													_this1036.s0 = v77;
													break;
												case 1:
													_this1036.s1 = v77;
													break;
												case 2:
													_this1036.s2 = v77;
													break;
												case 3:
													_this1036.s3 = v77;
													break;
												case 4:
													_this1036.s4 = v77;
													break;
												case 5:
													_this1036.s5 = v77;
													break;
												default:
													if(_this1036.s6 == null) {
														_this1036.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1037 = _this1036.s6;
													switch(_this1037.l) {
													case 0:
														_this1037.s0 = v77;
														break;
													case 1:
														_this1037.s1 = v77;
														break;
													case 2:
														_this1037.s2 = v77;
														break;
													case 3:
														_this1037.s3 = v77;
														break;
													case 4:
														_this1037.s4 = v77;
														break;
													case 5:
														_this1037.s5 = v77;
														break;
													default:
														if(_this1037.s6 == null) {
															_this1037.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1038 = _this1037.s6;
														switch(_this1038.l) {
														case 0:
															_this1038.s0 = v77;
															break;
														case 1:
															_this1038.s1 = v77;
															break;
														case 2:
															_this1038.s2 = v77;
															break;
														case 3:
															_this1038.s3 = v77;
															break;
														case 4:
															_this1038.s4 = v77;
															break;
														case 5:
															_this1038.s5 = v77;
															break;
														default:
															if(_this1038.s6 == null) {
																_this1038.s6 = new trilateral_justPath_StoreF6();
															}
															_this1038.s6.push(v77);
														}
														_this1038.l++;
													}
													_this1037.l++;
												}
												_this1036.l++;
											}
											_this1035.l++;
										}
										_this1034.l++;
									}
									_this1033.l++;
								}
								_this1032.l++;
							} else {
								var _this1039 = this.store;
								var v78 = parseFloat(temp14);
								switch(_this1039.l) {
								case 0:
									_this1039.s0 = v78;
									break;
								case 1:
									_this1039.s1 = v78;
									break;
								case 2:
									_this1039.s2 = v78;
									break;
								case 3:
									_this1039.s3 = v78;
									break;
								case 4:
									_this1039.s4 = v78;
									break;
								case 5:
									_this1039.s5 = v78;
									break;
								default:
									if(_this1039.s6 == null) {
										_this1039.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1040 = _this1039.s6;
									switch(_this1040.l) {
									case 0:
										_this1040.s0 = v78;
										break;
									case 1:
										_this1040.s1 = v78;
										break;
									case 2:
										_this1040.s2 = v78;
										break;
									case 3:
										_this1040.s3 = v78;
										break;
									case 4:
										_this1040.s4 = v78;
										break;
									case 5:
										_this1040.s5 = v78;
										break;
									default:
										if(_this1040.s6 == null) {
											_this1040.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1041 = _this1040.s6;
										switch(_this1041.l) {
										case 0:
											_this1041.s0 = v78;
											break;
										case 1:
											_this1041.s1 = v78;
											break;
										case 2:
											_this1041.s2 = v78;
											break;
										case 3:
											_this1041.s3 = v78;
											break;
										case 4:
											_this1041.s4 = v78;
											break;
										case 5:
											_this1041.s5 = v78;
											break;
										default:
											if(_this1041.s6 == null) {
												_this1041.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1042 = _this1041.s6;
											switch(_this1042.l) {
											case 0:
												_this1042.s0 = v78;
												break;
											case 1:
												_this1042.s1 = v78;
												break;
											case 2:
												_this1042.s2 = v78;
												break;
											case 3:
												_this1042.s3 = v78;
												break;
											case 4:
												_this1042.s4 = v78;
												break;
											case 5:
												_this1042.s5 = v78;
												break;
											default:
												if(_this1042.s6 == null) {
													_this1042.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1043 = _this1042.s6;
												switch(_this1043.l) {
												case 0:
													_this1043.s0 = v78;
													break;
												case 1:
													_this1043.s1 = v78;
													break;
												case 2:
													_this1043.s2 = v78;
													break;
												case 3:
													_this1043.s3 = v78;
													break;
												case 4:
													_this1043.s4 = v78;
													break;
												case 5:
													_this1043.s5 = v78;
													break;
												default:
													if(_this1043.s6 == null) {
														_this1043.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1044 = _this1043.s6;
													switch(_this1044.l) {
													case 0:
														_this1044.s0 = v78;
														break;
													case 1:
														_this1044.s1 = v78;
														break;
													case 2:
														_this1044.s2 = v78;
														break;
													case 3:
														_this1044.s3 = v78;
														break;
													case 4:
														_this1044.s4 = v78;
														break;
													case 5:
														_this1044.s5 = v78;
														break;
													default:
														if(_this1044.s6 == null) {
															_this1044.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1045 = _this1044.s6;
														switch(_this1045.l) {
														case 0:
															_this1045.s0 = v78;
															break;
														case 1:
															_this1045.s1 = v78;
															break;
														case 2:
															_this1045.s2 = v78;
															break;
														case 3:
															_this1045.s3 = v78;
															break;
														case 4:
															_this1045.s4 = v78;
															break;
														case 5:
															_this1045.s5 = v78;
															break;
														default:
															if(_this1045.s6 == null) {
																_this1045.s6 = new trilateral_justPath_StoreF6();
															}
															_this1045.s6.push(v78);
														}
														_this1045.l++;
													}
													_this1044.l++;
												}
												_this1043.l++;
											}
											_this1042.l++;
										}
										_this1041.l++;
									}
									_this1040.l++;
								}
								_this1039.l++;
							}
						}
						temp14 = "-";
						break;
					case 46:
						temp14 += ".";
						break;
					case 48:
						temp14 += "0";
						break;
					case 49:
						temp14 += "1";
						break;
					case 50:
						temp14 += "2";
						break;
					case 51:
						temp14 += "3";
						break;
					case 52:
						temp14 += "4";
						break;
					case 53:
						temp14 += "5";
						break;
					case 54:
						temp14 += "6";
						break;
					case 55:
						temp14 += "7";
						break;
					case 56:
						temp14 += "8";
						break;
					case 57:
						temp14 += "9";
						break;
					default:
						if(temp14 != "") {
							if((this.store.l & 1) == 0) {
								var _this1046 = this.store;
								var v79 = parseFloat(temp14);
								switch(_this1046.l) {
								case 0:
									_this1046.s0 = v79;
									break;
								case 1:
									_this1046.s1 = v79;
									break;
								case 2:
									_this1046.s2 = v79;
									break;
								case 3:
									_this1046.s3 = v79;
									break;
								case 4:
									_this1046.s4 = v79;
									break;
								case 5:
									_this1046.s5 = v79;
									break;
								default:
									if(_this1046.s6 == null) {
										_this1046.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1047 = _this1046.s6;
									switch(_this1047.l) {
									case 0:
										_this1047.s0 = v79;
										break;
									case 1:
										_this1047.s1 = v79;
										break;
									case 2:
										_this1047.s2 = v79;
										break;
									case 3:
										_this1047.s3 = v79;
										break;
									case 4:
										_this1047.s4 = v79;
										break;
									case 5:
										_this1047.s5 = v79;
										break;
									default:
										if(_this1047.s6 == null) {
											_this1047.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1048 = _this1047.s6;
										switch(_this1048.l) {
										case 0:
											_this1048.s0 = v79;
											break;
										case 1:
											_this1048.s1 = v79;
											break;
										case 2:
											_this1048.s2 = v79;
											break;
										case 3:
											_this1048.s3 = v79;
											break;
										case 4:
											_this1048.s4 = v79;
											break;
										case 5:
											_this1048.s5 = v79;
											break;
										default:
											if(_this1048.s6 == null) {
												_this1048.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1049 = _this1048.s6;
											switch(_this1049.l) {
											case 0:
												_this1049.s0 = v79;
												break;
											case 1:
												_this1049.s1 = v79;
												break;
											case 2:
												_this1049.s2 = v79;
												break;
											case 3:
												_this1049.s3 = v79;
												break;
											case 4:
												_this1049.s4 = v79;
												break;
											case 5:
												_this1049.s5 = v79;
												break;
											default:
												if(_this1049.s6 == null) {
													_this1049.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1050 = _this1049.s6;
												switch(_this1050.l) {
												case 0:
													_this1050.s0 = v79;
													break;
												case 1:
													_this1050.s1 = v79;
													break;
												case 2:
													_this1050.s2 = v79;
													break;
												case 3:
													_this1050.s3 = v79;
													break;
												case 4:
													_this1050.s4 = v79;
													break;
												case 5:
													_this1050.s5 = v79;
													break;
												default:
													if(_this1050.s6 == null) {
														_this1050.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1051 = _this1050.s6;
													switch(_this1051.l) {
													case 0:
														_this1051.s0 = v79;
														break;
													case 1:
														_this1051.s1 = v79;
														break;
													case 2:
														_this1051.s2 = v79;
														break;
													case 3:
														_this1051.s3 = v79;
														break;
													case 4:
														_this1051.s4 = v79;
														break;
													case 5:
														_this1051.s5 = v79;
														break;
													default:
														if(_this1051.s6 == null) {
															_this1051.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1052 = _this1051.s6;
														switch(_this1052.l) {
														case 0:
															_this1052.s0 = v79;
															break;
														case 1:
															_this1052.s1 = v79;
															break;
														case 2:
															_this1052.s2 = v79;
															break;
														case 3:
															_this1052.s3 = v79;
															break;
														case 4:
															_this1052.s4 = v79;
															break;
														case 5:
															_this1052.s5 = v79;
															break;
														default:
															if(_this1052.s6 == null) {
																_this1052.s6 = new trilateral_justPath_StoreF6();
															}
															_this1052.s6.push(v79);
														}
														_this1052.l++;
													}
													_this1051.l++;
												}
												_this1050.l++;
											}
											_this1049.l++;
										}
										_this1048.l++;
									}
									_this1047.l++;
								}
								_this1046.l++;
							} else {
								var _this1053 = this.store;
								var v80 = parseFloat(temp14);
								switch(_this1053.l) {
								case 0:
									_this1053.s0 = v80;
									break;
								case 1:
									_this1053.s1 = v80;
									break;
								case 2:
									_this1053.s2 = v80;
									break;
								case 3:
									_this1053.s3 = v80;
									break;
								case 4:
									_this1053.s4 = v80;
									break;
								case 5:
									_this1053.s5 = v80;
									break;
								default:
									if(_this1053.s6 == null) {
										_this1053.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1054 = _this1053.s6;
									switch(_this1054.l) {
									case 0:
										_this1054.s0 = v80;
										break;
									case 1:
										_this1054.s1 = v80;
										break;
									case 2:
										_this1054.s2 = v80;
										break;
									case 3:
										_this1054.s3 = v80;
										break;
									case 4:
										_this1054.s4 = v80;
										break;
									case 5:
										_this1054.s5 = v80;
										break;
									default:
										if(_this1054.s6 == null) {
											_this1054.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1055 = _this1054.s6;
										switch(_this1055.l) {
										case 0:
											_this1055.s0 = v80;
											break;
										case 1:
											_this1055.s1 = v80;
											break;
										case 2:
											_this1055.s2 = v80;
											break;
										case 3:
											_this1055.s3 = v80;
											break;
										case 4:
											_this1055.s4 = v80;
											break;
										case 5:
											_this1055.s5 = v80;
											break;
										default:
											if(_this1055.s6 == null) {
												_this1055.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1056 = _this1055.s6;
											switch(_this1056.l) {
											case 0:
												_this1056.s0 = v80;
												break;
											case 1:
												_this1056.s1 = v80;
												break;
											case 2:
												_this1056.s2 = v80;
												break;
											case 3:
												_this1056.s3 = v80;
												break;
											case 4:
												_this1056.s4 = v80;
												break;
											case 5:
												_this1056.s5 = v80;
												break;
											default:
												if(_this1056.s6 == null) {
													_this1056.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1057 = _this1056.s6;
												switch(_this1057.l) {
												case 0:
													_this1057.s0 = v80;
													break;
												case 1:
													_this1057.s1 = v80;
													break;
												case 2:
													_this1057.s2 = v80;
													break;
												case 3:
													_this1057.s3 = v80;
													break;
												case 4:
													_this1057.s4 = v80;
													break;
												case 5:
													_this1057.s5 = v80;
													break;
												default:
													if(_this1057.s6 == null) {
														_this1057.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1058 = _this1057.s6;
													switch(_this1058.l) {
													case 0:
														_this1058.s0 = v80;
														break;
													case 1:
														_this1058.s1 = v80;
														break;
													case 2:
														_this1058.s2 = v80;
														break;
													case 3:
														_this1058.s3 = v80;
														break;
													case 4:
														_this1058.s4 = v80;
														break;
													case 5:
														_this1058.s5 = v80;
														break;
													default:
														if(_this1058.s6 == null) {
															_this1058.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1059 = _this1058.s6;
														switch(_this1059.l) {
														case 0:
															_this1059.s0 = v80;
															break;
														case 1:
															_this1059.s1 = v80;
															break;
														case 2:
															_this1059.s2 = v80;
															break;
														case 3:
															_this1059.s3 = v80;
															break;
														case 4:
															_this1059.s4 = v80;
															break;
														case 5:
															_this1059.s5 = v80;
															break;
														default:
															if(_this1059.s6 == null) {
																_this1059.s6 = new trilateral_justPath_StoreF6();
															}
															_this1059.s6.push(v80);
														}
														_this1059.l++;
													}
													_this1058.l++;
												}
												_this1057.l++;
											}
											_this1056.l++;
										}
										_this1055.l++;
									}
									_this1054.l++;
								}
								_this1053.l++;
							}
							temp14 = "";
						}
						this.pos--;
						exit14 = true;
					}
					if(exit14) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					this.controlX = this.lastX + this.store.s0;
					this.controlY = this.lastY + this.store.s1;
					this.lastX = this.store.s0 + this.lastX;
					this.lastY = this.store.s1 + this.lastY;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var tmp1 = this.lastX;
						var _this1060 = this.store;
						var out478 = _this1060.s0;
						if(_this1060.l != 0) {
							_this1060.s0 = _this1060.s1;
							_this1060.s1 = _this1060.s2;
							_this1060.s2 = _this1060.s3;
							_this1060.s3 = _this1060.s4;
							_this1060.s4 = _this1060.s5;
							_this1060.s5 = null;
							if(_this1060.s6 != null) {
								var _this1061 = _this1060.s6;
								var out479 = _this1061.s0;
								if(_this1061.l != 0) {
									_this1061.s0 = _this1061.s1;
									_this1061.s1 = _this1061.s2;
									_this1061.s2 = _this1061.s3;
									_this1061.s3 = _this1061.s4;
									_this1061.s4 = _this1061.s5;
									_this1061.s5 = null;
									if(_this1061.s6 != null) {
										var _this1062 = _this1061.s6;
										var out480 = _this1062.s0;
										if(_this1062.l != 0) {
											_this1062.s0 = _this1062.s1;
											_this1062.s1 = _this1062.s2;
											_this1062.s2 = _this1062.s3;
											_this1062.s3 = _this1062.s4;
											_this1062.s4 = _this1062.s5;
											_this1062.s5 = null;
											if(_this1062.s6 != null) {
												var _this1063 = _this1062.s6;
												var out481 = _this1063.s0;
												if(_this1063.l != 0) {
													_this1063.s0 = _this1063.s1;
													_this1063.s1 = _this1063.s2;
													_this1063.s2 = _this1063.s3;
													_this1063.s3 = _this1063.s4;
													_this1063.s4 = _this1063.s5;
													_this1063.s5 = null;
													if(_this1063.s6 != null) {
														var _this1064 = _this1063.s6;
														var out482 = _this1064.s0;
														if(_this1064.l != 0) {
															_this1064.s0 = _this1064.s1;
															_this1064.s1 = _this1064.s2;
															_this1064.s2 = _this1064.s3;
															_this1064.s3 = _this1064.s4;
															_this1064.s4 = _this1064.s5;
															_this1064.s5 = null;
															if(_this1064.s6 != null) {
																var _this1065 = _this1064.s6;
																var out483 = _this1065.s0;
																if(_this1065.l != 0) {
																	_this1065.s0 = _this1065.s1;
																	_this1065.s1 = _this1065.s2;
																	_this1065.s2 = _this1065.s3;
																	_this1065.s3 = _this1065.s4;
																	_this1065.s4 = _this1065.s5;
																	_this1065.s5 = null;
																	if(_this1065.s6 != null) {
																		var _this1066 = _this1065.s6;
																		var out484 = _this1066.s0;
																		if(_this1066.l != 0) {
																			_this1066.s0 = _this1066.s1;
																			_this1066.s1 = _this1066.s2;
																			_this1066.s2 = _this1066.s3;
																			_this1066.s3 = _this1066.s4;
																			_this1066.s4 = _this1066.s5;
																			_this1066.s5 = null;
																			if(_this1066.s6 != null) {
																				_this1066.s5 = _this1066.s6.shift();
																			}
																			_this1066.l--;
																		}
																		_this1065.s5 = out484;
																	}
																	_this1065.l--;
																}
																_this1064.s5 = out483;
															}
															_this1064.l--;
														}
														_this1063.s5 = out482;
													}
													_this1063.l--;
												}
												_this1062.s5 = out481;
											}
											_this1062.l--;
										}
										_this1061.s5 = out480;
									}
									_this1061.l--;
								}
								_this1060.s5 = out479;
							}
							_this1060.l--;
						}
						this.controlX = tmp1 + out478;
						var tmp2 = this.lastY;
						var _this1067 = this.store;
						var out485 = _this1067.s0;
						if(_this1067.l != 0) {
							_this1067.s0 = _this1067.s1;
							_this1067.s1 = _this1067.s2;
							_this1067.s2 = _this1067.s3;
							_this1067.s3 = _this1067.s4;
							_this1067.s4 = _this1067.s5;
							_this1067.s5 = null;
							if(_this1067.s6 != null) {
								var _this1068 = _this1067.s6;
								var out486 = _this1068.s0;
								if(_this1068.l != 0) {
									_this1068.s0 = _this1068.s1;
									_this1068.s1 = _this1068.s2;
									_this1068.s2 = _this1068.s3;
									_this1068.s3 = _this1068.s4;
									_this1068.s4 = _this1068.s5;
									_this1068.s5 = null;
									if(_this1068.s6 != null) {
										var _this1069 = _this1068.s6;
										var out487 = _this1069.s0;
										if(_this1069.l != 0) {
											_this1069.s0 = _this1069.s1;
											_this1069.s1 = _this1069.s2;
											_this1069.s2 = _this1069.s3;
											_this1069.s3 = _this1069.s4;
											_this1069.s4 = _this1069.s5;
											_this1069.s5 = null;
											if(_this1069.s6 != null) {
												var _this1070 = _this1069.s6;
												var out488 = _this1070.s0;
												if(_this1070.l != 0) {
													_this1070.s0 = _this1070.s1;
													_this1070.s1 = _this1070.s2;
													_this1070.s2 = _this1070.s3;
													_this1070.s3 = _this1070.s4;
													_this1070.s4 = _this1070.s5;
													_this1070.s5 = null;
													if(_this1070.s6 != null) {
														var _this1071 = _this1070.s6;
														var out489 = _this1071.s0;
														if(_this1071.l != 0) {
															_this1071.s0 = _this1071.s1;
															_this1071.s1 = _this1071.s2;
															_this1071.s2 = _this1071.s3;
															_this1071.s3 = _this1071.s4;
															_this1071.s4 = _this1071.s5;
															_this1071.s5 = null;
															if(_this1071.s6 != null) {
																var _this1072 = _this1071.s6;
																var out490 = _this1072.s0;
																if(_this1072.l != 0) {
																	_this1072.s0 = _this1072.s1;
																	_this1072.s1 = _this1072.s2;
																	_this1072.s2 = _this1072.s3;
																	_this1072.s3 = _this1072.s4;
																	_this1072.s4 = _this1072.s5;
																	_this1072.s5 = null;
																	if(_this1072.s6 != null) {
																		var _this1073 = _this1072.s6;
																		var out491 = _this1073.s0;
																		if(_this1073.l != 0) {
																			_this1073.s0 = _this1073.s1;
																			_this1073.s1 = _this1073.s2;
																			_this1073.s2 = _this1073.s3;
																			_this1073.s3 = _this1073.s4;
																			_this1073.s4 = _this1073.s5;
																			_this1073.s5 = null;
																			if(_this1073.s6 != null) {
																				_this1073.s5 = _this1073.s6.shift();
																			}
																			_this1073.l--;
																		}
																		_this1072.s5 = out491;
																	}
																	_this1072.l--;
																}
																_this1071.s5 = out490;
															}
															_this1071.l--;
														}
														_this1070.s5 = out489;
													}
													_this1070.l--;
												}
												_this1069.s5 = out488;
											}
											_this1069.l--;
										}
										_this1068.s5 = out487;
									}
									_this1068.l--;
								}
								_this1067.s5 = out486;
							}
							_this1067.l--;
						}
						this.controlY = tmp2 + out485;
						var _this1074 = this.store;
						var out492 = _this1074.s0;
						if(_this1074.l != 0) {
							_this1074.s0 = _this1074.s1;
							_this1074.s1 = _this1074.s2;
							_this1074.s2 = _this1074.s3;
							_this1074.s3 = _this1074.s4;
							_this1074.s4 = _this1074.s5;
							_this1074.s5 = null;
							if(_this1074.s6 != null) {
								var _this1075 = _this1074.s6;
								var out493 = _this1075.s0;
								if(_this1075.l != 0) {
									_this1075.s0 = _this1075.s1;
									_this1075.s1 = _this1075.s2;
									_this1075.s2 = _this1075.s3;
									_this1075.s3 = _this1075.s4;
									_this1075.s4 = _this1075.s5;
									_this1075.s5 = null;
									if(_this1075.s6 != null) {
										var _this1076 = _this1075.s6;
										var out494 = _this1076.s0;
										if(_this1076.l != 0) {
											_this1076.s0 = _this1076.s1;
											_this1076.s1 = _this1076.s2;
											_this1076.s2 = _this1076.s3;
											_this1076.s3 = _this1076.s4;
											_this1076.s4 = _this1076.s5;
											_this1076.s5 = null;
											if(_this1076.s6 != null) {
												var _this1077 = _this1076.s6;
												var out495 = _this1077.s0;
												if(_this1077.l != 0) {
													_this1077.s0 = _this1077.s1;
													_this1077.s1 = _this1077.s2;
													_this1077.s2 = _this1077.s3;
													_this1077.s3 = _this1077.s4;
													_this1077.s4 = _this1077.s5;
													_this1077.s5 = null;
													if(_this1077.s6 != null) {
														var _this1078 = _this1077.s6;
														var out496 = _this1078.s0;
														if(_this1078.l != 0) {
															_this1078.s0 = _this1078.s1;
															_this1078.s1 = _this1078.s2;
															_this1078.s2 = _this1078.s3;
															_this1078.s3 = _this1078.s4;
															_this1078.s4 = _this1078.s5;
															_this1078.s5 = null;
															if(_this1078.s6 != null) {
																var _this1079 = _this1078.s6;
																var out497 = _this1079.s0;
																if(_this1079.l != 0) {
																	_this1079.s0 = _this1079.s1;
																	_this1079.s1 = _this1079.s2;
																	_this1079.s2 = _this1079.s3;
																	_this1079.s3 = _this1079.s4;
																	_this1079.s4 = _this1079.s5;
																	_this1079.s5 = null;
																	if(_this1079.s6 != null) {
																		var _this1080 = _this1079.s6;
																		var out498 = _this1080.s0;
																		if(_this1080.l != 0) {
																			_this1080.s0 = _this1080.s1;
																			_this1080.s1 = _this1080.s2;
																			_this1080.s2 = _this1080.s3;
																			_this1080.s3 = _this1080.s4;
																			_this1080.s4 = _this1080.s5;
																			_this1080.s5 = null;
																			if(_this1080.s6 != null) {
																				_this1080.s5 = _this1080.s6.shift();
																			}
																			_this1080.l--;
																		}
																		_this1079.s5 = out498;
																	}
																	_this1079.l--;
																}
																_this1078.s5 = out497;
															}
															_this1078.l--;
														}
														_this1077.s5 = out496;
													}
													_this1077.l--;
												}
												_this1076.s5 = out495;
											}
											_this1076.l--;
										}
										_this1075.s5 = out494;
									}
									_this1075.l--;
								}
								_this1074.s5 = out493;
							}
							_this1074.l--;
						}
						this.lastX = out492 + this.lastX;
						var _this1081 = this.store;
						var out499 = _this1081.s0;
						if(_this1081.l != 0) {
							_this1081.s0 = _this1081.s1;
							_this1081.s1 = _this1081.s2;
							_this1081.s2 = _this1081.s3;
							_this1081.s3 = _this1081.s4;
							_this1081.s4 = _this1081.s5;
							_this1081.s5 = null;
							if(_this1081.s6 != null) {
								var _this1082 = _this1081.s6;
								var out500 = _this1082.s0;
								if(_this1082.l != 0) {
									_this1082.s0 = _this1082.s1;
									_this1082.s1 = _this1082.s2;
									_this1082.s2 = _this1082.s3;
									_this1082.s3 = _this1082.s4;
									_this1082.s4 = _this1082.s5;
									_this1082.s5 = null;
									if(_this1082.s6 != null) {
										var _this1083 = _this1082.s6;
										var out501 = _this1083.s0;
										if(_this1083.l != 0) {
											_this1083.s0 = _this1083.s1;
											_this1083.s1 = _this1083.s2;
											_this1083.s2 = _this1083.s3;
											_this1083.s3 = _this1083.s4;
											_this1083.s4 = _this1083.s5;
											_this1083.s5 = null;
											if(_this1083.s6 != null) {
												var _this1084 = _this1083.s6;
												var out502 = _this1084.s0;
												if(_this1084.l != 0) {
													_this1084.s0 = _this1084.s1;
													_this1084.s1 = _this1084.s2;
													_this1084.s2 = _this1084.s3;
													_this1084.s3 = _this1084.s4;
													_this1084.s4 = _this1084.s5;
													_this1084.s5 = null;
													if(_this1084.s6 != null) {
														var _this1085 = _this1084.s6;
														var out503 = _this1085.s0;
														if(_this1085.l != 0) {
															_this1085.s0 = _this1085.s1;
															_this1085.s1 = _this1085.s2;
															_this1085.s2 = _this1085.s3;
															_this1085.s3 = _this1085.s4;
															_this1085.s4 = _this1085.s5;
															_this1085.s5 = null;
															if(_this1085.s6 != null) {
																var _this1086 = _this1085.s6;
																var out504 = _this1086.s0;
																if(_this1086.l != 0) {
																	_this1086.s0 = _this1086.s1;
																	_this1086.s1 = _this1086.s2;
																	_this1086.s2 = _this1086.s3;
																	_this1086.s3 = _this1086.s4;
																	_this1086.s4 = _this1086.s5;
																	_this1086.s5 = null;
																	if(_this1086.s6 != null) {
																		var _this1087 = _this1086.s6;
																		var out505 = _this1087.s0;
																		if(_this1087.l != 0) {
																			_this1087.s0 = _this1087.s1;
																			_this1087.s1 = _this1087.s2;
																			_this1087.s2 = _this1087.s3;
																			_this1087.s3 = _this1087.s4;
																			_this1087.s4 = _this1087.s5;
																			_this1087.s5 = null;
																			if(_this1087.s6 != null) {
																				_this1087.s5 = _this1087.s6.shift();
																			}
																			_this1087.l--;
																		}
																		_this1086.s5 = out505;
																	}
																	_this1086.l--;
																}
																_this1085.s5 = out504;
															}
															_this1085.l--;
														}
														_this1084.s5 = out503;
													}
													_this1084.l--;
												}
												_this1083.s5 = out502;
											}
											_this1083.l--;
										}
										_this1082.s5 = out501;
									}
									_this1082.l--;
								}
								_this1081.s5 = out500;
							}
							_this1081.l--;
						}
						this.lastY = out499 + this.lastY;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 115:
				var _this1088 = this.store;
				_this1088.l = 0;
				_this1088.s0 = null;
				_this1088.s1 = null;
				_this1088.s2 = null;
				_this1088.s3 = null;
				_this1088.s4 = null;
				_this1088.s5 = null;
				_this1088.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count16 = 0;
				var temp15 = "";
				var exit15 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp15 != "") {
							if((this.store.l & 1) == 0) {
								var _this1089 = this.store;
								var v81 = parseFloat(temp15);
								switch(_this1089.l) {
								case 0:
									_this1089.s0 = v81;
									break;
								case 1:
									_this1089.s1 = v81;
									break;
								case 2:
									_this1089.s2 = v81;
									break;
								case 3:
									_this1089.s3 = v81;
									break;
								case 4:
									_this1089.s4 = v81;
									break;
								case 5:
									_this1089.s5 = v81;
									break;
								default:
									if(_this1089.s6 == null) {
										_this1089.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1090 = _this1089.s6;
									switch(_this1090.l) {
									case 0:
										_this1090.s0 = v81;
										break;
									case 1:
										_this1090.s1 = v81;
										break;
									case 2:
										_this1090.s2 = v81;
										break;
									case 3:
										_this1090.s3 = v81;
										break;
									case 4:
										_this1090.s4 = v81;
										break;
									case 5:
										_this1090.s5 = v81;
										break;
									default:
										if(_this1090.s6 == null) {
											_this1090.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1091 = _this1090.s6;
										switch(_this1091.l) {
										case 0:
											_this1091.s0 = v81;
											break;
										case 1:
											_this1091.s1 = v81;
											break;
										case 2:
											_this1091.s2 = v81;
											break;
										case 3:
											_this1091.s3 = v81;
											break;
										case 4:
											_this1091.s4 = v81;
											break;
										case 5:
											_this1091.s5 = v81;
											break;
										default:
											if(_this1091.s6 == null) {
												_this1091.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1092 = _this1091.s6;
											switch(_this1092.l) {
											case 0:
												_this1092.s0 = v81;
												break;
											case 1:
												_this1092.s1 = v81;
												break;
											case 2:
												_this1092.s2 = v81;
												break;
											case 3:
												_this1092.s3 = v81;
												break;
											case 4:
												_this1092.s4 = v81;
												break;
											case 5:
												_this1092.s5 = v81;
												break;
											default:
												if(_this1092.s6 == null) {
													_this1092.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1093 = _this1092.s6;
												switch(_this1093.l) {
												case 0:
													_this1093.s0 = v81;
													break;
												case 1:
													_this1093.s1 = v81;
													break;
												case 2:
													_this1093.s2 = v81;
													break;
												case 3:
													_this1093.s3 = v81;
													break;
												case 4:
													_this1093.s4 = v81;
													break;
												case 5:
													_this1093.s5 = v81;
													break;
												default:
													if(_this1093.s6 == null) {
														_this1093.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1094 = _this1093.s6;
													switch(_this1094.l) {
													case 0:
														_this1094.s0 = v81;
														break;
													case 1:
														_this1094.s1 = v81;
														break;
													case 2:
														_this1094.s2 = v81;
														break;
													case 3:
														_this1094.s3 = v81;
														break;
													case 4:
														_this1094.s4 = v81;
														break;
													case 5:
														_this1094.s5 = v81;
														break;
													default:
														if(_this1094.s6 == null) {
															_this1094.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1095 = _this1094.s6;
														switch(_this1095.l) {
														case 0:
															_this1095.s0 = v81;
															break;
														case 1:
															_this1095.s1 = v81;
															break;
														case 2:
															_this1095.s2 = v81;
															break;
														case 3:
															_this1095.s3 = v81;
															break;
														case 4:
															_this1095.s4 = v81;
															break;
														case 5:
															_this1095.s5 = v81;
															break;
														default:
															if(_this1095.s6 == null) {
																_this1095.s6 = new trilateral_justPath_StoreF6();
															}
															_this1095.s6.push(v81);
														}
														_this1095.l++;
													}
													_this1094.l++;
												}
												_this1093.l++;
											}
											_this1092.l++;
										}
										_this1091.l++;
									}
									_this1090.l++;
								}
								_this1089.l++;
							} else {
								var _this1096 = this.store;
								var v82 = parseFloat(temp15);
								switch(_this1096.l) {
								case 0:
									_this1096.s0 = v82;
									break;
								case 1:
									_this1096.s1 = v82;
									break;
								case 2:
									_this1096.s2 = v82;
									break;
								case 3:
									_this1096.s3 = v82;
									break;
								case 4:
									_this1096.s4 = v82;
									break;
								case 5:
									_this1096.s5 = v82;
									break;
								default:
									if(_this1096.s6 == null) {
										_this1096.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1097 = _this1096.s6;
									switch(_this1097.l) {
									case 0:
										_this1097.s0 = v82;
										break;
									case 1:
										_this1097.s1 = v82;
										break;
									case 2:
										_this1097.s2 = v82;
										break;
									case 3:
										_this1097.s3 = v82;
										break;
									case 4:
										_this1097.s4 = v82;
										break;
									case 5:
										_this1097.s5 = v82;
										break;
									default:
										if(_this1097.s6 == null) {
											_this1097.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1098 = _this1097.s6;
										switch(_this1098.l) {
										case 0:
											_this1098.s0 = v82;
											break;
										case 1:
											_this1098.s1 = v82;
											break;
										case 2:
											_this1098.s2 = v82;
											break;
										case 3:
											_this1098.s3 = v82;
											break;
										case 4:
											_this1098.s4 = v82;
											break;
										case 5:
											_this1098.s5 = v82;
											break;
										default:
											if(_this1098.s6 == null) {
												_this1098.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1099 = _this1098.s6;
											switch(_this1099.l) {
											case 0:
												_this1099.s0 = v82;
												break;
											case 1:
												_this1099.s1 = v82;
												break;
											case 2:
												_this1099.s2 = v82;
												break;
											case 3:
												_this1099.s3 = v82;
												break;
											case 4:
												_this1099.s4 = v82;
												break;
											case 5:
												_this1099.s5 = v82;
												break;
											default:
												if(_this1099.s6 == null) {
													_this1099.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1100 = _this1099.s6;
												switch(_this1100.l) {
												case 0:
													_this1100.s0 = v82;
													break;
												case 1:
													_this1100.s1 = v82;
													break;
												case 2:
													_this1100.s2 = v82;
													break;
												case 3:
													_this1100.s3 = v82;
													break;
												case 4:
													_this1100.s4 = v82;
													break;
												case 5:
													_this1100.s5 = v82;
													break;
												default:
													if(_this1100.s6 == null) {
														_this1100.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1101 = _this1100.s6;
													switch(_this1101.l) {
													case 0:
														_this1101.s0 = v82;
														break;
													case 1:
														_this1101.s1 = v82;
														break;
													case 2:
														_this1101.s2 = v82;
														break;
													case 3:
														_this1101.s3 = v82;
														break;
													case 4:
														_this1101.s4 = v82;
														break;
													case 5:
														_this1101.s5 = v82;
														break;
													default:
														if(_this1101.s6 == null) {
															_this1101.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1102 = _this1101.s6;
														switch(_this1102.l) {
														case 0:
															_this1102.s0 = v82;
															break;
														case 1:
															_this1102.s1 = v82;
															break;
														case 2:
															_this1102.s2 = v82;
															break;
														case 3:
															_this1102.s3 = v82;
															break;
														case 4:
															_this1102.s4 = v82;
															break;
														case 5:
															_this1102.s5 = v82;
															break;
														default:
															if(_this1102.s6 == null) {
																_this1102.s6 = new trilateral_justPath_StoreF6();
															}
															_this1102.s6.push(v82);
														}
														_this1102.l++;
													}
													_this1101.l++;
												}
												_this1100.l++;
											}
											_this1099.l++;
										}
										_this1098.l++;
									}
									_this1097.l++;
								}
								_this1096.l++;
							}
							temp15 = "";
						}
						break;
					case 45:
						if(temp15 != "") {
							if((this.store.l & 1) == 0) {
								var _this1103 = this.store;
								var v83 = parseFloat(temp15);
								switch(_this1103.l) {
								case 0:
									_this1103.s0 = v83;
									break;
								case 1:
									_this1103.s1 = v83;
									break;
								case 2:
									_this1103.s2 = v83;
									break;
								case 3:
									_this1103.s3 = v83;
									break;
								case 4:
									_this1103.s4 = v83;
									break;
								case 5:
									_this1103.s5 = v83;
									break;
								default:
									if(_this1103.s6 == null) {
										_this1103.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1104 = _this1103.s6;
									switch(_this1104.l) {
									case 0:
										_this1104.s0 = v83;
										break;
									case 1:
										_this1104.s1 = v83;
										break;
									case 2:
										_this1104.s2 = v83;
										break;
									case 3:
										_this1104.s3 = v83;
										break;
									case 4:
										_this1104.s4 = v83;
										break;
									case 5:
										_this1104.s5 = v83;
										break;
									default:
										if(_this1104.s6 == null) {
											_this1104.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1105 = _this1104.s6;
										switch(_this1105.l) {
										case 0:
											_this1105.s0 = v83;
											break;
										case 1:
											_this1105.s1 = v83;
											break;
										case 2:
											_this1105.s2 = v83;
											break;
										case 3:
											_this1105.s3 = v83;
											break;
										case 4:
											_this1105.s4 = v83;
											break;
										case 5:
											_this1105.s5 = v83;
											break;
										default:
											if(_this1105.s6 == null) {
												_this1105.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1106 = _this1105.s6;
											switch(_this1106.l) {
											case 0:
												_this1106.s0 = v83;
												break;
											case 1:
												_this1106.s1 = v83;
												break;
											case 2:
												_this1106.s2 = v83;
												break;
											case 3:
												_this1106.s3 = v83;
												break;
											case 4:
												_this1106.s4 = v83;
												break;
											case 5:
												_this1106.s5 = v83;
												break;
											default:
												if(_this1106.s6 == null) {
													_this1106.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1107 = _this1106.s6;
												switch(_this1107.l) {
												case 0:
													_this1107.s0 = v83;
													break;
												case 1:
													_this1107.s1 = v83;
													break;
												case 2:
													_this1107.s2 = v83;
													break;
												case 3:
													_this1107.s3 = v83;
													break;
												case 4:
													_this1107.s4 = v83;
													break;
												case 5:
													_this1107.s5 = v83;
													break;
												default:
													if(_this1107.s6 == null) {
														_this1107.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1108 = _this1107.s6;
													switch(_this1108.l) {
													case 0:
														_this1108.s0 = v83;
														break;
													case 1:
														_this1108.s1 = v83;
														break;
													case 2:
														_this1108.s2 = v83;
														break;
													case 3:
														_this1108.s3 = v83;
														break;
													case 4:
														_this1108.s4 = v83;
														break;
													case 5:
														_this1108.s5 = v83;
														break;
													default:
														if(_this1108.s6 == null) {
															_this1108.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1109 = _this1108.s6;
														switch(_this1109.l) {
														case 0:
															_this1109.s0 = v83;
															break;
														case 1:
															_this1109.s1 = v83;
															break;
														case 2:
															_this1109.s2 = v83;
															break;
														case 3:
															_this1109.s3 = v83;
															break;
														case 4:
															_this1109.s4 = v83;
															break;
														case 5:
															_this1109.s5 = v83;
															break;
														default:
															if(_this1109.s6 == null) {
																_this1109.s6 = new trilateral_justPath_StoreF6();
															}
															_this1109.s6.push(v83);
														}
														_this1109.l++;
													}
													_this1108.l++;
												}
												_this1107.l++;
											}
											_this1106.l++;
										}
										_this1105.l++;
									}
									_this1104.l++;
								}
								_this1103.l++;
							} else {
								var _this1110 = this.store;
								var v84 = parseFloat(temp15);
								switch(_this1110.l) {
								case 0:
									_this1110.s0 = v84;
									break;
								case 1:
									_this1110.s1 = v84;
									break;
								case 2:
									_this1110.s2 = v84;
									break;
								case 3:
									_this1110.s3 = v84;
									break;
								case 4:
									_this1110.s4 = v84;
									break;
								case 5:
									_this1110.s5 = v84;
									break;
								default:
									if(_this1110.s6 == null) {
										_this1110.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1111 = _this1110.s6;
									switch(_this1111.l) {
									case 0:
										_this1111.s0 = v84;
										break;
									case 1:
										_this1111.s1 = v84;
										break;
									case 2:
										_this1111.s2 = v84;
										break;
									case 3:
										_this1111.s3 = v84;
										break;
									case 4:
										_this1111.s4 = v84;
										break;
									case 5:
										_this1111.s5 = v84;
										break;
									default:
										if(_this1111.s6 == null) {
											_this1111.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1112 = _this1111.s6;
										switch(_this1112.l) {
										case 0:
											_this1112.s0 = v84;
											break;
										case 1:
											_this1112.s1 = v84;
											break;
										case 2:
											_this1112.s2 = v84;
											break;
										case 3:
											_this1112.s3 = v84;
											break;
										case 4:
											_this1112.s4 = v84;
											break;
										case 5:
											_this1112.s5 = v84;
											break;
										default:
											if(_this1112.s6 == null) {
												_this1112.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1113 = _this1112.s6;
											switch(_this1113.l) {
											case 0:
												_this1113.s0 = v84;
												break;
											case 1:
												_this1113.s1 = v84;
												break;
											case 2:
												_this1113.s2 = v84;
												break;
											case 3:
												_this1113.s3 = v84;
												break;
											case 4:
												_this1113.s4 = v84;
												break;
											case 5:
												_this1113.s5 = v84;
												break;
											default:
												if(_this1113.s6 == null) {
													_this1113.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1114 = _this1113.s6;
												switch(_this1114.l) {
												case 0:
													_this1114.s0 = v84;
													break;
												case 1:
													_this1114.s1 = v84;
													break;
												case 2:
													_this1114.s2 = v84;
													break;
												case 3:
													_this1114.s3 = v84;
													break;
												case 4:
													_this1114.s4 = v84;
													break;
												case 5:
													_this1114.s5 = v84;
													break;
												default:
													if(_this1114.s6 == null) {
														_this1114.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1115 = _this1114.s6;
													switch(_this1115.l) {
													case 0:
														_this1115.s0 = v84;
														break;
													case 1:
														_this1115.s1 = v84;
														break;
													case 2:
														_this1115.s2 = v84;
														break;
													case 3:
														_this1115.s3 = v84;
														break;
													case 4:
														_this1115.s4 = v84;
														break;
													case 5:
														_this1115.s5 = v84;
														break;
													default:
														if(_this1115.s6 == null) {
															_this1115.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1116 = _this1115.s6;
														switch(_this1116.l) {
														case 0:
															_this1116.s0 = v84;
															break;
														case 1:
															_this1116.s1 = v84;
															break;
														case 2:
															_this1116.s2 = v84;
															break;
														case 3:
															_this1116.s3 = v84;
															break;
														case 4:
															_this1116.s4 = v84;
															break;
														case 5:
															_this1116.s5 = v84;
															break;
														default:
															if(_this1116.s6 == null) {
																_this1116.s6 = new trilateral_justPath_StoreF6();
															}
															_this1116.s6.push(v84);
														}
														_this1116.l++;
													}
													_this1115.l++;
												}
												_this1114.l++;
											}
											_this1113.l++;
										}
										_this1112.l++;
									}
									_this1111.l++;
								}
								_this1110.l++;
							}
						}
						temp15 = "-";
						break;
					case 46:
						temp15 += ".";
						break;
					case 48:
						temp15 += "0";
						break;
					case 49:
						temp15 += "1";
						break;
					case 50:
						temp15 += "2";
						break;
					case 51:
						temp15 += "3";
						break;
					case 52:
						temp15 += "4";
						break;
					case 53:
						temp15 += "5";
						break;
					case 54:
						temp15 += "6";
						break;
					case 55:
						temp15 += "7";
						break;
					case 56:
						temp15 += "8";
						break;
					case 57:
						temp15 += "9";
						break;
					default:
						if(temp15 != "") {
							if((this.store.l & 1) == 0) {
								var _this1117 = this.store;
								var v85 = parseFloat(temp15);
								switch(_this1117.l) {
								case 0:
									_this1117.s0 = v85;
									break;
								case 1:
									_this1117.s1 = v85;
									break;
								case 2:
									_this1117.s2 = v85;
									break;
								case 3:
									_this1117.s3 = v85;
									break;
								case 4:
									_this1117.s4 = v85;
									break;
								case 5:
									_this1117.s5 = v85;
									break;
								default:
									if(_this1117.s6 == null) {
										_this1117.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1118 = _this1117.s6;
									switch(_this1118.l) {
									case 0:
										_this1118.s0 = v85;
										break;
									case 1:
										_this1118.s1 = v85;
										break;
									case 2:
										_this1118.s2 = v85;
										break;
									case 3:
										_this1118.s3 = v85;
										break;
									case 4:
										_this1118.s4 = v85;
										break;
									case 5:
										_this1118.s5 = v85;
										break;
									default:
										if(_this1118.s6 == null) {
											_this1118.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1119 = _this1118.s6;
										switch(_this1119.l) {
										case 0:
											_this1119.s0 = v85;
											break;
										case 1:
											_this1119.s1 = v85;
											break;
										case 2:
											_this1119.s2 = v85;
											break;
										case 3:
											_this1119.s3 = v85;
											break;
										case 4:
											_this1119.s4 = v85;
											break;
										case 5:
											_this1119.s5 = v85;
											break;
										default:
											if(_this1119.s6 == null) {
												_this1119.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1120 = _this1119.s6;
											switch(_this1120.l) {
											case 0:
												_this1120.s0 = v85;
												break;
											case 1:
												_this1120.s1 = v85;
												break;
											case 2:
												_this1120.s2 = v85;
												break;
											case 3:
												_this1120.s3 = v85;
												break;
											case 4:
												_this1120.s4 = v85;
												break;
											case 5:
												_this1120.s5 = v85;
												break;
											default:
												if(_this1120.s6 == null) {
													_this1120.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1121 = _this1120.s6;
												switch(_this1121.l) {
												case 0:
													_this1121.s0 = v85;
													break;
												case 1:
													_this1121.s1 = v85;
													break;
												case 2:
													_this1121.s2 = v85;
													break;
												case 3:
													_this1121.s3 = v85;
													break;
												case 4:
													_this1121.s4 = v85;
													break;
												case 5:
													_this1121.s5 = v85;
													break;
												default:
													if(_this1121.s6 == null) {
														_this1121.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1122 = _this1121.s6;
													switch(_this1122.l) {
													case 0:
														_this1122.s0 = v85;
														break;
													case 1:
														_this1122.s1 = v85;
														break;
													case 2:
														_this1122.s2 = v85;
														break;
													case 3:
														_this1122.s3 = v85;
														break;
													case 4:
														_this1122.s4 = v85;
														break;
													case 5:
														_this1122.s5 = v85;
														break;
													default:
														if(_this1122.s6 == null) {
															_this1122.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1123 = _this1122.s6;
														switch(_this1123.l) {
														case 0:
															_this1123.s0 = v85;
															break;
														case 1:
															_this1123.s1 = v85;
															break;
														case 2:
															_this1123.s2 = v85;
															break;
														case 3:
															_this1123.s3 = v85;
															break;
														case 4:
															_this1123.s4 = v85;
															break;
														case 5:
															_this1123.s5 = v85;
															break;
														default:
															if(_this1123.s6 == null) {
																_this1123.s6 = new trilateral_justPath_StoreF6();
															}
															_this1123.s6.push(v85);
														}
														_this1123.l++;
													}
													_this1122.l++;
												}
												_this1121.l++;
											}
											_this1120.l++;
										}
										_this1119.l++;
									}
									_this1118.l++;
								}
								_this1117.l++;
							} else {
								var _this1124 = this.store;
								var v86 = parseFloat(temp15);
								switch(_this1124.l) {
								case 0:
									_this1124.s0 = v86;
									break;
								case 1:
									_this1124.s1 = v86;
									break;
								case 2:
									_this1124.s2 = v86;
									break;
								case 3:
									_this1124.s3 = v86;
									break;
								case 4:
									_this1124.s4 = v86;
									break;
								case 5:
									_this1124.s5 = v86;
									break;
								default:
									if(_this1124.s6 == null) {
										_this1124.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1125 = _this1124.s6;
									switch(_this1125.l) {
									case 0:
										_this1125.s0 = v86;
										break;
									case 1:
										_this1125.s1 = v86;
										break;
									case 2:
										_this1125.s2 = v86;
										break;
									case 3:
										_this1125.s3 = v86;
										break;
									case 4:
										_this1125.s4 = v86;
										break;
									case 5:
										_this1125.s5 = v86;
										break;
									default:
										if(_this1125.s6 == null) {
											_this1125.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1126 = _this1125.s6;
										switch(_this1126.l) {
										case 0:
											_this1126.s0 = v86;
											break;
										case 1:
											_this1126.s1 = v86;
											break;
										case 2:
											_this1126.s2 = v86;
											break;
										case 3:
											_this1126.s3 = v86;
											break;
										case 4:
											_this1126.s4 = v86;
											break;
										case 5:
											_this1126.s5 = v86;
											break;
										default:
											if(_this1126.s6 == null) {
												_this1126.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1127 = _this1126.s6;
											switch(_this1127.l) {
											case 0:
												_this1127.s0 = v86;
												break;
											case 1:
												_this1127.s1 = v86;
												break;
											case 2:
												_this1127.s2 = v86;
												break;
											case 3:
												_this1127.s3 = v86;
												break;
											case 4:
												_this1127.s4 = v86;
												break;
											case 5:
												_this1127.s5 = v86;
												break;
											default:
												if(_this1127.s6 == null) {
													_this1127.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1128 = _this1127.s6;
												switch(_this1128.l) {
												case 0:
													_this1128.s0 = v86;
													break;
												case 1:
													_this1128.s1 = v86;
													break;
												case 2:
													_this1128.s2 = v86;
													break;
												case 3:
													_this1128.s3 = v86;
													break;
												case 4:
													_this1128.s4 = v86;
													break;
												case 5:
													_this1128.s5 = v86;
													break;
												default:
													if(_this1128.s6 == null) {
														_this1128.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1129 = _this1128.s6;
													switch(_this1129.l) {
													case 0:
														_this1129.s0 = v86;
														break;
													case 1:
														_this1129.s1 = v86;
														break;
													case 2:
														_this1129.s2 = v86;
														break;
													case 3:
														_this1129.s3 = v86;
														break;
													case 4:
														_this1129.s4 = v86;
														break;
													case 5:
														_this1129.s5 = v86;
														break;
													default:
														if(_this1129.s6 == null) {
															_this1129.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1130 = _this1129.s6;
														switch(_this1130.l) {
														case 0:
															_this1130.s0 = v86;
															break;
														case 1:
															_this1130.s1 = v86;
															break;
														case 2:
															_this1130.s2 = v86;
															break;
														case 3:
															_this1130.s3 = v86;
															break;
														case 4:
															_this1130.s4 = v86;
															break;
														case 5:
															_this1130.s5 = v86;
															break;
														default:
															if(_this1130.s6 == null) {
																_this1130.s6 = new trilateral_justPath_StoreF6();
															}
															_this1130.s6.push(v86);
														}
														_this1130.l++;
													}
													_this1129.l++;
												}
												_this1128.l++;
											}
											_this1127.l++;
										}
										_this1126.l++;
									}
									_this1125.l++;
								}
								_this1124.l++;
							}
							temp15 = "";
						}
						this.pos--;
						exit15 = true;
					}
					if(exit15) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					var firstX5 = this.store.s0 + this.lastX;
					var firstY5 = this.store.s1 + this.lastY;
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					this.lastX = this.store.s2 + this.lastX;
					this.lastY = this.store.s3 + this.lastY;
					this.pathContext.curveTo(this.controlX,this.controlY,firstX5,firstY5,this.lastX,this.lastY);
					this.controlX = firstX5;
					this.controlY = firstY5;
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this1131 = this.store;
						var out506 = _this1131.s0;
						if(_this1131.l != 0) {
							_this1131.s0 = _this1131.s1;
							_this1131.s1 = _this1131.s2;
							_this1131.s2 = _this1131.s3;
							_this1131.s3 = _this1131.s4;
							_this1131.s4 = _this1131.s5;
							_this1131.s5 = null;
							if(_this1131.s6 != null) {
								var _this1132 = _this1131.s6;
								var out507 = _this1132.s0;
								if(_this1132.l != 0) {
									_this1132.s0 = _this1132.s1;
									_this1132.s1 = _this1132.s2;
									_this1132.s2 = _this1132.s3;
									_this1132.s3 = _this1132.s4;
									_this1132.s4 = _this1132.s5;
									_this1132.s5 = null;
									if(_this1132.s6 != null) {
										var _this1133 = _this1132.s6;
										var out508 = _this1133.s0;
										if(_this1133.l != 0) {
											_this1133.s0 = _this1133.s1;
											_this1133.s1 = _this1133.s2;
											_this1133.s2 = _this1133.s3;
											_this1133.s3 = _this1133.s4;
											_this1133.s4 = _this1133.s5;
											_this1133.s5 = null;
											if(_this1133.s6 != null) {
												var _this1134 = _this1133.s6;
												var out509 = _this1134.s0;
												if(_this1134.l != 0) {
													_this1134.s0 = _this1134.s1;
													_this1134.s1 = _this1134.s2;
													_this1134.s2 = _this1134.s3;
													_this1134.s3 = _this1134.s4;
													_this1134.s4 = _this1134.s5;
													_this1134.s5 = null;
													if(_this1134.s6 != null) {
														var _this1135 = _this1134.s6;
														var out510 = _this1135.s0;
														if(_this1135.l != 0) {
															_this1135.s0 = _this1135.s1;
															_this1135.s1 = _this1135.s2;
															_this1135.s2 = _this1135.s3;
															_this1135.s3 = _this1135.s4;
															_this1135.s4 = _this1135.s5;
															_this1135.s5 = null;
															if(_this1135.s6 != null) {
																var _this1136 = _this1135.s6;
																var out511 = _this1136.s0;
																if(_this1136.l != 0) {
																	_this1136.s0 = _this1136.s1;
																	_this1136.s1 = _this1136.s2;
																	_this1136.s2 = _this1136.s3;
																	_this1136.s3 = _this1136.s4;
																	_this1136.s4 = _this1136.s5;
																	_this1136.s5 = null;
																	if(_this1136.s6 != null) {
																		var _this1137 = _this1136.s6;
																		var out512 = _this1137.s0;
																		if(_this1137.l != 0) {
																			_this1137.s0 = _this1137.s1;
																			_this1137.s1 = _this1137.s2;
																			_this1137.s2 = _this1137.s3;
																			_this1137.s3 = _this1137.s4;
																			_this1137.s4 = _this1137.s5;
																			_this1137.s5 = null;
																			if(_this1137.s6 != null) {
																				_this1137.s5 = _this1137.s6.shift();
																			}
																			_this1137.l--;
																		}
																		_this1136.s5 = out512;
																	}
																	_this1136.l--;
																}
																_this1135.s5 = out511;
															}
															_this1135.l--;
														}
														_this1134.s5 = out510;
													}
													_this1134.l--;
												}
												_this1133.s5 = out509;
											}
											_this1133.l--;
										}
										_this1132.s5 = out508;
									}
									_this1132.l--;
								}
								_this1131.s5 = out507;
							}
							_this1131.l--;
						}
						var firstX6 = out506 + this.lastX;
						var _this1138 = this.store;
						var out513 = _this1138.s0;
						if(_this1138.l != 0) {
							_this1138.s0 = _this1138.s1;
							_this1138.s1 = _this1138.s2;
							_this1138.s2 = _this1138.s3;
							_this1138.s3 = _this1138.s4;
							_this1138.s4 = _this1138.s5;
							_this1138.s5 = null;
							if(_this1138.s6 != null) {
								var _this1139 = _this1138.s6;
								var out514 = _this1139.s0;
								if(_this1139.l != 0) {
									_this1139.s0 = _this1139.s1;
									_this1139.s1 = _this1139.s2;
									_this1139.s2 = _this1139.s3;
									_this1139.s3 = _this1139.s4;
									_this1139.s4 = _this1139.s5;
									_this1139.s5 = null;
									if(_this1139.s6 != null) {
										var _this1140 = _this1139.s6;
										var out515 = _this1140.s0;
										if(_this1140.l != 0) {
											_this1140.s0 = _this1140.s1;
											_this1140.s1 = _this1140.s2;
											_this1140.s2 = _this1140.s3;
											_this1140.s3 = _this1140.s4;
											_this1140.s4 = _this1140.s5;
											_this1140.s5 = null;
											if(_this1140.s6 != null) {
												var _this1141 = _this1140.s6;
												var out516 = _this1141.s0;
												if(_this1141.l != 0) {
													_this1141.s0 = _this1141.s1;
													_this1141.s1 = _this1141.s2;
													_this1141.s2 = _this1141.s3;
													_this1141.s3 = _this1141.s4;
													_this1141.s4 = _this1141.s5;
													_this1141.s5 = null;
													if(_this1141.s6 != null) {
														var _this1142 = _this1141.s6;
														var out517 = _this1142.s0;
														if(_this1142.l != 0) {
															_this1142.s0 = _this1142.s1;
															_this1142.s1 = _this1142.s2;
															_this1142.s2 = _this1142.s3;
															_this1142.s3 = _this1142.s4;
															_this1142.s4 = _this1142.s5;
															_this1142.s5 = null;
															if(_this1142.s6 != null) {
																var _this1143 = _this1142.s6;
																var out518 = _this1143.s0;
																if(_this1143.l != 0) {
																	_this1143.s0 = _this1143.s1;
																	_this1143.s1 = _this1143.s2;
																	_this1143.s2 = _this1143.s3;
																	_this1143.s3 = _this1143.s4;
																	_this1143.s4 = _this1143.s5;
																	_this1143.s5 = null;
																	if(_this1143.s6 != null) {
																		var _this1144 = _this1143.s6;
																		var out519 = _this1144.s0;
																		if(_this1144.l != 0) {
																			_this1144.s0 = _this1144.s1;
																			_this1144.s1 = _this1144.s2;
																			_this1144.s2 = _this1144.s3;
																			_this1144.s3 = _this1144.s4;
																			_this1144.s4 = _this1144.s5;
																			_this1144.s5 = null;
																			if(_this1144.s6 != null) {
																				_this1144.s5 = _this1144.s6.shift();
																			}
																			_this1144.l--;
																		}
																		_this1143.s5 = out519;
																	}
																	_this1143.l--;
																}
																_this1142.s5 = out518;
															}
															_this1142.l--;
														}
														_this1141.s5 = out517;
													}
													_this1141.l--;
												}
												_this1140.s5 = out516;
											}
											_this1140.l--;
										}
										_this1139.s5 = out515;
									}
									_this1139.l--;
								}
								_this1138.s5 = out514;
							}
							_this1138.l--;
						}
						var firstY6 = out513 + this.lastY;
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this1145 = this.store;
						var out520 = _this1145.s0;
						if(_this1145.l != 0) {
							_this1145.s0 = _this1145.s1;
							_this1145.s1 = _this1145.s2;
							_this1145.s2 = _this1145.s3;
							_this1145.s3 = _this1145.s4;
							_this1145.s4 = _this1145.s5;
							_this1145.s5 = null;
							if(_this1145.s6 != null) {
								var _this1146 = _this1145.s6;
								var out521 = _this1146.s0;
								if(_this1146.l != 0) {
									_this1146.s0 = _this1146.s1;
									_this1146.s1 = _this1146.s2;
									_this1146.s2 = _this1146.s3;
									_this1146.s3 = _this1146.s4;
									_this1146.s4 = _this1146.s5;
									_this1146.s5 = null;
									if(_this1146.s6 != null) {
										var _this1147 = _this1146.s6;
										var out522 = _this1147.s0;
										if(_this1147.l != 0) {
											_this1147.s0 = _this1147.s1;
											_this1147.s1 = _this1147.s2;
											_this1147.s2 = _this1147.s3;
											_this1147.s3 = _this1147.s4;
											_this1147.s4 = _this1147.s5;
											_this1147.s5 = null;
											if(_this1147.s6 != null) {
												var _this1148 = _this1147.s6;
												var out523 = _this1148.s0;
												if(_this1148.l != 0) {
													_this1148.s0 = _this1148.s1;
													_this1148.s1 = _this1148.s2;
													_this1148.s2 = _this1148.s3;
													_this1148.s3 = _this1148.s4;
													_this1148.s4 = _this1148.s5;
													_this1148.s5 = null;
													if(_this1148.s6 != null) {
														var _this1149 = _this1148.s6;
														var out524 = _this1149.s0;
														if(_this1149.l != 0) {
															_this1149.s0 = _this1149.s1;
															_this1149.s1 = _this1149.s2;
															_this1149.s2 = _this1149.s3;
															_this1149.s3 = _this1149.s4;
															_this1149.s4 = _this1149.s5;
															_this1149.s5 = null;
															if(_this1149.s6 != null) {
																var _this1150 = _this1149.s6;
																var out525 = _this1150.s0;
																if(_this1150.l != 0) {
																	_this1150.s0 = _this1150.s1;
																	_this1150.s1 = _this1150.s2;
																	_this1150.s2 = _this1150.s3;
																	_this1150.s3 = _this1150.s4;
																	_this1150.s4 = _this1150.s5;
																	_this1150.s5 = null;
																	if(_this1150.s6 != null) {
																		var _this1151 = _this1150.s6;
																		var out526 = _this1151.s0;
																		if(_this1151.l != 0) {
																			_this1151.s0 = _this1151.s1;
																			_this1151.s1 = _this1151.s2;
																			_this1151.s2 = _this1151.s3;
																			_this1151.s3 = _this1151.s4;
																			_this1151.s4 = _this1151.s5;
																			_this1151.s5 = null;
																			if(_this1151.s6 != null) {
																				_this1151.s5 = _this1151.s6.shift();
																			}
																			_this1151.l--;
																		}
																		_this1150.s5 = out526;
																	}
																	_this1150.l--;
																}
																_this1149.s5 = out525;
															}
															_this1149.l--;
														}
														_this1148.s5 = out524;
													}
													_this1148.l--;
												}
												_this1147.s5 = out523;
											}
											_this1147.l--;
										}
										_this1146.s5 = out522;
									}
									_this1146.l--;
								}
								_this1145.s5 = out521;
							}
							_this1145.l--;
						}
						this.lastX = out520 + this.lastX;
						var _this1152 = this.store;
						var out527 = _this1152.s0;
						if(_this1152.l != 0) {
							_this1152.s0 = _this1152.s1;
							_this1152.s1 = _this1152.s2;
							_this1152.s2 = _this1152.s3;
							_this1152.s3 = _this1152.s4;
							_this1152.s4 = _this1152.s5;
							_this1152.s5 = null;
							if(_this1152.s6 != null) {
								var _this1153 = _this1152.s6;
								var out528 = _this1153.s0;
								if(_this1153.l != 0) {
									_this1153.s0 = _this1153.s1;
									_this1153.s1 = _this1153.s2;
									_this1153.s2 = _this1153.s3;
									_this1153.s3 = _this1153.s4;
									_this1153.s4 = _this1153.s5;
									_this1153.s5 = null;
									if(_this1153.s6 != null) {
										var _this1154 = _this1153.s6;
										var out529 = _this1154.s0;
										if(_this1154.l != 0) {
											_this1154.s0 = _this1154.s1;
											_this1154.s1 = _this1154.s2;
											_this1154.s2 = _this1154.s3;
											_this1154.s3 = _this1154.s4;
											_this1154.s4 = _this1154.s5;
											_this1154.s5 = null;
											if(_this1154.s6 != null) {
												var _this1155 = _this1154.s6;
												var out530 = _this1155.s0;
												if(_this1155.l != 0) {
													_this1155.s0 = _this1155.s1;
													_this1155.s1 = _this1155.s2;
													_this1155.s2 = _this1155.s3;
													_this1155.s3 = _this1155.s4;
													_this1155.s4 = _this1155.s5;
													_this1155.s5 = null;
													if(_this1155.s6 != null) {
														var _this1156 = _this1155.s6;
														var out531 = _this1156.s0;
														if(_this1156.l != 0) {
															_this1156.s0 = _this1156.s1;
															_this1156.s1 = _this1156.s2;
															_this1156.s2 = _this1156.s3;
															_this1156.s3 = _this1156.s4;
															_this1156.s4 = _this1156.s5;
															_this1156.s5 = null;
															if(_this1156.s6 != null) {
																var _this1157 = _this1156.s6;
																var out532 = _this1157.s0;
																if(_this1157.l != 0) {
																	_this1157.s0 = _this1157.s1;
																	_this1157.s1 = _this1157.s2;
																	_this1157.s2 = _this1157.s3;
																	_this1157.s3 = _this1157.s4;
																	_this1157.s4 = _this1157.s5;
																	_this1157.s5 = null;
																	if(_this1157.s6 != null) {
																		var _this1158 = _this1157.s6;
																		var out533 = _this1158.s0;
																		if(_this1158.l != 0) {
																			_this1158.s0 = _this1158.s1;
																			_this1158.s1 = _this1158.s2;
																			_this1158.s2 = _this1158.s3;
																			_this1158.s3 = _this1158.s4;
																			_this1158.s4 = _this1158.s5;
																			_this1158.s5 = null;
																			if(_this1158.s6 != null) {
																				_this1158.s5 = _this1158.s6.shift();
																			}
																			_this1158.l--;
																		}
																		_this1157.s5 = out533;
																	}
																	_this1157.l--;
																}
																_this1156.s5 = out532;
															}
															_this1156.l--;
														}
														_this1155.s5 = out531;
													}
													_this1155.l--;
												}
												_this1154.s5 = out530;
											}
											_this1154.l--;
										}
										_this1153.s5 = out529;
									}
									_this1153.l--;
								}
								_this1152.s5 = out528;
							}
							_this1152.l--;
						}
						this.lastY = out527 + this.lastY;
						this.pathContext.curveTo(this.controlX,this.controlY,firstX6,firstY6,this.lastX,this.lastY);
						this.controlX = firstX6;
						this.controlY = firstY6;
					}
				}
				break;
			case 116:
				var _this1159 = this.store;
				_this1159.l = 0;
				_this1159.s0 = null;
				_this1159.s1 = null;
				_this1159.s2 = null;
				_this1159.s3 = null;
				_this1159.s4 = null;
				_this1159.s5 = null;
				_this1159.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count17 = 0;
				var temp16 = "";
				var exit16 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp16 != "") {
							if((this.store.l & 1) == 0) {
								var _this1160 = this.store;
								var v87 = parseFloat(temp16);
								switch(_this1160.l) {
								case 0:
									_this1160.s0 = v87;
									break;
								case 1:
									_this1160.s1 = v87;
									break;
								case 2:
									_this1160.s2 = v87;
									break;
								case 3:
									_this1160.s3 = v87;
									break;
								case 4:
									_this1160.s4 = v87;
									break;
								case 5:
									_this1160.s5 = v87;
									break;
								default:
									if(_this1160.s6 == null) {
										_this1160.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1161 = _this1160.s6;
									switch(_this1161.l) {
									case 0:
										_this1161.s0 = v87;
										break;
									case 1:
										_this1161.s1 = v87;
										break;
									case 2:
										_this1161.s2 = v87;
										break;
									case 3:
										_this1161.s3 = v87;
										break;
									case 4:
										_this1161.s4 = v87;
										break;
									case 5:
										_this1161.s5 = v87;
										break;
									default:
										if(_this1161.s6 == null) {
											_this1161.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1162 = _this1161.s6;
										switch(_this1162.l) {
										case 0:
											_this1162.s0 = v87;
											break;
										case 1:
											_this1162.s1 = v87;
											break;
										case 2:
											_this1162.s2 = v87;
											break;
										case 3:
											_this1162.s3 = v87;
											break;
										case 4:
											_this1162.s4 = v87;
											break;
										case 5:
											_this1162.s5 = v87;
											break;
										default:
											if(_this1162.s6 == null) {
												_this1162.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1163 = _this1162.s6;
											switch(_this1163.l) {
											case 0:
												_this1163.s0 = v87;
												break;
											case 1:
												_this1163.s1 = v87;
												break;
											case 2:
												_this1163.s2 = v87;
												break;
											case 3:
												_this1163.s3 = v87;
												break;
											case 4:
												_this1163.s4 = v87;
												break;
											case 5:
												_this1163.s5 = v87;
												break;
											default:
												if(_this1163.s6 == null) {
													_this1163.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1164 = _this1163.s6;
												switch(_this1164.l) {
												case 0:
													_this1164.s0 = v87;
													break;
												case 1:
													_this1164.s1 = v87;
													break;
												case 2:
													_this1164.s2 = v87;
													break;
												case 3:
													_this1164.s3 = v87;
													break;
												case 4:
													_this1164.s4 = v87;
													break;
												case 5:
													_this1164.s5 = v87;
													break;
												default:
													if(_this1164.s6 == null) {
														_this1164.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1165 = _this1164.s6;
													switch(_this1165.l) {
													case 0:
														_this1165.s0 = v87;
														break;
													case 1:
														_this1165.s1 = v87;
														break;
													case 2:
														_this1165.s2 = v87;
														break;
													case 3:
														_this1165.s3 = v87;
														break;
													case 4:
														_this1165.s4 = v87;
														break;
													case 5:
														_this1165.s5 = v87;
														break;
													default:
														if(_this1165.s6 == null) {
															_this1165.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1166 = _this1165.s6;
														switch(_this1166.l) {
														case 0:
															_this1166.s0 = v87;
															break;
														case 1:
															_this1166.s1 = v87;
															break;
														case 2:
															_this1166.s2 = v87;
															break;
														case 3:
															_this1166.s3 = v87;
															break;
														case 4:
															_this1166.s4 = v87;
															break;
														case 5:
															_this1166.s5 = v87;
															break;
														default:
															if(_this1166.s6 == null) {
																_this1166.s6 = new trilateral_justPath_StoreF6();
															}
															_this1166.s6.push(v87);
														}
														_this1166.l++;
													}
													_this1165.l++;
												}
												_this1164.l++;
											}
											_this1163.l++;
										}
										_this1162.l++;
									}
									_this1161.l++;
								}
								_this1160.l++;
							} else {
								var _this1167 = this.store;
								var v88 = parseFloat(temp16);
								switch(_this1167.l) {
								case 0:
									_this1167.s0 = v88;
									break;
								case 1:
									_this1167.s1 = v88;
									break;
								case 2:
									_this1167.s2 = v88;
									break;
								case 3:
									_this1167.s3 = v88;
									break;
								case 4:
									_this1167.s4 = v88;
									break;
								case 5:
									_this1167.s5 = v88;
									break;
								default:
									if(_this1167.s6 == null) {
										_this1167.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1168 = _this1167.s6;
									switch(_this1168.l) {
									case 0:
										_this1168.s0 = v88;
										break;
									case 1:
										_this1168.s1 = v88;
										break;
									case 2:
										_this1168.s2 = v88;
										break;
									case 3:
										_this1168.s3 = v88;
										break;
									case 4:
										_this1168.s4 = v88;
										break;
									case 5:
										_this1168.s5 = v88;
										break;
									default:
										if(_this1168.s6 == null) {
											_this1168.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1169 = _this1168.s6;
										switch(_this1169.l) {
										case 0:
											_this1169.s0 = v88;
											break;
										case 1:
											_this1169.s1 = v88;
											break;
										case 2:
											_this1169.s2 = v88;
											break;
										case 3:
											_this1169.s3 = v88;
											break;
										case 4:
											_this1169.s4 = v88;
											break;
										case 5:
											_this1169.s5 = v88;
											break;
										default:
											if(_this1169.s6 == null) {
												_this1169.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1170 = _this1169.s6;
											switch(_this1170.l) {
											case 0:
												_this1170.s0 = v88;
												break;
											case 1:
												_this1170.s1 = v88;
												break;
											case 2:
												_this1170.s2 = v88;
												break;
											case 3:
												_this1170.s3 = v88;
												break;
											case 4:
												_this1170.s4 = v88;
												break;
											case 5:
												_this1170.s5 = v88;
												break;
											default:
												if(_this1170.s6 == null) {
													_this1170.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1171 = _this1170.s6;
												switch(_this1171.l) {
												case 0:
													_this1171.s0 = v88;
													break;
												case 1:
													_this1171.s1 = v88;
													break;
												case 2:
													_this1171.s2 = v88;
													break;
												case 3:
													_this1171.s3 = v88;
													break;
												case 4:
													_this1171.s4 = v88;
													break;
												case 5:
													_this1171.s5 = v88;
													break;
												default:
													if(_this1171.s6 == null) {
														_this1171.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1172 = _this1171.s6;
													switch(_this1172.l) {
													case 0:
														_this1172.s0 = v88;
														break;
													case 1:
														_this1172.s1 = v88;
														break;
													case 2:
														_this1172.s2 = v88;
														break;
													case 3:
														_this1172.s3 = v88;
														break;
													case 4:
														_this1172.s4 = v88;
														break;
													case 5:
														_this1172.s5 = v88;
														break;
													default:
														if(_this1172.s6 == null) {
															_this1172.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1173 = _this1172.s6;
														switch(_this1173.l) {
														case 0:
															_this1173.s0 = v88;
															break;
														case 1:
															_this1173.s1 = v88;
															break;
														case 2:
															_this1173.s2 = v88;
															break;
														case 3:
															_this1173.s3 = v88;
															break;
														case 4:
															_this1173.s4 = v88;
															break;
														case 5:
															_this1173.s5 = v88;
															break;
														default:
															if(_this1173.s6 == null) {
																_this1173.s6 = new trilateral_justPath_StoreF6();
															}
															_this1173.s6.push(v88);
														}
														_this1173.l++;
													}
													_this1172.l++;
												}
												_this1171.l++;
											}
											_this1170.l++;
										}
										_this1169.l++;
									}
									_this1168.l++;
								}
								_this1167.l++;
							}
							temp16 = "";
						}
						break;
					case 45:
						if(temp16 != "") {
							if((this.store.l & 1) == 0) {
								var _this1174 = this.store;
								var v89 = parseFloat(temp16);
								switch(_this1174.l) {
								case 0:
									_this1174.s0 = v89;
									break;
								case 1:
									_this1174.s1 = v89;
									break;
								case 2:
									_this1174.s2 = v89;
									break;
								case 3:
									_this1174.s3 = v89;
									break;
								case 4:
									_this1174.s4 = v89;
									break;
								case 5:
									_this1174.s5 = v89;
									break;
								default:
									if(_this1174.s6 == null) {
										_this1174.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1175 = _this1174.s6;
									switch(_this1175.l) {
									case 0:
										_this1175.s0 = v89;
										break;
									case 1:
										_this1175.s1 = v89;
										break;
									case 2:
										_this1175.s2 = v89;
										break;
									case 3:
										_this1175.s3 = v89;
										break;
									case 4:
										_this1175.s4 = v89;
										break;
									case 5:
										_this1175.s5 = v89;
										break;
									default:
										if(_this1175.s6 == null) {
											_this1175.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1176 = _this1175.s6;
										switch(_this1176.l) {
										case 0:
											_this1176.s0 = v89;
											break;
										case 1:
											_this1176.s1 = v89;
											break;
										case 2:
											_this1176.s2 = v89;
											break;
										case 3:
											_this1176.s3 = v89;
											break;
										case 4:
											_this1176.s4 = v89;
											break;
										case 5:
											_this1176.s5 = v89;
											break;
										default:
											if(_this1176.s6 == null) {
												_this1176.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1177 = _this1176.s6;
											switch(_this1177.l) {
											case 0:
												_this1177.s0 = v89;
												break;
											case 1:
												_this1177.s1 = v89;
												break;
											case 2:
												_this1177.s2 = v89;
												break;
											case 3:
												_this1177.s3 = v89;
												break;
											case 4:
												_this1177.s4 = v89;
												break;
											case 5:
												_this1177.s5 = v89;
												break;
											default:
												if(_this1177.s6 == null) {
													_this1177.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1178 = _this1177.s6;
												switch(_this1178.l) {
												case 0:
													_this1178.s0 = v89;
													break;
												case 1:
													_this1178.s1 = v89;
													break;
												case 2:
													_this1178.s2 = v89;
													break;
												case 3:
													_this1178.s3 = v89;
													break;
												case 4:
													_this1178.s4 = v89;
													break;
												case 5:
													_this1178.s5 = v89;
													break;
												default:
													if(_this1178.s6 == null) {
														_this1178.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1179 = _this1178.s6;
													switch(_this1179.l) {
													case 0:
														_this1179.s0 = v89;
														break;
													case 1:
														_this1179.s1 = v89;
														break;
													case 2:
														_this1179.s2 = v89;
														break;
													case 3:
														_this1179.s3 = v89;
														break;
													case 4:
														_this1179.s4 = v89;
														break;
													case 5:
														_this1179.s5 = v89;
														break;
													default:
														if(_this1179.s6 == null) {
															_this1179.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1180 = _this1179.s6;
														switch(_this1180.l) {
														case 0:
															_this1180.s0 = v89;
															break;
														case 1:
															_this1180.s1 = v89;
															break;
														case 2:
															_this1180.s2 = v89;
															break;
														case 3:
															_this1180.s3 = v89;
															break;
														case 4:
															_this1180.s4 = v89;
															break;
														case 5:
															_this1180.s5 = v89;
															break;
														default:
															if(_this1180.s6 == null) {
																_this1180.s6 = new trilateral_justPath_StoreF6();
															}
															_this1180.s6.push(v89);
														}
														_this1180.l++;
													}
													_this1179.l++;
												}
												_this1178.l++;
											}
											_this1177.l++;
										}
										_this1176.l++;
									}
									_this1175.l++;
								}
								_this1174.l++;
							} else {
								var _this1181 = this.store;
								var v90 = parseFloat(temp16);
								switch(_this1181.l) {
								case 0:
									_this1181.s0 = v90;
									break;
								case 1:
									_this1181.s1 = v90;
									break;
								case 2:
									_this1181.s2 = v90;
									break;
								case 3:
									_this1181.s3 = v90;
									break;
								case 4:
									_this1181.s4 = v90;
									break;
								case 5:
									_this1181.s5 = v90;
									break;
								default:
									if(_this1181.s6 == null) {
										_this1181.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1182 = _this1181.s6;
									switch(_this1182.l) {
									case 0:
										_this1182.s0 = v90;
										break;
									case 1:
										_this1182.s1 = v90;
										break;
									case 2:
										_this1182.s2 = v90;
										break;
									case 3:
										_this1182.s3 = v90;
										break;
									case 4:
										_this1182.s4 = v90;
										break;
									case 5:
										_this1182.s5 = v90;
										break;
									default:
										if(_this1182.s6 == null) {
											_this1182.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1183 = _this1182.s6;
										switch(_this1183.l) {
										case 0:
											_this1183.s0 = v90;
											break;
										case 1:
											_this1183.s1 = v90;
											break;
										case 2:
											_this1183.s2 = v90;
											break;
										case 3:
											_this1183.s3 = v90;
											break;
										case 4:
											_this1183.s4 = v90;
											break;
										case 5:
											_this1183.s5 = v90;
											break;
										default:
											if(_this1183.s6 == null) {
												_this1183.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1184 = _this1183.s6;
											switch(_this1184.l) {
											case 0:
												_this1184.s0 = v90;
												break;
											case 1:
												_this1184.s1 = v90;
												break;
											case 2:
												_this1184.s2 = v90;
												break;
											case 3:
												_this1184.s3 = v90;
												break;
											case 4:
												_this1184.s4 = v90;
												break;
											case 5:
												_this1184.s5 = v90;
												break;
											default:
												if(_this1184.s6 == null) {
													_this1184.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1185 = _this1184.s6;
												switch(_this1185.l) {
												case 0:
													_this1185.s0 = v90;
													break;
												case 1:
													_this1185.s1 = v90;
													break;
												case 2:
													_this1185.s2 = v90;
													break;
												case 3:
													_this1185.s3 = v90;
													break;
												case 4:
													_this1185.s4 = v90;
													break;
												case 5:
													_this1185.s5 = v90;
													break;
												default:
													if(_this1185.s6 == null) {
														_this1185.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1186 = _this1185.s6;
													switch(_this1186.l) {
													case 0:
														_this1186.s0 = v90;
														break;
													case 1:
														_this1186.s1 = v90;
														break;
													case 2:
														_this1186.s2 = v90;
														break;
													case 3:
														_this1186.s3 = v90;
														break;
													case 4:
														_this1186.s4 = v90;
														break;
													case 5:
														_this1186.s5 = v90;
														break;
													default:
														if(_this1186.s6 == null) {
															_this1186.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1187 = _this1186.s6;
														switch(_this1187.l) {
														case 0:
															_this1187.s0 = v90;
															break;
														case 1:
															_this1187.s1 = v90;
															break;
														case 2:
															_this1187.s2 = v90;
															break;
														case 3:
															_this1187.s3 = v90;
															break;
														case 4:
															_this1187.s4 = v90;
															break;
														case 5:
															_this1187.s5 = v90;
															break;
														default:
															if(_this1187.s6 == null) {
																_this1187.s6 = new trilateral_justPath_StoreF6();
															}
															_this1187.s6.push(v90);
														}
														_this1187.l++;
													}
													_this1186.l++;
												}
												_this1185.l++;
											}
											_this1184.l++;
										}
										_this1183.l++;
									}
									_this1182.l++;
								}
								_this1181.l++;
							}
						}
						temp16 = "-";
						break;
					case 46:
						temp16 += ".";
						break;
					case 48:
						temp16 += "0";
						break;
					case 49:
						temp16 += "1";
						break;
					case 50:
						temp16 += "2";
						break;
					case 51:
						temp16 += "3";
						break;
					case 52:
						temp16 += "4";
						break;
					case 53:
						temp16 += "5";
						break;
					case 54:
						temp16 += "6";
						break;
					case 55:
						temp16 += "7";
						break;
					case 56:
						temp16 += "8";
						break;
					case 57:
						temp16 += "9";
						break;
					default:
						if(temp16 != "") {
							if((this.store.l & 1) == 0) {
								var _this1188 = this.store;
								var v91 = parseFloat(temp16);
								switch(_this1188.l) {
								case 0:
									_this1188.s0 = v91;
									break;
								case 1:
									_this1188.s1 = v91;
									break;
								case 2:
									_this1188.s2 = v91;
									break;
								case 3:
									_this1188.s3 = v91;
									break;
								case 4:
									_this1188.s4 = v91;
									break;
								case 5:
									_this1188.s5 = v91;
									break;
								default:
									if(_this1188.s6 == null) {
										_this1188.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1189 = _this1188.s6;
									switch(_this1189.l) {
									case 0:
										_this1189.s0 = v91;
										break;
									case 1:
										_this1189.s1 = v91;
										break;
									case 2:
										_this1189.s2 = v91;
										break;
									case 3:
										_this1189.s3 = v91;
										break;
									case 4:
										_this1189.s4 = v91;
										break;
									case 5:
										_this1189.s5 = v91;
										break;
									default:
										if(_this1189.s6 == null) {
											_this1189.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1190 = _this1189.s6;
										switch(_this1190.l) {
										case 0:
											_this1190.s0 = v91;
											break;
										case 1:
											_this1190.s1 = v91;
											break;
										case 2:
											_this1190.s2 = v91;
											break;
										case 3:
											_this1190.s3 = v91;
											break;
										case 4:
											_this1190.s4 = v91;
											break;
										case 5:
											_this1190.s5 = v91;
											break;
										default:
											if(_this1190.s6 == null) {
												_this1190.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1191 = _this1190.s6;
											switch(_this1191.l) {
											case 0:
												_this1191.s0 = v91;
												break;
											case 1:
												_this1191.s1 = v91;
												break;
											case 2:
												_this1191.s2 = v91;
												break;
											case 3:
												_this1191.s3 = v91;
												break;
											case 4:
												_this1191.s4 = v91;
												break;
											case 5:
												_this1191.s5 = v91;
												break;
											default:
												if(_this1191.s6 == null) {
													_this1191.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1192 = _this1191.s6;
												switch(_this1192.l) {
												case 0:
													_this1192.s0 = v91;
													break;
												case 1:
													_this1192.s1 = v91;
													break;
												case 2:
													_this1192.s2 = v91;
													break;
												case 3:
													_this1192.s3 = v91;
													break;
												case 4:
													_this1192.s4 = v91;
													break;
												case 5:
													_this1192.s5 = v91;
													break;
												default:
													if(_this1192.s6 == null) {
														_this1192.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1193 = _this1192.s6;
													switch(_this1193.l) {
													case 0:
														_this1193.s0 = v91;
														break;
													case 1:
														_this1193.s1 = v91;
														break;
													case 2:
														_this1193.s2 = v91;
														break;
													case 3:
														_this1193.s3 = v91;
														break;
													case 4:
														_this1193.s4 = v91;
														break;
													case 5:
														_this1193.s5 = v91;
														break;
													default:
														if(_this1193.s6 == null) {
															_this1193.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1194 = _this1193.s6;
														switch(_this1194.l) {
														case 0:
															_this1194.s0 = v91;
															break;
														case 1:
															_this1194.s1 = v91;
															break;
														case 2:
															_this1194.s2 = v91;
															break;
														case 3:
															_this1194.s3 = v91;
															break;
														case 4:
															_this1194.s4 = v91;
															break;
														case 5:
															_this1194.s5 = v91;
															break;
														default:
															if(_this1194.s6 == null) {
																_this1194.s6 = new trilateral_justPath_StoreF6();
															}
															_this1194.s6.push(v91);
														}
														_this1194.l++;
													}
													_this1193.l++;
												}
												_this1192.l++;
											}
											_this1191.l++;
										}
										_this1190.l++;
									}
									_this1189.l++;
								}
								_this1188.l++;
							} else {
								var _this1195 = this.store;
								var v92 = parseFloat(temp16);
								switch(_this1195.l) {
								case 0:
									_this1195.s0 = v92;
									break;
								case 1:
									_this1195.s1 = v92;
									break;
								case 2:
									_this1195.s2 = v92;
									break;
								case 3:
									_this1195.s3 = v92;
									break;
								case 4:
									_this1195.s4 = v92;
									break;
								case 5:
									_this1195.s5 = v92;
									break;
								default:
									if(_this1195.s6 == null) {
										_this1195.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1196 = _this1195.s6;
									switch(_this1196.l) {
									case 0:
										_this1196.s0 = v92;
										break;
									case 1:
										_this1196.s1 = v92;
										break;
									case 2:
										_this1196.s2 = v92;
										break;
									case 3:
										_this1196.s3 = v92;
										break;
									case 4:
										_this1196.s4 = v92;
										break;
									case 5:
										_this1196.s5 = v92;
										break;
									default:
										if(_this1196.s6 == null) {
											_this1196.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1197 = _this1196.s6;
										switch(_this1197.l) {
										case 0:
											_this1197.s0 = v92;
											break;
										case 1:
											_this1197.s1 = v92;
											break;
										case 2:
											_this1197.s2 = v92;
											break;
										case 3:
											_this1197.s3 = v92;
											break;
										case 4:
											_this1197.s4 = v92;
											break;
										case 5:
											_this1197.s5 = v92;
											break;
										default:
											if(_this1197.s6 == null) {
												_this1197.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1198 = _this1197.s6;
											switch(_this1198.l) {
											case 0:
												_this1198.s0 = v92;
												break;
											case 1:
												_this1198.s1 = v92;
												break;
											case 2:
												_this1198.s2 = v92;
												break;
											case 3:
												_this1198.s3 = v92;
												break;
											case 4:
												_this1198.s4 = v92;
												break;
											case 5:
												_this1198.s5 = v92;
												break;
											default:
												if(_this1198.s6 == null) {
													_this1198.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1199 = _this1198.s6;
												switch(_this1199.l) {
												case 0:
													_this1199.s0 = v92;
													break;
												case 1:
													_this1199.s1 = v92;
													break;
												case 2:
													_this1199.s2 = v92;
													break;
												case 3:
													_this1199.s3 = v92;
													break;
												case 4:
													_this1199.s4 = v92;
													break;
												case 5:
													_this1199.s5 = v92;
													break;
												default:
													if(_this1199.s6 == null) {
														_this1199.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1200 = _this1199.s6;
													switch(_this1200.l) {
													case 0:
														_this1200.s0 = v92;
														break;
													case 1:
														_this1200.s1 = v92;
														break;
													case 2:
														_this1200.s2 = v92;
														break;
													case 3:
														_this1200.s3 = v92;
														break;
													case 4:
														_this1200.s4 = v92;
														break;
													case 5:
														_this1200.s5 = v92;
														break;
													default:
														if(_this1200.s6 == null) {
															_this1200.s6 = new trilateral_justPath_StoreF6();
														}
														var _this1201 = _this1200.s6;
														switch(_this1201.l) {
														case 0:
															_this1201.s0 = v92;
															break;
														case 1:
															_this1201.s1 = v92;
															break;
														case 2:
															_this1201.s2 = v92;
															break;
														case 3:
															_this1201.s3 = v92;
															break;
														case 4:
															_this1201.s4 = v92;
															break;
														case 5:
															_this1201.s5 = v92;
															break;
														default:
															if(_this1201.s6 == null) {
																_this1201.s6 = new trilateral_justPath_StoreF6();
															}
															_this1201.s6.push(v92);
														}
														_this1201.l++;
													}
													_this1200.l++;
												}
												_this1199.l++;
											}
											_this1198.l++;
										}
										_this1197.l++;
									}
									_this1196.l++;
								}
								_this1195.l++;
							}
							temp16 = "";
						}
						this.pos--;
						exit16 = true;
					}
					if(exit16) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					this.lastX = this.store.s0 + this.lastY;
					this.lastY = this.store.s1 + this.lastX;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 1) {
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this1202 = this.store;
						var out534 = _this1202.s0;
						if(_this1202.l != 0) {
							_this1202.s0 = _this1202.s1;
							_this1202.s1 = _this1202.s2;
							_this1202.s2 = _this1202.s3;
							_this1202.s3 = _this1202.s4;
							_this1202.s4 = _this1202.s5;
							_this1202.s5 = null;
							if(_this1202.s6 != null) {
								var _this1203 = _this1202.s6;
								var out535 = _this1203.s0;
								if(_this1203.l != 0) {
									_this1203.s0 = _this1203.s1;
									_this1203.s1 = _this1203.s2;
									_this1203.s2 = _this1203.s3;
									_this1203.s3 = _this1203.s4;
									_this1203.s4 = _this1203.s5;
									_this1203.s5 = null;
									if(_this1203.s6 != null) {
										var _this1204 = _this1203.s6;
										var out536 = _this1204.s0;
										if(_this1204.l != 0) {
											_this1204.s0 = _this1204.s1;
											_this1204.s1 = _this1204.s2;
											_this1204.s2 = _this1204.s3;
											_this1204.s3 = _this1204.s4;
											_this1204.s4 = _this1204.s5;
											_this1204.s5 = null;
											if(_this1204.s6 != null) {
												var _this1205 = _this1204.s6;
												var out537 = _this1205.s0;
												if(_this1205.l != 0) {
													_this1205.s0 = _this1205.s1;
													_this1205.s1 = _this1205.s2;
													_this1205.s2 = _this1205.s3;
													_this1205.s3 = _this1205.s4;
													_this1205.s4 = _this1205.s5;
													_this1205.s5 = null;
													if(_this1205.s6 != null) {
														var _this1206 = _this1205.s6;
														var out538 = _this1206.s0;
														if(_this1206.l != 0) {
															_this1206.s0 = _this1206.s1;
															_this1206.s1 = _this1206.s2;
															_this1206.s2 = _this1206.s3;
															_this1206.s3 = _this1206.s4;
															_this1206.s4 = _this1206.s5;
															_this1206.s5 = null;
															if(_this1206.s6 != null) {
																var _this1207 = _this1206.s6;
																var out539 = _this1207.s0;
																if(_this1207.l != 0) {
																	_this1207.s0 = _this1207.s1;
																	_this1207.s1 = _this1207.s2;
																	_this1207.s2 = _this1207.s3;
																	_this1207.s3 = _this1207.s4;
																	_this1207.s4 = _this1207.s5;
																	_this1207.s5 = null;
																	if(_this1207.s6 != null) {
																		var _this1208 = _this1207.s6;
																		var out540 = _this1208.s0;
																		if(_this1208.l != 0) {
																			_this1208.s0 = _this1208.s1;
																			_this1208.s1 = _this1208.s2;
																			_this1208.s2 = _this1208.s3;
																			_this1208.s3 = _this1208.s4;
																			_this1208.s4 = _this1208.s5;
																			_this1208.s5 = null;
																			if(_this1208.s6 != null) {
																				_this1208.s5 = _this1208.s6.shift();
																			}
																			_this1208.l--;
																		}
																		_this1207.s5 = out540;
																	}
																	_this1207.l--;
																}
																_this1206.s5 = out539;
															}
															_this1206.l--;
														}
														_this1205.s5 = out538;
													}
													_this1205.l--;
												}
												_this1204.s5 = out537;
											}
											_this1204.l--;
										}
										_this1203.s5 = out536;
									}
									_this1203.l--;
								}
								_this1202.s5 = out535;
							}
							_this1202.l--;
						}
						this.lastX = out534 + this.lastY;
						var _this1209 = this.store;
						var out541 = _this1209.s0;
						if(_this1209.l != 0) {
							_this1209.s0 = _this1209.s1;
							_this1209.s1 = _this1209.s2;
							_this1209.s2 = _this1209.s3;
							_this1209.s3 = _this1209.s4;
							_this1209.s4 = _this1209.s5;
							_this1209.s5 = null;
							if(_this1209.s6 != null) {
								var _this1210 = _this1209.s6;
								var out542 = _this1210.s0;
								if(_this1210.l != 0) {
									_this1210.s0 = _this1210.s1;
									_this1210.s1 = _this1210.s2;
									_this1210.s2 = _this1210.s3;
									_this1210.s3 = _this1210.s4;
									_this1210.s4 = _this1210.s5;
									_this1210.s5 = null;
									if(_this1210.s6 != null) {
										var _this1211 = _this1210.s6;
										var out543 = _this1211.s0;
										if(_this1211.l != 0) {
											_this1211.s0 = _this1211.s1;
											_this1211.s1 = _this1211.s2;
											_this1211.s2 = _this1211.s3;
											_this1211.s3 = _this1211.s4;
											_this1211.s4 = _this1211.s5;
											_this1211.s5 = null;
											if(_this1211.s6 != null) {
												var _this1212 = _this1211.s6;
												var out544 = _this1212.s0;
												if(_this1212.l != 0) {
													_this1212.s0 = _this1212.s1;
													_this1212.s1 = _this1212.s2;
													_this1212.s2 = _this1212.s3;
													_this1212.s3 = _this1212.s4;
													_this1212.s4 = _this1212.s5;
													_this1212.s5 = null;
													if(_this1212.s6 != null) {
														var _this1213 = _this1212.s6;
														var out545 = _this1213.s0;
														if(_this1213.l != 0) {
															_this1213.s0 = _this1213.s1;
															_this1213.s1 = _this1213.s2;
															_this1213.s2 = _this1213.s3;
															_this1213.s3 = _this1213.s4;
															_this1213.s4 = _this1213.s5;
															_this1213.s5 = null;
															if(_this1213.s6 != null) {
																var _this1214 = _this1213.s6;
																var out546 = _this1214.s0;
																if(_this1214.l != 0) {
																	_this1214.s0 = _this1214.s1;
																	_this1214.s1 = _this1214.s2;
																	_this1214.s2 = _this1214.s3;
																	_this1214.s3 = _this1214.s4;
																	_this1214.s4 = _this1214.s5;
																	_this1214.s5 = null;
																	if(_this1214.s6 != null) {
																		var _this1215 = _this1214.s6;
																		var out547 = _this1215.s0;
																		if(_this1215.l != 0) {
																			_this1215.s0 = _this1215.s1;
																			_this1215.s1 = _this1215.s2;
																			_this1215.s2 = _this1215.s3;
																			_this1215.s3 = _this1215.s4;
																			_this1215.s4 = _this1215.s5;
																			_this1215.s5 = null;
																			if(_this1215.s6 != null) {
																				_this1215.s5 = _this1215.s6.shift();
																			}
																			_this1215.l--;
																		}
																		_this1214.s5 = out547;
																	}
																	_this1214.l--;
																}
																_this1213.s5 = out546;
															}
															_this1213.l--;
														}
														_this1212.s5 = out545;
													}
													_this1212.l--;
												}
												_this1211.s5 = out544;
											}
											_this1211.l--;
										}
										_this1210.s5 = out543;
									}
									_this1210.l--;
								}
								_this1209.s5 = out542;
							}
							_this1209.l--;
						}
						this.lastY = out541 + this.lastX;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 118:
				var _this1216 = this.store;
				_this1216.l = 0;
				_this1216.s0 = null;
				_this1216.s1 = null;
				_this1216.s2 = null;
				_this1216.s3 = null;
				_this1216.s4 = null;
				_this1216.s5 = null;
				_this1216.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count18 = 0;
				var temp17 = "";
				var exit17 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp17 != "") {
							var _this1217 = this.store;
							var v93 = parseFloat(temp17);
							switch(_this1217.l) {
							case 0:
								_this1217.s0 = v93;
								break;
							case 1:
								_this1217.s1 = v93;
								break;
							case 2:
								_this1217.s2 = v93;
								break;
							case 3:
								_this1217.s3 = v93;
								break;
							case 4:
								_this1217.s4 = v93;
								break;
							case 5:
								_this1217.s5 = v93;
								break;
							default:
								if(_this1217.s6 == null) {
									_this1217.s6 = new trilateral_justPath_StoreF6();
								}
								var _this1218 = _this1217.s6;
								switch(_this1218.l) {
								case 0:
									_this1218.s0 = v93;
									break;
								case 1:
									_this1218.s1 = v93;
									break;
								case 2:
									_this1218.s2 = v93;
									break;
								case 3:
									_this1218.s3 = v93;
									break;
								case 4:
									_this1218.s4 = v93;
									break;
								case 5:
									_this1218.s5 = v93;
									break;
								default:
									if(_this1218.s6 == null) {
										_this1218.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1219 = _this1218.s6;
									switch(_this1219.l) {
									case 0:
										_this1219.s0 = v93;
										break;
									case 1:
										_this1219.s1 = v93;
										break;
									case 2:
										_this1219.s2 = v93;
										break;
									case 3:
										_this1219.s3 = v93;
										break;
									case 4:
										_this1219.s4 = v93;
										break;
									case 5:
										_this1219.s5 = v93;
										break;
									default:
										if(_this1219.s6 == null) {
											_this1219.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1220 = _this1219.s6;
										switch(_this1220.l) {
										case 0:
											_this1220.s0 = v93;
											break;
										case 1:
											_this1220.s1 = v93;
											break;
										case 2:
											_this1220.s2 = v93;
											break;
										case 3:
											_this1220.s3 = v93;
											break;
										case 4:
											_this1220.s4 = v93;
											break;
										case 5:
											_this1220.s5 = v93;
											break;
										default:
											if(_this1220.s6 == null) {
												_this1220.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1221 = _this1220.s6;
											switch(_this1221.l) {
											case 0:
												_this1221.s0 = v93;
												break;
											case 1:
												_this1221.s1 = v93;
												break;
											case 2:
												_this1221.s2 = v93;
												break;
											case 3:
												_this1221.s3 = v93;
												break;
											case 4:
												_this1221.s4 = v93;
												break;
											case 5:
												_this1221.s5 = v93;
												break;
											default:
												if(_this1221.s6 == null) {
													_this1221.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1222 = _this1221.s6;
												switch(_this1222.l) {
												case 0:
													_this1222.s0 = v93;
													break;
												case 1:
													_this1222.s1 = v93;
													break;
												case 2:
													_this1222.s2 = v93;
													break;
												case 3:
													_this1222.s3 = v93;
													break;
												case 4:
													_this1222.s4 = v93;
													break;
												case 5:
													_this1222.s5 = v93;
													break;
												default:
													if(_this1222.s6 == null) {
														_this1222.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1223 = _this1222.s6;
													switch(_this1223.l) {
													case 0:
														_this1223.s0 = v93;
														break;
													case 1:
														_this1223.s1 = v93;
														break;
													case 2:
														_this1223.s2 = v93;
														break;
													case 3:
														_this1223.s3 = v93;
														break;
													case 4:
														_this1223.s4 = v93;
														break;
													case 5:
														_this1223.s5 = v93;
														break;
													default:
														if(_this1223.s6 == null) {
															_this1223.s6 = new trilateral_justPath_StoreF6();
														}
														_this1223.s6.push(v93);
													}
													_this1223.l++;
												}
												_this1222.l++;
											}
											_this1221.l++;
										}
										_this1220.l++;
									}
									_this1219.l++;
								}
								_this1218.l++;
							}
							_this1217.l++;
							temp17 = "";
						}
						break;
					case 45:
						if(temp17 != "") {
							var _this1224 = this.store;
							var v94 = parseFloat(temp17);
							switch(_this1224.l) {
							case 0:
								_this1224.s0 = v94;
								break;
							case 1:
								_this1224.s1 = v94;
								break;
							case 2:
								_this1224.s2 = v94;
								break;
							case 3:
								_this1224.s3 = v94;
								break;
							case 4:
								_this1224.s4 = v94;
								break;
							case 5:
								_this1224.s5 = v94;
								break;
							default:
								if(_this1224.s6 == null) {
									_this1224.s6 = new trilateral_justPath_StoreF6();
								}
								var _this1225 = _this1224.s6;
								switch(_this1225.l) {
								case 0:
									_this1225.s0 = v94;
									break;
								case 1:
									_this1225.s1 = v94;
									break;
								case 2:
									_this1225.s2 = v94;
									break;
								case 3:
									_this1225.s3 = v94;
									break;
								case 4:
									_this1225.s4 = v94;
									break;
								case 5:
									_this1225.s5 = v94;
									break;
								default:
									if(_this1225.s6 == null) {
										_this1225.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1226 = _this1225.s6;
									switch(_this1226.l) {
									case 0:
										_this1226.s0 = v94;
										break;
									case 1:
										_this1226.s1 = v94;
										break;
									case 2:
										_this1226.s2 = v94;
										break;
									case 3:
										_this1226.s3 = v94;
										break;
									case 4:
										_this1226.s4 = v94;
										break;
									case 5:
										_this1226.s5 = v94;
										break;
									default:
										if(_this1226.s6 == null) {
											_this1226.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1227 = _this1226.s6;
										switch(_this1227.l) {
										case 0:
											_this1227.s0 = v94;
											break;
										case 1:
											_this1227.s1 = v94;
											break;
										case 2:
											_this1227.s2 = v94;
											break;
										case 3:
											_this1227.s3 = v94;
											break;
										case 4:
											_this1227.s4 = v94;
											break;
										case 5:
											_this1227.s5 = v94;
											break;
										default:
											if(_this1227.s6 == null) {
												_this1227.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1228 = _this1227.s6;
											switch(_this1228.l) {
											case 0:
												_this1228.s0 = v94;
												break;
											case 1:
												_this1228.s1 = v94;
												break;
											case 2:
												_this1228.s2 = v94;
												break;
											case 3:
												_this1228.s3 = v94;
												break;
											case 4:
												_this1228.s4 = v94;
												break;
											case 5:
												_this1228.s5 = v94;
												break;
											default:
												if(_this1228.s6 == null) {
													_this1228.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1229 = _this1228.s6;
												switch(_this1229.l) {
												case 0:
													_this1229.s0 = v94;
													break;
												case 1:
													_this1229.s1 = v94;
													break;
												case 2:
													_this1229.s2 = v94;
													break;
												case 3:
													_this1229.s3 = v94;
													break;
												case 4:
													_this1229.s4 = v94;
													break;
												case 5:
													_this1229.s5 = v94;
													break;
												default:
													if(_this1229.s6 == null) {
														_this1229.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1230 = _this1229.s6;
													switch(_this1230.l) {
													case 0:
														_this1230.s0 = v94;
														break;
													case 1:
														_this1230.s1 = v94;
														break;
													case 2:
														_this1230.s2 = v94;
														break;
													case 3:
														_this1230.s3 = v94;
														break;
													case 4:
														_this1230.s4 = v94;
														break;
													case 5:
														_this1230.s5 = v94;
														break;
													default:
														if(_this1230.s6 == null) {
															_this1230.s6 = new trilateral_justPath_StoreF6();
														}
														_this1230.s6.push(v94);
													}
													_this1230.l++;
												}
												_this1229.l++;
											}
											_this1228.l++;
										}
										_this1227.l++;
									}
									_this1226.l++;
								}
								_this1225.l++;
							}
							_this1224.l++;
						}
						temp17 = "-";
						break;
					case 46:
						temp17 += ".";
						break;
					case 48:
						temp17 += "0";
						break;
					case 49:
						temp17 += "1";
						break;
					case 50:
						temp17 += "2";
						break;
					case 51:
						temp17 += "3";
						break;
					case 52:
						temp17 += "4";
						break;
					case 53:
						temp17 += "5";
						break;
					case 54:
						temp17 += "6";
						break;
					case 55:
						temp17 += "7";
						break;
					case 56:
						temp17 += "8";
						break;
					case 57:
						temp17 += "9";
						break;
					default:
						if(temp17 != "") {
							var _this1231 = this.store;
							var v95 = parseFloat(temp17);
							switch(_this1231.l) {
							case 0:
								_this1231.s0 = v95;
								break;
							case 1:
								_this1231.s1 = v95;
								break;
							case 2:
								_this1231.s2 = v95;
								break;
							case 3:
								_this1231.s3 = v95;
								break;
							case 4:
								_this1231.s4 = v95;
								break;
							case 5:
								_this1231.s5 = v95;
								break;
							default:
								if(_this1231.s6 == null) {
									_this1231.s6 = new trilateral_justPath_StoreF6();
								}
								var _this1232 = _this1231.s6;
								switch(_this1232.l) {
								case 0:
									_this1232.s0 = v95;
									break;
								case 1:
									_this1232.s1 = v95;
									break;
								case 2:
									_this1232.s2 = v95;
									break;
								case 3:
									_this1232.s3 = v95;
									break;
								case 4:
									_this1232.s4 = v95;
									break;
								case 5:
									_this1232.s5 = v95;
									break;
								default:
									if(_this1232.s6 == null) {
										_this1232.s6 = new trilateral_justPath_StoreF6();
									}
									var _this1233 = _this1232.s6;
									switch(_this1233.l) {
									case 0:
										_this1233.s0 = v95;
										break;
									case 1:
										_this1233.s1 = v95;
										break;
									case 2:
										_this1233.s2 = v95;
										break;
									case 3:
										_this1233.s3 = v95;
										break;
									case 4:
										_this1233.s4 = v95;
										break;
									case 5:
										_this1233.s5 = v95;
										break;
									default:
										if(_this1233.s6 == null) {
											_this1233.s6 = new trilateral_justPath_StoreF6();
										}
										var _this1234 = _this1233.s6;
										switch(_this1234.l) {
										case 0:
											_this1234.s0 = v95;
											break;
										case 1:
											_this1234.s1 = v95;
											break;
										case 2:
											_this1234.s2 = v95;
											break;
										case 3:
											_this1234.s3 = v95;
											break;
										case 4:
											_this1234.s4 = v95;
											break;
										case 5:
											_this1234.s5 = v95;
											break;
										default:
											if(_this1234.s6 == null) {
												_this1234.s6 = new trilateral_justPath_StoreF6();
											}
											var _this1235 = _this1234.s6;
											switch(_this1235.l) {
											case 0:
												_this1235.s0 = v95;
												break;
											case 1:
												_this1235.s1 = v95;
												break;
											case 2:
												_this1235.s2 = v95;
												break;
											case 3:
												_this1235.s3 = v95;
												break;
											case 4:
												_this1235.s4 = v95;
												break;
											case 5:
												_this1235.s5 = v95;
												break;
											default:
												if(_this1235.s6 == null) {
													_this1235.s6 = new trilateral_justPath_StoreF6();
												}
												var _this1236 = _this1235.s6;
												switch(_this1236.l) {
												case 0:
													_this1236.s0 = v95;
													break;
												case 1:
													_this1236.s1 = v95;
													break;
												case 2:
													_this1236.s2 = v95;
													break;
												case 3:
													_this1236.s3 = v95;
													break;
												case 4:
													_this1236.s4 = v95;
													break;
												case 5:
													_this1236.s5 = v95;
													break;
												default:
													if(_this1236.s6 == null) {
														_this1236.s6 = new trilateral_justPath_StoreF6();
													}
													var _this1237 = _this1236.s6;
													switch(_this1237.l) {
													case 0:
														_this1237.s0 = v95;
														break;
													case 1:
														_this1237.s1 = v95;
														break;
													case 2:
														_this1237.s2 = v95;
														break;
													case 3:
														_this1237.s3 = v95;
														break;
													case 4:
														_this1237.s4 = v95;
														break;
													case 5:
														_this1237.s5 = v95;
														break;
													default:
														if(_this1237.s6 == null) {
															_this1237.s6 = new trilateral_justPath_StoreF6();
														}
														_this1237.s6.push(v95);
													}
													_this1237.l++;
												}
												_this1236.l++;
											}
											_this1235.l++;
										}
										_this1234.l++;
									}
									_this1233.l++;
								}
								_this1232.l++;
							}
							_this1231.l++;
							temp17 = "";
						}
						this.pos--;
						exit17 = true;
					}
					if(exit17) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					this.lastY += this.store.s0;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var tmp3 = this.lastY;
						var _this1238 = this.store;
						var out548 = _this1238.s0;
						if(_this1238.l != 0) {
							_this1238.s0 = _this1238.s1;
							_this1238.s1 = _this1238.s2;
							_this1238.s2 = _this1238.s3;
							_this1238.s3 = _this1238.s4;
							_this1238.s4 = _this1238.s5;
							_this1238.s5 = null;
							if(_this1238.s6 != null) {
								var _this1239 = _this1238.s6;
								var out549 = _this1239.s0;
								if(_this1239.l != 0) {
									_this1239.s0 = _this1239.s1;
									_this1239.s1 = _this1239.s2;
									_this1239.s2 = _this1239.s3;
									_this1239.s3 = _this1239.s4;
									_this1239.s4 = _this1239.s5;
									_this1239.s5 = null;
									if(_this1239.s6 != null) {
										var _this1240 = _this1239.s6;
										var out550 = _this1240.s0;
										if(_this1240.l != 0) {
											_this1240.s0 = _this1240.s1;
											_this1240.s1 = _this1240.s2;
											_this1240.s2 = _this1240.s3;
											_this1240.s3 = _this1240.s4;
											_this1240.s4 = _this1240.s5;
											_this1240.s5 = null;
											if(_this1240.s6 != null) {
												var _this1241 = _this1240.s6;
												var out551 = _this1241.s0;
												if(_this1241.l != 0) {
													_this1241.s0 = _this1241.s1;
													_this1241.s1 = _this1241.s2;
													_this1241.s2 = _this1241.s3;
													_this1241.s3 = _this1241.s4;
													_this1241.s4 = _this1241.s5;
													_this1241.s5 = null;
													if(_this1241.s6 != null) {
														var _this1242 = _this1241.s6;
														var out552 = _this1242.s0;
														if(_this1242.l != 0) {
															_this1242.s0 = _this1242.s1;
															_this1242.s1 = _this1242.s2;
															_this1242.s2 = _this1242.s3;
															_this1242.s3 = _this1242.s4;
															_this1242.s4 = _this1242.s5;
															_this1242.s5 = null;
															if(_this1242.s6 != null) {
																var _this1243 = _this1242.s6;
																var out553 = _this1243.s0;
																if(_this1243.l != 0) {
																	_this1243.s0 = _this1243.s1;
																	_this1243.s1 = _this1243.s2;
																	_this1243.s2 = _this1243.s3;
																	_this1243.s3 = _this1243.s4;
																	_this1243.s4 = _this1243.s5;
																	_this1243.s5 = null;
																	if(_this1243.s6 != null) {
																		var _this1244 = _this1243.s6;
																		var out554 = _this1244.s0;
																		if(_this1244.l != 0) {
																			_this1244.s0 = _this1244.s1;
																			_this1244.s1 = _this1244.s2;
																			_this1244.s2 = _this1244.s3;
																			_this1244.s3 = _this1244.s4;
																			_this1244.s4 = _this1244.s5;
																			_this1244.s5 = null;
																			if(_this1244.s6 != null) {
																				_this1244.s5 = _this1244.s6.shift();
																			}
																			_this1244.l--;
																		}
																		_this1243.s5 = out554;
																	}
																	_this1243.l--;
																}
																_this1242.s5 = out553;
															}
															_this1242.l--;
														}
														_this1241.s5 = out552;
													}
													_this1241.l--;
												}
												_this1240.s5 = out551;
											}
											_this1240.l--;
										}
										_this1239.s5 = out550;
									}
									_this1239.l--;
								}
								_this1238.s5 = out549;
							}
							_this1238.l--;
						}
						this.lastY = tmp3 + out548;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			default:
				++count;
			}
			this.c = this.str.charCodeAt(this.pos++);
		}
		return str_;
	}
	,extractArgs: function(process) {
		if(process == null) {
			process = true;
		}
		var _this = this.store;
		_this.l = 0;
		_this.s0 = null;
		_this.s1 = null;
		_this.s2 = null;
		_this.s3 = null;
		_this.s4 = null;
		_this.s5 = null;
		_this.s6 = null;
		this.c = this.str.charCodeAt(this.pos++);
		var count = 0;
		var temp = "";
		var exit = false;
		while(true) {
			switch(this.c) {
			case 32:case 44:
				if(temp != "") {
					if(process) {
						if((this.store.l & 1) == 0) {
							var _this1 = this.store;
							var v = parseFloat(temp);
							switch(_this1.l) {
							case 0:
								_this1.s0 = v;
								break;
							case 1:
								_this1.s1 = v;
								break;
							case 2:
								_this1.s2 = v;
								break;
							case 3:
								_this1.s3 = v;
								break;
							case 4:
								_this1.s4 = v;
								break;
							case 5:
								_this1.s5 = v;
								break;
							default:
								if(_this1.s6 == null) {
									_this1.s6 = new trilateral_justPath_StoreF6();
								}
								var _this2 = _this1.s6;
								switch(_this2.l) {
								case 0:
									_this2.s0 = v;
									break;
								case 1:
									_this2.s1 = v;
									break;
								case 2:
									_this2.s2 = v;
									break;
								case 3:
									_this2.s3 = v;
									break;
								case 4:
									_this2.s4 = v;
									break;
								case 5:
									_this2.s5 = v;
									break;
								default:
									if(_this2.s6 == null) {
										_this2.s6 = new trilateral_justPath_StoreF6();
									}
									var _this3 = _this2.s6;
									switch(_this3.l) {
									case 0:
										_this3.s0 = v;
										break;
									case 1:
										_this3.s1 = v;
										break;
									case 2:
										_this3.s2 = v;
										break;
									case 3:
										_this3.s3 = v;
										break;
									case 4:
										_this3.s4 = v;
										break;
									case 5:
										_this3.s5 = v;
										break;
									default:
										if(_this3.s6 == null) {
											_this3.s6 = new trilateral_justPath_StoreF6();
										}
										var _this4 = _this3.s6;
										switch(_this4.l) {
										case 0:
											_this4.s0 = v;
											break;
										case 1:
											_this4.s1 = v;
											break;
										case 2:
											_this4.s2 = v;
											break;
										case 3:
											_this4.s3 = v;
											break;
										case 4:
											_this4.s4 = v;
											break;
										case 5:
											_this4.s5 = v;
											break;
										default:
											if(_this4.s6 == null) {
												_this4.s6 = new trilateral_justPath_StoreF6();
											}
											var _this5 = _this4.s6;
											switch(_this5.l) {
											case 0:
												_this5.s0 = v;
												break;
											case 1:
												_this5.s1 = v;
												break;
											case 2:
												_this5.s2 = v;
												break;
											case 3:
												_this5.s3 = v;
												break;
											case 4:
												_this5.s4 = v;
												break;
											case 5:
												_this5.s5 = v;
												break;
											default:
												if(_this5.s6 == null) {
													_this5.s6 = new trilateral_justPath_StoreF6();
												}
												var _this6 = _this5.s6;
												switch(_this6.l) {
												case 0:
													_this6.s0 = v;
													break;
												case 1:
													_this6.s1 = v;
													break;
												case 2:
													_this6.s2 = v;
													break;
												case 3:
													_this6.s3 = v;
													break;
												case 4:
													_this6.s4 = v;
													break;
												case 5:
													_this6.s5 = v;
													break;
												default:
													if(_this6.s6 == null) {
														_this6.s6 = new trilateral_justPath_StoreF6();
													}
													var _this7 = _this6.s6;
													switch(_this7.l) {
													case 0:
														_this7.s0 = v;
														break;
													case 1:
														_this7.s1 = v;
														break;
													case 2:
														_this7.s2 = v;
														break;
													case 3:
														_this7.s3 = v;
														break;
													case 4:
														_this7.s4 = v;
														break;
													case 5:
														_this7.s5 = v;
														break;
													default:
														if(_this7.s6 == null) {
															_this7.s6 = new trilateral_justPath_StoreF6();
														}
														_this7.s6.push(v);
													}
													_this7.l++;
												}
												_this6.l++;
											}
											_this5.l++;
										}
										_this4.l++;
									}
									_this3.l++;
								}
								_this2.l++;
							}
							_this1.l++;
						} else {
							var _this8 = this.store;
							var v1 = parseFloat(temp);
							switch(_this8.l) {
							case 0:
								_this8.s0 = v1;
								break;
							case 1:
								_this8.s1 = v1;
								break;
							case 2:
								_this8.s2 = v1;
								break;
							case 3:
								_this8.s3 = v1;
								break;
							case 4:
								_this8.s4 = v1;
								break;
							case 5:
								_this8.s5 = v1;
								break;
							default:
								if(_this8.s6 == null) {
									_this8.s6 = new trilateral_justPath_StoreF6();
								}
								var _this9 = _this8.s6;
								switch(_this9.l) {
								case 0:
									_this9.s0 = v1;
									break;
								case 1:
									_this9.s1 = v1;
									break;
								case 2:
									_this9.s2 = v1;
									break;
								case 3:
									_this9.s3 = v1;
									break;
								case 4:
									_this9.s4 = v1;
									break;
								case 5:
									_this9.s5 = v1;
									break;
								default:
									if(_this9.s6 == null) {
										_this9.s6 = new trilateral_justPath_StoreF6();
									}
									var _this10 = _this9.s6;
									switch(_this10.l) {
									case 0:
										_this10.s0 = v1;
										break;
									case 1:
										_this10.s1 = v1;
										break;
									case 2:
										_this10.s2 = v1;
										break;
									case 3:
										_this10.s3 = v1;
										break;
									case 4:
										_this10.s4 = v1;
										break;
									case 5:
										_this10.s5 = v1;
										break;
									default:
										if(_this10.s6 == null) {
											_this10.s6 = new trilateral_justPath_StoreF6();
										}
										var _this11 = _this10.s6;
										switch(_this11.l) {
										case 0:
											_this11.s0 = v1;
											break;
										case 1:
											_this11.s1 = v1;
											break;
										case 2:
											_this11.s2 = v1;
											break;
										case 3:
											_this11.s3 = v1;
											break;
										case 4:
											_this11.s4 = v1;
											break;
										case 5:
											_this11.s5 = v1;
											break;
										default:
											if(_this11.s6 == null) {
												_this11.s6 = new trilateral_justPath_StoreF6();
											}
											var _this12 = _this11.s6;
											switch(_this12.l) {
											case 0:
												_this12.s0 = v1;
												break;
											case 1:
												_this12.s1 = v1;
												break;
											case 2:
												_this12.s2 = v1;
												break;
											case 3:
												_this12.s3 = v1;
												break;
											case 4:
												_this12.s4 = v1;
												break;
											case 5:
												_this12.s5 = v1;
												break;
											default:
												if(_this12.s6 == null) {
													_this12.s6 = new trilateral_justPath_StoreF6();
												}
												var _this13 = _this12.s6;
												switch(_this13.l) {
												case 0:
													_this13.s0 = v1;
													break;
												case 1:
													_this13.s1 = v1;
													break;
												case 2:
													_this13.s2 = v1;
													break;
												case 3:
													_this13.s3 = v1;
													break;
												case 4:
													_this13.s4 = v1;
													break;
												case 5:
													_this13.s5 = v1;
													break;
												default:
													if(_this13.s6 == null) {
														_this13.s6 = new trilateral_justPath_StoreF6();
													}
													var _this14 = _this13.s6;
													switch(_this14.l) {
													case 0:
														_this14.s0 = v1;
														break;
													case 1:
														_this14.s1 = v1;
														break;
													case 2:
														_this14.s2 = v1;
														break;
													case 3:
														_this14.s3 = v1;
														break;
													case 4:
														_this14.s4 = v1;
														break;
													case 5:
														_this14.s5 = v1;
														break;
													default:
														if(_this14.s6 == null) {
															_this14.s6 = new trilateral_justPath_StoreF6();
														}
														_this14.s6.push(v1);
													}
													_this14.l++;
												}
												_this13.l++;
											}
											_this12.l++;
										}
										_this11.l++;
									}
									_this10.l++;
								}
								_this9.l++;
							}
							_this8.l++;
						}
					} else {
						var _this15 = this.store;
						var v2 = parseFloat(temp);
						switch(_this15.l) {
						case 0:
							_this15.s0 = v2;
							break;
						case 1:
							_this15.s1 = v2;
							break;
						case 2:
							_this15.s2 = v2;
							break;
						case 3:
							_this15.s3 = v2;
							break;
						case 4:
							_this15.s4 = v2;
							break;
						case 5:
							_this15.s5 = v2;
							break;
						default:
							if(_this15.s6 == null) {
								_this15.s6 = new trilateral_justPath_StoreF6();
							}
							var _this16 = _this15.s6;
							switch(_this16.l) {
							case 0:
								_this16.s0 = v2;
								break;
							case 1:
								_this16.s1 = v2;
								break;
							case 2:
								_this16.s2 = v2;
								break;
							case 3:
								_this16.s3 = v2;
								break;
							case 4:
								_this16.s4 = v2;
								break;
							case 5:
								_this16.s5 = v2;
								break;
							default:
								if(_this16.s6 == null) {
									_this16.s6 = new trilateral_justPath_StoreF6();
								}
								var _this17 = _this16.s6;
								switch(_this17.l) {
								case 0:
									_this17.s0 = v2;
									break;
								case 1:
									_this17.s1 = v2;
									break;
								case 2:
									_this17.s2 = v2;
									break;
								case 3:
									_this17.s3 = v2;
									break;
								case 4:
									_this17.s4 = v2;
									break;
								case 5:
									_this17.s5 = v2;
									break;
								default:
									if(_this17.s6 == null) {
										_this17.s6 = new trilateral_justPath_StoreF6();
									}
									var _this18 = _this17.s6;
									switch(_this18.l) {
									case 0:
										_this18.s0 = v2;
										break;
									case 1:
										_this18.s1 = v2;
										break;
									case 2:
										_this18.s2 = v2;
										break;
									case 3:
										_this18.s3 = v2;
										break;
									case 4:
										_this18.s4 = v2;
										break;
									case 5:
										_this18.s5 = v2;
										break;
									default:
										if(_this18.s6 == null) {
											_this18.s6 = new trilateral_justPath_StoreF6();
										}
										var _this19 = _this18.s6;
										switch(_this19.l) {
										case 0:
											_this19.s0 = v2;
											break;
										case 1:
											_this19.s1 = v2;
											break;
										case 2:
											_this19.s2 = v2;
											break;
										case 3:
											_this19.s3 = v2;
											break;
										case 4:
											_this19.s4 = v2;
											break;
										case 5:
											_this19.s5 = v2;
											break;
										default:
											if(_this19.s6 == null) {
												_this19.s6 = new trilateral_justPath_StoreF6();
											}
											var _this20 = _this19.s6;
											switch(_this20.l) {
											case 0:
												_this20.s0 = v2;
												break;
											case 1:
												_this20.s1 = v2;
												break;
											case 2:
												_this20.s2 = v2;
												break;
											case 3:
												_this20.s3 = v2;
												break;
											case 4:
												_this20.s4 = v2;
												break;
											case 5:
												_this20.s5 = v2;
												break;
											default:
												if(_this20.s6 == null) {
													_this20.s6 = new trilateral_justPath_StoreF6();
												}
												var _this21 = _this20.s6;
												switch(_this21.l) {
												case 0:
													_this21.s0 = v2;
													break;
												case 1:
													_this21.s1 = v2;
													break;
												case 2:
													_this21.s2 = v2;
													break;
												case 3:
													_this21.s3 = v2;
													break;
												case 4:
													_this21.s4 = v2;
													break;
												case 5:
													_this21.s5 = v2;
													break;
												default:
													if(_this21.s6 == null) {
														_this21.s6 = new trilateral_justPath_StoreF6();
													}
													_this21.s6.push(v2);
												}
												_this21.l++;
											}
											_this20.l++;
										}
										_this19.l++;
									}
									_this18.l++;
								}
								_this17.l++;
							}
							_this16.l++;
						}
						_this15.l++;
					}
					temp = "";
				}
				break;
			case 45:
				if(temp != "") {
					if(process) {
						if((this.store.l & 1) == 0) {
							var _this22 = this.store;
							var v3 = parseFloat(temp);
							switch(_this22.l) {
							case 0:
								_this22.s0 = v3;
								break;
							case 1:
								_this22.s1 = v3;
								break;
							case 2:
								_this22.s2 = v3;
								break;
							case 3:
								_this22.s3 = v3;
								break;
							case 4:
								_this22.s4 = v3;
								break;
							case 5:
								_this22.s5 = v3;
								break;
							default:
								if(_this22.s6 == null) {
									_this22.s6 = new trilateral_justPath_StoreF6();
								}
								var _this23 = _this22.s6;
								switch(_this23.l) {
								case 0:
									_this23.s0 = v3;
									break;
								case 1:
									_this23.s1 = v3;
									break;
								case 2:
									_this23.s2 = v3;
									break;
								case 3:
									_this23.s3 = v3;
									break;
								case 4:
									_this23.s4 = v3;
									break;
								case 5:
									_this23.s5 = v3;
									break;
								default:
									if(_this23.s6 == null) {
										_this23.s6 = new trilateral_justPath_StoreF6();
									}
									var _this24 = _this23.s6;
									switch(_this24.l) {
									case 0:
										_this24.s0 = v3;
										break;
									case 1:
										_this24.s1 = v3;
										break;
									case 2:
										_this24.s2 = v3;
										break;
									case 3:
										_this24.s3 = v3;
										break;
									case 4:
										_this24.s4 = v3;
										break;
									case 5:
										_this24.s5 = v3;
										break;
									default:
										if(_this24.s6 == null) {
											_this24.s6 = new trilateral_justPath_StoreF6();
										}
										var _this25 = _this24.s6;
										switch(_this25.l) {
										case 0:
											_this25.s0 = v3;
											break;
										case 1:
											_this25.s1 = v3;
											break;
										case 2:
											_this25.s2 = v3;
											break;
										case 3:
											_this25.s3 = v3;
											break;
										case 4:
											_this25.s4 = v3;
											break;
										case 5:
											_this25.s5 = v3;
											break;
										default:
											if(_this25.s6 == null) {
												_this25.s6 = new trilateral_justPath_StoreF6();
											}
											var _this26 = _this25.s6;
											switch(_this26.l) {
											case 0:
												_this26.s0 = v3;
												break;
											case 1:
												_this26.s1 = v3;
												break;
											case 2:
												_this26.s2 = v3;
												break;
											case 3:
												_this26.s3 = v3;
												break;
											case 4:
												_this26.s4 = v3;
												break;
											case 5:
												_this26.s5 = v3;
												break;
											default:
												if(_this26.s6 == null) {
													_this26.s6 = new trilateral_justPath_StoreF6();
												}
												var _this27 = _this26.s6;
												switch(_this27.l) {
												case 0:
													_this27.s0 = v3;
													break;
												case 1:
													_this27.s1 = v3;
													break;
												case 2:
													_this27.s2 = v3;
													break;
												case 3:
													_this27.s3 = v3;
													break;
												case 4:
													_this27.s4 = v3;
													break;
												case 5:
													_this27.s5 = v3;
													break;
												default:
													if(_this27.s6 == null) {
														_this27.s6 = new trilateral_justPath_StoreF6();
													}
													var _this28 = _this27.s6;
													switch(_this28.l) {
													case 0:
														_this28.s0 = v3;
														break;
													case 1:
														_this28.s1 = v3;
														break;
													case 2:
														_this28.s2 = v3;
														break;
													case 3:
														_this28.s3 = v3;
														break;
													case 4:
														_this28.s4 = v3;
														break;
													case 5:
														_this28.s5 = v3;
														break;
													default:
														if(_this28.s6 == null) {
															_this28.s6 = new trilateral_justPath_StoreF6();
														}
														_this28.s6.push(v3);
													}
													_this28.l++;
												}
												_this27.l++;
											}
											_this26.l++;
										}
										_this25.l++;
									}
									_this24.l++;
								}
								_this23.l++;
							}
							_this22.l++;
						} else {
							var _this29 = this.store;
							var v4 = parseFloat(temp);
							switch(_this29.l) {
							case 0:
								_this29.s0 = v4;
								break;
							case 1:
								_this29.s1 = v4;
								break;
							case 2:
								_this29.s2 = v4;
								break;
							case 3:
								_this29.s3 = v4;
								break;
							case 4:
								_this29.s4 = v4;
								break;
							case 5:
								_this29.s5 = v4;
								break;
							default:
								if(_this29.s6 == null) {
									_this29.s6 = new trilateral_justPath_StoreF6();
								}
								var _this30 = _this29.s6;
								switch(_this30.l) {
								case 0:
									_this30.s0 = v4;
									break;
								case 1:
									_this30.s1 = v4;
									break;
								case 2:
									_this30.s2 = v4;
									break;
								case 3:
									_this30.s3 = v4;
									break;
								case 4:
									_this30.s4 = v4;
									break;
								case 5:
									_this30.s5 = v4;
									break;
								default:
									if(_this30.s6 == null) {
										_this30.s6 = new trilateral_justPath_StoreF6();
									}
									var _this31 = _this30.s6;
									switch(_this31.l) {
									case 0:
										_this31.s0 = v4;
										break;
									case 1:
										_this31.s1 = v4;
										break;
									case 2:
										_this31.s2 = v4;
										break;
									case 3:
										_this31.s3 = v4;
										break;
									case 4:
										_this31.s4 = v4;
										break;
									case 5:
										_this31.s5 = v4;
										break;
									default:
										if(_this31.s6 == null) {
											_this31.s6 = new trilateral_justPath_StoreF6();
										}
										var _this32 = _this31.s6;
										switch(_this32.l) {
										case 0:
											_this32.s0 = v4;
											break;
										case 1:
											_this32.s1 = v4;
											break;
										case 2:
											_this32.s2 = v4;
											break;
										case 3:
											_this32.s3 = v4;
											break;
										case 4:
											_this32.s4 = v4;
											break;
										case 5:
											_this32.s5 = v4;
											break;
										default:
											if(_this32.s6 == null) {
												_this32.s6 = new trilateral_justPath_StoreF6();
											}
											var _this33 = _this32.s6;
											switch(_this33.l) {
											case 0:
												_this33.s0 = v4;
												break;
											case 1:
												_this33.s1 = v4;
												break;
											case 2:
												_this33.s2 = v4;
												break;
											case 3:
												_this33.s3 = v4;
												break;
											case 4:
												_this33.s4 = v4;
												break;
											case 5:
												_this33.s5 = v4;
												break;
											default:
												if(_this33.s6 == null) {
													_this33.s6 = new trilateral_justPath_StoreF6();
												}
												var _this34 = _this33.s6;
												switch(_this34.l) {
												case 0:
													_this34.s0 = v4;
													break;
												case 1:
													_this34.s1 = v4;
													break;
												case 2:
													_this34.s2 = v4;
													break;
												case 3:
													_this34.s3 = v4;
													break;
												case 4:
													_this34.s4 = v4;
													break;
												case 5:
													_this34.s5 = v4;
													break;
												default:
													if(_this34.s6 == null) {
														_this34.s6 = new trilateral_justPath_StoreF6();
													}
													var _this35 = _this34.s6;
													switch(_this35.l) {
													case 0:
														_this35.s0 = v4;
														break;
													case 1:
														_this35.s1 = v4;
														break;
													case 2:
														_this35.s2 = v4;
														break;
													case 3:
														_this35.s3 = v4;
														break;
													case 4:
														_this35.s4 = v4;
														break;
													case 5:
														_this35.s5 = v4;
														break;
													default:
														if(_this35.s6 == null) {
															_this35.s6 = new trilateral_justPath_StoreF6();
														}
														_this35.s6.push(v4);
													}
													_this35.l++;
												}
												_this34.l++;
											}
											_this33.l++;
										}
										_this32.l++;
									}
									_this31.l++;
								}
								_this30.l++;
							}
							_this29.l++;
						}
					} else {
						var _this36 = this.store;
						var v5 = parseFloat(temp);
						switch(_this36.l) {
						case 0:
							_this36.s0 = v5;
							break;
						case 1:
							_this36.s1 = v5;
							break;
						case 2:
							_this36.s2 = v5;
							break;
						case 3:
							_this36.s3 = v5;
							break;
						case 4:
							_this36.s4 = v5;
							break;
						case 5:
							_this36.s5 = v5;
							break;
						default:
							if(_this36.s6 == null) {
								_this36.s6 = new trilateral_justPath_StoreF6();
							}
							var _this37 = _this36.s6;
							switch(_this37.l) {
							case 0:
								_this37.s0 = v5;
								break;
							case 1:
								_this37.s1 = v5;
								break;
							case 2:
								_this37.s2 = v5;
								break;
							case 3:
								_this37.s3 = v5;
								break;
							case 4:
								_this37.s4 = v5;
								break;
							case 5:
								_this37.s5 = v5;
								break;
							default:
								if(_this37.s6 == null) {
									_this37.s6 = new trilateral_justPath_StoreF6();
								}
								var _this38 = _this37.s6;
								switch(_this38.l) {
								case 0:
									_this38.s0 = v5;
									break;
								case 1:
									_this38.s1 = v5;
									break;
								case 2:
									_this38.s2 = v5;
									break;
								case 3:
									_this38.s3 = v5;
									break;
								case 4:
									_this38.s4 = v5;
									break;
								case 5:
									_this38.s5 = v5;
									break;
								default:
									if(_this38.s6 == null) {
										_this38.s6 = new trilateral_justPath_StoreF6();
									}
									var _this39 = _this38.s6;
									switch(_this39.l) {
									case 0:
										_this39.s0 = v5;
										break;
									case 1:
										_this39.s1 = v5;
										break;
									case 2:
										_this39.s2 = v5;
										break;
									case 3:
										_this39.s3 = v5;
										break;
									case 4:
										_this39.s4 = v5;
										break;
									case 5:
										_this39.s5 = v5;
										break;
									default:
										if(_this39.s6 == null) {
											_this39.s6 = new trilateral_justPath_StoreF6();
										}
										var _this40 = _this39.s6;
										switch(_this40.l) {
										case 0:
											_this40.s0 = v5;
											break;
										case 1:
											_this40.s1 = v5;
											break;
										case 2:
											_this40.s2 = v5;
											break;
										case 3:
											_this40.s3 = v5;
											break;
										case 4:
											_this40.s4 = v5;
											break;
										case 5:
											_this40.s5 = v5;
											break;
										default:
											if(_this40.s6 == null) {
												_this40.s6 = new trilateral_justPath_StoreF6();
											}
											var _this41 = _this40.s6;
											switch(_this41.l) {
											case 0:
												_this41.s0 = v5;
												break;
											case 1:
												_this41.s1 = v5;
												break;
											case 2:
												_this41.s2 = v5;
												break;
											case 3:
												_this41.s3 = v5;
												break;
											case 4:
												_this41.s4 = v5;
												break;
											case 5:
												_this41.s5 = v5;
												break;
											default:
												if(_this41.s6 == null) {
													_this41.s6 = new trilateral_justPath_StoreF6();
												}
												var _this42 = _this41.s6;
												switch(_this42.l) {
												case 0:
													_this42.s0 = v5;
													break;
												case 1:
													_this42.s1 = v5;
													break;
												case 2:
													_this42.s2 = v5;
													break;
												case 3:
													_this42.s3 = v5;
													break;
												case 4:
													_this42.s4 = v5;
													break;
												case 5:
													_this42.s5 = v5;
													break;
												default:
													if(_this42.s6 == null) {
														_this42.s6 = new trilateral_justPath_StoreF6();
													}
													_this42.s6.push(v5);
												}
												_this42.l++;
											}
											_this41.l++;
										}
										_this40.l++;
									}
									_this39.l++;
								}
								_this38.l++;
							}
							_this37.l++;
						}
						_this36.l++;
					}
				}
				temp = "-";
				break;
			case 46:
				temp += ".";
				break;
			case 48:
				temp += "0";
				break;
			case 49:
				temp += "1";
				break;
			case 50:
				temp += "2";
				break;
			case 51:
				temp += "3";
				break;
			case 52:
				temp += "4";
				break;
			case 53:
				temp += "5";
				break;
			case 54:
				temp += "6";
				break;
			case 55:
				temp += "7";
				break;
			case 56:
				temp += "8";
				break;
			case 57:
				temp += "9";
				break;
			default:
				if(temp != "") {
					if(process) {
						if((this.store.l & 1) == 0) {
							var _this43 = this.store;
							var v6 = parseFloat(temp);
							switch(_this43.l) {
							case 0:
								_this43.s0 = v6;
								break;
							case 1:
								_this43.s1 = v6;
								break;
							case 2:
								_this43.s2 = v6;
								break;
							case 3:
								_this43.s3 = v6;
								break;
							case 4:
								_this43.s4 = v6;
								break;
							case 5:
								_this43.s5 = v6;
								break;
							default:
								if(_this43.s6 == null) {
									_this43.s6 = new trilateral_justPath_StoreF6();
								}
								var _this44 = _this43.s6;
								switch(_this44.l) {
								case 0:
									_this44.s0 = v6;
									break;
								case 1:
									_this44.s1 = v6;
									break;
								case 2:
									_this44.s2 = v6;
									break;
								case 3:
									_this44.s3 = v6;
									break;
								case 4:
									_this44.s4 = v6;
									break;
								case 5:
									_this44.s5 = v6;
									break;
								default:
									if(_this44.s6 == null) {
										_this44.s6 = new trilateral_justPath_StoreF6();
									}
									var _this45 = _this44.s6;
									switch(_this45.l) {
									case 0:
										_this45.s0 = v6;
										break;
									case 1:
										_this45.s1 = v6;
										break;
									case 2:
										_this45.s2 = v6;
										break;
									case 3:
										_this45.s3 = v6;
										break;
									case 4:
										_this45.s4 = v6;
										break;
									case 5:
										_this45.s5 = v6;
										break;
									default:
										if(_this45.s6 == null) {
											_this45.s6 = new trilateral_justPath_StoreF6();
										}
										var _this46 = _this45.s6;
										switch(_this46.l) {
										case 0:
											_this46.s0 = v6;
											break;
										case 1:
											_this46.s1 = v6;
											break;
										case 2:
											_this46.s2 = v6;
											break;
										case 3:
											_this46.s3 = v6;
											break;
										case 4:
											_this46.s4 = v6;
											break;
										case 5:
											_this46.s5 = v6;
											break;
										default:
											if(_this46.s6 == null) {
												_this46.s6 = new trilateral_justPath_StoreF6();
											}
											var _this47 = _this46.s6;
											switch(_this47.l) {
											case 0:
												_this47.s0 = v6;
												break;
											case 1:
												_this47.s1 = v6;
												break;
											case 2:
												_this47.s2 = v6;
												break;
											case 3:
												_this47.s3 = v6;
												break;
											case 4:
												_this47.s4 = v6;
												break;
											case 5:
												_this47.s5 = v6;
												break;
											default:
												if(_this47.s6 == null) {
													_this47.s6 = new trilateral_justPath_StoreF6();
												}
												var _this48 = _this47.s6;
												switch(_this48.l) {
												case 0:
													_this48.s0 = v6;
													break;
												case 1:
													_this48.s1 = v6;
													break;
												case 2:
													_this48.s2 = v6;
													break;
												case 3:
													_this48.s3 = v6;
													break;
												case 4:
													_this48.s4 = v6;
													break;
												case 5:
													_this48.s5 = v6;
													break;
												default:
													if(_this48.s6 == null) {
														_this48.s6 = new trilateral_justPath_StoreF6();
													}
													var _this49 = _this48.s6;
													switch(_this49.l) {
													case 0:
														_this49.s0 = v6;
														break;
													case 1:
														_this49.s1 = v6;
														break;
													case 2:
														_this49.s2 = v6;
														break;
													case 3:
														_this49.s3 = v6;
														break;
													case 4:
														_this49.s4 = v6;
														break;
													case 5:
														_this49.s5 = v6;
														break;
													default:
														if(_this49.s6 == null) {
															_this49.s6 = new trilateral_justPath_StoreF6();
														}
														_this49.s6.push(v6);
													}
													_this49.l++;
												}
												_this48.l++;
											}
											_this47.l++;
										}
										_this46.l++;
									}
									_this45.l++;
								}
								_this44.l++;
							}
							_this43.l++;
						} else {
							var _this50 = this.store;
							var v7 = parseFloat(temp);
							switch(_this50.l) {
							case 0:
								_this50.s0 = v7;
								break;
							case 1:
								_this50.s1 = v7;
								break;
							case 2:
								_this50.s2 = v7;
								break;
							case 3:
								_this50.s3 = v7;
								break;
							case 4:
								_this50.s4 = v7;
								break;
							case 5:
								_this50.s5 = v7;
								break;
							default:
								if(_this50.s6 == null) {
									_this50.s6 = new trilateral_justPath_StoreF6();
								}
								var _this51 = _this50.s6;
								switch(_this51.l) {
								case 0:
									_this51.s0 = v7;
									break;
								case 1:
									_this51.s1 = v7;
									break;
								case 2:
									_this51.s2 = v7;
									break;
								case 3:
									_this51.s3 = v7;
									break;
								case 4:
									_this51.s4 = v7;
									break;
								case 5:
									_this51.s5 = v7;
									break;
								default:
									if(_this51.s6 == null) {
										_this51.s6 = new trilateral_justPath_StoreF6();
									}
									var _this52 = _this51.s6;
									switch(_this52.l) {
									case 0:
										_this52.s0 = v7;
										break;
									case 1:
										_this52.s1 = v7;
										break;
									case 2:
										_this52.s2 = v7;
										break;
									case 3:
										_this52.s3 = v7;
										break;
									case 4:
										_this52.s4 = v7;
										break;
									case 5:
										_this52.s5 = v7;
										break;
									default:
										if(_this52.s6 == null) {
											_this52.s6 = new trilateral_justPath_StoreF6();
										}
										var _this53 = _this52.s6;
										switch(_this53.l) {
										case 0:
											_this53.s0 = v7;
											break;
										case 1:
											_this53.s1 = v7;
											break;
										case 2:
											_this53.s2 = v7;
											break;
										case 3:
											_this53.s3 = v7;
											break;
										case 4:
											_this53.s4 = v7;
											break;
										case 5:
											_this53.s5 = v7;
											break;
										default:
											if(_this53.s6 == null) {
												_this53.s6 = new trilateral_justPath_StoreF6();
											}
											var _this54 = _this53.s6;
											switch(_this54.l) {
											case 0:
												_this54.s0 = v7;
												break;
											case 1:
												_this54.s1 = v7;
												break;
											case 2:
												_this54.s2 = v7;
												break;
											case 3:
												_this54.s3 = v7;
												break;
											case 4:
												_this54.s4 = v7;
												break;
											case 5:
												_this54.s5 = v7;
												break;
											default:
												if(_this54.s6 == null) {
													_this54.s6 = new trilateral_justPath_StoreF6();
												}
												var _this55 = _this54.s6;
												switch(_this55.l) {
												case 0:
													_this55.s0 = v7;
													break;
												case 1:
													_this55.s1 = v7;
													break;
												case 2:
													_this55.s2 = v7;
													break;
												case 3:
													_this55.s3 = v7;
													break;
												case 4:
													_this55.s4 = v7;
													break;
												case 5:
													_this55.s5 = v7;
													break;
												default:
													if(_this55.s6 == null) {
														_this55.s6 = new trilateral_justPath_StoreF6();
													}
													var _this56 = _this55.s6;
													switch(_this56.l) {
													case 0:
														_this56.s0 = v7;
														break;
													case 1:
														_this56.s1 = v7;
														break;
													case 2:
														_this56.s2 = v7;
														break;
													case 3:
														_this56.s3 = v7;
														break;
													case 4:
														_this56.s4 = v7;
														break;
													case 5:
														_this56.s5 = v7;
														break;
													default:
														if(_this56.s6 == null) {
															_this56.s6 = new trilateral_justPath_StoreF6();
														}
														_this56.s6.push(v7);
													}
													_this56.l++;
												}
												_this55.l++;
											}
											_this54.l++;
										}
										_this53.l++;
									}
									_this52.l++;
								}
								_this51.l++;
							}
							_this50.l++;
						}
					} else {
						var _this57 = this.store;
						var v8 = parseFloat(temp);
						switch(_this57.l) {
						case 0:
							_this57.s0 = v8;
							break;
						case 1:
							_this57.s1 = v8;
							break;
						case 2:
							_this57.s2 = v8;
							break;
						case 3:
							_this57.s3 = v8;
							break;
						case 4:
							_this57.s4 = v8;
							break;
						case 5:
							_this57.s5 = v8;
							break;
						default:
							if(_this57.s6 == null) {
								_this57.s6 = new trilateral_justPath_StoreF6();
							}
							var _this58 = _this57.s6;
							switch(_this58.l) {
							case 0:
								_this58.s0 = v8;
								break;
							case 1:
								_this58.s1 = v8;
								break;
							case 2:
								_this58.s2 = v8;
								break;
							case 3:
								_this58.s3 = v8;
								break;
							case 4:
								_this58.s4 = v8;
								break;
							case 5:
								_this58.s5 = v8;
								break;
							default:
								if(_this58.s6 == null) {
									_this58.s6 = new trilateral_justPath_StoreF6();
								}
								var _this59 = _this58.s6;
								switch(_this59.l) {
								case 0:
									_this59.s0 = v8;
									break;
								case 1:
									_this59.s1 = v8;
									break;
								case 2:
									_this59.s2 = v8;
									break;
								case 3:
									_this59.s3 = v8;
									break;
								case 4:
									_this59.s4 = v8;
									break;
								case 5:
									_this59.s5 = v8;
									break;
								default:
									if(_this59.s6 == null) {
										_this59.s6 = new trilateral_justPath_StoreF6();
									}
									var _this60 = _this59.s6;
									switch(_this60.l) {
									case 0:
										_this60.s0 = v8;
										break;
									case 1:
										_this60.s1 = v8;
										break;
									case 2:
										_this60.s2 = v8;
										break;
									case 3:
										_this60.s3 = v8;
										break;
									case 4:
										_this60.s4 = v8;
										break;
									case 5:
										_this60.s5 = v8;
										break;
									default:
										if(_this60.s6 == null) {
											_this60.s6 = new trilateral_justPath_StoreF6();
										}
										var _this61 = _this60.s6;
										switch(_this61.l) {
										case 0:
											_this61.s0 = v8;
											break;
										case 1:
											_this61.s1 = v8;
											break;
										case 2:
											_this61.s2 = v8;
											break;
										case 3:
											_this61.s3 = v8;
											break;
										case 4:
											_this61.s4 = v8;
											break;
										case 5:
											_this61.s5 = v8;
											break;
										default:
											if(_this61.s6 == null) {
												_this61.s6 = new trilateral_justPath_StoreF6();
											}
											var _this62 = _this61.s6;
											switch(_this62.l) {
											case 0:
												_this62.s0 = v8;
												break;
											case 1:
												_this62.s1 = v8;
												break;
											case 2:
												_this62.s2 = v8;
												break;
											case 3:
												_this62.s3 = v8;
												break;
											case 4:
												_this62.s4 = v8;
												break;
											case 5:
												_this62.s5 = v8;
												break;
											default:
												if(_this62.s6 == null) {
													_this62.s6 = new trilateral_justPath_StoreF6();
												}
												var _this63 = _this62.s6;
												switch(_this63.l) {
												case 0:
													_this63.s0 = v8;
													break;
												case 1:
													_this63.s1 = v8;
													break;
												case 2:
													_this63.s2 = v8;
													break;
												case 3:
													_this63.s3 = v8;
													break;
												case 4:
													_this63.s4 = v8;
													break;
												case 5:
													_this63.s5 = v8;
													break;
												default:
													if(_this63.s6 == null) {
														_this63.s6 = new trilateral_justPath_StoreF6();
													}
													_this63.s6.push(v8);
												}
												_this63.l++;
											}
											_this62.l++;
										}
										_this61.l++;
									}
									_this60.l++;
								}
								_this59.l++;
							}
							_this58.l++;
						}
						_this57.l++;
					}
					temp = "";
				}
				this.pos--;
				exit = true;
			}
			if(exit) {
				break;
			}
			this.c = this.str.charCodeAt(this.pos++);
		}
	}
	,nextChar: function() {
		return this.str.charCodeAt(this.pos++);
	}
	,__class__: trilateral_justPath_SvgPath
};
var trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$ = {};
$hxClasses["trilateral.nodule._ArrayPair.ArrayPair_Impl_"] = trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$;
trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$.__name__ = "trilateral.nodule._ArrayPair.ArrayPair_Impl_";
trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$._new = function(v) {
	if(v == null) {
		var v1 = [];
		if(v1 == null) {
			var v2 = [];
			if(v2 == null) {
				v2 = trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$._new([]);
			}
			var this1 = v2;
			v1 = this1;
		}
		var this2 = v1;
		v = this2;
	}
	var this3 = v;
	return this3;
};
trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$.getEmpty = function() {
	var v = [];
	if(v == null) {
		var v1 = [];
		if(v1 == null) {
			var v2 = [];
			if(v2 == null) {
				var v3 = [];
				if(v3 == null) {
					var v4 = [];
					if(v4 == null) {
						var v5 = [];
						if(v5 == null) {
							v5 = trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$._new([]);
						}
						var this1 = v5;
						v4 = this1;
					}
					var this2 = v4;
					v3 = this2;
				}
				var this3 = v3;
				v2 = this3;
			}
			var this4 = v2;
			v1 = this4;
		}
		var this5 = v1;
		v = this5;
	}
	var this6 = v;
	return this6;
};
trilateral_nodule__$ArrayPair_ArrayPair_$Impl_$.toString = function(this1) {
	var out = "( ";
	var vp;
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		vp = this1[i];
		out += "name: " + vp.name + ", value: " + vp.value + ", ";
	}
	out = HxOverrides.substr(out,0,out.length - 2);
	out += " )";
	return out;
};
var trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$ = {};
$hxClasses["trilateral.nodule._AttributePairs.AttributePairs_Impl_"] = trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$;
trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$.__name__ = "trilateral.nodule._AttributePairs.AttributePairs_Impl_";
trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$._new = function(v) {
	if(v == null) {
		var v1 = [];
		if(v1 == null) {
			var v2 = [];
			if(v2 == null) {
				v2 = trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$._new([]);
			}
			var this1 = v2;
			v1 = this1;
		}
		var this2 = v1;
		v = this2;
	}
	var this3 = v;
	return this3;
};
trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$.getEmpty = function() {
	var v = [];
	if(v == null) {
		var v1 = [];
		if(v1 == null) {
			var v2 = [];
			if(v2 == null) {
				var v3 = [];
				if(v3 == null) {
					var v4 = [];
					if(v4 == null) {
						var v5 = [];
						if(v5 == null) {
							v5 = trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$._new([]);
						}
						var this1 = v5;
						v4 = this1;
					}
					var this2 = v4;
					v3 = this2;
				}
				var this3 = v3;
				v2 = this3;
			}
			var this4 = v2;
			v1 = this4;
		}
		var this5 = v1;
		v = this5;
	}
	var this6 = v;
	return this6;
};
trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$.toString = function(this1) {
	var out = " ";
	var vp;
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		vp = this1[i];
		out += vp.name + "='" + vp.value + "' ";
	}
	out = HxOverrides.substr(out,0,out.length - 1);
	return out;
};
var trilateral_nodule_Nodule = function() {
};
$hxClasses["trilateral.nodule.Nodule"] = trilateral_nodule_Nodule;
trilateral_nodule_Nodule.__name__ = "trilateral.nodule.Nodule";
trilateral_nodule_Nodule.prototype = {
	addChild: function(nodule) {
		nodule.parent = this;
		if(this.firstChild == null) {
			this.firstChild = nodule;
			nodule.parent = this;
		} else {
			this.firstChild.addSister(nodule);
			nodule.parent = this;
		}
	}
	,addSister: function(nodule) {
		if(this.nextSister == null) {
			this.nextSister = nodule;
			nodule.prevSister = this;
			nodule.parent = this.parent;
		} else {
			this.nextSister.addSister(nodule);
		}
	}
	,addAttribute: function(nodule) {
		nodule.parent = this;
		if(this.firstAttribute == null) {
			this.firstAttribute = nodule;
			nodule.parent = this;
		} else {
			this.firstAttribute.addSister(nodule);
			nodule.parent = this;
		}
	}
	,name: null
	,firstChild: null
	,content: null
	,firstAttribute: null
	,nextSister: null
	,prevSister: null
	,parent: null
	,attributes: function(arr) {
		if(this.firstAttribute != null) {
			this.firstAttribute.sistersNextArray(arr);
		}
		return arr;
	}
	,children: function(arr) {
		if(this.firstChild != null) {
			this.firstChild.sistersNextArray(arr);
		}
		return arr;
	}
	,childNodules: function(arr) {
		if(this.firstChild != null) {
			arr[0] = this.firstChild;
			this.firstChild.sistersNextNodules(arr);
		}
		return arr;
	}
	,sistersNextNodules: function(arr) {
		var len = arr.length;
		var scope = this;
		var n = scope.nextSister;
		while(n != null) {
			arr[len++] = n;
			scope = n;
			n = scope.nextSister;
		}
		return arr;
	}
	,sistersNextArray: function(arr) {
		var len = 0;
		if(this.content != null) {
			arr[len++] = { name : this.name, value : this.content};
		}
		var scope = this;
		var n = scope.nextSister;
		while(n != null) {
			if(n.content != null) {
				arr[len++] = { name : n.name, value : n.content};
			}
			scope = n;
			n = scope.nextSister;
		}
		return arr;
	}
	,attributeNames: function() {
		if(this.firstAttribute != null) {
			haxe_Log.trace("attributes",{ fileName : "trilateral/nodule/Nodule.hx", lineNumber : 82, className : "trilateral.nodule.Nodule", methodName : "attributeNames"});
			this.firstAttribute.sistersNameNext();
		}
	}
	,attributeContents: function() {
		if(this.firstAttribute != null) {
			this.firstAttribute.sistersContentNext();
		}
	}
	,childrenNames: function() {
		if(this.firstChild != null) {
			this.firstChild.sistersNameNext();
		}
	}
	,childrenContents: function() {
		if(this.firstChild != null) {
			this.firstChild.sistersContentNext();
		}
	}
	,sistersNameNext: function() {
		if(this.name != null) {
			haxe_Log.trace(this.name,{ fileName : "trilateral/nodule/Nodule.hx", lineNumber : 96, className : "trilateral.nodule.Nodule", methodName : "sistersNameNext"});
		}
		var scope = this;
		var n = scope.nextSister;
		while(n != null) {
			if(this.name != null) {
				haxe_Log.trace(n.name,{ fileName : "trilateral/nodule/Nodule.hx", lineNumber : 100, className : "trilateral.nodule.Nodule", methodName : "sistersNameNext"});
			}
			scope = n;
			n = scope.nextSister;
		}
	}
	,sistersContentNext: function() {
		if(this.content != null) {
			haxe_Log.trace(this.content,{ fileName : "trilateral/nodule/Nodule.hx", lineNumber : 106, className : "trilateral.nodule.Nodule", methodName : "sistersContentNext"});
		}
		var scope = this;
		var n = scope.nextSister;
		while(n != null) {
			if(n.content != null) {
				haxe_Log.trace(n.content,{ fileName : "trilateral/nodule/Nodule.hx", lineNumber : 110, className : "trilateral.nodule.Nodule", methodName : "sistersContentNext"});
			}
			scope = n;
			n = scope.nextSister;
		}
	}
	,toStringPretty: function(tab) {
		if(tab == null) {
			tab = "";
		}
		var v = null;
		if(v == null) {
			var v1 = [];
			if(v1 == null) {
				var v2 = [];
				if(v2 == null) {
					var v3 = [];
					if(v3 == null) {
						var v4 = [];
						if(v4 == null) {
							var v5 = [];
							if(v5 == null) {
								var v6 = [];
								if(v6 == null) {
									v6 = trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$._new([]);
								}
								var this1 = v6;
								v5 = this1;
							}
							var this2 = v5;
							v4 = this2;
						}
						var this3 = v4;
						v3 = this3;
					}
					var this4 = v3;
					v2 = this4;
				}
				var this5 = v2;
				v1 = this5;
			}
			var this6 = v1;
			v = this6;
		}
		var this7 = v;
		var atPair = this.attributes(this7);
		var out = tab + "<" + this.name + trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$.toString(atPair);
		var childs = this.childNodules([]);
		if(this.content != null) {
			if(this.content.length > 45) {
				out += ">\n" + tab + "   " + this.content + "\n" + tab + "</" + this.name + ">\n";
			} else {
				out += ">" + this.content + "</" + this.name + ">\n";
			}
		} else if(childs != null) {
			out += ">\n";
			var _g = 0;
			var _g1 = childs.length;
			while(_g < _g1) {
				var i = _g++;
				out += childs[i].toStringPretty(tab + "   ");
			}
			out += tab + "</" + this.name + ">\n";
		} else {
			out += "/>\n";
		}
		return out;
	}
	,toString: function() {
		var v = null;
		if(v == null) {
			var v1 = [];
			if(v1 == null) {
				var v2 = [];
				if(v2 == null) {
					var v3 = [];
					if(v3 == null) {
						var v4 = [];
						if(v4 == null) {
							var v5 = [];
							if(v5 == null) {
								var v6 = [];
								if(v6 == null) {
									v6 = trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$._new([]);
								}
								var this1 = v6;
								v5 = this1;
							}
							var this2 = v5;
							v4 = this2;
						}
						var this3 = v4;
						v3 = this3;
					}
					var this4 = v3;
					v2 = this4;
				}
				var this5 = v2;
				v1 = this5;
			}
			var this6 = v1;
			v = this6;
		}
		var this7 = v;
		var atPair = this.attributes(this7);
		var out = "<" + this.name + trilateral_nodule__$AttributePairs_AttributePairs_$Impl_$.toString(atPair);
		var childs = this.childNodules([]);
		if(this.content != null) {
			out += ">" + this.content + "</" + this.name + ">";
		} else if(childs != null) {
			out += ">";
			var _g = 0;
			var _g1 = childs.length;
			while(_g < _g1) {
				var i = _g++;
				out += childs[i].toString();
			}
			out += "</" + this.name + ">";
		} else {
			out += "/>";
		}
		return out;
	}
	,__class__: trilateral_nodule_Nodule
};
var trilateral_nodule_ReadXML = function() { };
$hxClasses["trilateral.nodule.ReadXML"] = trilateral_nodule_ReadXML;
trilateral_nodule_ReadXML.__name__ = "trilateral.nodule.ReadXML";
trilateral_nodule_ReadXML.toNoduleAndXML = function(str_) {
	var s;
	var spaces = 0;
	var strIter = new trilateral_nodule_StringCodeIterator(str_);
	strIter.c = strIter.str.charCodeAt(strIter.pos++);
	var rootNodule = new trilateral_nodule_Nodule();
	rootNodule.name = "root";
	var rootXML = Xml.createElement("root");
	if(rootXML.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + rootXML.nodeType);
	}
	rootXML.nodeName = "root";
	var parentXml = rootXML;
	var parent = rootNodule;
	var nodule = null;
	var xml = null;
	var contentBuf = new StringBuf();
	while(strIter.pos < strIter.length) {
		var _g = strIter.c;
		if(_g != null) {
			switch(_g) {
			case 9:case 10:case 13:case 32:
				++spaces;
				var c = strIter.c;
				contentBuf.b += String.fromCodePoint(c);
				break;
			case 60:
				s = contentBuf.b;
				if(spaces != s.length) {
					if(nodule != null) {
						nodule.content = s;
					}
					if(xml != null) {
						xml.addChild(Xml.createPCData(s));
					}
				}
				spaces = 0;
				strIter.c = strIter.str.charCodeAt(strIter.pos++);
				contentBuf = new StringBuf();
				strIter.b = new StringBuf();
				switch(strIter.c) {
				case 33:
					strIter.b = new StringBuf();
					while(strIter.c != 62) {
						var c1 = strIter.c;
						strIter.b.b += String.fromCodePoint(c1);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s1 = strIter.last;
					s1 = HxOverrides.substr(s1,3,s1.length - 5);
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					break;
				case 47:
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					strIter.b = new StringBuf();
					while(strIter.c != 62) {
						var c2 = strIter.c;
						strIter.b.b += String.fromCodePoint(c2);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s2 = strIter.last;
					if(s2 == parent.name) {
						parent = parent.parent;
					}
					if(parentXml.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parentXml.nodeType);
					}
					if(s2 == parentXml.nodeName) {
						parentXml = parentXml.parent;
					}
					break;
				case 63:
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					strIter.b = new StringBuf();
					while(strIter.c != 63) {
						var c3 = strIter.c;
						strIter.b.b += String.fromCodePoint(c3);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s3 = strIter.last;
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					break;
				default:
					strIter.b = new StringBuf();
					while(strIter.c != 62 && strIter.c != 32 && strIter.c != 47) {
						var c4 = strIter.c;
						strIter.b.b += String.fromCodePoint(c4);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s4 = strIter.last;
					if(strIter.c != 47) {
						var node = new trilateral_nodule_Nodule();
						node.name = s4;
						nodule = node;
						parent.addChild(nodule);
						parent = nodule;
						var node2 = Xml.createElement(s4);
						xml = node2;
						parentXml.addChild(xml);
						parentXml = xml;
						var att = null;
						var attName = "";
						var toggle = true;
						while(strIter.c != 62) switch(strIter.c) {
						case 32:case 47:case 61:
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
							break;
						default:
							strIter.b = new StringBuf();
							var inSpeach = false;
							while(strIter.c != 62 && strIter.c != 61) {
								if(strIter.c != 34 && strIter.c != 39) {
									var c5 = strIter.c;
									strIter.b.b += String.fromCodePoint(c5);
								} else {
									inSpeach = !inSpeach;
								}
								strIter.c = strIter.str.charCodeAt(strIter.pos++);
								if(!inSpeach) {
									if(strIter.c == 32) {
										break;
									} else if(strIter.c == 47) {
										if(parent != null) {
											if(parent.parent != null) {
												parent = parent.parent;
											}
										}
										if(parentXml != null) {
											if(parentXml.parent != null) {
												parentXml = parentXml.parent;
											}
										}
										break;
									}
								}
							}
							strIter.last2 = strIter.last;
							strIter.last = strIter.b.b;
							var s5 = strIter.last;
							if(toggle) {
								var att_ = new trilateral_nodule_Nodule();
								att = att_;
								att.name = s5;
								nodule.addAttribute(att);
							} else {
								att.content = s5;
							}
							if(toggle) {
								attName = s5;
							} else if(attName != null) {
								xml.set(attName,s5);
							}
							toggle = !toggle;
						}
					} else {
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
						strIter.b = new StringBuf();
						while(strIter.c != 62) {
							var c6 = strIter.c;
							strIter.b.b += String.fromCodePoint(c6);
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
						}
						strIter.last2 = strIter.last;
						strIter.last = strIter.b.b;
						var s6 = strIter.last;
						if(s6 == parent.name) {
							parent = parent.parent;
						}
						if(parentXml.nodeType != Xml.Element) {
							throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parentXml.nodeType);
						}
						if(s6 == parentXml.nodeName) {
							parentXml = parentXml.parent;
						}
					}
				}
				break;
			case 8:case 16:case 17:case 18:case 19:case 91:case 92:case 93:case 143:case 144:case 224:
				break;
			default:
				var c7 = strIter.c;
				contentBuf.b += String.fromCodePoint(c7);
			}
		}
		strIter.c = strIter.str.charCodeAt(strIter.pos++);
	}
	strIter = null;
	return rootXML;
};
trilateral_nodule_ReadXML.toNodule = function(str_) {
	var s;
	var spaces = 0;
	var strIter = new trilateral_nodule_StringCodeIterator(str_);
	strIter.c = strIter.str.charCodeAt(strIter.pos++);
	var rootNodule = new trilateral_nodule_Nodule();
	rootNodule.name = "root";
	var parent = rootNodule;
	var nodule = null;
	var contentBuf = new StringBuf();
	while(strIter.pos < strIter.length) {
		var _g = strIter.c;
		if(_g != null) {
			switch(_g) {
			case 9:case 10:case 13:case 32:
				++spaces;
				var c = strIter.c;
				contentBuf.b += String.fromCodePoint(c);
				break;
			case 60:
				s = contentBuf.b;
				if(spaces != s.length) {
					if(nodule != null) {
						nodule.content = s;
					}
				}
				spaces = 0;
				strIter.c = strIter.str.charCodeAt(strIter.pos++);
				contentBuf = new StringBuf();
				strIter.b = new StringBuf();
				switch(strIter.c) {
				case 33:
					strIter.b = new StringBuf();
					while(strIter.c != 62) {
						var c1 = strIter.c;
						strIter.b.b += String.fromCodePoint(c1);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s1 = strIter.last;
					s1 = HxOverrides.substr(s1,3,s1.length - 5);
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					break;
				case 47:
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					strIter.b = new StringBuf();
					while(strIter.c != 62) {
						var c2 = strIter.c;
						strIter.b.b += String.fromCodePoint(c2);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s2 = strIter.last;
					if(s2 == parent.name) {
						parent = parent.parent;
					}
					break;
				case 63:
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					strIter.b = new StringBuf();
					while(strIter.c != 63) {
						var c3 = strIter.c;
						strIter.b.b += String.fromCodePoint(c3);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s3 = strIter.last;
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					break;
				default:
					strIter.b = new StringBuf();
					while(strIter.c != 62 && strIter.c != 32 && strIter.c != 47) {
						var c4 = strIter.c;
						strIter.b.b += String.fromCodePoint(c4);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s4 = strIter.last;
					if(strIter.c != 47) {
						var node = new trilateral_nodule_Nodule();
						node.name = s4;
						nodule = node;
						parent.addChild(nodule);
						parent = nodule;
						var att = null;
						var attName = "";
						var toggle = true;
						while(strIter.c != 62) switch(strIter.c) {
						case 32:case 47:case 61:
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
							break;
						default:
							strIter.b = new StringBuf();
							var inSpeach = false;
							while(strIter.c != 62 && strIter.c != 61) {
								if(strIter.c != 34 && strIter.c != 39) {
									var c5 = strIter.c;
									strIter.b.b += String.fromCodePoint(c5);
								} else {
									inSpeach = !inSpeach;
								}
								strIter.c = strIter.str.charCodeAt(strIter.pos++);
								if(!inSpeach) {
									if(strIter.c == 32) {
										break;
									} else if(strIter.c == 47) {
										if(parent != null) {
											if(parent.parent != null) {
												parent = parent.parent;
											}
										}
										break;
									}
								}
							}
							strIter.last2 = strIter.last;
							strIter.last = strIter.b.b;
							var s5 = strIter.last;
							if(toggle) {
								var att_ = new trilateral_nodule_Nodule();
								att = att_;
								att.name = s5;
								nodule.addAttribute(att);
							} else {
								att.content = s5;
							}
							toggle = !toggle;
						}
					} else {
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
						strIter.b = new StringBuf();
						while(strIter.c != 62) {
							var c6 = strIter.c;
							strIter.b.b += String.fromCodePoint(c6);
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
						}
						strIter.last2 = strIter.last;
						strIter.last = strIter.b.b;
						var s6 = strIter.last;
						if(s6 == parent.name) {
							parent = parent.parent;
						}
					}
				}
				break;
			case 8:case 16:case 17:case 18:case 19:case 91:case 92:case 93:case 143:case 144:case 224:
				break;
			default:
				var c7 = strIter.c;
				contentBuf.b += String.fromCodePoint(c7);
			}
		}
		strIter.c = strIter.str.charCodeAt(strIter.pos++);
	}
	strIter = null;
	return rootNodule.firstChild;
};
trilateral_nodule_ReadXML.toXml = function(str_) {
	var s;
	var spaces = 0;
	var strIter = new trilateral_nodule_StringCodeIterator(str_);
	strIter.c = strIter.str.charCodeAt(strIter.pos++);
	var rootXML = null;
	var parentXml = rootXML;
	var xml = null;
	var contentBuf = new StringBuf();
	while(strIter.pos < strIter.length) {
		var _g = strIter.c;
		if(_g != null) {
			switch(_g) {
			case 9:case 10:case 13:case 32:
				++spaces;
				var c = strIter.c;
				contentBuf.b += String.fromCodePoint(c);
				break;
			case 60:
				s = contentBuf.b;
				if(spaces != s.length) {
					if(xml != null) {
						xml.addChild(Xml.createPCData(s));
					}
				}
				spaces = 0;
				strIter.c = strIter.str.charCodeAt(strIter.pos++);
				contentBuf = new StringBuf();
				strIter.b = new StringBuf();
				switch(strIter.c) {
				case 33:
					strIter.b = new StringBuf();
					while(strIter.c != 62) {
						var c1 = strIter.c;
						strIter.b.b += String.fromCodePoint(c1);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s1 = strIter.last;
					s1 = HxOverrides.substr(s1,3,s1.length - 5);
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					break;
				case 47:
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					strIter.b = new StringBuf();
					while(strIter.c != 62) {
						var c2 = strIter.c;
						strIter.b.b += String.fromCodePoint(c2);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s2 = strIter.last;
					if(parentXml.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parentXml.nodeType);
					}
					if(s2 == parentXml.nodeName) {
						parentXml = parentXml.parent;
					}
					break;
				case 63:
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					strIter.b = new StringBuf();
					while(strIter.c != 63) {
						var c3 = strIter.c;
						strIter.b.b += String.fromCodePoint(c3);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s3 = strIter.last;
					strIter.c = strIter.str.charCodeAt(strIter.pos++);
					break;
				default:
					strIter.b = new StringBuf();
					while(strIter.c != 62 && strIter.c != 32 && strIter.c != 47) {
						var c4 = strIter.c;
						strIter.b.b += String.fromCodePoint(c4);
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
					}
					strIter.last2 = strIter.last;
					strIter.last = strIter.b.b;
					var s4 = strIter.last;
					if(strIter.c != 47) {
						var node2 = Xml.createElement(s4);
						xml = node2;
						if(parentXml != null) {
							parentXml.addChild(xml);
						} else {
							rootXML = xml;
						}
						parentXml = xml;
						var attName = "";
						var toggle = true;
						while(strIter.c != 62) switch(strIter.c) {
						case 32:case 47:case 61:
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
							break;
						default:
							strIter.b = new StringBuf();
							var inSpeach = false;
							while(strIter.c != 62 && strIter.c != 32 && strIter.c != 61) {
								if(strIter.c != 34 && strIter.c != 39) {
									var c5 = strIter.c;
									strIter.b.b += String.fromCodePoint(c5);
								} else {
									inSpeach = !inSpeach;
								}
								strIter.c = strIter.str.charCodeAt(strIter.pos++);
								if(!inSpeach && strIter.c == 47) {
									if(parentXml != null) {
										if(parentXml.parent != null) {
											parentXml = parentXml.parent;
										}
									}
									break;
								}
							}
							strIter.last2 = strIter.last;
							strIter.last = strIter.b.b;
							var s5 = strIter.last;
							if(toggle) {
								attName = s5;
							} else if(attName != null) {
								xml.set(attName,s5);
							}
							toggle = !toggle;
						}
					} else {
						strIter.c = strIter.str.charCodeAt(strIter.pos++);
						strIter.b = new StringBuf();
						while(strIter.c != 62) {
							var c6 = strIter.c;
							strIter.b.b += String.fromCodePoint(c6);
							strIter.c = strIter.str.charCodeAt(strIter.pos++);
						}
						strIter.last2 = strIter.last;
						strIter.last = strIter.b.b;
						var s6 = strIter.last;
						if(parentXml.nodeType != Xml.Element) {
							throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parentXml.nodeType);
						}
						if(s6 == parentXml.nodeName) {
							parentXml = parentXml.parent;
						}
					}
				}
				break;
			case 8:case 16:case 17:case 18:case 19:case 91:case 92:case 93:case 143:case 144:case 224:
				break;
			default:
				var c7 = strIter.c;
				contentBuf.b += String.fromCodePoint(c7);
			}
		}
		strIter.c = strIter.str.charCodeAt(strIter.pos++);
	}
	strIter = null;
	return rootXML;
};
trilateral_nodule_ReadXML.firstLast = function(s) {
	return HxOverrides.substr(s,1,s.length - 2);
};
trilateral_nodule_ReadXML.last = function(s) {
	return HxOverrides.substr(s,0,s.length - 1);
};
var trilateral_nodule_StringCodeIterator = function(str_,pos_) {
	if(pos_ == null) {
		pos_ = 0;
	}
	this.str = "";
	this.pos = pos_;
	this.str = str_;
	this.length = this.str.length;
	this.b = new StringBuf();
};
$hxClasses["trilateral.nodule.StringCodeIterator"] = trilateral_nodule_StringCodeIterator;
trilateral_nodule_StringCodeIterator.__name__ = "trilateral.nodule.StringCodeIterator";
trilateral_nodule_StringCodeIterator.prototype = {
	str: null
	,b: null
	,pos: null
	,c: null
	,last2: null
	,last: null
	,length: null
	,addChar: function() {
		var c = this.c;
		this.b.b += String.fromCodePoint(c);
	}
	,toStr: function() {
		this.last2 = this.last;
		this.last = this.b.b;
		return this.last;
	}
	,isRepeat: function() {
		var out;
		return this.last == this.last2;
	}
	,resetBuffer: function() {
		this.b = new StringBuf();
	}
	,reset: function() {
		this.pos = 0;
	}
	,hasNext: function() {
		return this.pos < this.length;
	}
	,next: function() {
		this.c = this.str.charCodeAt(this.pos++);
		return this.c;
	}
	,__class__: trilateral_nodule_StringCodeIterator
};
var trilateral_pairs_Quad = function() { };
$hxClasses["trilateral.pairs.Quad"] = trilateral_pairs_Quad;
trilateral_pairs_Quad.__name__ = "trilateral.pairs.Quad";
trilateral_pairs_Quad.rectangle = function(x,y,w,h) {
	var ax = x;
	var ay = y;
	var bx = x + w;
	var by = ay;
	var cx = bx;
	var cy = ay + h;
	var dx = x;
	var dy = cy;
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.squareOutline = function(px,py,radius,thick,theta) {
	if(theta == null) {
		theta = 0;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	var a0x = 0.;
	var a0y = 0.;
	var b0x = 0.;
	var b0y = 0.;
	var c0x = 0.;
	var c0y = 0.;
	var d0x = 0.;
	var d0y = 0.;
	if(theta != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta - pi4;
		var dTheta = -pi + theta + pi / 2 - pi / 4;
		var cTheta = theta - pi4;
		var bTheta = -pi + theta - pi2 - pi4;
		var as = Math.sin(aTheta);
		var ac = Math.cos(aTheta);
		var bs = Math.sin(bTheta);
		var bc = Math.cos(bTheta);
		var cs = Math.sin(cTheta);
		var cc = Math.cos(cTheta);
		var ds = Math.sin(dTheta);
		var dc = Math.cos(dTheta);
		var r0 = r - thick;
		ax = px + r * as;
		ay = py + r * ac;
		bx = px + r * bs;
		by = py + r * bc;
		cx = px + r * cs;
		cy = py + r * cc;
		dx = px + r * ds;
		dy = py + r * dc;
		a0x = px + r0 * as;
		a0y = py + r0 * ac;
		b0x = px + r0 * bs;
		b0y = py + r0 * bc;
		c0x = px + r0 * cs;
		c0y = py + r0 * cc;
		d0x = px + r0 * ds;
		d0y = py + r0 * dc;
	} else {
		ax = px - radius;
		ay = py - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = px - radius0;
		a0y = py - radius0;
		var l0x = radius0 * 2;
		var l0y = l0x;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0y;
		d0x = a0x;
		d0y = c0y;
	}
	var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
	out[out.length] = tri;
	var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
	out[out.length] = tri1;
	var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
	out[out.length] = tri2;
	var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
	out[out.length] = tri3;
	var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
	out[out.length] = tri4;
	var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
	out[out.length] = tri5;
	var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
	out[out.length] = tri6;
	var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
	out[out.length] = tri7;
	return out;
};
trilateral_pairs_Quad.square = function(px,py,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	if(theta != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta - pi4;
		var dTheta = -pi + theta + pi / 2 - pi / 4;
		var cTheta = theta - pi4;
		var bTheta = -pi + theta - pi2 - pi4;
		ax = px + r * Math.sin(aTheta);
		ay = py + r * Math.cos(aTheta);
		bx = px + r * Math.sin(bTheta);
		by = py + r * Math.cos(bTheta);
		cx = px + r * Math.sin(cTheta);
		cy = py + r * Math.cos(cTheta);
		dx = px + r * Math.sin(dTheta);
		dy = py + r * Math.cos(dTheta);
	} else {
		ax = px - radius;
		ay = py - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
	}
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.diamond = function(x,y,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var theta1 = Math.PI / 4 + theta;
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	if(theta1 != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta1 - pi4;
		var dTheta = -pi + theta1 + pi / 2 - pi / 4;
		var cTheta = theta1 - pi4;
		var bTheta = -pi + theta1 - pi2 - pi4;
		ax = x + r * Math.sin(aTheta);
		ay = y + r * Math.cos(aTheta);
		bx = x + r * Math.sin(bTheta);
		by = y + r * Math.cos(bTheta);
		cx = x + r * Math.sin(cTheta);
		cy = y + r * Math.cos(cTheta);
		dx = x + r * Math.sin(dTheta);
		dy = y + r * Math.cos(dTheta);
	} else {
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
	}
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.diamondOutline = function(x,y,thick,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var theta1 = Math.PI / 4 + theta;
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	var a0x = 0.;
	var a0y = 0.;
	var b0x = 0.;
	var b0y = 0.;
	var c0x = 0.;
	var c0y = 0.;
	var d0x = 0.;
	var d0y = 0.;
	if(theta1 != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta1 - pi4;
		var dTheta = -pi + theta1 + pi / 2 - pi / 4;
		var cTheta = theta1 - pi4;
		var bTheta = -pi + theta1 - pi2 - pi4;
		var as = Math.sin(aTheta);
		var ac = Math.cos(aTheta);
		var bs = Math.sin(bTheta);
		var bc = Math.cos(bTheta);
		var cs = Math.sin(cTheta);
		var cc = Math.cos(cTheta);
		var ds = Math.sin(dTheta);
		var dc = Math.cos(dTheta);
		var r0 = r - thick;
		ax = x + r * as;
		ay = y + r * ac;
		bx = x + r * bs;
		by = y + r * bc;
		cx = x + r * cs;
		cy = y + r * cc;
		dx = x + r * ds;
		dy = y + r * dc;
		a0x = x + r0 * as;
		a0y = y + r0 * ac;
		b0x = x + r0 * bs;
		b0y = y + r0 * bc;
		c0x = x + r0 * cs;
		c0y = y + r0 * cc;
		d0x = x + r0 * ds;
		d0y = y + r0 * dc;
	} else {
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = x - radius0;
		a0y = y - radius0;
		var l0x = radius0 * 2;
		var l0y = l0x;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0y;
		d0x = a0x;
		d0y = c0y;
	}
	var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
	out[out.length] = tri;
	var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
	out[out.length] = tri1;
	var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
	out[out.length] = tri2;
	var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
	out[out.length] = tri3;
	var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
	out[out.length] = tri4;
	var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
	out[out.length] = tri5;
	var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
	out[out.length] = tri6;
	var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
	out[out.length] = tri7;
	return out;
};
var trilateral_parsing_FillDraw = function(width_,height_) {
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2;
		if(t1 == null) {
			var t2 = [];
			var this3;
			if(t2 == null) {
				var t3 = [];
				var this4 = t3 == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t3;
				this3 = this4;
			} else {
				this3 = t2;
			}
			this2 = this3;
		} else {
			this2 = t1;
		}
		this1 = this2;
	} else {
		this1 = t;
	}
	this.triangles = this1;
	this.colors = [];
	this.count = 0;
	if(width_ != null) {
		this.width = width_;
	}
	if(height_ != null) {
		this.height = height_;
	}
};
$hxClasses["trilateral.parsing.FillDraw"] = trilateral_parsing_FillDraw;
trilateral_parsing_FillDraw.__name__ = "trilateral.parsing.FillDraw";
trilateral_parsing_FillDraw.prototype = {
	count: null
	,colors: null
	,triangles: null
	,contours: null
	,contourColors: null
	,width: null
	,height: null
	,fill: function(p,colorID) {
		if(this.contours == null) {
			this.contours = p;
			this.contourColors = [colorID];
		} else {
			var l = this.contours.length;
			var _g = 0;
			var _g1 = p.length;
			while(_g < _g1) {
				var i = _g++;
				this.contours[l + i] = p[i];
			}
			this.contourColors[this.contourColors.length] = colorID;
		}
		var fillDatas = this.fillFunc(p);
		this.iterFill(fillDatas.vert,fillDatas.tri,colorID);
	}
	,fillRnd: function(p,rnd) {
		if(this.contours == null) {
			this.contours = p;
			this.contourColors = [];
		} else {
			var l = this.contours.length;
			var _g = 0;
			var _g1 = p.length;
			while(_g < _g1) {
				var i = _g++;
				this.contours[l + i] = p[i];
			}
		}
		var fillDatas = this.fillFunc(p);
		this.iterFill(fillDatas.vert,fillDatas.tri,rnd,true);
	}
	,fillFunc: function(p) {
		return { vert : [], tri : []};
	}
	,pathFactory: function() {
		throw new js__$Boot_HaxeError("please extend FillDraw with implementation");
	}
	,rndInt: function(rnd) {
		return Math.round(Math.random() * rnd) | 0;
	}
	,iterFill: function(vert,tri,colorID,ifRnd) {
		if(ifRnd == null) {
			ifRnd = false;
		}
		var triples = trilateral_arr__$ArrayTriple_ArrayTriple_$Impl_$._new(tri);
		var id;
		var _g = 0;
		while(_g < (triples.length / 3 | 0)) {
			var i = _g * 3 | 0;
			var tri_a = triples[i];
			var tri_b = triples[i + 1];
			var tri_c = triples[i + 2];
			++_g;
			var a = tri_a * 2 | 0;
			var b = tri_b * 2 | 0;
			var c = tri_c * 2 | 0;
			id = ifRnd ? Math.round(Math.random() * colorID) | 0 : colorID;
			var this1 = this.triangles;
			var tri1 = new trilateral_tri_Triangle(this.count,{ x : vert[a], y : vert[a + 1]},{ x : vert[b], y : vert[b + 1]},{ x : vert[c], y : vert[c + 1]},0,id);
			this1[this1.length] = tri1;
		}
		this.count++;
	}
	,colorId: function(color) {
		var id = this.colors.indexOf(color);
		if(id == -1) {
			id = this.colors.length;
			this.colors[id] = color;
		}
		return id;
	}
	,__class__: trilateral_parsing_FillDraw
};
var trilateral_parsing_svg__$FloatString_FloatString_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._FloatString.FloatString_Impl_"] = trilateral_parsing_svg__$FloatString_FloatString_$Impl_$;
trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.__name__ = "trilateral.parsing.svg._FloatString.FloatString_Impl_";
trilateral_parsing_svg__$FloatString_FloatString_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.fromString = function(s) {
	var this1 = parseFloat(s);
	return this1;
};
var trilateral_parsing_svg__$Group_Group_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._Group.Group_Impl_"] = trilateral_parsing_svg__$Group_Group_$Impl_$;
trilateral_parsing_svg__$Group_Group_$Impl_$.__name__ = "trilateral.parsing.svg._Group.Group_Impl_";
trilateral_parsing_svg__$Group_Group_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$Group_Group_$Impl_$.attributeAdd = function(this1,at) {
	switch(at.name) {
	case "fill":
		this1.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at.value);
		break;
	case "id":
		this1.id = at.value;
		break;
	case "stroke":
		this1.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at.value);
		break;
	case "stroke-width":
		this1.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at.value);
		break;
	case "transform":
		this1.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at.value);
		break;
	case "version":
		this1.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at.value);
		break;
	case "viewBox":
		this1.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at.value);
		break;
	case "xmlns":
		this1.xmlns = at.value;
		break;
	default:
		haxe_Log.trace("group attribute " + at.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
	}
};
var trilateral_parsing_svg__$Matrix_Matrix_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._Matrix.Matrix_Impl_"] = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$;
trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.__name__ = "trilateral.parsing.svg._Matrix.Matrix_Impl_";
trilateral_parsing_svg__$Matrix_Matrix_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString = function(s) {
	var start = s.indexOf("(") + 1;
	var end = s.indexOf(")") - 1;
	s = HxOverrides.substr(s,start,end - start);
	var arr = s.split(",");
	var this1 = { a : trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.fromString(arr[0]), b : trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.fromString(arr[1]), c : trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.fromString(arr[2]), d : trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.fromString(arr[3]), e : trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.fromString(arr[4]), f : trilateral_parsing_svg__$FloatString_FloatString_$Impl_$.fromString(arr[5])};
	return this1;
};
var trilateral_parsing_svg__$Path_Path_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._Path.Path_Impl_"] = trilateral_parsing_svg__$Path_Path_$Impl_$;
trilateral_parsing_svg__$Path_Path_$Impl_$.__name__ = "trilateral.parsing.svg._Path.Path_Impl_";
trilateral_parsing_svg__$Path_Path_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$Path_Path_$Impl_$.attributeAdd = function(this1,at) {
	switch(at.name) {
	case "_":
		haxe_Log.trace("path attribute " + at.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
		break;
	case "d":
		this1.d = at.value;
		break;
	case "fill":
		this1.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at.value);
		break;
	case "id":
		this1.id = at.value;
		break;
	case "stroke":
		this1.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at.value);
		break;
	case "stroke-width":
		this1.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at.value);
		break;
	}
};
var trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._SharpColor.SharpColor_Impl_"] = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$;
trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.__name__ = "trilateral.parsing.svg._SharpColor.SharpColor_Impl_";
trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString = function(s) {
	var temp;
	var out = 0;
	if(s.length == 4) {
		var r = HxOverrides.substr(s,1,1);
		var g = HxOverrides.substr(s,2,1);
		var b = HxOverrides.substr(s,3,1);
		temp = "0xFF" + r + r + g + g + b + b;
		out = Std.parseInt(temp);
	} else if(s.length == 7) {
		temp = "0xFF" + HxOverrides.substr(s,1,6);
		out = Std.parseInt(temp);
	}
	var this1 = out;
	return this1;
};
var trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._Stroke_Width.Stroke_Width_Impl_"] = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$;
trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.__name__ = "trilateral.parsing.svg._Stroke_Width.Stroke_Width_Impl_";
trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString = function(s) {
	var this1 = parseFloat(s);
	return this1;
};
var trilateral_parsing_svg_Svg = function(nodule_) {
	this.rnd = false;
	this.nodule = nodule_;
};
$hxClasses["trilateral.parsing.svg.Svg"] = trilateral_parsing_svg_Svg;
trilateral_parsing_svg_Svg.__name__ = "trilateral.parsing.svg.Svg";
trilateral_parsing_svg_Svg.prototype = {
	fillDraw: null
	,groups: null
	,group: null
	,nodule: null
	,rnd: null
	,render: function(fillDraw_,rnd_) {
		if(rnd_ == null) {
			rnd_ = false;
		}
		this.fillDraw = fillDraw_;
		this.rnd = rnd_;
		switch(this.nodule.name) {
		case "g":
			var kid = this.nodule;
			var g = { };
			var at = HxOverrides.iter(kid.attributes([]));
			while(at.hasNext()) {
				var at1 = at.next();
				switch(at1.name) {
				case "fill":
					g.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
					break;
				case "id":
					g.id = at1.value;
					break;
				case "stroke":
					g.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
					break;
				case "stroke-width":
					g.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at1.value);
					break;
				case "transform":
					g.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at1.value);
					break;
				case "version":
					g.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at1.value);
					break;
				case "viewBox":
					g.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at1.value);
					break;
				case "xmlns":
					g.xmlns = at1.value;
					break;
				default:
					haxe_Log.trace("group attribute " + at1.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
				}
			}
			this.group = g;
			if(kid.firstChild != null) {
				var childs = kid.childNodules([]);
				var _g = 0;
				while(_g < childs.length) {
					var kid1 = childs[_g];
					++_g;
					switch(kid1.name) {
					case "g":
						var g1 = { };
						var at2 = HxOverrides.iter(kid1.attributes([]));
						while(at2.hasNext()) {
							var at3 = at2.next();
							switch(at3.name) {
							case "fill":
								g1.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at3.value);
								break;
							case "id":
								g1.id = at3.value;
								break;
							case "stroke":
								g1.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at3.value);
								break;
							case "stroke-width":
								g1.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at3.value);
								break;
							case "transform":
								g1.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at3.value);
								break;
							case "version":
								g1.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at3.value);
								break;
							case "viewBox":
								g1.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at3.value);
								break;
							case "xmlns":
								g1.xmlns = at3.value;
								break;
							default:
								haxe_Log.trace("group attribute " + at3.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
							}
						}
						this.group = g1;
						if(kid1.firstChild != null) {
							var childs1 = kid1.childNodules([]);
							var _g1 = 0;
							while(_g1 < childs1.length) {
								var kid2 = childs1[_g1];
								++_g1;
								switch(kid2.name) {
								case "g":
									var g2 = { };
									var at4 = HxOverrides.iter(kid2.attributes([]));
									while(at4.hasNext()) {
										var at5 = at4.next();
										switch(at5.name) {
										case "fill":
											g2.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at5.value);
											break;
										case "id":
											g2.id = at5.value;
											break;
										case "stroke":
											g2.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at5.value);
											break;
										case "stroke-width":
											g2.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at5.value);
											break;
										case "transform":
											g2.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at5.value);
											break;
										case "version":
											g2.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at5.value);
											break;
										case "viewBox":
											g2.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at5.value);
											break;
										case "xmlns":
											g2.xmlns = at5.value;
											break;
										default:
											haxe_Log.trace("group attribute " + at5.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
										}
									}
									this.group = g2;
									if(kid2.firstChild != null) {
										var childs2 = kid2.childNodules([]);
										var _g2 = 0;
										while(_g2 < childs2.length) {
											var kid3 = childs2[_g2];
											++_g2;
											switch(kid3.name) {
											case "g":
												var g3 = this.parseGroup(kid3);
												break;
											case "path":
												var p = { };
												var at6 = HxOverrides.iter(kid3.attributes([]));
												while(at6.hasNext()) {
													var at7 = at6.next();
													switch(at7.name) {
													case "_":
														haxe_Log.trace("path attribute " + at7.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p.d = at7.value;
														break;
													case "fill":
														p.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at7.value);
														break;
													case "id":
														p.id = at7.value;
														break;
													case "stroke":
														p.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at7.value);
														break;
													case "stroke-width":
														p.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at7.value);
														break;
													}
												}
												var g4 = this.group;
												if(g4 == { }) {
													g4 = null;
												}
												this.renderPath(p,this.group);
												var p1 = p;
												break;
											default:
												this.parseChild(kid3);
											}
										}
									}
									var g5 = g2;
									break;
								case "path":
									var p2 = { };
									var at8 = HxOverrides.iter(kid2.attributes([]));
									while(at8.hasNext()) {
										var at9 = at8.next();
										switch(at9.name) {
										case "_":
											haxe_Log.trace("path attribute " + at9.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
											break;
										case "d":
											p2.d = at9.value;
											break;
										case "fill":
											p2.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at9.value);
											break;
										case "id":
											p2.id = at9.value;
											break;
										case "stroke":
											p2.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at9.value);
											break;
										case "stroke-width":
											p2.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at9.value);
											break;
										}
									}
									var g6 = this.group;
									if(g6 == { }) {
										g6 = null;
									}
									this.renderPath(p2,this.group);
									var p3 = p2;
									break;
								default:
									var childs3 = kid2.childNodules([]);
									var _g3 = 0;
									while(_g3 < childs3.length) {
										var kid4 = childs3[_g3];
										++_g3;
										switch(kid4.name) {
										case "g":
											var g7 = { };
											var at10 = HxOverrides.iter(kid4.attributes([]));
											while(at10.hasNext()) {
												var at11 = at10.next();
												switch(at11.name) {
												case "fill":
													g7.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at11.value);
													break;
												case "id":
													g7.id = at11.value;
													break;
												case "stroke":
													g7.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at11.value);
													break;
												case "stroke-width":
													g7.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at11.value);
													break;
												case "transform":
													g7.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at11.value);
													break;
												case "version":
													g7.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at11.value);
													break;
												case "viewBox":
													g7.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at11.value);
													break;
												case "xmlns":
													g7.xmlns = at11.value;
													break;
												default:
													haxe_Log.trace("group attribute " + at11.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
												}
											}
											this.group = g7;
											if(kid4.firstChild != null) {
												var childs4 = kid4.childNodules([]);
												var _g4 = 0;
												while(_g4 < childs4.length) {
													var kid5 = childs4[_g4];
													++_g4;
													switch(kid5.name) {
													case "g":
														var g8 = this.parseGroup(kid5);
														break;
													case "path":
														var p4 = { };
														var at12 = HxOverrides.iter(kid5.attributes([]));
														while(at12.hasNext()) {
															var at13 = at12.next();
															switch(at13.name) {
															case "_":
																haxe_Log.trace("path attribute " + at13.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																break;
															case "d":
																p4.d = at13.value;
																break;
															case "fill":
																p4.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at13.value);
																break;
															case "id":
																p4.id = at13.value;
																break;
															case "stroke":
																p4.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at13.value);
																break;
															case "stroke-width":
																p4.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at13.value);
																break;
															}
														}
														var g9 = this.group;
														if(g9 == { }) {
															g9 = null;
														}
														this.renderPath(p4,this.group);
														var p5 = p4;
														break;
													default:
														this.parseChild(kid5);
													}
												}
											}
											var g10 = g7;
											break;
										case "path":
											var p6 = { };
											var at14 = HxOverrides.iter(kid4.attributes([]));
											while(at14.hasNext()) {
												var at15 = at14.next();
												switch(at15.name) {
												case "_":
													haxe_Log.trace("path attribute " + at15.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
													break;
												case "d":
													p6.d = at15.value;
													break;
												case "fill":
													p6.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at15.value);
													break;
												case "id":
													p6.id = at15.value;
													break;
												case "stroke":
													p6.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at15.value);
													break;
												case "stroke-width":
													p6.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at15.value);
													break;
												}
											}
											var g11 = this.group;
											if(g11 == { }) {
												g11 = null;
											}
											this.renderPath(p6,this.group);
											var p7 = p6;
											break;
										default:
											var childs5 = kid4.childNodules([]);
											var _g5 = 0;
											while(_g5 < childs5.length) {
												var kid6 = childs5[_g5];
												++_g5;
												switch(kid6.name) {
												case "g":
													var g12 = this.parseGroup(kid6);
													break;
												case "path":
													var p8 = { };
													var at16 = HxOverrides.iter(kid6.attributes([]));
													while(at16.hasNext()) {
														var at17 = at16.next();
														switch(at17.name) {
														case "_":
															haxe_Log.trace("path attribute " + at17.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
															break;
														case "d":
															p8.d = at17.value;
															break;
														case "fill":
															p8.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at17.value);
															break;
														case "id":
															p8.id = at17.value;
															break;
														case "stroke":
															p8.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at17.value);
															break;
														case "stroke-width":
															p8.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at17.value);
															break;
														}
													}
													var g13 = this.group;
													if(g13 == { }) {
														g13 = null;
													}
													this.renderPath(p8,this.group);
													var p9 = p8;
													break;
												default:
													this.parseChild(kid6);
												}
											}
										}
									}
								}
							}
						}
						var g14 = g1;
						break;
					case "path":
						var p10 = { };
						var at18 = HxOverrides.iter(kid1.attributes([]));
						while(at18.hasNext()) {
							var at19 = at18.next();
							switch(at19.name) {
							case "_":
								haxe_Log.trace("path attribute " + at19.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
								break;
							case "d":
								p10.d = at19.value;
								break;
							case "fill":
								p10.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at19.value);
								break;
							case "id":
								p10.id = at19.value;
								break;
							case "stroke":
								p10.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at19.value);
								break;
							case "stroke-width":
								p10.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at19.value);
								break;
							}
						}
						var g15 = this.group;
						if(g15 == { }) {
							g15 = null;
						}
						this.renderPath(p10,this.group);
						var p11 = p10;
						break;
					default:
						var childs6 = kid1.childNodules([]);
						var _g6 = 0;
						while(_g6 < childs6.length) {
							var kid7 = childs6[_g6];
							++_g6;
							switch(kid7.name) {
							case "g":
								var g16 = { };
								var at20 = HxOverrides.iter(kid7.attributes([]));
								while(at20.hasNext()) {
									var at21 = at20.next();
									switch(at21.name) {
									case "fill":
										g16.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at21.value);
										break;
									case "id":
										g16.id = at21.value;
										break;
									case "stroke":
										g16.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at21.value);
										break;
									case "stroke-width":
										g16.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at21.value);
										break;
									case "transform":
										g16.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at21.value);
										break;
									case "version":
										g16.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at21.value);
										break;
									case "viewBox":
										g16.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at21.value);
										break;
									case "xmlns":
										g16.xmlns = at21.value;
										break;
									default:
										haxe_Log.trace("group attribute " + at21.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
									}
								}
								this.group = g16;
								if(kid7.firstChild != null) {
									var childs7 = kid7.childNodules([]);
									var _g7 = 0;
									while(_g7 < childs7.length) {
										var kid8 = childs7[_g7];
										++_g7;
										switch(kid8.name) {
										case "g":
											var g17 = { };
											var at22 = HxOverrides.iter(kid8.attributes([]));
											while(at22.hasNext()) {
												var at23 = at22.next();
												switch(at23.name) {
												case "fill":
													g17.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at23.value);
													break;
												case "id":
													g17.id = at23.value;
													break;
												case "stroke":
													g17.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at23.value);
													break;
												case "stroke-width":
													g17.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at23.value);
													break;
												case "transform":
													g17.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at23.value);
													break;
												case "version":
													g17.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at23.value);
													break;
												case "viewBox":
													g17.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at23.value);
													break;
												case "xmlns":
													g17.xmlns = at23.value;
													break;
												default:
													haxe_Log.trace("group attribute " + at23.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
												}
											}
											this.group = g17;
											if(kid8.firstChild != null) {
												var childs8 = kid8.childNodules([]);
												var _g8 = 0;
												while(_g8 < childs8.length) {
													var kid9 = childs8[_g8];
													++_g8;
													switch(kid9.name) {
													case "g":
														var g18 = this.parseGroup(kid9);
														break;
													case "path":
														var p12 = { };
														var at24 = HxOverrides.iter(kid9.attributes([]));
														while(at24.hasNext()) {
															var at25 = at24.next();
															switch(at25.name) {
															case "_":
																haxe_Log.trace("path attribute " + at25.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																break;
															case "d":
																p12.d = at25.value;
																break;
															case "fill":
																p12.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at25.value);
																break;
															case "id":
																p12.id = at25.value;
																break;
															case "stroke":
																p12.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at25.value);
																break;
															case "stroke-width":
																p12.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at25.value);
																break;
															}
														}
														var g19 = this.group;
														if(g19 == { }) {
															g19 = null;
														}
														this.renderPath(p12,this.group);
														var p13 = p12;
														break;
													default:
														this.parseChild(kid9);
													}
												}
											}
											var g20 = g17;
											break;
										case "path":
											var p14 = { };
											var at26 = HxOverrides.iter(kid8.attributes([]));
											while(at26.hasNext()) {
												var at27 = at26.next();
												switch(at27.name) {
												case "_":
													haxe_Log.trace("path attribute " + at27.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
													break;
												case "d":
													p14.d = at27.value;
													break;
												case "fill":
													p14.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at27.value);
													break;
												case "id":
													p14.id = at27.value;
													break;
												case "stroke":
													p14.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at27.value);
													break;
												case "stroke-width":
													p14.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at27.value);
													break;
												}
											}
											var g21 = this.group;
											if(g21 == { }) {
												g21 = null;
											}
											this.renderPath(p14,this.group);
											var p15 = p14;
											break;
										default:
											var childs9 = kid8.childNodules([]);
											var _g9 = 0;
											while(_g9 < childs9.length) {
												var kid10 = childs9[_g9];
												++_g9;
												switch(kid10.name) {
												case "g":
													var g22 = this.parseGroup(kid10);
													break;
												case "path":
													var p16 = { };
													var at28 = HxOverrides.iter(kid10.attributes([]));
													while(at28.hasNext()) {
														var at29 = at28.next();
														switch(at29.name) {
														case "_":
															haxe_Log.trace("path attribute " + at29.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
															break;
														case "d":
															p16.d = at29.value;
															break;
														case "fill":
															p16.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at29.value);
															break;
														case "id":
															p16.id = at29.value;
															break;
														case "stroke":
															p16.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at29.value);
															break;
														case "stroke-width":
															p16.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at29.value);
															break;
														}
													}
													var g23 = this.group;
													if(g23 == { }) {
														g23 = null;
													}
													this.renderPath(p16,this.group);
													var p17 = p16;
													break;
												default:
													this.parseChild(kid10);
												}
											}
										}
									}
								}
								var g24 = g16;
								break;
							case "path":
								var p18 = { };
								var at30 = HxOverrides.iter(kid7.attributes([]));
								while(at30.hasNext()) {
									var at31 = at30.next();
									switch(at31.name) {
									case "_":
										haxe_Log.trace("path attribute " + at31.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
										break;
									case "d":
										p18.d = at31.value;
										break;
									case "fill":
										p18.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at31.value);
										break;
									case "id":
										p18.id = at31.value;
										break;
									case "stroke":
										p18.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at31.value);
										break;
									case "stroke-width":
										p18.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at31.value);
										break;
									}
								}
								var g25 = this.group;
								if(g25 == { }) {
									g25 = null;
								}
								this.renderPath(p18,this.group);
								var p19 = p18;
								break;
							default:
								var childs10 = kid7.childNodules([]);
								var _g10 = 0;
								while(_g10 < childs10.length) {
									var kid11 = childs10[_g10];
									++_g10;
									switch(kid11.name) {
									case "g":
										var g26 = this.parseGroup(kid11);
										break;
									case "path":
										var p20 = { };
										var at32 = HxOverrides.iter(kid11.attributes([]));
										while(at32.hasNext()) {
											var at33 = at32.next();
											switch(at33.name) {
											case "_":
												haxe_Log.trace("path attribute " + at33.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
												break;
											case "d":
												p20.d = at33.value;
												break;
											case "fill":
												p20.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at33.value);
												break;
											case "id":
												p20.id = at33.value;
												break;
											case "stroke":
												p20.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at33.value);
												break;
											case "stroke-width":
												p20.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at33.value);
												break;
											}
										}
										var g27 = this.group;
										if(g27 == { }) {
											g27 = null;
										}
										this.renderPath(p20,this.group);
										var p21 = p20;
										break;
									default:
										this.parseChild(kid11);
									}
								}
							}
						}
					}
				}
			}
			var g28 = g;
			break;
		case "path":
			var p22 = { };
			var at34 = HxOverrides.iter(this.nodule.attributes([]));
			while(at34.hasNext()) {
				var at35 = at34.next();
				switch(at35.name) {
				case "_":
					haxe_Log.trace("path attribute " + at35.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
					break;
				case "d":
					p22.d = at35.value;
					break;
				case "fill":
					p22.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at35.value);
					break;
				case "id":
					p22.id = at35.value;
					break;
				case "stroke":
					p22.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at35.value);
					break;
				case "stroke-width":
					p22.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at35.value);
					break;
				}
			}
			var g29 = this.group;
			if(g29 == { }) {
				g29 = null;
			}
			this.renderPath(p22,this.group);
			var p23 = p22;
			break;
		default:
			var childs11 = this.nodule.childNodules([]);
			var _g11 = 0;
			while(_g11 < childs11.length) {
				var kid12 = childs11[_g11];
				++_g11;
				switch(kid12.name) {
				case "g":
					var g30 = { };
					var at36 = HxOverrides.iter(kid12.attributes([]));
					while(at36.hasNext()) {
						var at37 = at36.next();
						switch(at37.name) {
						case "fill":
							g30.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at37.value);
							break;
						case "id":
							g30.id = at37.value;
							break;
						case "stroke":
							g30.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at37.value);
							break;
						case "stroke-width":
							g30.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at37.value);
							break;
						case "transform":
							g30.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at37.value);
							break;
						case "version":
							g30.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at37.value);
							break;
						case "viewBox":
							g30.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at37.value);
							break;
						case "xmlns":
							g30.xmlns = at37.value;
							break;
						default:
							haxe_Log.trace("group attribute " + at37.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
						}
					}
					this.group = g30;
					if(kid12.firstChild != null) {
						var childs12 = kid12.childNodules([]);
						var _g12 = 0;
						while(_g12 < childs12.length) {
							var kid13 = childs12[_g12];
							++_g12;
							switch(kid13.name) {
							case "g":
								var g31 = { };
								var at38 = HxOverrides.iter(kid13.attributes([]));
								while(at38.hasNext()) {
									var at39 = at38.next();
									switch(at39.name) {
									case "fill":
										g31.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at39.value);
										break;
									case "id":
										g31.id = at39.value;
										break;
									case "stroke":
										g31.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at39.value);
										break;
									case "stroke-width":
										g31.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at39.value);
										break;
									case "transform":
										g31.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at39.value);
										break;
									case "version":
										g31.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at39.value);
										break;
									case "viewBox":
										g31.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at39.value);
										break;
									case "xmlns":
										g31.xmlns = at39.value;
										break;
									default:
										haxe_Log.trace("group attribute " + at39.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
									}
								}
								this.group = g31;
								if(kid13.firstChild != null) {
									var childs13 = kid13.childNodules([]);
									var _g13 = 0;
									while(_g13 < childs13.length) {
										var kid14 = childs13[_g13];
										++_g13;
										switch(kid14.name) {
										case "g":
											var g32 = this.parseGroup(kid14);
											break;
										case "path":
											var p24 = { };
											var at40 = HxOverrides.iter(kid14.attributes([]));
											while(at40.hasNext()) {
												var at41 = at40.next();
												switch(at41.name) {
												case "_":
													haxe_Log.trace("path attribute " + at41.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
													break;
												case "d":
													p24.d = at41.value;
													break;
												case "fill":
													p24.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at41.value);
													break;
												case "id":
													p24.id = at41.value;
													break;
												case "stroke":
													p24.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at41.value);
													break;
												case "stroke-width":
													p24.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at41.value);
													break;
												}
											}
											var g33 = this.group;
											if(g33 == { }) {
												g33 = null;
											}
											this.renderPath(p24,this.group);
											var p25 = p24;
											break;
										default:
											this.parseChild(kid14);
										}
									}
								}
								var g34 = g31;
								break;
							case "path":
								var p26 = { };
								var at42 = HxOverrides.iter(kid13.attributes([]));
								while(at42.hasNext()) {
									var at43 = at42.next();
									switch(at43.name) {
									case "_":
										haxe_Log.trace("path attribute " + at43.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
										break;
									case "d":
										p26.d = at43.value;
										break;
									case "fill":
										p26.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at43.value);
										break;
									case "id":
										p26.id = at43.value;
										break;
									case "stroke":
										p26.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at43.value);
										break;
									case "stroke-width":
										p26.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at43.value);
										break;
									}
								}
								var g35 = this.group;
								if(g35 == { }) {
									g35 = null;
								}
								this.renderPath(p26,this.group);
								var p27 = p26;
								break;
							default:
								var childs14 = kid13.childNodules([]);
								var _g14 = 0;
								while(_g14 < childs14.length) {
									var kid15 = childs14[_g14];
									++_g14;
									switch(kid15.name) {
									case "g":
										var g36 = { };
										var at44 = HxOverrides.iter(kid15.attributes([]));
										while(at44.hasNext()) {
											var at45 = at44.next();
											switch(at45.name) {
											case "fill":
												g36.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at45.value);
												break;
											case "id":
												g36.id = at45.value;
												break;
											case "stroke":
												g36.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at45.value);
												break;
											case "stroke-width":
												g36.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at45.value);
												break;
											case "transform":
												g36.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at45.value);
												break;
											case "version":
												g36.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at45.value);
												break;
											case "viewBox":
												g36.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at45.value);
												break;
											case "xmlns":
												g36.xmlns = at45.value;
												break;
											default:
												haxe_Log.trace("group attribute " + at45.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
											}
										}
										this.group = g36;
										if(kid15.firstChild != null) {
											var childs15 = kid15.childNodules([]);
											var _g15 = 0;
											while(_g15 < childs15.length) {
												var kid16 = childs15[_g15];
												++_g15;
												switch(kid16.name) {
												case "g":
													var g37 = this.parseGroup(kid16);
													break;
												case "path":
													var p28 = { };
													var at46 = HxOverrides.iter(kid16.attributes([]));
													while(at46.hasNext()) {
														var at47 = at46.next();
														switch(at47.name) {
														case "_":
															haxe_Log.trace("path attribute " + at47.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
															break;
														case "d":
															p28.d = at47.value;
															break;
														case "fill":
															p28.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at47.value);
															break;
														case "id":
															p28.id = at47.value;
															break;
														case "stroke":
															p28.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at47.value);
															break;
														case "stroke-width":
															p28.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at47.value);
															break;
														}
													}
													var g38 = this.group;
													if(g38 == { }) {
														g38 = null;
													}
													this.renderPath(p28,this.group);
													var p29 = p28;
													break;
												default:
													this.parseChild(kid16);
												}
											}
										}
										var g39 = g36;
										break;
									case "path":
										var p30 = { };
										var at48 = HxOverrides.iter(kid15.attributes([]));
										while(at48.hasNext()) {
											var at49 = at48.next();
											switch(at49.name) {
											case "_":
												haxe_Log.trace("path attribute " + at49.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
												break;
											case "d":
												p30.d = at49.value;
												break;
											case "fill":
												p30.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at49.value);
												break;
											case "id":
												p30.id = at49.value;
												break;
											case "stroke":
												p30.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at49.value);
												break;
											case "stroke-width":
												p30.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at49.value);
												break;
											}
										}
										var g40 = this.group;
										if(g40 == { }) {
											g40 = null;
										}
										this.renderPath(p30,this.group);
										var p31 = p30;
										break;
									default:
										var childs16 = kid15.childNodules([]);
										var _g16 = 0;
										while(_g16 < childs16.length) {
											var kid17 = childs16[_g16];
											++_g16;
											switch(kid17.name) {
											case "g":
												var g41 = this.parseGroup(kid17);
												break;
											case "path":
												var p32 = { };
												var at50 = HxOverrides.iter(kid17.attributes([]));
												while(at50.hasNext()) {
													var at51 = at50.next();
													switch(at51.name) {
													case "_":
														haxe_Log.trace("path attribute " + at51.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p32.d = at51.value;
														break;
													case "fill":
														p32.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at51.value);
														break;
													case "id":
														p32.id = at51.value;
														break;
													case "stroke":
														p32.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at51.value);
														break;
													case "stroke-width":
														p32.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at51.value);
														break;
													}
												}
												var g42 = this.group;
												if(g42 == { }) {
													g42 = null;
												}
												this.renderPath(p32,this.group);
												var p33 = p32;
												break;
											default:
												this.parseChild(kid17);
											}
										}
									}
								}
							}
						}
					}
					var g43 = g30;
					break;
				case "path":
					var p34 = { };
					var at52 = HxOverrides.iter(kid12.attributes([]));
					while(at52.hasNext()) {
						var at53 = at52.next();
						switch(at53.name) {
						case "_":
							haxe_Log.trace("path attribute " + at53.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
							break;
						case "d":
							p34.d = at53.value;
							break;
						case "fill":
							p34.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at53.value);
							break;
						case "id":
							p34.id = at53.value;
							break;
						case "stroke":
							p34.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at53.value);
							break;
						case "stroke-width":
							p34.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at53.value);
							break;
						}
					}
					var g44 = this.group;
					if(g44 == { }) {
						g44 = null;
					}
					this.renderPath(p34,this.group);
					var p35 = p34;
					break;
				default:
					var childs17 = kid12.childNodules([]);
					var _g17 = 0;
					while(_g17 < childs17.length) {
						var kid18 = childs17[_g17];
						++_g17;
						switch(kid18.name) {
						case "g":
							var g45 = { };
							var at54 = HxOverrides.iter(kid18.attributes([]));
							while(at54.hasNext()) {
								var at55 = at54.next();
								switch(at55.name) {
								case "fill":
									g45.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at55.value);
									break;
								case "id":
									g45.id = at55.value;
									break;
								case "stroke":
									g45.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at55.value);
									break;
								case "stroke-width":
									g45.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at55.value);
									break;
								case "transform":
									g45.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at55.value);
									break;
								case "version":
									g45.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at55.value);
									break;
								case "viewBox":
									g45.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at55.value);
									break;
								case "xmlns":
									g45.xmlns = at55.value;
									break;
								default:
									haxe_Log.trace("group attribute " + at55.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
								}
							}
							this.group = g45;
							if(kid18.firstChild != null) {
								var childs18 = kid18.childNodules([]);
								var _g18 = 0;
								while(_g18 < childs18.length) {
									var kid19 = childs18[_g18];
									++_g18;
									switch(kid19.name) {
									case "g":
										var g46 = { };
										var at56 = HxOverrides.iter(kid19.attributes([]));
										while(at56.hasNext()) {
											var at57 = at56.next();
											switch(at57.name) {
											case "fill":
												g46.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at57.value);
												break;
											case "id":
												g46.id = at57.value;
												break;
											case "stroke":
												g46.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at57.value);
												break;
											case "stroke-width":
												g46.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at57.value);
												break;
											case "transform":
												g46.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at57.value);
												break;
											case "version":
												g46.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at57.value);
												break;
											case "viewBox":
												g46.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at57.value);
												break;
											case "xmlns":
												g46.xmlns = at57.value;
												break;
											default:
												haxe_Log.trace("group attribute " + at57.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
											}
										}
										this.group = g46;
										if(kid19.firstChild != null) {
											var childs19 = kid19.childNodules([]);
											var _g19 = 0;
											while(_g19 < childs19.length) {
												var kid20 = childs19[_g19];
												++_g19;
												switch(kid20.name) {
												case "g":
													var g47 = this.parseGroup(kid20);
													break;
												case "path":
													var p36 = { };
													var at58 = HxOverrides.iter(kid20.attributes([]));
													while(at58.hasNext()) {
														var at59 = at58.next();
														switch(at59.name) {
														case "_":
															haxe_Log.trace("path attribute " + at59.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
															break;
														case "d":
															p36.d = at59.value;
															break;
														case "fill":
															p36.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at59.value);
															break;
														case "id":
															p36.id = at59.value;
															break;
														case "stroke":
															p36.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at59.value);
															break;
														case "stroke-width":
															p36.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at59.value);
															break;
														}
													}
													var g48 = this.group;
													if(g48 == { }) {
														g48 = null;
													}
													this.renderPath(p36,this.group);
													var p37 = p36;
													break;
												default:
													this.parseChild(kid20);
												}
											}
										}
										var g49 = g46;
										break;
									case "path":
										var p38 = { };
										var at60 = HxOverrides.iter(kid19.attributes([]));
										while(at60.hasNext()) {
											var at61 = at60.next();
											switch(at61.name) {
											case "_":
												haxe_Log.trace("path attribute " + at61.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
												break;
											case "d":
												p38.d = at61.value;
												break;
											case "fill":
												p38.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at61.value);
												break;
											case "id":
												p38.id = at61.value;
												break;
											case "stroke":
												p38.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at61.value);
												break;
											case "stroke-width":
												p38.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at61.value);
												break;
											}
										}
										var g50 = this.group;
										if(g50 == { }) {
											g50 = null;
										}
										this.renderPath(p38,this.group);
										var p39 = p38;
										break;
									default:
										var childs20 = kid19.childNodules([]);
										var _g20 = 0;
										while(_g20 < childs20.length) {
											var kid21 = childs20[_g20];
											++_g20;
											switch(kid21.name) {
											case "g":
												var g51 = this.parseGroup(kid21);
												break;
											case "path":
												var p40 = { };
												var at62 = HxOverrides.iter(kid21.attributes([]));
												while(at62.hasNext()) {
													var at63 = at62.next();
													switch(at63.name) {
													case "_":
														haxe_Log.trace("path attribute " + at63.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p40.d = at63.value;
														break;
													case "fill":
														p40.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at63.value);
														break;
													case "id":
														p40.id = at63.value;
														break;
													case "stroke":
														p40.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at63.value);
														break;
													case "stroke-width":
														p40.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at63.value);
														break;
													}
												}
												var g52 = this.group;
												if(g52 == { }) {
													g52 = null;
												}
												this.renderPath(p40,this.group);
												var p41 = p40;
												break;
											default:
												this.parseChild(kid21);
											}
										}
									}
								}
							}
							var g53 = g45;
							break;
						case "path":
							var p42 = { };
							var at64 = HxOverrides.iter(kid18.attributes([]));
							while(at64.hasNext()) {
								var at65 = at64.next();
								switch(at65.name) {
								case "_":
									haxe_Log.trace("path attribute " + at65.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
									break;
								case "d":
									p42.d = at65.value;
									break;
								case "fill":
									p42.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at65.value);
									break;
								case "id":
									p42.id = at65.value;
									break;
								case "stroke":
									p42.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at65.value);
									break;
								case "stroke-width":
									p42.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at65.value);
									break;
								}
							}
							var g54 = this.group;
							if(g54 == { }) {
								g54 = null;
							}
							this.renderPath(p42,this.group);
							var p43 = p42;
							break;
						default:
							var childs21 = kid18.childNodules([]);
							var _g21 = 0;
							while(_g21 < childs21.length) {
								var kid22 = childs21[_g21];
								++_g21;
								switch(kid22.name) {
								case "g":
									var g55 = this.parseGroup(kid22);
									break;
								case "path":
									var p44 = { };
									var at66 = HxOverrides.iter(kid22.attributes([]));
									while(at66.hasNext()) {
										var at67 = at66.next();
										switch(at67.name) {
										case "_":
											haxe_Log.trace("path attribute " + at67.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
											break;
										case "d":
											p44.d = at67.value;
											break;
										case "fill":
											p44.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at67.value);
											break;
										case "id":
											p44.id = at67.value;
											break;
										case "stroke":
											p44.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at67.value);
											break;
										case "stroke-width":
											p44.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at67.value);
											break;
										}
									}
									var g56 = this.group;
									if(g56 == { }) {
										g56 = null;
									}
									this.renderPath(p44,this.group);
									var p45 = p44;
									break;
								default:
									this.parseChild(kid22);
								}
							}
						}
					}
				}
			}
		}
	}
	,parseChild: function(nodule) {
		var childs = nodule.childNodules([]);
		var _g = 0;
		while(_g < childs.length) {
			var kid = childs[_g];
			++_g;
			switch(kid.name) {
			case "g":
				var g = { };
				var at = HxOverrides.iter(kid.attributes([]));
				while(at.hasNext()) {
					var at1 = at.next();
					switch(at1.name) {
					case "fill":
						g.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
						break;
					case "id":
						g.id = at1.value;
						break;
					case "stroke":
						g.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
						break;
					case "stroke-width":
						g.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at1.value);
						break;
					case "transform":
						g.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at1.value);
						break;
					case "version":
						g.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at1.value);
						break;
					case "viewBox":
						g.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at1.value);
						break;
					case "xmlns":
						g.xmlns = at1.value;
						break;
					default:
						haxe_Log.trace("group attribute " + at1.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
					}
				}
				this.group = g;
				if(kid.firstChild != null) {
					var childs1 = kid.childNodules([]);
					var _g1 = 0;
					while(_g1 < childs1.length) {
						var kid1 = childs1[_g1];
						++_g1;
						switch(kid1.name) {
						case "g":
							var g1 = { };
							var at2 = HxOverrides.iter(kid1.attributes([]));
							while(at2.hasNext()) {
								var at3 = at2.next();
								switch(at3.name) {
								case "fill":
									g1.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at3.value);
									break;
								case "id":
									g1.id = at3.value;
									break;
								case "stroke":
									g1.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at3.value);
									break;
								case "stroke-width":
									g1.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at3.value);
									break;
								case "transform":
									g1.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at3.value);
									break;
								case "version":
									g1.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at3.value);
									break;
								case "viewBox":
									g1.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at3.value);
									break;
								case "xmlns":
									g1.xmlns = at3.value;
									break;
								default:
									haxe_Log.trace("group attribute " + at3.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
								}
							}
							this.group = g1;
							if(kid1.firstChild != null) {
								var childs2 = kid1.childNodules([]);
								var _g2 = 0;
								while(_g2 < childs2.length) {
									var kid2 = childs2[_g2];
									++_g2;
									switch(kid2.name) {
									case "g":
										var g2 = this.parseGroup(kid2);
										break;
									case "path":
										var p = { };
										var at4 = HxOverrides.iter(kid2.attributes([]));
										while(at4.hasNext()) {
											var at5 = at4.next();
											switch(at5.name) {
											case "_":
												haxe_Log.trace("path attribute " + at5.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
												break;
											case "d":
												p.d = at5.value;
												break;
											case "fill":
												p.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at5.value);
												break;
											case "id":
												p.id = at5.value;
												break;
											case "stroke":
												p.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at5.value);
												break;
											case "stroke-width":
												p.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at5.value);
												break;
											}
										}
										var g3 = this.group;
										if(g3 == { }) {
											g3 = null;
										}
										this.renderPath(p,this.group);
										var p1 = p;
										break;
									default:
										this.parseChild(kid2);
									}
								}
							}
							var g4 = g1;
							break;
						case "path":
							var p2 = { };
							var at6 = HxOverrides.iter(kid1.attributes([]));
							while(at6.hasNext()) {
								var at7 = at6.next();
								switch(at7.name) {
								case "_":
									haxe_Log.trace("path attribute " + at7.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
									break;
								case "d":
									p2.d = at7.value;
									break;
								case "fill":
									p2.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at7.value);
									break;
								case "id":
									p2.id = at7.value;
									break;
								case "stroke":
									p2.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at7.value);
									break;
								case "stroke-width":
									p2.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at7.value);
									break;
								}
							}
							var g5 = this.group;
							if(g5 == { }) {
								g5 = null;
							}
							this.renderPath(p2,this.group);
							var p3 = p2;
							break;
						default:
							var childs3 = kid1.childNodules([]);
							var _g3 = 0;
							while(_g3 < childs3.length) {
								var kid3 = childs3[_g3];
								++_g3;
								switch(kid3.name) {
								case "g":
									var g6 = { };
									var at8 = HxOverrides.iter(kid3.attributes([]));
									while(at8.hasNext()) {
										var at9 = at8.next();
										switch(at9.name) {
										case "fill":
											g6.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at9.value);
											break;
										case "id":
											g6.id = at9.value;
											break;
										case "stroke":
											g6.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at9.value);
											break;
										case "stroke-width":
											g6.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at9.value);
											break;
										case "transform":
											g6.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at9.value);
											break;
										case "version":
											g6.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at9.value);
											break;
										case "viewBox":
											g6.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at9.value);
											break;
										case "xmlns":
											g6.xmlns = at9.value;
											break;
										default:
											haxe_Log.trace("group attribute " + at9.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
										}
									}
									this.group = g6;
									if(kid3.firstChild != null) {
										var childs4 = kid3.childNodules([]);
										var _g4 = 0;
										while(_g4 < childs4.length) {
											var kid4 = childs4[_g4];
											++_g4;
											switch(kid4.name) {
											case "g":
												var g7 = this.parseGroup(kid4);
												break;
											case "path":
												var p4 = { };
												var at10 = HxOverrides.iter(kid4.attributes([]));
												while(at10.hasNext()) {
													var at11 = at10.next();
													switch(at11.name) {
													case "_":
														haxe_Log.trace("path attribute " + at11.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p4.d = at11.value;
														break;
													case "fill":
														p4.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at11.value);
														break;
													case "id":
														p4.id = at11.value;
														break;
													case "stroke":
														p4.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at11.value);
														break;
													case "stroke-width":
														p4.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at11.value);
														break;
													}
												}
												var g8 = this.group;
												if(g8 == { }) {
													g8 = null;
												}
												this.renderPath(p4,this.group);
												var p5 = p4;
												break;
											default:
												this.parseChild(kid4);
											}
										}
									}
									var g9 = g6;
									break;
								case "path":
									var p6 = { };
									var at12 = HxOverrides.iter(kid3.attributes([]));
									while(at12.hasNext()) {
										var at13 = at12.next();
										switch(at13.name) {
										case "_":
											haxe_Log.trace("path attribute " + at13.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
											break;
										case "d":
											p6.d = at13.value;
											break;
										case "fill":
											p6.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at13.value);
											break;
										case "id":
											p6.id = at13.value;
											break;
										case "stroke":
											p6.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at13.value);
											break;
										case "stroke-width":
											p6.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at13.value);
											break;
										}
									}
									var g10 = this.group;
									if(g10 == { }) {
										g10 = null;
									}
									this.renderPath(p6,this.group);
									var p7 = p6;
									break;
								default:
									var childs5 = kid3.childNodules([]);
									var _g5 = 0;
									while(_g5 < childs5.length) {
										var kid5 = childs5[_g5];
										++_g5;
										switch(kid5.name) {
										case "g":
											var g11 = this.parseGroup(kid5);
											break;
										case "path":
											var p8 = { };
											var at14 = HxOverrides.iter(kid5.attributes([]));
											while(at14.hasNext()) {
												var at15 = at14.next();
												switch(at15.name) {
												case "_":
													haxe_Log.trace("path attribute " + at15.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
													break;
												case "d":
													p8.d = at15.value;
													break;
												case "fill":
													p8.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at15.value);
													break;
												case "id":
													p8.id = at15.value;
													break;
												case "stroke":
													p8.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at15.value);
													break;
												case "stroke-width":
													p8.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at15.value);
													break;
												}
											}
											var g12 = this.group;
											if(g12 == { }) {
												g12 = null;
											}
											this.renderPath(p8,this.group);
											var p9 = p8;
											break;
										default:
											this.parseChild(kid5);
										}
									}
								}
							}
						}
					}
				}
				var g13 = g;
				break;
			case "path":
				var p10 = { };
				var at16 = HxOverrides.iter(kid.attributes([]));
				while(at16.hasNext()) {
					var at17 = at16.next();
					switch(at17.name) {
					case "_":
						haxe_Log.trace("path attribute " + at17.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
						break;
					case "d":
						p10.d = at17.value;
						break;
					case "fill":
						p10.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at17.value);
						break;
					case "id":
						p10.id = at17.value;
						break;
					case "stroke":
						p10.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at17.value);
						break;
					case "stroke-width":
						p10.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at17.value);
						break;
					}
				}
				var g14 = this.group;
				if(g14 == { }) {
					g14 = null;
				}
				this.renderPath(p10,this.group);
				var p11 = p10;
				break;
			default:
				var childs6 = kid.childNodules([]);
				var _g6 = 0;
				while(_g6 < childs6.length) {
					var kid6 = childs6[_g6];
					++_g6;
					switch(kid6.name) {
					case "g":
						var g15 = { };
						var at18 = HxOverrides.iter(kid6.attributes([]));
						while(at18.hasNext()) {
							var at19 = at18.next();
							switch(at19.name) {
							case "fill":
								g15.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at19.value);
								break;
							case "id":
								g15.id = at19.value;
								break;
							case "stroke":
								g15.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at19.value);
								break;
							case "stroke-width":
								g15.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at19.value);
								break;
							case "transform":
								g15.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at19.value);
								break;
							case "version":
								g15.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at19.value);
								break;
							case "viewBox":
								g15.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at19.value);
								break;
							case "xmlns":
								g15.xmlns = at19.value;
								break;
							default:
								haxe_Log.trace("group attribute " + at19.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
							}
						}
						this.group = g15;
						if(kid6.firstChild != null) {
							var childs7 = kid6.childNodules([]);
							var _g7 = 0;
							while(_g7 < childs7.length) {
								var kid7 = childs7[_g7];
								++_g7;
								switch(kid7.name) {
								case "g":
									var g16 = { };
									var at20 = HxOverrides.iter(kid7.attributes([]));
									while(at20.hasNext()) {
										var at21 = at20.next();
										switch(at21.name) {
										case "fill":
											g16.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at21.value);
											break;
										case "id":
											g16.id = at21.value;
											break;
										case "stroke":
											g16.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at21.value);
											break;
										case "stroke-width":
											g16.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at21.value);
											break;
										case "transform":
											g16.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at21.value);
											break;
										case "version":
											g16.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at21.value);
											break;
										case "viewBox":
											g16.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at21.value);
											break;
										case "xmlns":
											g16.xmlns = at21.value;
											break;
										default:
											haxe_Log.trace("group attribute " + at21.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
										}
									}
									this.group = g16;
									if(kid7.firstChild != null) {
										var childs8 = kid7.childNodules([]);
										var _g8 = 0;
										while(_g8 < childs8.length) {
											var kid8 = childs8[_g8];
											++_g8;
											switch(kid8.name) {
											case "g":
												var g17 = this.parseGroup(kid8);
												break;
											case "path":
												var p12 = { };
												var at22 = HxOverrides.iter(kid8.attributes([]));
												while(at22.hasNext()) {
													var at23 = at22.next();
													switch(at23.name) {
													case "_":
														haxe_Log.trace("path attribute " + at23.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p12.d = at23.value;
														break;
													case "fill":
														p12.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at23.value);
														break;
													case "id":
														p12.id = at23.value;
														break;
													case "stroke":
														p12.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at23.value);
														break;
													case "stroke-width":
														p12.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at23.value);
														break;
													}
												}
												var g18 = this.group;
												if(g18 == { }) {
													g18 = null;
												}
												this.renderPath(p12,this.group);
												var p13 = p12;
												break;
											default:
												this.parseChild(kid8);
											}
										}
									}
									var g19 = g16;
									break;
								case "path":
									var p14 = { };
									var at24 = HxOverrides.iter(kid7.attributes([]));
									while(at24.hasNext()) {
										var at25 = at24.next();
										switch(at25.name) {
										case "_":
											haxe_Log.trace("path attribute " + at25.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
											break;
										case "d":
											p14.d = at25.value;
											break;
										case "fill":
											p14.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at25.value);
											break;
										case "id":
											p14.id = at25.value;
											break;
										case "stroke":
											p14.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at25.value);
											break;
										case "stroke-width":
											p14.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at25.value);
											break;
										}
									}
									var g20 = this.group;
									if(g20 == { }) {
										g20 = null;
									}
									this.renderPath(p14,this.group);
									var p15 = p14;
									break;
								default:
									var childs9 = kid7.childNodules([]);
									var _g9 = 0;
									while(_g9 < childs9.length) {
										var kid9 = childs9[_g9];
										++_g9;
										switch(kid9.name) {
										case "g":
											var g21 = this.parseGroup(kid9);
											break;
										case "path":
											var p16 = { };
											var at26 = HxOverrides.iter(kid9.attributes([]));
											while(at26.hasNext()) {
												var at27 = at26.next();
												switch(at27.name) {
												case "_":
													haxe_Log.trace("path attribute " + at27.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
													break;
												case "d":
													p16.d = at27.value;
													break;
												case "fill":
													p16.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at27.value);
													break;
												case "id":
													p16.id = at27.value;
													break;
												case "stroke":
													p16.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at27.value);
													break;
												case "stroke-width":
													p16.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at27.value);
													break;
												}
											}
											var g22 = this.group;
											if(g22 == { }) {
												g22 = null;
											}
											this.renderPath(p16,this.group);
											var p17 = p16;
											break;
										default:
											this.parseChild(kid9);
										}
									}
								}
							}
						}
						var g23 = g15;
						break;
					case "path":
						var p18 = { };
						var at28 = HxOverrides.iter(kid6.attributes([]));
						while(at28.hasNext()) {
							var at29 = at28.next();
							switch(at29.name) {
							case "_":
								haxe_Log.trace("path attribute " + at29.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
								break;
							case "d":
								p18.d = at29.value;
								break;
							case "fill":
								p18.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at29.value);
								break;
							case "id":
								p18.id = at29.value;
								break;
							case "stroke":
								p18.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at29.value);
								break;
							case "stroke-width":
								p18.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at29.value);
								break;
							}
						}
						var g24 = this.group;
						if(g24 == { }) {
							g24 = null;
						}
						this.renderPath(p18,this.group);
						var p19 = p18;
						break;
					default:
						var childs10 = kid6.childNodules([]);
						var _g10 = 0;
						while(_g10 < childs10.length) {
							var kid10 = childs10[_g10];
							++_g10;
							switch(kid10.name) {
							case "g":
								var g25 = this.parseGroup(kid10);
								break;
							case "path":
								var p20 = { };
								var at30 = HxOverrides.iter(kid10.attributes([]));
								while(at30.hasNext()) {
									var at31 = at30.next();
									switch(at31.name) {
									case "_":
										haxe_Log.trace("path attribute " + at31.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
										break;
									case "d":
										p20.d = at31.value;
										break;
									case "fill":
										p20.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at31.value);
										break;
									case "id":
										p20.id = at31.value;
										break;
									case "stroke":
										p20.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at31.value);
										break;
									case "stroke-width":
										p20.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at31.value);
										break;
									}
								}
								var g26 = this.group;
								if(g26 == { }) {
									g26 = null;
								}
								this.renderPath(p20,this.group);
								var p21 = p20;
								break;
							default:
								this.parseChild(kid10);
							}
						}
					}
				}
			}
		}
	}
	,parseGroup: function(kid) {
		var g = { };
		var at = HxOverrides.iter(kid.attributes([]));
		while(at.hasNext()) {
			var at1 = at.next();
			switch(at1.name) {
			case "fill":
				g.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
				break;
			case "id":
				g.id = at1.value;
				break;
			case "stroke":
				g.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
				break;
			case "stroke-width":
				g.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at1.value);
				break;
			case "transform":
				g.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at1.value);
				break;
			case "version":
				g.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at1.value);
				break;
			case "viewBox":
				g.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at1.value);
				break;
			case "xmlns":
				g.xmlns = at1.value;
				break;
			default:
				haxe_Log.trace("group attribute " + at1.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
			}
		}
		this.group = g;
		if(kid.firstChild != null) {
			var childs = kid.childNodules([]);
			var _g = 0;
			while(_g < childs.length) {
				var kid1 = childs[_g];
				++_g;
				switch(kid1.name) {
				case "g":
					var g1 = { };
					var at2 = HxOverrides.iter(kid1.attributes([]));
					while(at2.hasNext()) {
						var at3 = at2.next();
						switch(at3.name) {
						case "fill":
							g1.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at3.value);
							break;
						case "id":
							g1.id = at3.value;
							break;
						case "stroke":
							g1.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at3.value);
							break;
						case "stroke-width":
							g1.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at3.value);
							break;
						case "transform":
							g1.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at3.value);
							break;
						case "version":
							g1.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at3.value);
							break;
						case "viewBox":
							g1.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at3.value);
							break;
						case "xmlns":
							g1.xmlns = at3.value;
							break;
						default:
							haxe_Log.trace("group attribute " + at3.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
						}
					}
					this.group = g1;
					if(kid1.firstChild != null) {
						var childs1 = kid1.childNodules([]);
						var _g1 = 0;
						while(_g1 < childs1.length) {
							var kid2 = childs1[_g1];
							++_g1;
							switch(kid2.name) {
							case "g":
								var g2 = { };
								var at4 = HxOverrides.iter(kid2.attributes([]));
								while(at4.hasNext()) {
									var at5 = at4.next();
									switch(at5.name) {
									case "fill":
										g2.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at5.value);
										break;
									case "id":
										g2.id = at5.value;
										break;
									case "stroke":
										g2.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at5.value);
										break;
									case "stroke-width":
										g2.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at5.value);
										break;
									case "transform":
										g2.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at5.value);
										break;
									case "version":
										g2.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at5.value);
										break;
									case "viewBox":
										g2.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at5.value);
										break;
									case "xmlns":
										g2.xmlns = at5.value;
										break;
									default:
										haxe_Log.trace("group attribute " + at5.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
									}
								}
								this.group = g2;
								if(kid2.firstChild != null) {
									var childs2 = kid2.childNodules([]);
									var _g2 = 0;
									while(_g2 < childs2.length) {
										var kid3 = childs2[_g2];
										++_g2;
										switch(kid3.name) {
										case "g":
											var g3 = this.parseGroup(kid3);
											break;
										case "path":
											var p = { };
											var at6 = HxOverrides.iter(kid3.attributes([]));
											while(at6.hasNext()) {
												var at7 = at6.next();
												switch(at7.name) {
												case "_":
													haxe_Log.trace("path attribute " + at7.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
													break;
												case "d":
													p.d = at7.value;
													break;
												case "fill":
													p.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at7.value);
													break;
												case "id":
													p.id = at7.value;
													break;
												case "stroke":
													p.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at7.value);
													break;
												case "stroke-width":
													p.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at7.value);
													break;
												}
											}
											var g4 = this.group;
											if(g4 == { }) {
												g4 = null;
											}
											this.renderPath(p,this.group);
											var p1 = p;
											break;
										default:
											this.parseChild(kid3);
										}
									}
								}
								var g5 = g2;
								break;
							case "path":
								var p2 = { };
								var at8 = HxOverrides.iter(kid2.attributes([]));
								while(at8.hasNext()) {
									var at9 = at8.next();
									switch(at9.name) {
									case "_":
										haxe_Log.trace("path attribute " + at9.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
										break;
									case "d":
										p2.d = at9.value;
										break;
									case "fill":
										p2.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at9.value);
										break;
									case "id":
										p2.id = at9.value;
										break;
									case "stroke":
										p2.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at9.value);
										break;
									case "stroke-width":
										p2.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at9.value);
										break;
									}
								}
								var g6 = this.group;
								if(g6 == { }) {
									g6 = null;
								}
								this.renderPath(p2,this.group);
								var p3 = p2;
								break;
							default:
								var childs3 = kid2.childNodules([]);
								var _g3 = 0;
								while(_g3 < childs3.length) {
									var kid4 = childs3[_g3];
									++_g3;
									switch(kid4.name) {
									case "g":
										var g7 = { };
										var at10 = HxOverrides.iter(kid4.attributes([]));
										while(at10.hasNext()) {
											var at11 = at10.next();
											switch(at11.name) {
											case "fill":
												g7.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at11.value);
												break;
											case "id":
												g7.id = at11.value;
												break;
											case "stroke":
												g7.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at11.value);
												break;
											case "stroke-width":
												g7.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at11.value);
												break;
											case "transform":
												g7.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at11.value);
												break;
											case "version":
												g7.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at11.value);
												break;
											case "viewBox":
												g7.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at11.value);
												break;
											case "xmlns":
												g7.xmlns = at11.value;
												break;
											default:
												haxe_Log.trace("group attribute " + at11.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
											}
										}
										this.group = g7;
										if(kid4.firstChild != null) {
											var childs4 = kid4.childNodules([]);
											var _g4 = 0;
											while(_g4 < childs4.length) {
												var kid5 = childs4[_g4];
												++_g4;
												switch(kid5.name) {
												case "g":
													var g8 = { };
													var at12 = HxOverrides.iter(kid5.attributes([]));
													while(at12.hasNext()) {
														var at13 = at12.next();
														switch(at13.name) {
														case "fill":
															g8.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at13.value);
															break;
														case "id":
															g8.id = at13.value;
															break;
														case "stroke":
															g8.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at13.value);
															break;
														case "stroke-width":
															g8.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at13.value);
															break;
														case "transform":
															g8.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at13.value);
															break;
														case "version":
															g8.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at13.value);
															break;
														case "viewBox":
															g8.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at13.value);
															break;
														case "xmlns":
															g8.xmlns = at13.value;
															break;
														default:
															haxe_Log.trace("group attribute " + at13.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
														}
													}
													this.group = g8;
													if(kid5.firstChild != null) {
														var childs5 = kid5.childNodules([]);
														var _g5 = 0;
														while(_g5 < childs5.length) {
															var kid6 = childs5[_g5];
															++_g5;
															switch(kid6.name) {
															case "g":
																var g9 = { };
																var at14 = HxOverrides.iter(kid6.attributes([]));
																while(at14.hasNext()) {
																	var at15 = at14.next();
																	switch(at15.name) {
																	case "fill":
																		g9.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at15.value);
																		break;
																	case "id":
																		g9.id = at15.value;
																		break;
																	case "stroke":
																		g9.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at15.value);
																		break;
																	case "stroke-width":
																		g9.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at15.value);
																		break;
																	case "transform":
																		g9.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at15.value);
																		break;
																	case "version":
																		g9.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at15.value);
																		break;
																	case "viewBox":
																		g9.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at15.value);
																		break;
																	case "xmlns":
																		g9.xmlns = at15.value;
																		break;
																	default:
																		haxe_Log.trace("group attribute " + at15.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																	}
																}
																this.group = g9;
																if(kid6.firstChild != null) {
																	var childs6 = kid6.childNodules([]);
																	var _g6 = 0;
																	while(_g6 < childs6.length) {
																		var kid7 = childs6[_g6];
																		++_g6;
																		switch(kid7.name) {
																		case "g":
																			var g10 = this.parseGroup(kid7);
																			break;
																		case "path":
																			var p4 = { };
																			var at16 = HxOverrides.iter(kid7.attributes([]));
																			while(at16.hasNext()) {
																				var at17 = at16.next();
																				switch(at17.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at17.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p4.d = at17.value;
																					break;
																				case "fill":
																					p4.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at17.value);
																					break;
																				case "id":
																					p4.id = at17.value;
																					break;
																				case "stroke":
																					p4.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at17.value);
																					break;
																				case "stroke-width":
																					p4.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at17.value);
																					break;
																				}
																			}
																			var g11 = this.group;
																			if(g11 == { }) {
																				g11 = null;
																			}
																			this.renderPath(p4,this.group);
																			var p5 = p4;
																			break;
																		default:
																			this.parseChild(kid7);
																		}
																	}
																}
																var g12 = g9;
																break;
															case "path":
																var p6 = { };
																var at18 = HxOverrides.iter(kid6.attributes([]));
																while(at18.hasNext()) {
																	var at19 = at18.next();
																	switch(at19.name) {
																	case "_":
																		haxe_Log.trace("path attribute " + at19.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																		break;
																	case "d":
																		p6.d = at19.value;
																		break;
																	case "fill":
																		p6.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at19.value);
																		break;
																	case "id":
																		p6.id = at19.value;
																		break;
																	case "stroke":
																		p6.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at19.value);
																		break;
																	case "stroke-width":
																		p6.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at19.value);
																		break;
																	}
																}
																var g13 = this.group;
																if(g13 == { }) {
																	g13 = null;
																}
																this.renderPath(p6,this.group);
																var p7 = p6;
																break;
															default:
																var childs7 = kid6.childNodules([]);
																var _g7 = 0;
																while(_g7 < childs7.length) {
																	var kid8 = childs7[_g7];
																	++_g7;
																	switch(kid8.name) {
																	case "g":
																		var g14 = { };
																		var at20 = HxOverrides.iter(kid8.attributes([]));
																		while(at20.hasNext()) {
																			var at21 = at20.next();
																			switch(at21.name) {
																			case "fill":
																				g14.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at21.value);
																				break;
																			case "id":
																				g14.id = at21.value;
																				break;
																			case "stroke":
																				g14.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at21.value);
																				break;
																			case "stroke-width":
																				g14.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at21.value);
																				break;
																			case "transform":
																				g14.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at21.value);
																				break;
																			case "version":
																				g14.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at21.value);
																				break;
																			case "viewBox":
																				g14.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at21.value);
																				break;
																			case "xmlns":
																				g14.xmlns = at21.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at21.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g14;
																		if(kid8.firstChild != null) {
																			var childs8 = kid8.childNodules([]);
																			var _g8 = 0;
																			while(_g8 < childs8.length) {
																				var kid9 = childs8[_g8];
																				++_g8;
																				switch(kid9.name) {
																				case "g":
																					var g15 = { };
																					var at22 = HxOverrides.iter(kid9.attributes([]));
																					while(at22.hasNext()) {
																						var at23 = at22.next();
																						switch(at23.name) {
																						case "fill":
																							g15.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at23.value);
																							break;
																						case "id":
																							g15.id = at23.value;
																							break;
																						case "stroke":
																							g15.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at23.value);
																							break;
																						case "stroke-width":
																							g15.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at23.value);
																							break;
																						case "transform":
																							g15.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at23.value);
																							break;
																						case "version":
																							g15.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at23.value);
																							break;
																						case "viewBox":
																							g15.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at23.value);
																							break;
																						case "xmlns":
																							g15.xmlns = at23.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at23.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g15;
																					if(kid9.firstChild != null) {
																						var childs9 = kid9.childNodules([]);
																						var _g9 = 0;
																						while(_g9 < childs9.length) {
																							var kid10 = childs9[_g9];
																							++_g9;
																							switch(kid10.name) {
																							case "g":
																								var g16 = this.parseGroup(kid10);
																								break;
																							case "path":
																								var p8 = { };
																								var at24 = HxOverrides.iter(kid10.attributes([]));
																								while(at24.hasNext()) {
																									var at25 = at24.next();
																									switch(at25.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at25.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p8.d = at25.value;
																										break;
																									case "fill":
																										p8.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at25.value);
																										break;
																									case "id":
																										p8.id = at25.value;
																										break;
																									case "stroke":
																										p8.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at25.value);
																										break;
																									case "stroke-width":
																										p8.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at25.value);
																										break;
																									}
																								}
																								var g17 = this.group;
																								if(g17 == { }) {
																									g17 = null;
																								}
																								this.renderPath(p8,this.group);
																								var p9 = p8;
																								break;
																							default:
																								this.parseChild(kid10);
																							}
																						}
																					}
																					var g18 = g15;
																					break;
																				case "path":
																					var p10 = { };
																					var at26 = HxOverrides.iter(kid9.attributes([]));
																					while(at26.hasNext()) {
																						var at27 = at26.next();
																						switch(at27.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at27.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p10.d = at27.value;
																							break;
																						case "fill":
																							p10.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at27.value);
																							break;
																						case "id":
																							p10.id = at27.value;
																							break;
																						case "stroke":
																							p10.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at27.value);
																							break;
																						case "stroke-width":
																							p10.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at27.value);
																							break;
																						}
																					}
																					var g19 = this.group;
																					if(g19 == { }) {
																						g19 = null;
																					}
																					this.renderPath(p10,this.group);
																					var p11 = p10;
																					break;
																				default:
																					var childs10 = kid9.childNodules([]);
																					var _g10 = 0;
																					while(_g10 < childs10.length) {
																						var kid11 = childs10[_g10];
																						++_g10;
																						switch(kid11.name) {
																						case "g":
																							var g20 = { };
																							var at28 = HxOverrides.iter(kid11.attributes([]));
																							while(at28.hasNext()) {
																								var at29 = at28.next();
																								switch(at29.name) {
																								case "fill":
																									g20.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at29.value);
																									break;
																								case "id":
																									g20.id = at29.value;
																									break;
																								case "stroke":
																									g20.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at29.value);
																									break;
																								case "stroke-width":
																									g20.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at29.value);
																									break;
																								case "transform":
																									g20.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at29.value);
																									break;
																								case "version":
																									g20.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at29.value);
																									break;
																								case "viewBox":
																									g20.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at29.value);
																									break;
																								case "xmlns":
																									g20.xmlns = at29.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at29.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g20;
																							if(kid11.firstChild != null) {
																								var childs11 = kid11.childNodules([]);
																								var _g11 = 0;
																								while(_g11 < childs11.length) {
																									var kid12 = childs11[_g11];
																									++_g11;
																									switch(kid12.name) {
																									case "g":
																										var g21 = this.parseGroup(kid12);
																										break;
																									case "path":
																										var p12 = { };
																										var at30 = HxOverrides.iter(kid12.attributes([]));
																										while(at30.hasNext()) {
																											var at31 = at30.next();
																											switch(at31.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at31.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p12.d = at31.value;
																												break;
																											case "fill":
																												p12.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at31.value);
																												break;
																											case "id":
																												p12.id = at31.value;
																												break;
																											case "stroke":
																												p12.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at31.value);
																												break;
																											case "stroke-width":
																												p12.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at31.value);
																												break;
																											}
																										}
																										var g22 = this.group;
																										if(g22 == { }) {
																											g22 = null;
																										}
																										this.renderPath(p12,this.group);
																										var p13 = p12;
																										break;
																									default:
																										this.parseChild(kid12);
																									}
																								}
																							}
																							var g23 = g20;
																							break;
																						case "path":
																							var p14 = { };
																							var at32 = HxOverrides.iter(kid11.attributes([]));
																							while(at32.hasNext()) {
																								var at33 = at32.next();
																								switch(at33.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at33.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p14.d = at33.value;
																									break;
																								case "fill":
																									p14.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at33.value);
																									break;
																								case "id":
																									p14.id = at33.value;
																									break;
																								case "stroke":
																									p14.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at33.value);
																									break;
																								case "stroke-width":
																									p14.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at33.value);
																									break;
																								}
																							}
																							var g24 = this.group;
																							if(g24 == { }) {
																								g24 = null;
																							}
																							this.renderPath(p14,this.group);
																							var p15 = p14;
																							break;
																						default:
																							var childs12 = kid11.childNodules([]);
																							var _g12 = 0;
																							while(_g12 < childs12.length) {
																								var kid13 = childs12[_g12];
																								++_g12;
																								switch(kid13.name) {
																								case "g":
																									var g25 = this.parseGroup(kid13);
																									break;
																								case "path":
																									var p16 = { };
																									var at34 = HxOverrides.iter(kid13.attributes([]));
																									while(at34.hasNext()) {
																										var at35 = at34.next();
																										switch(at35.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at35.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p16.d = at35.value;
																											break;
																										case "fill":
																											p16.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at35.value);
																											break;
																										case "id":
																											p16.id = at35.value;
																											break;
																										case "stroke":
																											p16.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at35.value);
																											break;
																										case "stroke-width":
																											p16.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at35.value);
																											break;
																										}
																									}
																									var g26 = this.group;
																									if(g26 == { }) {
																										g26 = null;
																									}
																									this.renderPath(p16,this.group);
																									var p17 = p16;
																									break;
																								default:
																									this.parseChild(kid13);
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																		var g27 = g14;
																		break;
																	case "path":
																		var p18 = { };
																		var at36 = HxOverrides.iter(kid8.attributes([]));
																		while(at36.hasNext()) {
																			var at37 = at36.next();
																			switch(at37.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at37.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p18.d = at37.value;
																				break;
																			case "fill":
																				p18.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at37.value);
																				break;
																			case "id":
																				p18.id = at37.value;
																				break;
																			case "stroke":
																				p18.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at37.value);
																				break;
																			case "stroke-width":
																				p18.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at37.value);
																				break;
																			}
																		}
																		var g28 = this.group;
																		if(g28 == { }) {
																			g28 = null;
																		}
																		this.renderPath(p18,this.group);
																		var p19 = p18;
																		break;
																	default:
																		var childs13 = kid8.childNodules([]);
																		var _g13 = 0;
																		while(_g13 < childs13.length) {
																			var kid14 = childs13[_g13];
																			++_g13;
																			switch(kid14.name) {
																			case "g":
																				var g29 = { };
																				var at38 = HxOverrides.iter(kid14.attributes([]));
																				while(at38.hasNext()) {
																					var at39 = at38.next();
																					switch(at39.name) {
																					case "fill":
																						g29.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at39.value);
																						break;
																					case "id":
																						g29.id = at39.value;
																						break;
																					case "stroke":
																						g29.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at39.value);
																						break;
																					case "stroke-width":
																						g29.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at39.value);
																						break;
																					case "transform":
																						g29.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at39.value);
																						break;
																					case "version":
																						g29.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at39.value);
																						break;
																					case "viewBox":
																						g29.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at39.value);
																						break;
																					case "xmlns":
																						g29.xmlns = at39.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at39.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g29;
																				if(kid14.firstChild != null) {
																					var childs14 = kid14.childNodules([]);
																					var _g14 = 0;
																					while(_g14 < childs14.length) {
																						var kid15 = childs14[_g14];
																						++_g14;
																						switch(kid15.name) {
																						case "g":
																							var g30 = { };
																							var at40 = HxOverrides.iter(kid15.attributes([]));
																							while(at40.hasNext()) {
																								var at41 = at40.next();
																								switch(at41.name) {
																								case "fill":
																									g30.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at41.value);
																									break;
																								case "id":
																									g30.id = at41.value;
																									break;
																								case "stroke":
																									g30.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at41.value);
																									break;
																								case "stroke-width":
																									g30.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at41.value);
																									break;
																								case "transform":
																									g30.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at41.value);
																									break;
																								case "version":
																									g30.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at41.value);
																									break;
																								case "viewBox":
																									g30.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at41.value);
																									break;
																								case "xmlns":
																									g30.xmlns = at41.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at41.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g30;
																							if(kid15.firstChild != null) {
																								var childs15 = kid15.childNodules([]);
																								var _g15 = 0;
																								while(_g15 < childs15.length) {
																									var kid16 = childs15[_g15];
																									++_g15;
																									switch(kid16.name) {
																									case "g":
																										var g31 = this.parseGroup(kid16);
																										break;
																									case "path":
																										var p20 = { };
																										var at42 = HxOverrides.iter(kid16.attributes([]));
																										while(at42.hasNext()) {
																											var at43 = at42.next();
																											switch(at43.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at43.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p20.d = at43.value;
																												break;
																											case "fill":
																												p20.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at43.value);
																												break;
																											case "id":
																												p20.id = at43.value;
																												break;
																											case "stroke":
																												p20.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at43.value);
																												break;
																											case "stroke-width":
																												p20.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at43.value);
																												break;
																											}
																										}
																										var g32 = this.group;
																										if(g32 == { }) {
																											g32 = null;
																										}
																										this.renderPath(p20,this.group);
																										var p21 = p20;
																										break;
																									default:
																										this.parseChild(kid16);
																									}
																								}
																							}
																							var g33 = g30;
																							break;
																						case "path":
																							var p22 = { };
																							var at44 = HxOverrides.iter(kid15.attributes([]));
																							while(at44.hasNext()) {
																								var at45 = at44.next();
																								switch(at45.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at45.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p22.d = at45.value;
																									break;
																								case "fill":
																									p22.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at45.value);
																									break;
																								case "id":
																									p22.id = at45.value;
																									break;
																								case "stroke":
																									p22.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at45.value);
																									break;
																								case "stroke-width":
																									p22.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at45.value);
																									break;
																								}
																							}
																							var g34 = this.group;
																							if(g34 == { }) {
																								g34 = null;
																							}
																							this.renderPath(p22,this.group);
																							var p23 = p22;
																							break;
																						default:
																							var childs16 = kid15.childNodules([]);
																							var _g16 = 0;
																							while(_g16 < childs16.length) {
																								var kid17 = childs16[_g16];
																								++_g16;
																								switch(kid17.name) {
																								case "g":
																									var g35 = this.parseGroup(kid17);
																									break;
																								case "path":
																									var p24 = { };
																									var at46 = HxOverrides.iter(kid17.attributes([]));
																									while(at46.hasNext()) {
																										var at47 = at46.next();
																										switch(at47.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at47.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p24.d = at47.value;
																											break;
																										case "fill":
																											p24.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at47.value);
																											break;
																										case "id":
																											p24.id = at47.value;
																											break;
																										case "stroke":
																											p24.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at47.value);
																											break;
																										case "stroke-width":
																											p24.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at47.value);
																											break;
																										}
																									}
																									var g36 = this.group;
																									if(g36 == { }) {
																										g36 = null;
																									}
																									this.renderPath(p24,this.group);
																									var p25 = p24;
																									break;
																								default:
																									this.parseChild(kid17);
																								}
																							}
																						}
																					}
																				}
																				var g37 = g29;
																				break;
																			case "path":
																				var p26 = { };
																				var at48 = HxOverrides.iter(kid14.attributes([]));
																				while(at48.hasNext()) {
																					var at49 = at48.next();
																					switch(at49.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at49.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p26.d = at49.value;
																						break;
																					case "fill":
																						p26.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at49.value);
																						break;
																					case "id":
																						p26.id = at49.value;
																						break;
																					case "stroke":
																						p26.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at49.value);
																						break;
																					case "stroke-width":
																						p26.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at49.value);
																						break;
																					}
																				}
																				var g38 = this.group;
																				if(g38 == { }) {
																					g38 = null;
																				}
																				this.renderPath(p26,this.group);
																				var p27 = p26;
																				break;
																			default:
																				var childs17 = kid14.childNodules([]);
																				var _g17 = 0;
																				while(_g17 < childs17.length) {
																					var kid18 = childs17[_g17];
																					++_g17;
																					switch(kid18.name) {
																					case "g":
																						var g39 = this.parseGroup(kid18);
																						break;
																					case "path":
																						var p28 = { };
																						var at50 = HxOverrides.iter(kid18.attributes([]));
																						while(at50.hasNext()) {
																							var at51 = at50.next();
																							switch(at51.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at51.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p28.d = at51.value;
																								break;
																							case "fill":
																								p28.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at51.value);
																								break;
																							case "id":
																								p28.id = at51.value;
																								break;
																							case "stroke":
																								p28.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at51.value);
																								break;
																							case "stroke-width":
																								p28.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at51.value);
																								break;
																							}
																						}
																						var g40 = this.group;
																						if(g40 == { }) {
																							g40 = null;
																						}
																						this.renderPath(p28,this.group);
																						var p29 = p28;
																						break;
																					default:
																						this.parseChild(kid18);
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
													var g41 = g8;
													break;
												case "path":
													var p30 = { };
													var at52 = HxOverrides.iter(kid5.attributes([]));
													while(at52.hasNext()) {
														var at53 = at52.next();
														switch(at53.name) {
														case "_":
															haxe_Log.trace("path attribute " + at53.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
															break;
														case "d":
															p30.d = at53.value;
															break;
														case "fill":
															p30.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at53.value);
															break;
														case "id":
															p30.id = at53.value;
															break;
														case "stroke":
															p30.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at53.value);
															break;
														case "stroke-width":
															p30.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at53.value);
															break;
														}
													}
													var g42 = this.group;
													if(g42 == { }) {
														g42 = null;
													}
													this.renderPath(p30,this.group);
													var p31 = p30;
													break;
												default:
													var childs18 = kid5.childNodules([]);
													var _g18 = 0;
													while(_g18 < childs18.length) {
														var kid19 = childs18[_g18];
														++_g18;
														switch(kid19.name) {
														case "g":
															var g43 = { };
															var at54 = HxOverrides.iter(kid19.attributes([]));
															while(at54.hasNext()) {
																var at55 = at54.next();
																switch(at55.name) {
																case "fill":
																	g43.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at55.value);
																	break;
																case "id":
																	g43.id = at55.value;
																	break;
																case "stroke":
																	g43.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at55.value);
																	break;
																case "stroke-width":
																	g43.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at55.value);
																	break;
																case "transform":
																	g43.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at55.value);
																	break;
																case "version":
																	g43.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at55.value);
																	break;
																case "viewBox":
																	g43.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at55.value);
																	break;
																case "xmlns":
																	g43.xmlns = at55.value;
																	break;
																default:
																	haxe_Log.trace("group attribute " + at55.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																}
															}
															this.group = g43;
															if(kid19.firstChild != null) {
																var childs19 = kid19.childNodules([]);
																var _g19 = 0;
																while(_g19 < childs19.length) {
																	var kid20 = childs19[_g19];
																	++_g19;
																	switch(kid20.name) {
																	case "g":
																		var g44 = { };
																		var at56 = HxOverrides.iter(kid20.attributes([]));
																		while(at56.hasNext()) {
																			var at57 = at56.next();
																			switch(at57.name) {
																			case "fill":
																				g44.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at57.value);
																				break;
																			case "id":
																				g44.id = at57.value;
																				break;
																			case "stroke":
																				g44.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at57.value);
																				break;
																			case "stroke-width":
																				g44.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at57.value);
																				break;
																			case "transform":
																				g44.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at57.value);
																				break;
																			case "version":
																				g44.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at57.value);
																				break;
																			case "viewBox":
																				g44.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at57.value);
																				break;
																			case "xmlns":
																				g44.xmlns = at57.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at57.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g44;
																		if(kid20.firstChild != null) {
																			var childs20 = kid20.childNodules([]);
																			var _g20 = 0;
																			while(_g20 < childs20.length) {
																				var kid21 = childs20[_g20];
																				++_g20;
																				switch(kid21.name) {
																				case "g":
																					var g45 = this.parseGroup(kid21);
																					break;
																				case "path":
																					var p32 = { };
																					var at58 = HxOverrides.iter(kid21.attributes([]));
																					while(at58.hasNext()) {
																						var at59 = at58.next();
																						switch(at59.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at59.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p32.d = at59.value;
																							break;
																						case "fill":
																							p32.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at59.value);
																							break;
																						case "id":
																							p32.id = at59.value;
																							break;
																						case "stroke":
																							p32.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at59.value);
																							break;
																						case "stroke-width":
																							p32.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at59.value);
																							break;
																						}
																					}
																					var g46 = this.group;
																					if(g46 == { }) {
																						g46 = null;
																					}
																					this.renderPath(p32,this.group);
																					var p33 = p32;
																					break;
																				default:
																					this.parseChild(kid21);
																				}
																			}
																		}
																		var g47 = g44;
																		break;
																	case "path":
																		var p34 = { };
																		var at60 = HxOverrides.iter(kid20.attributes([]));
																		while(at60.hasNext()) {
																			var at61 = at60.next();
																			switch(at61.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at61.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p34.d = at61.value;
																				break;
																			case "fill":
																				p34.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at61.value);
																				break;
																			case "id":
																				p34.id = at61.value;
																				break;
																			case "stroke":
																				p34.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at61.value);
																				break;
																			case "stroke-width":
																				p34.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at61.value);
																				break;
																			}
																		}
																		var g48 = this.group;
																		if(g48 == { }) {
																			g48 = null;
																		}
																		this.renderPath(p34,this.group);
																		var p35 = p34;
																		break;
																	default:
																		var childs21 = kid20.childNodules([]);
																		var _g21 = 0;
																		while(_g21 < childs21.length) {
																			var kid22 = childs21[_g21];
																			++_g21;
																			switch(kid22.name) {
																			case "g":
																				var g49 = { };
																				var at62 = HxOverrides.iter(kid22.attributes([]));
																				while(at62.hasNext()) {
																					var at63 = at62.next();
																					switch(at63.name) {
																					case "fill":
																						g49.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at63.value);
																						break;
																					case "id":
																						g49.id = at63.value;
																						break;
																					case "stroke":
																						g49.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at63.value);
																						break;
																					case "stroke-width":
																						g49.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at63.value);
																						break;
																					case "transform":
																						g49.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at63.value);
																						break;
																					case "version":
																						g49.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at63.value);
																						break;
																					case "viewBox":
																						g49.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at63.value);
																						break;
																					case "xmlns":
																						g49.xmlns = at63.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at63.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g49;
																				if(kid22.firstChild != null) {
																					var childs22 = kid22.childNodules([]);
																					var _g22 = 0;
																					while(_g22 < childs22.length) {
																						var kid23 = childs22[_g22];
																						++_g22;
																						switch(kid23.name) {
																						case "g":
																							var g50 = { };
																							var at64 = HxOverrides.iter(kid23.attributes([]));
																							while(at64.hasNext()) {
																								var at65 = at64.next();
																								switch(at65.name) {
																								case "fill":
																									g50.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at65.value);
																									break;
																								case "id":
																									g50.id = at65.value;
																									break;
																								case "stroke":
																									g50.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at65.value);
																									break;
																								case "stroke-width":
																									g50.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at65.value);
																									break;
																								case "transform":
																									g50.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at65.value);
																									break;
																								case "version":
																									g50.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at65.value);
																									break;
																								case "viewBox":
																									g50.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at65.value);
																									break;
																								case "xmlns":
																									g50.xmlns = at65.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at65.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g50;
																							if(kid23.firstChild != null) {
																								var childs23 = kid23.childNodules([]);
																								var _g23 = 0;
																								while(_g23 < childs23.length) {
																									var kid24 = childs23[_g23];
																									++_g23;
																									switch(kid24.name) {
																									case "g":
																										var g51 = this.parseGroup(kid24);
																										break;
																									case "path":
																										var p36 = { };
																										var at66 = HxOverrides.iter(kid24.attributes([]));
																										while(at66.hasNext()) {
																											var at67 = at66.next();
																											switch(at67.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at67.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p36.d = at67.value;
																												break;
																											case "fill":
																												p36.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at67.value);
																												break;
																											case "id":
																												p36.id = at67.value;
																												break;
																											case "stroke":
																												p36.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at67.value);
																												break;
																											case "stroke-width":
																												p36.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at67.value);
																												break;
																											}
																										}
																										var g52 = this.group;
																										if(g52 == { }) {
																											g52 = null;
																										}
																										this.renderPath(p36,this.group);
																										var p37 = p36;
																										break;
																									default:
																										this.parseChild(kid24);
																									}
																								}
																							}
																							var g53 = g50;
																							break;
																						case "path":
																							var p38 = { };
																							var at68 = HxOverrides.iter(kid23.attributes([]));
																							while(at68.hasNext()) {
																								var at69 = at68.next();
																								switch(at69.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at69.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p38.d = at69.value;
																									break;
																								case "fill":
																									p38.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at69.value);
																									break;
																								case "id":
																									p38.id = at69.value;
																									break;
																								case "stroke":
																									p38.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at69.value);
																									break;
																								case "stroke-width":
																									p38.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at69.value);
																									break;
																								}
																							}
																							var g54 = this.group;
																							if(g54 == { }) {
																								g54 = null;
																							}
																							this.renderPath(p38,this.group);
																							var p39 = p38;
																							break;
																						default:
																							var childs24 = kid23.childNodules([]);
																							var _g24 = 0;
																							while(_g24 < childs24.length) {
																								var kid25 = childs24[_g24];
																								++_g24;
																								switch(kid25.name) {
																								case "g":
																									var g55 = { };
																									var at70 = HxOverrides.iter(kid25.attributes([]));
																									while(at70.hasNext()) {
																										var at71 = at70.next();
																										switch(at71.name) {
																										case "fill":
																											g55.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at71.value);
																											break;
																										case "id":
																											g55.id = at71.value;
																											break;
																										case "stroke":
																											g55.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at71.value);
																											break;
																										case "stroke-width":
																											g55.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at71.value);
																											break;
																										case "transform":
																											g55.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at71.value);
																											break;
																										case "version":
																											g55.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at71.value);
																											break;
																										case "viewBox":
																											g55.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at71.value);
																											break;
																										case "xmlns":
																											g55.xmlns = at71.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at71.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g55;
																									if(kid25.firstChild != null) {
																										var childs25 = kid25.childNodules([]);
																										var _g25 = 0;
																										while(_g25 < childs25.length) {
																											var kid26 = childs25[_g25];
																											++_g25;
																											switch(kid26.name) {
																											case "g":
																												var g56 = this.parseGroup(kid26);
																												break;
																											case "path":
																												var p40 = { };
																												var at72 = HxOverrides.iter(kid26.attributes([]));
																												while(at72.hasNext()) {
																													var at73 = at72.next();
																													switch(at73.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at73.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p40.d = at73.value;
																														break;
																													case "fill":
																														p40.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at73.value);
																														break;
																													case "id":
																														p40.id = at73.value;
																														break;
																													case "stroke":
																														p40.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at73.value);
																														break;
																													case "stroke-width":
																														p40.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at73.value);
																														break;
																													}
																												}
																												var g57 = this.group;
																												if(g57 == { }) {
																													g57 = null;
																												}
																												this.renderPath(p40,this.group);
																												var p41 = p40;
																												break;
																											default:
																												this.parseChild(kid26);
																											}
																										}
																									}
																									var g58 = g55;
																									break;
																								case "path":
																									var p42 = { };
																									var at74 = HxOverrides.iter(kid25.attributes([]));
																									while(at74.hasNext()) {
																										var at75 = at74.next();
																										switch(at75.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at75.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p42.d = at75.value;
																											break;
																										case "fill":
																											p42.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at75.value);
																											break;
																										case "id":
																											p42.id = at75.value;
																											break;
																										case "stroke":
																											p42.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at75.value);
																											break;
																										case "stroke-width":
																											p42.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at75.value);
																											break;
																										}
																									}
																									var g59 = this.group;
																									if(g59 == { }) {
																										g59 = null;
																									}
																									this.renderPath(p42,this.group);
																									var p43 = p42;
																									break;
																								default:
																									var childs26 = kid25.childNodules([]);
																									var _g26 = 0;
																									while(_g26 < childs26.length) {
																										var kid27 = childs26[_g26];
																										++_g26;
																										switch(kid27.name) {
																										case "g":
																											var g60 = this.parseGroup(kid27);
																											break;
																										case "path":
																											var p44 = { };
																											var at76 = HxOverrides.iter(kid27.attributes([]));
																											while(at76.hasNext()) {
																												var at77 = at76.next();
																												switch(at77.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at77.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p44.d = at77.value;
																													break;
																												case "fill":
																													p44.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at77.value);
																													break;
																												case "id":
																													p44.id = at77.value;
																													break;
																												case "stroke":
																													p44.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at77.value);
																													break;
																												case "stroke-width":
																													p44.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at77.value);
																													break;
																												}
																											}
																											var g61 = this.group;
																											if(g61 == { }) {
																												g61 = null;
																											}
																											this.renderPath(p44,this.group);
																											var p45 = p44;
																											break;
																										default:
																											this.parseChild(kid27);
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				var g62 = g49;
																				break;
																			case "path":
																				var p46 = { };
																				var at78 = HxOverrides.iter(kid22.attributes([]));
																				while(at78.hasNext()) {
																					var at79 = at78.next();
																					switch(at79.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at79.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p46.d = at79.value;
																						break;
																					case "fill":
																						p46.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at79.value);
																						break;
																					case "id":
																						p46.id = at79.value;
																						break;
																					case "stroke":
																						p46.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at79.value);
																						break;
																					case "stroke-width":
																						p46.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at79.value);
																						break;
																					}
																				}
																				var g63 = this.group;
																				if(g63 == { }) {
																					g63 = null;
																				}
																				this.renderPath(p46,this.group);
																				var p47 = p46;
																				break;
																			default:
																				var childs27 = kid22.childNodules([]);
																				var _g27 = 0;
																				while(_g27 < childs27.length) {
																					var kid28 = childs27[_g27];
																					++_g27;
																					switch(kid28.name) {
																					case "g":
																						var g64 = { };
																						var at80 = HxOverrides.iter(kid28.attributes([]));
																						while(at80.hasNext()) {
																							var at81 = at80.next();
																							switch(at81.name) {
																							case "fill":
																								g64.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at81.value);
																								break;
																							case "id":
																								g64.id = at81.value;
																								break;
																							case "stroke":
																								g64.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at81.value);
																								break;
																							case "stroke-width":
																								g64.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at81.value);
																								break;
																							case "transform":
																								g64.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at81.value);
																								break;
																							case "version":
																								g64.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at81.value);
																								break;
																							case "viewBox":
																								g64.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at81.value);
																								break;
																							case "xmlns":
																								g64.xmlns = at81.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at81.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g64;
																						if(kid28.firstChild != null) {
																							var childs28 = kid28.childNodules([]);
																							var _g28 = 0;
																							while(_g28 < childs28.length) {
																								var kid29 = childs28[_g28];
																								++_g28;
																								switch(kid29.name) {
																								case "g":
																									var g65 = { };
																									var at82 = HxOverrides.iter(kid29.attributes([]));
																									while(at82.hasNext()) {
																										var at83 = at82.next();
																										switch(at83.name) {
																										case "fill":
																											g65.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at83.value);
																											break;
																										case "id":
																											g65.id = at83.value;
																											break;
																										case "stroke":
																											g65.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at83.value);
																											break;
																										case "stroke-width":
																											g65.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at83.value);
																											break;
																										case "transform":
																											g65.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at83.value);
																											break;
																										case "version":
																											g65.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at83.value);
																											break;
																										case "viewBox":
																											g65.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at83.value);
																											break;
																										case "xmlns":
																											g65.xmlns = at83.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at83.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g65;
																									if(kid29.firstChild != null) {
																										var childs29 = kid29.childNodules([]);
																										var _g29 = 0;
																										while(_g29 < childs29.length) {
																											var kid30 = childs29[_g29];
																											++_g29;
																											switch(kid30.name) {
																											case "g":
																												var g66 = this.parseGroup(kid30);
																												break;
																											case "path":
																												var p48 = { };
																												var at84 = HxOverrides.iter(kid30.attributes([]));
																												while(at84.hasNext()) {
																													var at85 = at84.next();
																													switch(at85.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at85.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p48.d = at85.value;
																														break;
																													case "fill":
																														p48.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at85.value);
																														break;
																													case "id":
																														p48.id = at85.value;
																														break;
																													case "stroke":
																														p48.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at85.value);
																														break;
																													case "stroke-width":
																														p48.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at85.value);
																														break;
																													}
																												}
																												var g67 = this.group;
																												if(g67 == { }) {
																													g67 = null;
																												}
																												this.renderPath(p48,this.group);
																												var p49 = p48;
																												break;
																											default:
																												this.parseChild(kid30);
																											}
																										}
																									}
																									var g68 = g65;
																									break;
																								case "path":
																									var p50 = { };
																									var at86 = HxOverrides.iter(kid29.attributes([]));
																									while(at86.hasNext()) {
																										var at87 = at86.next();
																										switch(at87.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at87.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p50.d = at87.value;
																											break;
																										case "fill":
																											p50.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at87.value);
																											break;
																										case "id":
																											p50.id = at87.value;
																											break;
																										case "stroke":
																											p50.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at87.value);
																											break;
																										case "stroke-width":
																											p50.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at87.value);
																											break;
																										}
																									}
																									var g69 = this.group;
																									if(g69 == { }) {
																										g69 = null;
																									}
																									this.renderPath(p50,this.group);
																									var p51 = p50;
																									break;
																								default:
																									var childs30 = kid29.childNodules([]);
																									var _g30 = 0;
																									while(_g30 < childs30.length) {
																										var kid31 = childs30[_g30];
																										++_g30;
																										switch(kid31.name) {
																										case "g":
																											var g70 = this.parseGroup(kid31);
																											break;
																										case "path":
																											var p52 = { };
																											var at88 = HxOverrides.iter(kid31.attributes([]));
																											while(at88.hasNext()) {
																												var at89 = at88.next();
																												switch(at89.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at89.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p52.d = at89.value;
																													break;
																												case "fill":
																													p52.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at89.value);
																													break;
																												case "id":
																													p52.id = at89.value;
																													break;
																												case "stroke":
																													p52.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at89.value);
																													break;
																												case "stroke-width":
																													p52.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at89.value);
																													break;
																												}
																											}
																											var g71 = this.group;
																											if(g71 == { }) {
																												g71 = null;
																											}
																											this.renderPath(p52,this.group);
																											var p53 = p52;
																											break;
																										default:
																											this.parseChild(kid31);
																										}
																									}
																								}
																							}
																						}
																						var g72 = g64;
																						break;
																					case "path":
																						var p54 = { };
																						var at90 = HxOverrides.iter(kid28.attributes([]));
																						while(at90.hasNext()) {
																							var at91 = at90.next();
																							switch(at91.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at91.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p54.d = at91.value;
																								break;
																							case "fill":
																								p54.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at91.value);
																								break;
																							case "id":
																								p54.id = at91.value;
																								break;
																							case "stroke":
																								p54.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at91.value);
																								break;
																							case "stroke-width":
																								p54.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at91.value);
																								break;
																							}
																						}
																						var g73 = this.group;
																						if(g73 == { }) {
																							g73 = null;
																						}
																						this.renderPath(p54,this.group);
																						var p55 = p54;
																						break;
																					default:
																						var childs31 = kid28.childNodules([]);
																						var _g31 = 0;
																						while(_g31 < childs31.length) {
																							var kid32 = childs31[_g31];
																							++_g31;
																							switch(kid32.name) {
																							case "g":
																								var g74 = this.parseGroup(kid32);
																								break;
																							case "path":
																								var p56 = { };
																								var at92 = HxOverrides.iter(kid32.attributes([]));
																								while(at92.hasNext()) {
																									var at93 = at92.next();
																									switch(at93.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at93.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p56.d = at93.value;
																										break;
																									case "fill":
																										p56.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at93.value);
																										break;
																									case "id":
																										p56.id = at93.value;
																										break;
																									case "stroke":
																										p56.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at93.value);
																										break;
																									case "stroke-width":
																										p56.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at93.value);
																										break;
																									}
																								}
																								var g75 = this.group;
																								if(g75 == { }) {
																									g75 = null;
																								}
																								this.renderPath(p56,this.group);
																								var p57 = p56;
																								break;
																							default:
																								this.parseChild(kid32);
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
															var g76 = g43;
															break;
														case "path":
															var p58 = { };
															var at94 = HxOverrides.iter(kid19.attributes([]));
															while(at94.hasNext()) {
																var at95 = at94.next();
																switch(at95.name) {
																case "_":
																	haxe_Log.trace("path attribute " + at95.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																	break;
																case "d":
																	p58.d = at95.value;
																	break;
																case "fill":
																	p58.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at95.value);
																	break;
																case "id":
																	p58.id = at95.value;
																	break;
																case "stroke":
																	p58.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at95.value);
																	break;
																case "stroke-width":
																	p58.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at95.value);
																	break;
																}
															}
															var g77 = this.group;
															if(g77 == { }) {
																g77 = null;
															}
															this.renderPath(p58,this.group);
															var p59 = p58;
															break;
														default:
															var childs32 = kid19.childNodules([]);
															var _g32 = 0;
															while(_g32 < childs32.length) {
																var kid33 = childs32[_g32];
																++_g32;
																switch(kid33.name) {
																case "g":
																	var g78 = { };
																	var at96 = HxOverrides.iter(kid33.attributes([]));
																	while(at96.hasNext()) {
																		var at97 = at96.next();
																		switch(at97.name) {
																		case "fill":
																			g78.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at97.value);
																			break;
																		case "id":
																			g78.id = at97.value;
																			break;
																		case "stroke":
																			g78.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at97.value);
																			break;
																		case "stroke-width":
																			g78.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at97.value);
																			break;
																		case "transform":
																			g78.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at97.value);
																			break;
																		case "version":
																			g78.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at97.value);
																			break;
																		case "viewBox":
																			g78.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at97.value);
																			break;
																		case "xmlns":
																			g78.xmlns = at97.value;
																			break;
																		default:
																			haxe_Log.trace("group attribute " + at97.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																		}
																	}
																	this.group = g78;
																	if(kid33.firstChild != null) {
																		var childs33 = kid33.childNodules([]);
																		var _g33 = 0;
																		while(_g33 < childs33.length) {
																			var kid34 = childs33[_g33];
																			++_g33;
																			switch(kid34.name) {
																			case "g":
																				var g79 = this.parseGroup(kid34);
																				break;
																			case "path":
																				var p60 = { };
																				var at98 = HxOverrides.iter(kid34.attributes([]));
																				while(at98.hasNext()) {
																					var at99 = at98.next();
																					switch(at99.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at99.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p60.d = at99.value;
																						break;
																					case "fill":
																						p60.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at99.value);
																						break;
																					case "id":
																						p60.id = at99.value;
																						break;
																					case "stroke":
																						p60.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at99.value);
																						break;
																					case "stroke-width":
																						p60.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at99.value);
																						break;
																					}
																				}
																				var g80 = this.group;
																				if(g80 == { }) {
																					g80 = null;
																				}
																				this.renderPath(p60,this.group);
																				var p61 = p60;
																				break;
																			default:
																				this.parseChild(kid34);
																			}
																		}
																	}
																	var g81 = g78;
																	break;
																case "path":
																	var p62 = { };
																	var at100 = HxOverrides.iter(kid33.attributes([]));
																	while(at100.hasNext()) {
																		var at101 = at100.next();
																		switch(at101.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at101.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p62.d = at101.value;
																			break;
																		case "fill":
																			p62.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at101.value);
																			break;
																		case "id":
																			p62.id = at101.value;
																			break;
																		case "stroke":
																			p62.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at101.value);
																			break;
																		case "stroke-width":
																			p62.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at101.value);
																			break;
																		}
																	}
																	var g82 = this.group;
																	if(g82 == { }) {
																		g82 = null;
																	}
																	this.renderPath(p62,this.group);
																	var p63 = p62;
																	break;
																default:
																	var childs34 = kid33.childNodules([]);
																	var _g34 = 0;
																	while(_g34 < childs34.length) {
																		var kid35 = childs34[_g34];
																		++_g34;
																		switch(kid35.name) {
																		case "g":
																			var g83 = { };
																			var at102 = HxOverrides.iter(kid35.attributes([]));
																			while(at102.hasNext()) {
																				var at103 = at102.next();
																				switch(at103.name) {
																				case "fill":
																					g83.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at103.value);
																					break;
																				case "id":
																					g83.id = at103.value;
																					break;
																				case "stroke":
																					g83.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at103.value);
																					break;
																				case "stroke-width":
																					g83.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at103.value);
																					break;
																				case "transform":
																					g83.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at103.value);
																					break;
																				case "version":
																					g83.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at103.value);
																					break;
																				case "viewBox":
																					g83.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at103.value);
																					break;
																				case "xmlns":
																					g83.xmlns = at103.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at103.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g83;
																			if(kid35.firstChild != null) {
																				var childs35 = kid35.childNodules([]);
																				var _g35 = 0;
																				while(_g35 < childs35.length) {
																					var kid36 = childs35[_g35];
																					++_g35;
																					switch(kid36.name) {
																					case "g":
																						var g84 = { };
																						var at104 = HxOverrides.iter(kid36.attributes([]));
																						while(at104.hasNext()) {
																							var at105 = at104.next();
																							switch(at105.name) {
																							case "fill":
																								g84.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at105.value);
																								break;
																							case "id":
																								g84.id = at105.value;
																								break;
																							case "stroke":
																								g84.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at105.value);
																								break;
																							case "stroke-width":
																								g84.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at105.value);
																								break;
																							case "transform":
																								g84.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at105.value);
																								break;
																							case "version":
																								g84.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at105.value);
																								break;
																							case "viewBox":
																								g84.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at105.value);
																								break;
																							case "xmlns":
																								g84.xmlns = at105.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at105.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g84;
																						if(kid36.firstChild != null) {
																							var childs36 = kid36.childNodules([]);
																							var _g36 = 0;
																							while(_g36 < childs36.length) {
																								var kid37 = childs36[_g36];
																								++_g36;
																								switch(kid37.name) {
																								case "g":
																									var g85 = this.parseGroup(kid37);
																									break;
																								case "path":
																									var p64 = { };
																									var at106 = HxOverrides.iter(kid37.attributes([]));
																									while(at106.hasNext()) {
																										var at107 = at106.next();
																										switch(at107.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at107.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p64.d = at107.value;
																											break;
																										case "fill":
																											p64.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at107.value);
																											break;
																										case "id":
																											p64.id = at107.value;
																											break;
																										case "stroke":
																											p64.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at107.value);
																											break;
																										case "stroke-width":
																											p64.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at107.value);
																											break;
																										}
																									}
																									var g86 = this.group;
																									if(g86 == { }) {
																										g86 = null;
																									}
																									this.renderPath(p64,this.group);
																									var p65 = p64;
																									break;
																								default:
																									this.parseChild(kid37);
																								}
																							}
																						}
																						var g87 = g84;
																						break;
																					case "path":
																						var p66 = { };
																						var at108 = HxOverrides.iter(kid36.attributes([]));
																						while(at108.hasNext()) {
																							var at109 = at108.next();
																							switch(at109.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at109.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p66.d = at109.value;
																								break;
																							case "fill":
																								p66.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at109.value);
																								break;
																							case "id":
																								p66.id = at109.value;
																								break;
																							case "stroke":
																								p66.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at109.value);
																								break;
																							case "stroke-width":
																								p66.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at109.value);
																								break;
																							}
																						}
																						var g88 = this.group;
																						if(g88 == { }) {
																							g88 = null;
																						}
																						this.renderPath(p66,this.group);
																						var p67 = p66;
																						break;
																					default:
																						var childs37 = kid36.childNodules([]);
																						var _g37 = 0;
																						while(_g37 < childs37.length) {
																							var kid38 = childs37[_g37];
																							++_g37;
																							switch(kid38.name) {
																							case "g":
																								var g89 = { };
																								var at110 = HxOverrides.iter(kid38.attributes([]));
																								while(at110.hasNext()) {
																									var at111 = at110.next();
																									switch(at111.name) {
																									case "fill":
																										g89.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at111.value);
																										break;
																									case "id":
																										g89.id = at111.value;
																										break;
																									case "stroke":
																										g89.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at111.value);
																										break;
																									case "stroke-width":
																										g89.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at111.value);
																										break;
																									case "transform":
																										g89.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at111.value);
																										break;
																									case "version":
																										g89.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at111.value);
																										break;
																									case "viewBox":
																										g89.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at111.value);
																										break;
																									case "xmlns":
																										g89.xmlns = at111.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at111.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g89;
																								if(kid38.firstChild != null) {
																									var childs38 = kid38.childNodules([]);
																									var _g38 = 0;
																									while(_g38 < childs38.length) {
																										var kid39 = childs38[_g38];
																										++_g38;
																										switch(kid39.name) {
																										case "g":
																											var g90 = this.parseGroup(kid39);
																											break;
																										case "path":
																											var p68 = { };
																											var at112 = HxOverrides.iter(kid39.attributes([]));
																											while(at112.hasNext()) {
																												var at113 = at112.next();
																												switch(at113.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at113.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p68.d = at113.value;
																													break;
																												case "fill":
																													p68.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at113.value);
																													break;
																												case "id":
																													p68.id = at113.value;
																													break;
																												case "stroke":
																													p68.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at113.value);
																													break;
																												case "stroke-width":
																													p68.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at113.value);
																													break;
																												}
																											}
																											var g91 = this.group;
																											if(g91 == { }) {
																												g91 = null;
																											}
																											this.renderPath(p68,this.group);
																											var p69 = p68;
																											break;
																										default:
																											this.parseChild(kid39);
																										}
																									}
																								}
																								var g92 = g89;
																								break;
																							case "path":
																								var p70 = { };
																								var at114 = HxOverrides.iter(kid38.attributes([]));
																								while(at114.hasNext()) {
																									var at115 = at114.next();
																									switch(at115.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at115.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p70.d = at115.value;
																										break;
																									case "fill":
																										p70.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at115.value);
																										break;
																									case "id":
																										p70.id = at115.value;
																										break;
																									case "stroke":
																										p70.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at115.value);
																										break;
																									case "stroke-width":
																										p70.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at115.value);
																										break;
																									}
																								}
																								var g93 = this.group;
																								if(g93 == { }) {
																									g93 = null;
																								}
																								this.renderPath(p70,this.group);
																								var p71 = p70;
																								break;
																							default:
																								var childs39 = kid38.childNodules([]);
																								var _g39 = 0;
																								while(_g39 < childs39.length) {
																									var kid40 = childs39[_g39];
																									++_g39;
																									switch(kid40.name) {
																									case "g":
																										var g94 = this.parseGroup(kid40);
																										break;
																									case "path":
																										var p72 = { };
																										var at116 = HxOverrides.iter(kid40.attributes([]));
																										while(at116.hasNext()) {
																											var at117 = at116.next();
																											switch(at117.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at117.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p72.d = at117.value;
																												break;
																											case "fill":
																												p72.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at117.value);
																												break;
																											case "id":
																												p72.id = at117.value;
																												break;
																											case "stroke":
																												p72.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at117.value);
																												break;
																											case "stroke-width":
																												p72.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at117.value);
																												break;
																											}
																										}
																										var g95 = this.group;
																										if(g95 == { }) {
																											g95 = null;
																										}
																										this.renderPath(p72,this.group);
																										var p73 = p72;
																										break;
																									default:
																										this.parseChild(kid40);
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																			var g96 = g83;
																			break;
																		case "path":
																			var p74 = { };
																			var at118 = HxOverrides.iter(kid35.attributes([]));
																			while(at118.hasNext()) {
																				var at119 = at118.next();
																				switch(at119.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at119.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p74.d = at119.value;
																					break;
																				case "fill":
																					p74.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at119.value);
																					break;
																				case "id":
																					p74.id = at119.value;
																					break;
																				case "stroke":
																					p74.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at119.value);
																					break;
																				case "stroke-width":
																					p74.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at119.value);
																					break;
																				}
																			}
																			var g97 = this.group;
																			if(g97 == { }) {
																				g97 = null;
																			}
																			this.renderPath(p74,this.group);
																			var p75 = p74;
																			break;
																		default:
																			var childs40 = kid35.childNodules([]);
																			var _g40 = 0;
																			while(_g40 < childs40.length) {
																				var kid41 = childs40[_g40];
																				++_g40;
																				switch(kid41.name) {
																				case "g":
																					var g98 = { };
																					var at120 = HxOverrides.iter(kid41.attributes([]));
																					while(at120.hasNext()) {
																						var at121 = at120.next();
																						switch(at121.name) {
																						case "fill":
																							g98.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at121.value);
																							break;
																						case "id":
																							g98.id = at121.value;
																							break;
																						case "stroke":
																							g98.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at121.value);
																							break;
																						case "stroke-width":
																							g98.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at121.value);
																							break;
																						case "transform":
																							g98.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at121.value);
																							break;
																						case "version":
																							g98.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at121.value);
																							break;
																						case "viewBox":
																							g98.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at121.value);
																							break;
																						case "xmlns":
																							g98.xmlns = at121.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at121.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g98;
																					if(kid41.firstChild != null) {
																						var childs41 = kid41.childNodules([]);
																						var _g41 = 0;
																						while(_g41 < childs41.length) {
																							var kid42 = childs41[_g41];
																							++_g41;
																							switch(kid42.name) {
																							case "g":
																								var g99 = { };
																								var at122 = HxOverrides.iter(kid42.attributes([]));
																								while(at122.hasNext()) {
																									var at123 = at122.next();
																									switch(at123.name) {
																									case "fill":
																										g99.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at123.value);
																										break;
																									case "id":
																										g99.id = at123.value;
																										break;
																									case "stroke":
																										g99.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at123.value);
																										break;
																									case "stroke-width":
																										g99.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at123.value);
																										break;
																									case "transform":
																										g99.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at123.value);
																										break;
																									case "version":
																										g99.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at123.value);
																										break;
																									case "viewBox":
																										g99.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at123.value);
																										break;
																									case "xmlns":
																										g99.xmlns = at123.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at123.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g99;
																								if(kid42.firstChild != null) {
																									var childs42 = kid42.childNodules([]);
																									var _g42 = 0;
																									while(_g42 < childs42.length) {
																										var kid43 = childs42[_g42];
																										++_g42;
																										switch(kid43.name) {
																										case "g":
																											var g100 = this.parseGroup(kid43);
																											break;
																										case "path":
																											var p76 = { };
																											var at124 = HxOverrides.iter(kid43.attributes([]));
																											while(at124.hasNext()) {
																												var at125 = at124.next();
																												switch(at125.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at125.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p76.d = at125.value;
																													break;
																												case "fill":
																													p76.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at125.value);
																													break;
																												case "id":
																													p76.id = at125.value;
																													break;
																												case "stroke":
																													p76.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at125.value);
																													break;
																												case "stroke-width":
																													p76.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at125.value);
																													break;
																												}
																											}
																											var g101 = this.group;
																											if(g101 == { }) {
																												g101 = null;
																											}
																											this.renderPath(p76,this.group);
																											var p77 = p76;
																											break;
																										default:
																											this.parseChild(kid43);
																										}
																									}
																								}
																								var g102 = g99;
																								break;
																							case "path":
																								var p78 = { };
																								var at126 = HxOverrides.iter(kid42.attributes([]));
																								while(at126.hasNext()) {
																									var at127 = at126.next();
																									switch(at127.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at127.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p78.d = at127.value;
																										break;
																									case "fill":
																										p78.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at127.value);
																										break;
																									case "id":
																										p78.id = at127.value;
																										break;
																									case "stroke":
																										p78.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at127.value);
																										break;
																									case "stroke-width":
																										p78.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at127.value);
																										break;
																									}
																								}
																								var g103 = this.group;
																								if(g103 == { }) {
																									g103 = null;
																								}
																								this.renderPath(p78,this.group);
																								var p79 = p78;
																								break;
																							default:
																								var childs43 = kid42.childNodules([]);
																								var _g43 = 0;
																								while(_g43 < childs43.length) {
																									var kid44 = childs43[_g43];
																									++_g43;
																									switch(kid44.name) {
																									case "g":
																										var g104 = this.parseGroup(kid44);
																										break;
																									case "path":
																										var p80 = { };
																										var at128 = HxOverrides.iter(kid44.attributes([]));
																										while(at128.hasNext()) {
																											var at129 = at128.next();
																											switch(at129.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at129.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p80.d = at129.value;
																												break;
																											case "fill":
																												p80.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at129.value);
																												break;
																											case "id":
																												p80.id = at129.value;
																												break;
																											case "stroke":
																												p80.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at129.value);
																												break;
																											case "stroke-width":
																												p80.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at129.value);
																												break;
																											}
																										}
																										var g105 = this.group;
																										if(g105 == { }) {
																											g105 = null;
																										}
																										this.renderPath(p80,this.group);
																										var p81 = p80;
																										break;
																									default:
																										this.parseChild(kid44);
																									}
																								}
																							}
																						}
																					}
																					var g106 = g98;
																					break;
																				case "path":
																					var p82 = { };
																					var at130 = HxOverrides.iter(kid41.attributes([]));
																					while(at130.hasNext()) {
																						var at131 = at130.next();
																						switch(at131.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at131.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p82.d = at131.value;
																							break;
																						case "fill":
																							p82.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at131.value);
																							break;
																						case "id":
																							p82.id = at131.value;
																							break;
																						case "stroke":
																							p82.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at131.value);
																							break;
																						case "stroke-width":
																							p82.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at131.value);
																							break;
																						}
																					}
																					var g107 = this.group;
																					if(g107 == { }) {
																						g107 = null;
																					}
																					this.renderPath(p82,this.group);
																					var p83 = p82;
																					break;
																				default:
																					var childs44 = kid41.childNodules([]);
																					var _g44 = 0;
																					while(_g44 < childs44.length) {
																						var kid45 = childs44[_g44];
																						++_g44;
																						switch(kid45.name) {
																						case "g":
																							var g108 = this.parseGroup(kid45);
																							break;
																						case "path":
																							var p84 = { };
																							var at132 = HxOverrides.iter(kid45.attributes([]));
																							while(at132.hasNext()) {
																								var at133 = at132.next();
																								switch(at133.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at133.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p84.d = at133.value;
																									break;
																								case "fill":
																									p84.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at133.value);
																									break;
																								case "id":
																									p84.id = at133.value;
																									break;
																								case "stroke":
																									p84.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at133.value);
																									break;
																								case "stroke-width":
																									p84.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at133.value);
																									break;
																								}
																							}
																							var g109 = this.group;
																							if(g109 == { }) {
																								g109 = null;
																							}
																							this.renderPath(p84,this.group);
																							var p85 = p84;
																							break;
																						default:
																							this.parseChild(kid45);
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										var g110 = g7;
										break;
									case "path":
										var p86 = { };
										var at134 = HxOverrides.iter(kid4.attributes([]));
										while(at134.hasNext()) {
											var at135 = at134.next();
											switch(at135.name) {
											case "_":
												haxe_Log.trace("path attribute " + at135.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
												break;
											case "d":
												p86.d = at135.value;
												break;
											case "fill":
												p86.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at135.value);
												break;
											case "id":
												p86.id = at135.value;
												break;
											case "stroke":
												p86.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at135.value);
												break;
											case "stroke-width":
												p86.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at135.value);
												break;
											}
										}
										var g111 = this.group;
										if(g111 == { }) {
											g111 = null;
										}
										this.renderPath(p86,this.group);
										var p87 = p86;
										break;
									default:
										var childs45 = kid4.childNodules([]);
										var _g45 = 0;
										while(_g45 < childs45.length) {
											var kid46 = childs45[_g45];
											++_g45;
											switch(kid46.name) {
											case "g":
												var g112 = { };
												var at136 = HxOverrides.iter(kid46.attributes([]));
												while(at136.hasNext()) {
													var at137 = at136.next();
													switch(at137.name) {
													case "fill":
														g112.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at137.value);
														break;
													case "id":
														g112.id = at137.value;
														break;
													case "stroke":
														g112.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at137.value);
														break;
													case "stroke-width":
														g112.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at137.value);
														break;
													case "transform":
														g112.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at137.value);
														break;
													case "version":
														g112.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at137.value);
														break;
													case "viewBox":
														g112.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at137.value);
														break;
													case "xmlns":
														g112.xmlns = at137.value;
														break;
													default:
														haxe_Log.trace("group attribute " + at137.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
													}
												}
												this.group = g112;
												if(kid46.firstChild != null) {
													var childs46 = kid46.childNodules([]);
													var _g46 = 0;
													while(_g46 < childs46.length) {
														var kid47 = childs46[_g46];
														++_g46;
														switch(kid47.name) {
														case "g":
															var g113 = { };
															var at138 = HxOverrides.iter(kid47.attributes([]));
															while(at138.hasNext()) {
																var at139 = at138.next();
																switch(at139.name) {
																case "fill":
																	g113.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at139.value);
																	break;
																case "id":
																	g113.id = at139.value;
																	break;
																case "stroke":
																	g113.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at139.value);
																	break;
																case "stroke-width":
																	g113.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at139.value);
																	break;
																case "transform":
																	g113.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at139.value);
																	break;
																case "version":
																	g113.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at139.value);
																	break;
																case "viewBox":
																	g113.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at139.value);
																	break;
																case "xmlns":
																	g113.xmlns = at139.value;
																	break;
																default:
																	haxe_Log.trace("group attribute " + at139.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																}
															}
															this.group = g113;
															if(kid47.firstChild != null) {
																var childs47 = kid47.childNodules([]);
																var _g47 = 0;
																while(_g47 < childs47.length) {
																	var kid48 = childs47[_g47];
																	++_g47;
																	switch(kid48.name) {
																	case "g":
																		var g114 = { };
																		var at140 = HxOverrides.iter(kid48.attributes([]));
																		while(at140.hasNext()) {
																			var at141 = at140.next();
																			switch(at141.name) {
																			case "fill":
																				g114.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at141.value);
																				break;
																			case "id":
																				g114.id = at141.value;
																				break;
																			case "stroke":
																				g114.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at141.value);
																				break;
																			case "stroke-width":
																				g114.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at141.value);
																				break;
																			case "transform":
																				g114.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at141.value);
																				break;
																			case "version":
																				g114.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at141.value);
																				break;
																			case "viewBox":
																				g114.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at141.value);
																				break;
																			case "xmlns":
																				g114.xmlns = at141.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at141.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g114;
																		if(kid48.firstChild != null) {
																			var childs48 = kid48.childNodules([]);
																			var _g48 = 0;
																			while(_g48 < childs48.length) {
																				var kid49 = childs48[_g48];
																				++_g48;
																				switch(kid49.name) {
																				case "g":
																					var g115 = this.parseGroup(kid49);
																					break;
																				case "path":
																					var p88 = { };
																					var at142 = HxOverrides.iter(kid49.attributes([]));
																					while(at142.hasNext()) {
																						var at143 = at142.next();
																						switch(at143.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at143.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p88.d = at143.value;
																							break;
																						case "fill":
																							p88.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at143.value);
																							break;
																						case "id":
																							p88.id = at143.value;
																							break;
																						case "stroke":
																							p88.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at143.value);
																							break;
																						case "stroke-width":
																							p88.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at143.value);
																							break;
																						}
																					}
																					var g116 = this.group;
																					if(g116 == { }) {
																						g116 = null;
																					}
																					this.renderPath(p88,this.group);
																					var p89 = p88;
																					break;
																				default:
																					this.parseChild(kid49);
																				}
																			}
																		}
																		var g117 = g114;
																		break;
																	case "path":
																		var p90 = { };
																		var at144 = HxOverrides.iter(kid48.attributes([]));
																		while(at144.hasNext()) {
																			var at145 = at144.next();
																			switch(at145.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at145.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p90.d = at145.value;
																				break;
																			case "fill":
																				p90.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at145.value);
																				break;
																			case "id":
																				p90.id = at145.value;
																				break;
																			case "stroke":
																				p90.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at145.value);
																				break;
																			case "stroke-width":
																				p90.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at145.value);
																				break;
																			}
																		}
																		var g118 = this.group;
																		if(g118 == { }) {
																			g118 = null;
																		}
																		this.renderPath(p90,this.group);
																		var p91 = p90;
																		break;
																	default:
																		var childs49 = kid48.childNodules([]);
																		var _g49 = 0;
																		while(_g49 < childs49.length) {
																			var kid50 = childs49[_g49];
																			++_g49;
																			switch(kid50.name) {
																			case "g":
																				var g119 = { };
																				var at146 = HxOverrides.iter(kid50.attributes([]));
																				while(at146.hasNext()) {
																					var at147 = at146.next();
																					switch(at147.name) {
																					case "fill":
																						g119.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at147.value);
																						break;
																					case "id":
																						g119.id = at147.value;
																						break;
																					case "stroke":
																						g119.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at147.value);
																						break;
																					case "stroke-width":
																						g119.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at147.value);
																						break;
																					case "transform":
																						g119.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at147.value);
																						break;
																					case "version":
																						g119.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at147.value);
																						break;
																					case "viewBox":
																						g119.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at147.value);
																						break;
																					case "xmlns":
																						g119.xmlns = at147.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at147.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g119;
																				if(kid50.firstChild != null) {
																					var childs50 = kid50.childNodules([]);
																					var _g50 = 0;
																					while(_g50 < childs50.length) {
																						var kid51 = childs50[_g50];
																						++_g50;
																						switch(kid51.name) {
																						case "g":
																							var g120 = { };
																							var at148 = HxOverrides.iter(kid51.attributes([]));
																							while(at148.hasNext()) {
																								var at149 = at148.next();
																								switch(at149.name) {
																								case "fill":
																									g120.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at149.value);
																									break;
																								case "id":
																									g120.id = at149.value;
																									break;
																								case "stroke":
																									g120.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at149.value);
																									break;
																								case "stroke-width":
																									g120.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at149.value);
																									break;
																								case "transform":
																									g120.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at149.value);
																									break;
																								case "version":
																									g120.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at149.value);
																									break;
																								case "viewBox":
																									g120.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at149.value);
																									break;
																								case "xmlns":
																									g120.xmlns = at149.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at149.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g120;
																							if(kid51.firstChild != null) {
																								var childs51 = kid51.childNodules([]);
																								var _g51 = 0;
																								while(_g51 < childs51.length) {
																									var kid52 = childs51[_g51];
																									++_g51;
																									switch(kid52.name) {
																									case "g":
																										var g121 = this.parseGroup(kid52);
																										break;
																									case "path":
																										var p92 = { };
																										var at150 = HxOverrides.iter(kid52.attributes([]));
																										while(at150.hasNext()) {
																											var at151 = at150.next();
																											switch(at151.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at151.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p92.d = at151.value;
																												break;
																											case "fill":
																												p92.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at151.value);
																												break;
																											case "id":
																												p92.id = at151.value;
																												break;
																											case "stroke":
																												p92.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at151.value);
																												break;
																											case "stroke-width":
																												p92.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at151.value);
																												break;
																											}
																										}
																										var g122 = this.group;
																										if(g122 == { }) {
																											g122 = null;
																										}
																										this.renderPath(p92,this.group);
																										var p93 = p92;
																										break;
																									default:
																										this.parseChild(kid52);
																									}
																								}
																							}
																							var g123 = g120;
																							break;
																						case "path":
																							var p94 = { };
																							var at152 = HxOverrides.iter(kid51.attributes([]));
																							while(at152.hasNext()) {
																								var at153 = at152.next();
																								switch(at153.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at153.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p94.d = at153.value;
																									break;
																								case "fill":
																									p94.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at153.value);
																									break;
																								case "id":
																									p94.id = at153.value;
																									break;
																								case "stroke":
																									p94.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at153.value);
																									break;
																								case "stroke-width":
																									p94.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at153.value);
																									break;
																								}
																							}
																							var g124 = this.group;
																							if(g124 == { }) {
																								g124 = null;
																							}
																							this.renderPath(p94,this.group);
																							var p95 = p94;
																							break;
																						default:
																							var childs52 = kid51.childNodules([]);
																							var _g52 = 0;
																							while(_g52 < childs52.length) {
																								var kid53 = childs52[_g52];
																								++_g52;
																								switch(kid53.name) {
																								case "g":
																									var g125 = { };
																									var at154 = HxOverrides.iter(kid53.attributes([]));
																									while(at154.hasNext()) {
																										var at155 = at154.next();
																										switch(at155.name) {
																										case "fill":
																											g125.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at155.value);
																											break;
																										case "id":
																											g125.id = at155.value;
																											break;
																										case "stroke":
																											g125.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at155.value);
																											break;
																										case "stroke-width":
																											g125.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at155.value);
																											break;
																										case "transform":
																											g125.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at155.value);
																											break;
																										case "version":
																											g125.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at155.value);
																											break;
																										case "viewBox":
																											g125.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at155.value);
																											break;
																										case "xmlns":
																											g125.xmlns = at155.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at155.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g125;
																									if(kid53.firstChild != null) {
																										var childs53 = kid53.childNodules([]);
																										var _g53 = 0;
																										while(_g53 < childs53.length) {
																											var kid54 = childs53[_g53];
																											++_g53;
																											switch(kid54.name) {
																											case "g":
																												var g126 = this.parseGroup(kid54);
																												break;
																											case "path":
																												var p96 = { };
																												var at156 = HxOverrides.iter(kid54.attributes([]));
																												while(at156.hasNext()) {
																													var at157 = at156.next();
																													switch(at157.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at157.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p96.d = at157.value;
																														break;
																													case "fill":
																														p96.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at157.value);
																														break;
																													case "id":
																														p96.id = at157.value;
																														break;
																													case "stroke":
																														p96.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at157.value);
																														break;
																													case "stroke-width":
																														p96.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at157.value);
																														break;
																													}
																												}
																												var g127 = this.group;
																												if(g127 == { }) {
																													g127 = null;
																												}
																												this.renderPath(p96,this.group);
																												var p97 = p96;
																												break;
																											default:
																												this.parseChild(kid54);
																											}
																										}
																									}
																									var g128 = g125;
																									break;
																								case "path":
																									var p98 = { };
																									var at158 = HxOverrides.iter(kid53.attributes([]));
																									while(at158.hasNext()) {
																										var at159 = at158.next();
																										switch(at159.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at159.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p98.d = at159.value;
																											break;
																										case "fill":
																											p98.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at159.value);
																											break;
																										case "id":
																											p98.id = at159.value;
																											break;
																										case "stroke":
																											p98.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at159.value);
																											break;
																										case "stroke-width":
																											p98.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at159.value);
																											break;
																										}
																									}
																									var g129 = this.group;
																									if(g129 == { }) {
																										g129 = null;
																									}
																									this.renderPath(p98,this.group);
																									var p99 = p98;
																									break;
																								default:
																									var childs54 = kid53.childNodules([]);
																									var _g54 = 0;
																									while(_g54 < childs54.length) {
																										var kid55 = childs54[_g54];
																										++_g54;
																										switch(kid55.name) {
																										case "g":
																											var g130 = this.parseGroup(kid55);
																											break;
																										case "path":
																											var p100 = { };
																											var at160 = HxOverrides.iter(kid55.attributes([]));
																											while(at160.hasNext()) {
																												var at161 = at160.next();
																												switch(at161.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at161.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p100.d = at161.value;
																													break;
																												case "fill":
																													p100.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at161.value);
																													break;
																												case "id":
																													p100.id = at161.value;
																													break;
																												case "stroke":
																													p100.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at161.value);
																													break;
																												case "stroke-width":
																													p100.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at161.value);
																													break;
																												}
																											}
																											var g131 = this.group;
																											if(g131 == { }) {
																												g131 = null;
																											}
																											this.renderPath(p100,this.group);
																											var p101 = p100;
																											break;
																										default:
																											this.parseChild(kid55);
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				var g132 = g119;
																				break;
																			case "path":
																				var p102 = { };
																				var at162 = HxOverrides.iter(kid50.attributes([]));
																				while(at162.hasNext()) {
																					var at163 = at162.next();
																					switch(at163.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at163.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p102.d = at163.value;
																						break;
																					case "fill":
																						p102.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at163.value);
																						break;
																					case "id":
																						p102.id = at163.value;
																						break;
																					case "stroke":
																						p102.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at163.value);
																						break;
																					case "stroke-width":
																						p102.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at163.value);
																						break;
																					}
																				}
																				var g133 = this.group;
																				if(g133 == { }) {
																					g133 = null;
																				}
																				this.renderPath(p102,this.group);
																				var p103 = p102;
																				break;
																			default:
																				var childs55 = kid50.childNodules([]);
																				var _g55 = 0;
																				while(_g55 < childs55.length) {
																					var kid56 = childs55[_g55];
																					++_g55;
																					switch(kid56.name) {
																					case "g":
																						var g134 = { };
																						var at164 = HxOverrides.iter(kid56.attributes([]));
																						while(at164.hasNext()) {
																							var at165 = at164.next();
																							switch(at165.name) {
																							case "fill":
																								g134.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at165.value);
																								break;
																							case "id":
																								g134.id = at165.value;
																								break;
																							case "stroke":
																								g134.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at165.value);
																								break;
																							case "stroke-width":
																								g134.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at165.value);
																								break;
																							case "transform":
																								g134.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at165.value);
																								break;
																							case "version":
																								g134.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at165.value);
																								break;
																							case "viewBox":
																								g134.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at165.value);
																								break;
																							case "xmlns":
																								g134.xmlns = at165.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at165.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g134;
																						if(kid56.firstChild != null) {
																							var childs56 = kid56.childNodules([]);
																							var _g56 = 0;
																							while(_g56 < childs56.length) {
																								var kid57 = childs56[_g56];
																								++_g56;
																								switch(kid57.name) {
																								case "g":
																									var g135 = { };
																									var at166 = HxOverrides.iter(kid57.attributes([]));
																									while(at166.hasNext()) {
																										var at167 = at166.next();
																										switch(at167.name) {
																										case "fill":
																											g135.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at167.value);
																											break;
																										case "id":
																											g135.id = at167.value;
																											break;
																										case "stroke":
																											g135.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at167.value);
																											break;
																										case "stroke-width":
																											g135.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at167.value);
																											break;
																										case "transform":
																											g135.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at167.value);
																											break;
																										case "version":
																											g135.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at167.value);
																											break;
																										case "viewBox":
																											g135.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at167.value);
																											break;
																										case "xmlns":
																											g135.xmlns = at167.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at167.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g135;
																									if(kid57.firstChild != null) {
																										var childs57 = kid57.childNodules([]);
																										var _g57 = 0;
																										while(_g57 < childs57.length) {
																											var kid58 = childs57[_g57];
																											++_g57;
																											switch(kid58.name) {
																											case "g":
																												var g136 = this.parseGroup(kid58);
																												break;
																											case "path":
																												var p104 = { };
																												var at168 = HxOverrides.iter(kid58.attributes([]));
																												while(at168.hasNext()) {
																													var at169 = at168.next();
																													switch(at169.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at169.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p104.d = at169.value;
																														break;
																													case "fill":
																														p104.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at169.value);
																														break;
																													case "id":
																														p104.id = at169.value;
																														break;
																													case "stroke":
																														p104.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at169.value);
																														break;
																													case "stroke-width":
																														p104.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at169.value);
																														break;
																													}
																												}
																												var g137 = this.group;
																												if(g137 == { }) {
																													g137 = null;
																												}
																												this.renderPath(p104,this.group);
																												var p105 = p104;
																												break;
																											default:
																												this.parseChild(kid58);
																											}
																										}
																									}
																									var g138 = g135;
																									break;
																								case "path":
																									var p106 = { };
																									var at170 = HxOverrides.iter(kid57.attributes([]));
																									while(at170.hasNext()) {
																										var at171 = at170.next();
																										switch(at171.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at171.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p106.d = at171.value;
																											break;
																										case "fill":
																											p106.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at171.value);
																											break;
																										case "id":
																											p106.id = at171.value;
																											break;
																										case "stroke":
																											p106.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at171.value);
																											break;
																										case "stroke-width":
																											p106.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at171.value);
																											break;
																										}
																									}
																									var g139 = this.group;
																									if(g139 == { }) {
																										g139 = null;
																									}
																									this.renderPath(p106,this.group);
																									var p107 = p106;
																									break;
																								default:
																									var childs58 = kid57.childNodules([]);
																									var _g58 = 0;
																									while(_g58 < childs58.length) {
																										var kid59 = childs58[_g58];
																										++_g58;
																										switch(kid59.name) {
																										case "g":
																											var g140 = this.parseGroup(kid59);
																											break;
																										case "path":
																											var p108 = { };
																											var at172 = HxOverrides.iter(kid59.attributes([]));
																											while(at172.hasNext()) {
																												var at173 = at172.next();
																												switch(at173.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at173.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p108.d = at173.value;
																													break;
																												case "fill":
																													p108.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at173.value);
																													break;
																												case "id":
																													p108.id = at173.value;
																													break;
																												case "stroke":
																													p108.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at173.value);
																													break;
																												case "stroke-width":
																													p108.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at173.value);
																													break;
																												}
																											}
																											var g141 = this.group;
																											if(g141 == { }) {
																												g141 = null;
																											}
																											this.renderPath(p108,this.group);
																											var p109 = p108;
																											break;
																										default:
																											this.parseChild(kid59);
																										}
																									}
																								}
																							}
																						}
																						var g142 = g134;
																						break;
																					case "path":
																						var p110 = { };
																						var at174 = HxOverrides.iter(kid56.attributes([]));
																						while(at174.hasNext()) {
																							var at175 = at174.next();
																							switch(at175.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at175.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p110.d = at175.value;
																								break;
																							case "fill":
																								p110.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at175.value);
																								break;
																							case "id":
																								p110.id = at175.value;
																								break;
																							case "stroke":
																								p110.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at175.value);
																								break;
																							case "stroke-width":
																								p110.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at175.value);
																								break;
																							}
																						}
																						var g143 = this.group;
																						if(g143 == { }) {
																							g143 = null;
																						}
																						this.renderPath(p110,this.group);
																						var p111 = p110;
																						break;
																					default:
																						var childs59 = kid56.childNodules([]);
																						var _g59 = 0;
																						while(_g59 < childs59.length) {
																							var kid60 = childs59[_g59];
																							++_g59;
																							switch(kid60.name) {
																							case "g":
																								var g144 = this.parseGroup(kid60);
																								break;
																							case "path":
																								var p112 = { };
																								var at176 = HxOverrides.iter(kid60.attributes([]));
																								while(at176.hasNext()) {
																									var at177 = at176.next();
																									switch(at177.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at177.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p112.d = at177.value;
																										break;
																									case "fill":
																										p112.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at177.value);
																										break;
																									case "id":
																										p112.id = at177.value;
																										break;
																									case "stroke":
																										p112.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at177.value);
																										break;
																									case "stroke-width":
																										p112.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at177.value);
																										break;
																									}
																								}
																								var g145 = this.group;
																								if(g145 == { }) {
																									g145 = null;
																								}
																								this.renderPath(p112,this.group);
																								var p113 = p112;
																								break;
																							default:
																								this.parseChild(kid60);
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
															var g146 = g113;
															break;
														case "path":
															var p114 = { };
															var at178 = HxOverrides.iter(kid47.attributes([]));
															while(at178.hasNext()) {
																var at179 = at178.next();
																switch(at179.name) {
																case "_":
																	haxe_Log.trace("path attribute " + at179.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																	break;
																case "d":
																	p114.d = at179.value;
																	break;
																case "fill":
																	p114.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at179.value);
																	break;
																case "id":
																	p114.id = at179.value;
																	break;
																case "stroke":
																	p114.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at179.value);
																	break;
																case "stroke-width":
																	p114.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at179.value);
																	break;
																}
															}
															var g147 = this.group;
															if(g147 == { }) {
																g147 = null;
															}
															this.renderPath(p114,this.group);
															var p115 = p114;
															break;
														default:
															var childs60 = kid47.childNodules([]);
															var _g60 = 0;
															while(_g60 < childs60.length) {
																var kid61 = childs60[_g60];
																++_g60;
																switch(kid61.name) {
																case "g":
																	var g148 = { };
																	var at180 = HxOverrides.iter(kid61.attributes([]));
																	while(at180.hasNext()) {
																		var at181 = at180.next();
																		switch(at181.name) {
																		case "fill":
																			g148.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at181.value);
																			break;
																		case "id":
																			g148.id = at181.value;
																			break;
																		case "stroke":
																			g148.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at181.value);
																			break;
																		case "stroke-width":
																			g148.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at181.value);
																			break;
																		case "transform":
																			g148.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at181.value);
																			break;
																		case "version":
																			g148.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at181.value);
																			break;
																		case "viewBox":
																			g148.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at181.value);
																			break;
																		case "xmlns":
																			g148.xmlns = at181.value;
																			break;
																		default:
																			haxe_Log.trace("group attribute " + at181.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																		}
																	}
																	this.group = g148;
																	if(kid61.firstChild != null) {
																		var childs61 = kid61.childNodules([]);
																		var _g61 = 0;
																		while(_g61 < childs61.length) {
																			var kid62 = childs61[_g61];
																			++_g61;
																			switch(kid62.name) {
																			case "g":
																				var g149 = this.parseGroup(kid62);
																				break;
																			case "path":
																				var p116 = { };
																				var at182 = HxOverrides.iter(kid62.attributes([]));
																				while(at182.hasNext()) {
																					var at183 = at182.next();
																					switch(at183.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at183.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p116.d = at183.value;
																						break;
																					case "fill":
																						p116.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at183.value);
																						break;
																					case "id":
																						p116.id = at183.value;
																						break;
																					case "stroke":
																						p116.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at183.value);
																						break;
																					case "stroke-width":
																						p116.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at183.value);
																						break;
																					}
																				}
																				var g150 = this.group;
																				if(g150 == { }) {
																					g150 = null;
																				}
																				this.renderPath(p116,this.group);
																				var p117 = p116;
																				break;
																			default:
																				this.parseChild(kid62);
																			}
																		}
																	}
																	var g151 = g148;
																	break;
																case "path":
																	var p118 = { };
																	var at184 = HxOverrides.iter(kid61.attributes([]));
																	while(at184.hasNext()) {
																		var at185 = at184.next();
																		switch(at185.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at185.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p118.d = at185.value;
																			break;
																		case "fill":
																			p118.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at185.value);
																			break;
																		case "id":
																			p118.id = at185.value;
																			break;
																		case "stroke":
																			p118.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at185.value);
																			break;
																		case "stroke-width":
																			p118.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at185.value);
																			break;
																		}
																	}
																	var g152 = this.group;
																	if(g152 == { }) {
																		g152 = null;
																	}
																	this.renderPath(p118,this.group);
																	var p119 = p118;
																	break;
																default:
																	var childs62 = kid61.childNodules([]);
																	var _g62 = 0;
																	while(_g62 < childs62.length) {
																		var kid63 = childs62[_g62];
																		++_g62;
																		switch(kid63.name) {
																		case "g":
																			var g153 = { };
																			var at186 = HxOverrides.iter(kid63.attributes([]));
																			while(at186.hasNext()) {
																				var at187 = at186.next();
																				switch(at187.name) {
																				case "fill":
																					g153.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at187.value);
																					break;
																				case "id":
																					g153.id = at187.value;
																					break;
																				case "stroke":
																					g153.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at187.value);
																					break;
																				case "stroke-width":
																					g153.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at187.value);
																					break;
																				case "transform":
																					g153.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at187.value);
																					break;
																				case "version":
																					g153.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at187.value);
																					break;
																				case "viewBox":
																					g153.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at187.value);
																					break;
																				case "xmlns":
																					g153.xmlns = at187.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at187.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g153;
																			if(kid63.firstChild != null) {
																				var childs63 = kid63.childNodules([]);
																				var _g63 = 0;
																				while(_g63 < childs63.length) {
																					var kid64 = childs63[_g63];
																					++_g63;
																					switch(kid64.name) {
																					case "g":
																						var g154 = { };
																						var at188 = HxOverrides.iter(kid64.attributes([]));
																						while(at188.hasNext()) {
																							var at189 = at188.next();
																							switch(at189.name) {
																							case "fill":
																								g154.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at189.value);
																								break;
																							case "id":
																								g154.id = at189.value;
																								break;
																							case "stroke":
																								g154.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at189.value);
																								break;
																							case "stroke-width":
																								g154.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at189.value);
																								break;
																							case "transform":
																								g154.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at189.value);
																								break;
																							case "version":
																								g154.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at189.value);
																								break;
																							case "viewBox":
																								g154.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at189.value);
																								break;
																							case "xmlns":
																								g154.xmlns = at189.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at189.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g154;
																						if(kid64.firstChild != null) {
																							var childs64 = kid64.childNodules([]);
																							var _g64 = 0;
																							while(_g64 < childs64.length) {
																								var kid65 = childs64[_g64];
																								++_g64;
																								switch(kid65.name) {
																								case "g":
																									var g155 = this.parseGroup(kid65);
																									break;
																								case "path":
																									var p120 = { };
																									var at190 = HxOverrides.iter(kid65.attributes([]));
																									while(at190.hasNext()) {
																										var at191 = at190.next();
																										switch(at191.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at191.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p120.d = at191.value;
																											break;
																										case "fill":
																											p120.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at191.value);
																											break;
																										case "id":
																											p120.id = at191.value;
																											break;
																										case "stroke":
																											p120.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at191.value);
																											break;
																										case "stroke-width":
																											p120.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at191.value);
																											break;
																										}
																									}
																									var g156 = this.group;
																									if(g156 == { }) {
																										g156 = null;
																									}
																									this.renderPath(p120,this.group);
																									var p121 = p120;
																									break;
																								default:
																									this.parseChild(kid65);
																								}
																							}
																						}
																						var g157 = g154;
																						break;
																					case "path":
																						var p122 = { };
																						var at192 = HxOverrides.iter(kid64.attributes([]));
																						while(at192.hasNext()) {
																							var at193 = at192.next();
																							switch(at193.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at193.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p122.d = at193.value;
																								break;
																							case "fill":
																								p122.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at193.value);
																								break;
																							case "id":
																								p122.id = at193.value;
																								break;
																							case "stroke":
																								p122.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at193.value);
																								break;
																							case "stroke-width":
																								p122.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at193.value);
																								break;
																							}
																						}
																						var g158 = this.group;
																						if(g158 == { }) {
																							g158 = null;
																						}
																						this.renderPath(p122,this.group);
																						var p123 = p122;
																						break;
																					default:
																						var childs65 = kid64.childNodules([]);
																						var _g65 = 0;
																						while(_g65 < childs65.length) {
																							var kid66 = childs65[_g65];
																							++_g65;
																							switch(kid66.name) {
																							case "g":
																								var g159 = { };
																								var at194 = HxOverrides.iter(kid66.attributes([]));
																								while(at194.hasNext()) {
																									var at195 = at194.next();
																									switch(at195.name) {
																									case "fill":
																										g159.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at195.value);
																										break;
																									case "id":
																										g159.id = at195.value;
																										break;
																									case "stroke":
																										g159.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at195.value);
																										break;
																									case "stroke-width":
																										g159.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at195.value);
																										break;
																									case "transform":
																										g159.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at195.value);
																										break;
																									case "version":
																										g159.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at195.value);
																										break;
																									case "viewBox":
																										g159.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at195.value);
																										break;
																									case "xmlns":
																										g159.xmlns = at195.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at195.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g159;
																								if(kid66.firstChild != null) {
																									var childs66 = kid66.childNodules([]);
																									var _g66 = 0;
																									while(_g66 < childs66.length) {
																										var kid67 = childs66[_g66];
																										++_g66;
																										switch(kid67.name) {
																										case "g":
																											var g160 = this.parseGroup(kid67);
																											break;
																										case "path":
																											var p124 = { };
																											var at196 = HxOverrides.iter(kid67.attributes([]));
																											while(at196.hasNext()) {
																												var at197 = at196.next();
																												switch(at197.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at197.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p124.d = at197.value;
																													break;
																												case "fill":
																													p124.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at197.value);
																													break;
																												case "id":
																													p124.id = at197.value;
																													break;
																												case "stroke":
																													p124.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at197.value);
																													break;
																												case "stroke-width":
																													p124.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at197.value);
																													break;
																												}
																											}
																											var g161 = this.group;
																											if(g161 == { }) {
																												g161 = null;
																											}
																											this.renderPath(p124,this.group);
																											var p125 = p124;
																											break;
																										default:
																											this.parseChild(kid67);
																										}
																									}
																								}
																								var g162 = g159;
																								break;
																							case "path":
																								var p126 = { };
																								var at198 = HxOverrides.iter(kid66.attributes([]));
																								while(at198.hasNext()) {
																									var at199 = at198.next();
																									switch(at199.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at199.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p126.d = at199.value;
																										break;
																									case "fill":
																										p126.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at199.value);
																										break;
																									case "id":
																										p126.id = at199.value;
																										break;
																									case "stroke":
																										p126.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at199.value);
																										break;
																									case "stroke-width":
																										p126.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at199.value);
																										break;
																									}
																								}
																								var g163 = this.group;
																								if(g163 == { }) {
																									g163 = null;
																								}
																								this.renderPath(p126,this.group);
																								var p127 = p126;
																								break;
																							default:
																								var childs67 = kid66.childNodules([]);
																								var _g67 = 0;
																								while(_g67 < childs67.length) {
																									var kid68 = childs67[_g67];
																									++_g67;
																									switch(kid68.name) {
																									case "g":
																										var g164 = this.parseGroup(kid68);
																										break;
																									case "path":
																										var p128 = { };
																										var at200 = HxOverrides.iter(kid68.attributes([]));
																										while(at200.hasNext()) {
																											var at201 = at200.next();
																											switch(at201.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at201.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p128.d = at201.value;
																												break;
																											case "fill":
																												p128.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at201.value);
																												break;
																											case "id":
																												p128.id = at201.value;
																												break;
																											case "stroke":
																												p128.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at201.value);
																												break;
																											case "stroke-width":
																												p128.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at201.value);
																												break;
																											}
																										}
																										var g165 = this.group;
																										if(g165 == { }) {
																											g165 = null;
																										}
																										this.renderPath(p128,this.group);
																										var p129 = p128;
																										break;
																									default:
																										this.parseChild(kid68);
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																			var g166 = g153;
																			break;
																		case "path":
																			var p130 = { };
																			var at202 = HxOverrides.iter(kid63.attributes([]));
																			while(at202.hasNext()) {
																				var at203 = at202.next();
																				switch(at203.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at203.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p130.d = at203.value;
																					break;
																				case "fill":
																					p130.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at203.value);
																					break;
																				case "id":
																					p130.id = at203.value;
																					break;
																				case "stroke":
																					p130.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at203.value);
																					break;
																				case "stroke-width":
																					p130.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at203.value);
																					break;
																				}
																			}
																			var g167 = this.group;
																			if(g167 == { }) {
																				g167 = null;
																			}
																			this.renderPath(p130,this.group);
																			var p131 = p130;
																			break;
																		default:
																			var childs68 = kid63.childNodules([]);
																			var _g68 = 0;
																			while(_g68 < childs68.length) {
																				var kid69 = childs68[_g68];
																				++_g68;
																				switch(kid69.name) {
																				case "g":
																					var g168 = { };
																					var at204 = HxOverrides.iter(kid69.attributes([]));
																					while(at204.hasNext()) {
																						var at205 = at204.next();
																						switch(at205.name) {
																						case "fill":
																							g168.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at205.value);
																							break;
																						case "id":
																							g168.id = at205.value;
																							break;
																						case "stroke":
																							g168.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at205.value);
																							break;
																						case "stroke-width":
																							g168.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at205.value);
																							break;
																						case "transform":
																							g168.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at205.value);
																							break;
																						case "version":
																							g168.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at205.value);
																							break;
																						case "viewBox":
																							g168.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at205.value);
																							break;
																						case "xmlns":
																							g168.xmlns = at205.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at205.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g168;
																					if(kid69.firstChild != null) {
																						var childs69 = kid69.childNodules([]);
																						var _g69 = 0;
																						while(_g69 < childs69.length) {
																							var kid70 = childs69[_g69];
																							++_g69;
																							switch(kid70.name) {
																							case "g":
																								var g169 = { };
																								var at206 = HxOverrides.iter(kid70.attributes([]));
																								while(at206.hasNext()) {
																									var at207 = at206.next();
																									switch(at207.name) {
																									case "fill":
																										g169.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at207.value);
																										break;
																									case "id":
																										g169.id = at207.value;
																										break;
																									case "stroke":
																										g169.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at207.value);
																										break;
																									case "stroke-width":
																										g169.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at207.value);
																										break;
																									case "transform":
																										g169.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at207.value);
																										break;
																									case "version":
																										g169.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at207.value);
																										break;
																									case "viewBox":
																										g169.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at207.value);
																										break;
																									case "xmlns":
																										g169.xmlns = at207.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at207.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g169;
																								if(kid70.firstChild != null) {
																									var childs70 = kid70.childNodules([]);
																									var _g70 = 0;
																									while(_g70 < childs70.length) {
																										var kid71 = childs70[_g70];
																										++_g70;
																										switch(kid71.name) {
																										case "g":
																											var g170 = this.parseGroup(kid71);
																											break;
																										case "path":
																											var p132 = { };
																											var at208 = HxOverrides.iter(kid71.attributes([]));
																											while(at208.hasNext()) {
																												var at209 = at208.next();
																												switch(at209.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at209.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p132.d = at209.value;
																													break;
																												case "fill":
																													p132.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at209.value);
																													break;
																												case "id":
																													p132.id = at209.value;
																													break;
																												case "stroke":
																													p132.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at209.value);
																													break;
																												case "stroke-width":
																													p132.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at209.value);
																													break;
																												}
																											}
																											var g171 = this.group;
																											if(g171 == { }) {
																												g171 = null;
																											}
																											this.renderPath(p132,this.group);
																											var p133 = p132;
																											break;
																										default:
																											this.parseChild(kid71);
																										}
																									}
																								}
																								var g172 = g169;
																								break;
																							case "path":
																								var p134 = { };
																								var at210 = HxOverrides.iter(kid70.attributes([]));
																								while(at210.hasNext()) {
																									var at211 = at210.next();
																									switch(at211.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at211.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p134.d = at211.value;
																										break;
																									case "fill":
																										p134.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at211.value);
																										break;
																									case "id":
																										p134.id = at211.value;
																										break;
																									case "stroke":
																										p134.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at211.value);
																										break;
																									case "stroke-width":
																										p134.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at211.value);
																										break;
																									}
																								}
																								var g173 = this.group;
																								if(g173 == { }) {
																									g173 = null;
																								}
																								this.renderPath(p134,this.group);
																								var p135 = p134;
																								break;
																							default:
																								var childs71 = kid70.childNodules([]);
																								var _g71 = 0;
																								while(_g71 < childs71.length) {
																									var kid72 = childs71[_g71];
																									++_g71;
																									switch(kid72.name) {
																									case "g":
																										var g174 = this.parseGroup(kid72);
																										break;
																									case "path":
																										var p136 = { };
																										var at212 = HxOverrides.iter(kid72.attributes([]));
																										while(at212.hasNext()) {
																											var at213 = at212.next();
																											switch(at213.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at213.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p136.d = at213.value;
																												break;
																											case "fill":
																												p136.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at213.value);
																												break;
																											case "id":
																												p136.id = at213.value;
																												break;
																											case "stroke":
																												p136.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at213.value);
																												break;
																											case "stroke-width":
																												p136.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at213.value);
																												break;
																											}
																										}
																										var g175 = this.group;
																										if(g175 == { }) {
																											g175 = null;
																										}
																										this.renderPath(p136,this.group);
																										var p137 = p136;
																										break;
																									default:
																										this.parseChild(kid72);
																									}
																								}
																							}
																						}
																					}
																					var g176 = g168;
																					break;
																				case "path":
																					var p138 = { };
																					var at214 = HxOverrides.iter(kid69.attributes([]));
																					while(at214.hasNext()) {
																						var at215 = at214.next();
																						switch(at215.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at215.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p138.d = at215.value;
																							break;
																						case "fill":
																							p138.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at215.value);
																							break;
																						case "id":
																							p138.id = at215.value;
																							break;
																						case "stroke":
																							p138.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at215.value);
																							break;
																						case "stroke-width":
																							p138.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at215.value);
																							break;
																						}
																					}
																					var g177 = this.group;
																					if(g177 == { }) {
																						g177 = null;
																					}
																					this.renderPath(p138,this.group);
																					var p139 = p138;
																					break;
																				default:
																					var childs72 = kid69.childNodules([]);
																					var _g72 = 0;
																					while(_g72 < childs72.length) {
																						var kid73 = childs72[_g72];
																						++_g72;
																						switch(kid73.name) {
																						case "g":
																							var g178 = this.parseGroup(kid73);
																							break;
																						case "path":
																							var p140 = { };
																							var at216 = HxOverrides.iter(kid73.attributes([]));
																							while(at216.hasNext()) {
																								var at217 = at216.next();
																								switch(at217.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at217.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p140.d = at217.value;
																									break;
																								case "fill":
																									p140.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at217.value);
																									break;
																								case "id":
																									p140.id = at217.value;
																									break;
																								case "stroke":
																									p140.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at217.value);
																									break;
																								case "stroke-width":
																									p140.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at217.value);
																									break;
																								}
																							}
																							var g179 = this.group;
																							if(g179 == { }) {
																								g179 = null;
																							}
																							this.renderPath(p140,this.group);
																							var p141 = p140;
																							break;
																						default:
																							this.parseChild(kid73);
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
												var g180 = g112;
												break;
											case "path":
												var p142 = { };
												var at218 = HxOverrides.iter(kid46.attributes([]));
												while(at218.hasNext()) {
													var at219 = at218.next();
													switch(at219.name) {
													case "_":
														haxe_Log.trace("path attribute " + at219.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p142.d = at219.value;
														break;
													case "fill":
														p142.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at219.value);
														break;
													case "id":
														p142.id = at219.value;
														break;
													case "stroke":
														p142.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at219.value);
														break;
													case "stroke-width":
														p142.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at219.value);
														break;
													}
												}
												var g181 = this.group;
												if(g181 == { }) {
													g181 = null;
												}
												this.renderPath(p142,this.group);
												var p143 = p142;
												break;
											default:
												var childs73 = kid46.childNodules([]);
												var _g73 = 0;
												while(_g73 < childs73.length) {
													var kid74 = childs73[_g73];
													++_g73;
													switch(kid74.name) {
													case "g":
														var g182 = { };
														var at220 = HxOverrides.iter(kid74.attributes([]));
														while(at220.hasNext()) {
															var at221 = at220.next();
															switch(at221.name) {
															case "fill":
																g182.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at221.value);
																break;
															case "id":
																g182.id = at221.value;
																break;
															case "stroke":
																g182.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at221.value);
																break;
															case "stroke-width":
																g182.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at221.value);
																break;
															case "transform":
																g182.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at221.value);
																break;
															case "version":
																g182.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at221.value);
																break;
															case "viewBox":
																g182.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at221.value);
																break;
															case "xmlns":
																g182.xmlns = at221.value;
																break;
															default:
																haxe_Log.trace("group attribute " + at221.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
															}
														}
														this.group = g182;
														if(kid74.firstChild != null) {
															var childs74 = kid74.childNodules([]);
															var _g74 = 0;
															while(_g74 < childs74.length) {
																var kid75 = childs74[_g74];
																++_g74;
																switch(kid75.name) {
																case "g":
																	var g183 = this.parseGroup(kid75);
																	break;
																case "path":
																	var p144 = { };
																	var at222 = HxOverrides.iter(kid75.attributes([]));
																	while(at222.hasNext()) {
																		var at223 = at222.next();
																		switch(at223.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at223.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p144.d = at223.value;
																			break;
																		case "fill":
																			p144.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at223.value);
																			break;
																		case "id":
																			p144.id = at223.value;
																			break;
																		case "stroke":
																			p144.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at223.value);
																			break;
																		case "stroke-width":
																			p144.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at223.value);
																			break;
																		}
																	}
																	var g184 = this.group;
																	if(g184 == { }) {
																		g184 = null;
																	}
																	this.renderPath(p144,this.group);
																	var p145 = p144;
																	break;
																default:
																	this.parseChild(kid75);
																}
															}
														}
														var g185 = g182;
														break;
													case "path":
														var p146 = { };
														var at224 = HxOverrides.iter(kid74.attributes([]));
														while(at224.hasNext()) {
															var at225 = at224.next();
															switch(at225.name) {
															case "_":
																haxe_Log.trace("path attribute " + at225.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																break;
															case "d":
																p146.d = at225.value;
																break;
															case "fill":
																p146.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at225.value);
																break;
															case "id":
																p146.id = at225.value;
																break;
															case "stroke":
																p146.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at225.value);
																break;
															case "stroke-width":
																p146.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at225.value);
																break;
															}
														}
														var g186 = this.group;
														if(g186 == { }) {
															g186 = null;
														}
														this.renderPath(p146,this.group);
														var p147 = p146;
														break;
													default:
														var childs75 = kid74.childNodules([]);
														var _g75 = 0;
														while(_g75 < childs75.length) {
															var kid76 = childs75[_g75];
															++_g75;
															switch(kid76.name) {
															case "g":
																var g187 = { };
																var at226 = HxOverrides.iter(kid76.attributes([]));
																while(at226.hasNext()) {
																	var at227 = at226.next();
																	switch(at227.name) {
																	case "fill":
																		g187.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at227.value);
																		break;
																	case "id":
																		g187.id = at227.value;
																		break;
																	case "stroke":
																		g187.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at227.value);
																		break;
																	case "stroke-width":
																		g187.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at227.value);
																		break;
																	case "transform":
																		g187.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at227.value);
																		break;
																	case "version":
																		g187.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at227.value);
																		break;
																	case "viewBox":
																		g187.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at227.value);
																		break;
																	case "xmlns":
																		g187.xmlns = at227.value;
																		break;
																	default:
																		haxe_Log.trace("group attribute " + at227.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																	}
																}
																this.group = g187;
																if(kid76.firstChild != null) {
																	var childs76 = kid76.childNodules([]);
																	var _g76 = 0;
																	while(_g76 < childs76.length) {
																		var kid77 = childs76[_g76];
																		++_g76;
																		switch(kid77.name) {
																		case "g":
																			var g188 = { };
																			var at228 = HxOverrides.iter(kid77.attributes([]));
																			while(at228.hasNext()) {
																				var at229 = at228.next();
																				switch(at229.name) {
																				case "fill":
																					g188.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at229.value);
																					break;
																				case "id":
																					g188.id = at229.value;
																					break;
																				case "stroke":
																					g188.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at229.value);
																					break;
																				case "stroke-width":
																					g188.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at229.value);
																					break;
																				case "transform":
																					g188.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at229.value);
																					break;
																				case "version":
																					g188.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at229.value);
																					break;
																				case "viewBox":
																					g188.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at229.value);
																					break;
																				case "xmlns":
																					g188.xmlns = at229.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at229.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g188;
																			if(kid77.firstChild != null) {
																				var childs77 = kid77.childNodules([]);
																				var _g77 = 0;
																				while(_g77 < childs77.length) {
																					var kid78 = childs77[_g77];
																					++_g77;
																					switch(kid78.name) {
																					case "g":
																						var g189 = this.parseGroup(kid78);
																						break;
																					case "path":
																						var p148 = { };
																						var at230 = HxOverrides.iter(kid78.attributes([]));
																						while(at230.hasNext()) {
																							var at231 = at230.next();
																							switch(at231.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at231.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p148.d = at231.value;
																								break;
																							case "fill":
																								p148.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at231.value);
																								break;
																							case "id":
																								p148.id = at231.value;
																								break;
																							case "stroke":
																								p148.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at231.value);
																								break;
																							case "stroke-width":
																								p148.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at231.value);
																								break;
																							}
																						}
																						var g190 = this.group;
																						if(g190 == { }) {
																							g190 = null;
																						}
																						this.renderPath(p148,this.group);
																						var p149 = p148;
																						break;
																					default:
																						this.parseChild(kid78);
																					}
																				}
																			}
																			var g191 = g188;
																			break;
																		case "path":
																			var p150 = { };
																			var at232 = HxOverrides.iter(kid77.attributes([]));
																			while(at232.hasNext()) {
																				var at233 = at232.next();
																				switch(at233.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at233.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p150.d = at233.value;
																					break;
																				case "fill":
																					p150.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at233.value);
																					break;
																				case "id":
																					p150.id = at233.value;
																					break;
																				case "stroke":
																					p150.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at233.value);
																					break;
																				case "stroke-width":
																					p150.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at233.value);
																					break;
																				}
																			}
																			var g192 = this.group;
																			if(g192 == { }) {
																				g192 = null;
																			}
																			this.renderPath(p150,this.group);
																			var p151 = p150;
																			break;
																		default:
																			var childs78 = kid77.childNodules([]);
																			var _g78 = 0;
																			while(_g78 < childs78.length) {
																				var kid79 = childs78[_g78];
																				++_g78;
																				switch(kid79.name) {
																				case "g":
																					var g193 = { };
																					var at234 = HxOverrides.iter(kid79.attributes([]));
																					while(at234.hasNext()) {
																						var at235 = at234.next();
																						switch(at235.name) {
																						case "fill":
																							g193.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at235.value);
																							break;
																						case "id":
																							g193.id = at235.value;
																							break;
																						case "stroke":
																							g193.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at235.value);
																							break;
																						case "stroke-width":
																							g193.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at235.value);
																							break;
																						case "transform":
																							g193.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at235.value);
																							break;
																						case "version":
																							g193.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at235.value);
																							break;
																						case "viewBox":
																							g193.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at235.value);
																							break;
																						case "xmlns":
																							g193.xmlns = at235.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at235.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g193;
																					if(kid79.firstChild != null) {
																						var childs79 = kid79.childNodules([]);
																						var _g79 = 0;
																						while(_g79 < childs79.length) {
																							var kid80 = childs79[_g79];
																							++_g79;
																							switch(kid80.name) {
																							case "g":
																								var g194 = this.parseGroup(kid80);
																								break;
																							case "path":
																								var p152 = { };
																								var at236 = HxOverrides.iter(kid80.attributes([]));
																								while(at236.hasNext()) {
																									var at237 = at236.next();
																									switch(at237.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at237.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p152.d = at237.value;
																										break;
																									case "fill":
																										p152.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at237.value);
																										break;
																									case "id":
																										p152.id = at237.value;
																										break;
																									case "stroke":
																										p152.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at237.value);
																										break;
																									case "stroke-width":
																										p152.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at237.value);
																										break;
																									}
																								}
																								var g195 = this.group;
																								if(g195 == { }) {
																									g195 = null;
																								}
																								this.renderPath(p152,this.group);
																								var p153 = p152;
																								break;
																							default:
																								this.parseChild(kid80);
																							}
																						}
																					}
																					var g196 = g193;
																					break;
																				case "path":
																					var p154 = { };
																					var at238 = HxOverrides.iter(kid79.attributes([]));
																					while(at238.hasNext()) {
																						var at239 = at238.next();
																						switch(at239.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at239.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p154.d = at239.value;
																							break;
																						case "fill":
																							p154.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at239.value);
																							break;
																						case "id":
																							p154.id = at239.value;
																							break;
																						case "stroke":
																							p154.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at239.value);
																							break;
																						case "stroke-width":
																							p154.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at239.value);
																							break;
																						}
																					}
																					var g197 = this.group;
																					if(g197 == { }) {
																						g197 = null;
																					}
																					this.renderPath(p154,this.group);
																					var p155 = p154;
																					break;
																				default:
																					var childs80 = kid79.childNodules([]);
																					var _g80 = 0;
																					while(_g80 < childs80.length) {
																						var kid81 = childs80[_g80];
																						++_g80;
																						switch(kid81.name) {
																						case "g":
																							var g198 = this.parseGroup(kid81);
																							break;
																						case "path":
																							var p156 = { };
																							var at240 = HxOverrides.iter(kid81.attributes([]));
																							while(at240.hasNext()) {
																								var at241 = at240.next();
																								switch(at241.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at241.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p156.d = at241.value;
																									break;
																								case "fill":
																									p156.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at241.value);
																									break;
																								case "id":
																									p156.id = at241.value;
																									break;
																								case "stroke":
																									p156.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at241.value);
																									break;
																								case "stroke-width":
																									p156.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at241.value);
																									break;
																								}
																							}
																							var g199 = this.group;
																							if(g199 == { }) {
																								g199 = null;
																							}
																							this.renderPath(p156,this.group);
																							var p157 = p156;
																							break;
																						default:
																							this.parseChild(kid81);
																						}
																					}
																				}
																			}
																		}
																	}
																}
																var g200 = g187;
																break;
															case "path":
																var p158 = { };
																var at242 = HxOverrides.iter(kid76.attributes([]));
																while(at242.hasNext()) {
																	var at243 = at242.next();
																	switch(at243.name) {
																	case "_":
																		haxe_Log.trace("path attribute " + at243.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																		break;
																	case "d":
																		p158.d = at243.value;
																		break;
																	case "fill":
																		p158.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at243.value);
																		break;
																	case "id":
																		p158.id = at243.value;
																		break;
																	case "stroke":
																		p158.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at243.value);
																		break;
																	case "stroke-width":
																		p158.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at243.value);
																		break;
																	}
																}
																var g201 = this.group;
																if(g201 == { }) {
																	g201 = null;
																}
																this.renderPath(p158,this.group);
																var p159 = p158;
																break;
															default:
																var childs81 = kid76.childNodules([]);
																var _g81 = 0;
																while(_g81 < childs81.length) {
																	var kid82 = childs81[_g81];
																	++_g81;
																	switch(kid82.name) {
																	case "g":
																		var g202 = { };
																		var at244 = HxOverrides.iter(kid82.attributes([]));
																		while(at244.hasNext()) {
																			var at245 = at244.next();
																			switch(at245.name) {
																			case "fill":
																				g202.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at245.value);
																				break;
																			case "id":
																				g202.id = at245.value;
																				break;
																			case "stroke":
																				g202.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at245.value);
																				break;
																			case "stroke-width":
																				g202.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at245.value);
																				break;
																			case "transform":
																				g202.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at245.value);
																				break;
																			case "version":
																				g202.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at245.value);
																				break;
																			case "viewBox":
																				g202.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at245.value);
																				break;
																			case "xmlns":
																				g202.xmlns = at245.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at245.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g202;
																		if(kid82.firstChild != null) {
																			var childs82 = kid82.childNodules([]);
																			var _g82 = 0;
																			while(_g82 < childs82.length) {
																				var kid83 = childs82[_g82];
																				++_g82;
																				switch(kid83.name) {
																				case "g":
																					var g203 = { };
																					var at246 = HxOverrides.iter(kid83.attributes([]));
																					while(at246.hasNext()) {
																						var at247 = at246.next();
																						switch(at247.name) {
																						case "fill":
																							g203.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at247.value);
																							break;
																						case "id":
																							g203.id = at247.value;
																							break;
																						case "stroke":
																							g203.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at247.value);
																							break;
																						case "stroke-width":
																							g203.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at247.value);
																							break;
																						case "transform":
																							g203.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at247.value);
																							break;
																						case "version":
																							g203.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at247.value);
																							break;
																						case "viewBox":
																							g203.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at247.value);
																							break;
																						case "xmlns":
																							g203.xmlns = at247.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at247.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g203;
																					if(kid83.firstChild != null) {
																						var childs83 = kid83.childNodules([]);
																						var _g83 = 0;
																						while(_g83 < childs83.length) {
																							var kid84 = childs83[_g83];
																							++_g83;
																							switch(kid84.name) {
																							case "g":
																								var g204 = this.parseGroup(kid84);
																								break;
																							case "path":
																								var p160 = { };
																								var at248 = HxOverrides.iter(kid84.attributes([]));
																								while(at248.hasNext()) {
																									var at249 = at248.next();
																									switch(at249.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at249.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p160.d = at249.value;
																										break;
																									case "fill":
																										p160.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at249.value);
																										break;
																									case "id":
																										p160.id = at249.value;
																										break;
																									case "stroke":
																										p160.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at249.value);
																										break;
																									case "stroke-width":
																										p160.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at249.value);
																										break;
																									}
																								}
																								var g205 = this.group;
																								if(g205 == { }) {
																									g205 = null;
																								}
																								this.renderPath(p160,this.group);
																								var p161 = p160;
																								break;
																							default:
																								this.parseChild(kid84);
																							}
																						}
																					}
																					var g206 = g203;
																					break;
																				case "path":
																					var p162 = { };
																					var at250 = HxOverrides.iter(kid83.attributes([]));
																					while(at250.hasNext()) {
																						var at251 = at250.next();
																						switch(at251.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at251.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p162.d = at251.value;
																							break;
																						case "fill":
																							p162.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at251.value);
																							break;
																						case "id":
																							p162.id = at251.value;
																							break;
																						case "stroke":
																							p162.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at251.value);
																							break;
																						case "stroke-width":
																							p162.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at251.value);
																							break;
																						}
																					}
																					var g207 = this.group;
																					if(g207 == { }) {
																						g207 = null;
																					}
																					this.renderPath(p162,this.group);
																					var p163 = p162;
																					break;
																				default:
																					var childs84 = kid83.childNodules([]);
																					var _g84 = 0;
																					while(_g84 < childs84.length) {
																						var kid85 = childs84[_g84];
																						++_g84;
																						switch(kid85.name) {
																						case "g":
																							var g208 = this.parseGroup(kid85);
																							break;
																						case "path":
																							var p164 = { };
																							var at252 = HxOverrides.iter(kid85.attributes([]));
																							while(at252.hasNext()) {
																								var at253 = at252.next();
																								switch(at253.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at253.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p164.d = at253.value;
																									break;
																								case "fill":
																									p164.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at253.value);
																									break;
																								case "id":
																									p164.id = at253.value;
																									break;
																								case "stroke":
																									p164.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at253.value);
																									break;
																								case "stroke-width":
																									p164.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at253.value);
																									break;
																								}
																							}
																							var g209 = this.group;
																							if(g209 == { }) {
																								g209 = null;
																							}
																							this.renderPath(p164,this.group);
																							var p165 = p164;
																							break;
																						default:
																							this.parseChild(kid85);
																						}
																					}
																				}
																			}
																		}
																		var g210 = g202;
																		break;
																	case "path":
																		var p166 = { };
																		var at254 = HxOverrides.iter(kid82.attributes([]));
																		while(at254.hasNext()) {
																			var at255 = at254.next();
																			switch(at255.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at255.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p166.d = at255.value;
																				break;
																			case "fill":
																				p166.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at255.value);
																				break;
																			case "id":
																				p166.id = at255.value;
																				break;
																			case "stroke":
																				p166.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at255.value);
																				break;
																			case "stroke-width":
																				p166.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at255.value);
																				break;
																			}
																		}
																		var g211 = this.group;
																		if(g211 == { }) {
																			g211 = null;
																		}
																		this.renderPath(p166,this.group);
																		var p167 = p166;
																		break;
																	default:
																		var childs85 = kid82.childNodules([]);
																		var _g85 = 0;
																		while(_g85 < childs85.length) {
																			var kid86 = childs85[_g85];
																			++_g85;
																			switch(kid86.name) {
																			case "g":
																				var g212 = this.parseGroup(kid86);
																				break;
																			case "path":
																				var p168 = { };
																				var at256 = HxOverrides.iter(kid86.attributes([]));
																				while(at256.hasNext()) {
																					var at257 = at256.next();
																					switch(at257.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at257.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p168.d = at257.value;
																						break;
																					case "fill":
																						p168.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at257.value);
																						break;
																					case "id":
																						p168.id = at257.value;
																						break;
																					case "stroke":
																						p168.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at257.value);
																						break;
																					case "stroke-width":
																						p168.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at257.value);
																						break;
																					}
																				}
																				var g213 = this.group;
																				if(g213 == { }) {
																					g213 = null;
																				}
																				this.renderPath(p168,this.group);
																				var p169 = p168;
																				break;
																			default:
																				this.parseChild(kid86);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					var g214 = g1;
					break;
				case "path":
					var p170 = { };
					var at258 = HxOverrides.iter(kid1.attributes([]));
					while(at258.hasNext()) {
						var at259 = at258.next();
						switch(at259.name) {
						case "_":
							haxe_Log.trace("path attribute " + at259.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
							break;
						case "d":
							p170.d = at259.value;
							break;
						case "fill":
							p170.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at259.value);
							break;
						case "id":
							p170.id = at259.value;
							break;
						case "stroke":
							p170.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at259.value);
							break;
						case "stroke-width":
							p170.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at259.value);
							break;
						}
					}
					var g215 = this.group;
					if(g215 == { }) {
						g215 = null;
					}
					this.renderPath(p170,this.group);
					var p171 = p170;
					break;
				default:
					var childs86 = kid1.childNodules([]);
					var _g86 = 0;
					while(_g86 < childs86.length) {
						var kid87 = childs86[_g86];
						++_g86;
						switch(kid87.name) {
						case "g":
							var g216 = { };
							var at260 = HxOverrides.iter(kid87.attributes([]));
							while(at260.hasNext()) {
								var at261 = at260.next();
								switch(at261.name) {
								case "fill":
									g216.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at261.value);
									break;
								case "id":
									g216.id = at261.value;
									break;
								case "stroke":
									g216.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at261.value);
									break;
								case "stroke-width":
									g216.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at261.value);
									break;
								case "transform":
									g216.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at261.value);
									break;
								case "version":
									g216.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at261.value);
									break;
								case "viewBox":
									g216.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at261.value);
									break;
								case "xmlns":
									g216.xmlns = at261.value;
									break;
								default:
									haxe_Log.trace("group attribute " + at261.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
								}
							}
							this.group = g216;
							if(kid87.firstChild != null) {
								var childs87 = kid87.childNodules([]);
								var _g87 = 0;
								while(_g87 < childs87.length) {
									var kid88 = childs87[_g87];
									++_g87;
									switch(kid88.name) {
									case "g":
										var g217 = { };
										var at262 = HxOverrides.iter(kid88.attributes([]));
										while(at262.hasNext()) {
											var at263 = at262.next();
											switch(at263.name) {
											case "fill":
												g217.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at263.value);
												break;
											case "id":
												g217.id = at263.value;
												break;
											case "stroke":
												g217.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at263.value);
												break;
											case "stroke-width":
												g217.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at263.value);
												break;
											case "transform":
												g217.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at263.value);
												break;
											case "version":
												g217.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at263.value);
												break;
											case "viewBox":
												g217.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at263.value);
												break;
											case "xmlns":
												g217.xmlns = at263.value;
												break;
											default:
												haxe_Log.trace("group attribute " + at263.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
											}
										}
										this.group = g217;
										if(kid88.firstChild != null) {
											var childs88 = kid88.childNodules([]);
											var _g88 = 0;
											while(_g88 < childs88.length) {
												var kid89 = childs88[_g88];
												++_g88;
												switch(kid89.name) {
												case "g":
													var g218 = { };
													var at264 = HxOverrides.iter(kid89.attributes([]));
													while(at264.hasNext()) {
														var at265 = at264.next();
														switch(at265.name) {
														case "fill":
															g218.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at265.value);
															break;
														case "id":
															g218.id = at265.value;
															break;
														case "stroke":
															g218.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at265.value);
															break;
														case "stroke-width":
															g218.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at265.value);
															break;
														case "transform":
															g218.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at265.value);
															break;
														case "version":
															g218.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at265.value);
															break;
														case "viewBox":
															g218.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at265.value);
															break;
														case "xmlns":
															g218.xmlns = at265.value;
															break;
														default:
															haxe_Log.trace("group attribute " + at265.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
														}
													}
													this.group = g218;
													if(kid89.firstChild != null) {
														var childs89 = kid89.childNodules([]);
														var _g89 = 0;
														while(_g89 < childs89.length) {
															var kid90 = childs89[_g89];
															++_g89;
															switch(kid90.name) {
															case "g":
																var g219 = { };
																var at266 = HxOverrides.iter(kid90.attributes([]));
																while(at266.hasNext()) {
																	var at267 = at266.next();
																	switch(at267.name) {
																	case "fill":
																		g219.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at267.value);
																		break;
																	case "id":
																		g219.id = at267.value;
																		break;
																	case "stroke":
																		g219.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at267.value);
																		break;
																	case "stroke-width":
																		g219.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at267.value);
																		break;
																	case "transform":
																		g219.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at267.value);
																		break;
																	case "version":
																		g219.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at267.value);
																		break;
																	case "viewBox":
																		g219.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at267.value);
																		break;
																	case "xmlns":
																		g219.xmlns = at267.value;
																		break;
																	default:
																		haxe_Log.trace("group attribute " + at267.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																	}
																}
																this.group = g219;
																if(kid90.firstChild != null) {
																	var childs90 = kid90.childNodules([]);
																	var _g90 = 0;
																	while(_g90 < childs90.length) {
																		var kid91 = childs90[_g90];
																		++_g90;
																		switch(kid91.name) {
																		case "g":
																			var g220 = this.parseGroup(kid91);
																			break;
																		case "path":
																			var p172 = { };
																			var at268 = HxOverrides.iter(kid91.attributes([]));
																			while(at268.hasNext()) {
																				var at269 = at268.next();
																				switch(at269.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at269.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p172.d = at269.value;
																					break;
																				case "fill":
																					p172.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at269.value);
																					break;
																				case "id":
																					p172.id = at269.value;
																					break;
																				case "stroke":
																					p172.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at269.value);
																					break;
																				case "stroke-width":
																					p172.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at269.value);
																					break;
																				}
																			}
																			var g221 = this.group;
																			if(g221 == { }) {
																				g221 = null;
																			}
																			this.renderPath(p172,this.group);
																			var p173 = p172;
																			break;
																		default:
																			this.parseChild(kid91);
																		}
																	}
																}
																var g222 = g219;
																break;
															case "path":
																var p174 = { };
																var at270 = HxOverrides.iter(kid90.attributes([]));
																while(at270.hasNext()) {
																	var at271 = at270.next();
																	switch(at271.name) {
																	case "_":
																		haxe_Log.trace("path attribute " + at271.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																		break;
																	case "d":
																		p174.d = at271.value;
																		break;
																	case "fill":
																		p174.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at271.value);
																		break;
																	case "id":
																		p174.id = at271.value;
																		break;
																	case "stroke":
																		p174.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at271.value);
																		break;
																	case "stroke-width":
																		p174.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at271.value);
																		break;
																	}
																}
																var g223 = this.group;
																if(g223 == { }) {
																	g223 = null;
																}
																this.renderPath(p174,this.group);
																var p175 = p174;
																break;
															default:
																var childs91 = kid90.childNodules([]);
																var _g91 = 0;
																while(_g91 < childs91.length) {
																	var kid92 = childs91[_g91];
																	++_g91;
																	switch(kid92.name) {
																	case "g":
																		var g224 = { };
																		var at272 = HxOverrides.iter(kid92.attributes([]));
																		while(at272.hasNext()) {
																			var at273 = at272.next();
																			switch(at273.name) {
																			case "fill":
																				g224.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at273.value);
																				break;
																			case "id":
																				g224.id = at273.value;
																				break;
																			case "stroke":
																				g224.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at273.value);
																				break;
																			case "stroke-width":
																				g224.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at273.value);
																				break;
																			case "transform":
																				g224.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at273.value);
																				break;
																			case "version":
																				g224.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at273.value);
																				break;
																			case "viewBox":
																				g224.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at273.value);
																				break;
																			case "xmlns":
																				g224.xmlns = at273.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at273.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g224;
																		if(kid92.firstChild != null) {
																			var childs92 = kid92.childNodules([]);
																			var _g92 = 0;
																			while(_g92 < childs92.length) {
																				var kid93 = childs92[_g92];
																				++_g92;
																				switch(kid93.name) {
																				case "g":
																					var g225 = { };
																					var at274 = HxOverrides.iter(kid93.attributes([]));
																					while(at274.hasNext()) {
																						var at275 = at274.next();
																						switch(at275.name) {
																						case "fill":
																							g225.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at275.value);
																							break;
																						case "id":
																							g225.id = at275.value;
																							break;
																						case "stroke":
																							g225.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at275.value);
																							break;
																						case "stroke-width":
																							g225.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at275.value);
																							break;
																						case "transform":
																							g225.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at275.value);
																							break;
																						case "version":
																							g225.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at275.value);
																							break;
																						case "viewBox":
																							g225.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at275.value);
																							break;
																						case "xmlns":
																							g225.xmlns = at275.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at275.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g225;
																					if(kid93.firstChild != null) {
																						var childs93 = kid93.childNodules([]);
																						var _g93 = 0;
																						while(_g93 < childs93.length) {
																							var kid94 = childs93[_g93];
																							++_g93;
																							switch(kid94.name) {
																							case "g":
																								var g226 = this.parseGroup(kid94);
																								break;
																							case "path":
																								var p176 = { };
																								var at276 = HxOverrides.iter(kid94.attributes([]));
																								while(at276.hasNext()) {
																									var at277 = at276.next();
																									switch(at277.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at277.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p176.d = at277.value;
																										break;
																									case "fill":
																										p176.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at277.value);
																										break;
																									case "id":
																										p176.id = at277.value;
																										break;
																									case "stroke":
																										p176.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at277.value);
																										break;
																									case "stroke-width":
																										p176.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at277.value);
																										break;
																									}
																								}
																								var g227 = this.group;
																								if(g227 == { }) {
																									g227 = null;
																								}
																								this.renderPath(p176,this.group);
																								var p177 = p176;
																								break;
																							default:
																								this.parseChild(kid94);
																							}
																						}
																					}
																					var g228 = g225;
																					break;
																				case "path":
																					var p178 = { };
																					var at278 = HxOverrides.iter(kid93.attributes([]));
																					while(at278.hasNext()) {
																						var at279 = at278.next();
																						switch(at279.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at279.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p178.d = at279.value;
																							break;
																						case "fill":
																							p178.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at279.value);
																							break;
																						case "id":
																							p178.id = at279.value;
																							break;
																						case "stroke":
																							p178.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at279.value);
																							break;
																						case "stroke-width":
																							p178.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at279.value);
																							break;
																						}
																					}
																					var g229 = this.group;
																					if(g229 == { }) {
																						g229 = null;
																					}
																					this.renderPath(p178,this.group);
																					var p179 = p178;
																					break;
																				default:
																					var childs94 = kid93.childNodules([]);
																					var _g94 = 0;
																					while(_g94 < childs94.length) {
																						var kid95 = childs94[_g94];
																						++_g94;
																						switch(kid95.name) {
																						case "g":
																							var g230 = { };
																							var at280 = HxOverrides.iter(kid95.attributes([]));
																							while(at280.hasNext()) {
																								var at281 = at280.next();
																								switch(at281.name) {
																								case "fill":
																									g230.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at281.value);
																									break;
																								case "id":
																									g230.id = at281.value;
																									break;
																								case "stroke":
																									g230.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at281.value);
																									break;
																								case "stroke-width":
																									g230.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at281.value);
																									break;
																								case "transform":
																									g230.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at281.value);
																									break;
																								case "version":
																									g230.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at281.value);
																									break;
																								case "viewBox":
																									g230.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at281.value);
																									break;
																								case "xmlns":
																									g230.xmlns = at281.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at281.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g230;
																							if(kid95.firstChild != null) {
																								var childs95 = kid95.childNodules([]);
																								var _g95 = 0;
																								while(_g95 < childs95.length) {
																									var kid96 = childs95[_g95];
																									++_g95;
																									switch(kid96.name) {
																									case "g":
																										var g231 = this.parseGroup(kid96);
																										break;
																									case "path":
																										var p180 = { };
																										var at282 = HxOverrides.iter(kid96.attributes([]));
																										while(at282.hasNext()) {
																											var at283 = at282.next();
																											switch(at283.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at283.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p180.d = at283.value;
																												break;
																											case "fill":
																												p180.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at283.value);
																												break;
																											case "id":
																												p180.id = at283.value;
																												break;
																											case "stroke":
																												p180.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at283.value);
																												break;
																											case "stroke-width":
																												p180.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at283.value);
																												break;
																											}
																										}
																										var g232 = this.group;
																										if(g232 == { }) {
																											g232 = null;
																										}
																										this.renderPath(p180,this.group);
																										var p181 = p180;
																										break;
																									default:
																										this.parseChild(kid96);
																									}
																								}
																							}
																							var g233 = g230;
																							break;
																						case "path":
																							var p182 = { };
																							var at284 = HxOverrides.iter(kid95.attributes([]));
																							while(at284.hasNext()) {
																								var at285 = at284.next();
																								switch(at285.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at285.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p182.d = at285.value;
																									break;
																								case "fill":
																									p182.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at285.value);
																									break;
																								case "id":
																									p182.id = at285.value;
																									break;
																								case "stroke":
																									p182.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at285.value);
																									break;
																								case "stroke-width":
																									p182.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at285.value);
																									break;
																								}
																							}
																							var g234 = this.group;
																							if(g234 == { }) {
																								g234 = null;
																							}
																							this.renderPath(p182,this.group);
																							var p183 = p182;
																							break;
																						default:
																							var childs96 = kid95.childNodules([]);
																							var _g96 = 0;
																							while(_g96 < childs96.length) {
																								var kid97 = childs96[_g96];
																								++_g96;
																								switch(kid97.name) {
																								case "g":
																									var g235 = this.parseGroup(kid97);
																									break;
																								case "path":
																									var p184 = { };
																									var at286 = HxOverrides.iter(kid97.attributes([]));
																									while(at286.hasNext()) {
																										var at287 = at286.next();
																										switch(at287.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at287.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p184.d = at287.value;
																											break;
																										case "fill":
																											p184.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at287.value);
																											break;
																										case "id":
																											p184.id = at287.value;
																											break;
																										case "stroke":
																											p184.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at287.value);
																											break;
																										case "stroke-width":
																											p184.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at287.value);
																											break;
																										}
																									}
																									var g236 = this.group;
																									if(g236 == { }) {
																										g236 = null;
																									}
																									this.renderPath(p184,this.group);
																									var p185 = p184;
																									break;
																								default:
																									this.parseChild(kid97);
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																		var g237 = g224;
																		break;
																	case "path":
																		var p186 = { };
																		var at288 = HxOverrides.iter(kid92.attributes([]));
																		while(at288.hasNext()) {
																			var at289 = at288.next();
																			switch(at289.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at289.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p186.d = at289.value;
																				break;
																			case "fill":
																				p186.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at289.value);
																				break;
																			case "id":
																				p186.id = at289.value;
																				break;
																			case "stroke":
																				p186.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at289.value);
																				break;
																			case "stroke-width":
																				p186.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at289.value);
																				break;
																			}
																		}
																		var g238 = this.group;
																		if(g238 == { }) {
																			g238 = null;
																		}
																		this.renderPath(p186,this.group);
																		var p187 = p186;
																		break;
																	default:
																		var childs97 = kid92.childNodules([]);
																		var _g97 = 0;
																		while(_g97 < childs97.length) {
																			var kid98 = childs97[_g97];
																			++_g97;
																			switch(kid98.name) {
																			case "g":
																				var g239 = { };
																				var at290 = HxOverrides.iter(kid98.attributes([]));
																				while(at290.hasNext()) {
																					var at291 = at290.next();
																					switch(at291.name) {
																					case "fill":
																						g239.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at291.value);
																						break;
																					case "id":
																						g239.id = at291.value;
																						break;
																					case "stroke":
																						g239.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at291.value);
																						break;
																					case "stroke-width":
																						g239.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at291.value);
																						break;
																					case "transform":
																						g239.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at291.value);
																						break;
																					case "version":
																						g239.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at291.value);
																						break;
																					case "viewBox":
																						g239.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at291.value);
																						break;
																					case "xmlns":
																						g239.xmlns = at291.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at291.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g239;
																				if(kid98.firstChild != null) {
																					var childs98 = kid98.childNodules([]);
																					var _g98 = 0;
																					while(_g98 < childs98.length) {
																						var kid99 = childs98[_g98];
																						++_g98;
																						switch(kid99.name) {
																						case "g":
																							var g240 = { };
																							var at292 = HxOverrides.iter(kid99.attributes([]));
																							while(at292.hasNext()) {
																								var at293 = at292.next();
																								switch(at293.name) {
																								case "fill":
																									g240.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at293.value);
																									break;
																								case "id":
																									g240.id = at293.value;
																									break;
																								case "stroke":
																									g240.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at293.value);
																									break;
																								case "stroke-width":
																									g240.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at293.value);
																									break;
																								case "transform":
																									g240.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at293.value);
																									break;
																								case "version":
																									g240.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at293.value);
																									break;
																								case "viewBox":
																									g240.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at293.value);
																									break;
																								case "xmlns":
																									g240.xmlns = at293.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at293.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g240;
																							if(kid99.firstChild != null) {
																								var childs99 = kid99.childNodules([]);
																								var _g99 = 0;
																								while(_g99 < childs99.length) {
																									var kid100 = childs99[_g99];
																									++_g99;
																									switch(kid100.name) {
																									case "g":
																										var g241 = this.parseGroup(kid100);
																										break;
																									case "path":
																										var p188 = { };
																										var at294 = HxOverrides.iter(kid100.attributes([]));
																										while(at294.hasNext()) {
																											var at295 = at294.next();
																											switch(at295.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at295.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p188.d = at295.value;
																												break;
																											case "fill":
																												p188.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at295.value);
																												break;
																											case "id":
																												p188.id = at295.value;
																												break;
																											case "stroke":
																												p188.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at295.value);
																												break;
																											case "stroke-width":
																												p188.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at295.value);
																												break;
																											}
																										}
																										var g242 = this.group;
																										if(g242 == { }) {
																											g242 = null;
																										}
																										this.renderPath(p188,this.group);
																										var p189 = p188;
																										break;
																									default:
																										this.parseChild(kid100);
																									}
																								}
																							}
																							var g243 = g240;
																							break;
																						case "path":
																							var p190 = { };
																							var at296 = HxOverrides.iter(kid99.attributes([]));
																							while(at296.hasNext()) {
																								var at297 = at296.next();
																								switch(at297.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at297.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p190.d = at297.value;
																									break;
																								case "fill":
																									p190.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at297.value);
																									break;
																								case "id":
																									p190.id = at297.value;
																									break;
																								case "stroke":
																									p190.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at297.value);
																									break;
																								case "stroke-width":
																									p190.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at297.value);
																									break;
																								}
																							}
																							var g244 = this.group;
																							if(g244 == { }) {
																								g244 = null;
																							}
																							this.renderPath(p190,this.group);
																							var p191 = p190;
																							break;
																						default:
																							var childs100 = kid99.childNodules([]);
																							var _g100 = 0;
																							while(_g100 < childs100.length) {
																								var kid101 = childs100[_g100];
																								++_g100;
																								switch(kid101.name) {
																								case "g":
																									var g245 = this.parseGroup(kid101);
																									break;
																								case "path":
																									var p192 = { };
																									var at298 = HxOverrides.iter(kid101.attributes([]));
																									while(at298.hasNext()) {
																										var at299 = at298.next();
																										switch(at299.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at299.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p192.d = at299.value;
																											break;
																										case "fill":
																											p192.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at299.value);
																											break;
																										case "id":
																											p192.id = at299.value;
																											break;
																										case "stroke":
																											p192.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at299.value);
																											break;
																										case "stroke-width":
																											p192.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at299.value);
																											break;
																										}
																									}
																									var g246 = this.group;
																									if(g246 == { }) {
																										g246 = null;
																									}
																									this.renderPath(p192,this.group);
																									var p193 = p192;
																									break;
																								default:
																									this.parseChild(kid101);
																								}
																							}
																						}
																					}
																				}
																				var g247 = g239;
																				break;
																			case "path":
																				var p194 = { };
																				var at300 = HxOverrides.iter(kid98.attributes([]));
																				while(at300.hasNext()) {
																					var at301 = at300.next();
																					switch(at301.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at301.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p194.d = at301.value;
																						break;
																					case "fill":
																						p194.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at301.value);
																						break;
																					case "id":
																						p194.id = at301.value;
																						break;
																					case "stroke":
																						p194.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at301.value);
																						break;
																					case "stroke-width":
																						p194.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at301.value);
																						break;
																					}
																				}
																				var g248 = this.group;
																				if(g248 == { }) {
																					g248 = null;
																				}
																				this.renderPath(p194,this.group);
																				var p195 = p194;
																				break;
																			default:
																				var childs101 = kid98.childNodules([]);
																				var _g101 = 0;
																				while(_g101 < childs101.length) {
																					var kid102 = childs101[_g101];
																					++_g101;
																					switch(kid102.name) {
																					case "g":
																						var g249 = this.parseGroup(kid102);
																						break;
																					case "path":
																						var p196 = { };
																						var at302 = HxOverrides.iter(kid102.attributes([]));
																						while(at302.hasNext()) {
																							var at303 = at302.next();
																							switch(at303.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at303.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p196.d = at303.value;
																								break;
																							case "fill":
																								p196.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at303.value);
																								break;
																							case "id":
																								p196.id = at303.value;
																								break;
																							case "stroke":
																								p196.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at303.value);
																								break;
																							case "stroke-width":
																								p196.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at303.value);
																								break;
																							}
																						}
																						var g250 = this.group;
																						if(g250 == { }) {
																							g250 = null;
																						}
																						this.renderPath(p196,this.group);
																						var p197 = p196;
																						break;
																					default:
																						this.parseChild(kid102);
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
													var g251 = g218;
													break;
												case "path":
													var p198 = { };
													var at304 = HxOverrides.iter(kid89.attributes([]));
													while(at304.hasNext()) {
														var at305 = at304.next();
														switch(at305.name) {
														case "_":
															haxe_Log.trace("path attribute " + at305.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
															break;
														case "d":
															p198.d = at305.value;
															break;
														case "fill":
															p198.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at305.value);
															break;
														case "id":
															p198.id = at305.value;
															break;
														case "stroke":
															p198.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at305.value);
															break;
														case "stroke-width":
															p198.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at305.value);
															break;
														}
													}
													var g252 = this.group;
													if(g252 == { }) {
														g252 = null;
													}
													this.renderPath(p198,this.group);
													var p199 = p198;
													break;
												default:
													var childs102 = kid89.childNodules([]);
													var _g102 = 0;
													while(_g102 < childs102.length) {
														var kid103 = childs102[_g102];
														++_g102;
														switch(kid103.name) {
														case "g":
															var g253 = { };
															var at306 = HxOverrides.iter(kid103.attributes([]));
															while(at306.hasNext()) {
																var at307 = at306.next();
																switch(at307.name) {
																case "fill":
																	g253.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at307.value);
																	break;
																case "id":
																	g253.id = at307.value;
																	break;
																case "stroke":
																	g253.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at307.value);
																	break;
																case "stroke-width":
																	g253.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at307.value);
																	break;
																case "transform":
																	g253.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at307.value);
																	break;
																case "version":
																	g253.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at307.value);
																	break;
																case "viewBox":
																	g253.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at307.value);
																	break;
																case "xmlns":
																	g253.xmlns = at307.value;
																	break;
																default:
																	haxe_Log.trace("group attribute " + at307.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																}
															}
															this.group = g253;
															if(kid103.firstChild != null) {
																var childs103 = kid103.childNodules([]);
																var _g103 = 0;
																while(_g103 < childs103.length) {
																	var kid104 = childs103[_g103];
																	++_g103;
																	switch(kid104.name) {
																	case "g":
																		var g254 = { };
																		var at308 = HxOverrides.iter(kid104.attributes([]));
																		while(at308.hasNext()) {
																			var at309 = at308.next();
																			switch(at309.name) {
																			case "fill":
																				g254.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at309.value);
																				break;
																			case "id":
																				g254.id = at309.value;
																				break;
																			case "stroke":
																				g254.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at309.value);
																				break;
																			case "stroke-width":
																				g254.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at309.value);
																				break;
																			case "transform":
																				g254.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at309.value);
																				break;
																			case "version":
																				g254.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at309.value);
																				break;
																			case "viewBox":
																				g254.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at309.value);
																				break;
																			case "xmlns":
																				g254.xmlns = at309.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at309.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g254;
																		if(kid104.firstChild != null) {
																			var childs104 = kid104.childNodules([]);
																			var _g104 = 0;
																			while(_g104 < childs104.length) {
																				var kid105 = childs104[_g104];
																				++_g104;
																				switch(kid105.name) {
																				case "g":
																					var g255 = this.parseGroup(kid105);
																					break;
																				case "path":
																					var p200 = { };
																					var at310 = HxOverrides.iter(kid105.attributes([]));
																					while(at310.hasNext()) {
																						var at311 = at310.next();
																						switch(at311.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at311.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p200.d = at311.value;
																							break;
																						case "fill":
																							p200.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at311.value);
																							break;
																						case "id":
																							p200.id = at311.value;
																							break;
																						case "stroke":
																							p200.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at311.value);
																							break;
																						case "stroke-width":
																							p200.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at311.value);
																							break;
																						}
																					}
																					var g256 = this.group;
																					if(g256 == { }) {
																						g256 = null;
																					}
																					this.renderPath(p200,this.group);
																					var p201 = p200;
																					break;
																				default:
																					this.parseChild(kid105);
																				}
																			}
																		}
																		var g257 = g254;
																		break;
																	case "path":
																		var p202 = { };
																		var at312 = HxOverrides.iter(kid104.attributes([]));
																		while(at312.hasNext()) {
																			var at313 = at312.next();
																			switch(at313.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at313.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p202.d = at313.value;
																				break;
																			case "fill":
																				p202.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at313.value);
																				break;
																			case "id":
																				p202.id = at313.value;
																				break;
																			case "stroke":
																				p202.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at313.value);
																				break;
																			case "stroke-width":
																				p202.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at313.value);
																				break;
																			}
																		}
																		var g258 = this.group;
																		if(g258 == { }) {
																			g258 = null;
																		}
																		this.renderPath(p202,this.group);
																		var p203 = p202;
																		break;
																	default:
																		var childs105 = kid104.childNodules([]);
																		var _g105 = 0;
																		while(_g105 < childs105.length) {
																			var kid106 = childs105[_g105];
																			++_g105;
																			switch(kid106.name) {
																			case "g":
																				var g259 = { };
																				var at314 = HxOverrides.iter(kid106.attributes([]));
																				while(at314.hasNext()) {
																					var at315 = at314.next();
																					switch(at315.name) {
																					case "fill":
																						g259.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at315.value);
																						break;
																					case "id":
																						g259.id = at315.value;
																						break;
																					case "stroke":
																						g259.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at315.value);
																						break;
																					case "stroke-width":
																						g259.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at315.value);
																						break;
																					case "transform":
																						g259.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at315.value);
																						break;
																					case "version":
																						g259.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at315.value);
																						break;
																					case "viewBox":
																						g259.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at315.value);
																						break;
																					case "xmlns":
																						g259.xmlns = at315.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at315.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g259;
																				if(kid106.firstChild != null) {
																					var childs106 = kid106.childNodules([]);
																					var _g106 = 0;
																					while(_g106 < childs106.length) {
																						var kid107 = childs106[_g106];
																						++_g106;
																						switch(kid107.name) {
																						case "g":
																							var g260 = this.parseGroup(kid107);
																							break;
																						case "path":
																							var p204 = { };
																							var at316 = HxOverrides.iter(kid107.attributes([]));
																							while(at316.hasNext()) {
																								var at317 = at316.next();
																								switch(at317.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at317.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p204.d = at317.value;
																									break;
																								case "fill":
																									p204.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at317.value);
																									break;
																								case "id":
																									p204.id = at317.value;
																									break;
																								case "stroke":
																									p204.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at317.value);
																									break;
																								case "stroke-width":
																									p204.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at317.value);
																									break;
																								}
																							}
																							var g261 = this.group;
																							if(g261 == { }) {
																								g261 = null;
																							}
																							this.renderPath(p204,this.group);
																							var p205 = p204;
																							break;
																						default:
																							this.parseChild(kid107);
																						}
																					}
																				}
																				var g262 = g259;
																				break;
																			case "path":
																				var p206 = { };
																				var at318 = HxOverrides.iter(kid106.attributes([]));
																				while(at318.hasNext()) {
																					var at319 = at318.next();
																					switch(at319.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at319.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p206.d = at319.value;
																						break;
																					case "fill":
																						p206.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at319.value);
																						break;
																					case "id":
																						p206.id = at319.value;
																						break;
																					case "stroke":
																						p206.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at319.value);
																						break;
																					case "stroke-width":
																						p206.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at319.value);
																						break;
																					}
																				}
																				var g263 = this.group;
																				if(g263 == { }) {
																					g263 = null;
																				}
																				this.renderPath(p206,this.group);
																				var p207 = p206;
																				break;
																			default:
																				var childs107 = kid106.childNodules([]);
																				var _g107 = 0;
																				while(_g107 < childs107.length) {
																					var kid108 = childs107[_g107];
																					++_g107;
																					switch(kid108.name) {
																					case "g":
																						var g264 = this.parseGroup(kid108);
																						break;
																					case "path":
																						var p208 = { };
																						var at320 = HxOverrides.iter(kid108.attributes([]));
																						while(at320.hasNext()) {
																							var at321 = at320.next();
																							switch(at321.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at321.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p208.d = at321.value;
																								break;
																							case "fill":
																								p208.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at321.value);
																								break;
																							case "id":
																								p208.id = at321.value;
																								break;
																							case "stroke":
																								p208.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at321.value);
																								break;
																							case "stroke-width":
																								p208.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at321.value);
																								break;
																							}
																						}
																						var g265 = this.group;
																						if(g265 == { }) {
																							g265 = null;
																						}
																						this.renderPath(p208,this.group);
																						var p209 = p208;
																						break;
																					default:
																						this.parseChild(kid108);
																					}
																				}
																			}
																		}
																	}
																}
															}
															var g266 = g253;
															break;
														case "path":
															var p210 = { };
															var at322 = HxOverrides.iter(kid103.attributes([]));
															while(at322.hasNext()) {
																var at323 = at322.next();
																switch(at323.name) {
																case "_":
																	haxe_Log.trace("path attribute " + at323.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																	break;
																case "d":
																	p210.d = at323.value;
																	break;
																case "fill":
																	p210.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at323.value);
																	break;
																case "id":
																	p210.id = at323.value;
																	break;
																case "stroke":
																	p210.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at323.value);
																	break;
																case "stroke-width":
																	p210.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at323.value);
																	break;
																}
															}
															var g267 = this.group;
															if(g267 == { }) {
																g267 = null;
															}
															this.renderPath(p210,this.group);
															var p211 = p210;
															break;
														default:
															var childs108 = kid103.childNodules([]);
															var _g108 = 0;
															while(_g108 < childs108.length) {
																var kid109 = childs108[_g108];
																++_g108;
																switch(kid109.name) {
																case "g":
																	var g268 = { };
																	var at324 = HxOverrides.iter(kid109.attributes([]));
																	while(at324.hasNext()) {
																		var at325 = at324.next();
																		switch(at325.name) {
																		case "fill":
																			g268.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at325.value);
																			break;
																		case "id":
																			g268.id = at325.value;
																			break;
																		case "stroke":
																			g268.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at325.value);
																			break;
																		case "stroke-width":
																			g268.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at325.value);
																			break;
																		case "transform":
																			g268.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at325.value);
																			break;
																		case "version":
																			g268.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at325.value);
																			break;
																		case "viewBox":
																			g268.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at325.value);
																			break;
																		case "xmlns":
																			g268.xmlns = at325.value;
																			break;
																		default:
																			haxe_Log.trace("group attribute " + at325.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																		}
																	}
																	this.group = g268;
																	if(kid109.firstChild != null) {
																		var childs109 = kid109.childNodules([]);
																		var _g109 = 0;
																		while(_g109 < childs109.length) {
																			var kid110 = childs109[_g109];
																			++_g109;
																			switch(kid110.name) {
																			case "g":
																				var g269 = { };
																				var at326 = HxOverrides.iter(kid110.attributes([]));
																				while(at326.hasNext()) {
																					var at327 = at326.next();
																					switch(at327.name) {
																					case "fill":
																						g269.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at327.value);
																						break;
																					case "id":
																						g269.id = at327.value;
																						break;
																					case "stroke":
																						g269.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at327.value);
																						break;
																					case "stroke-width":
																						g269.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at327.value);
																						break;
																					case "transform":
																						g269.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at327.value);
																						break;
																					case "version":
																						g269.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at327.value);
																						break;
																					case "viewBox":
																						g269.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at327.value);
																						break;
																					case "xmlns":
																						g269.xmlns = at327.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at327.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g269;
																				if(kid110.firstChild != null) {
																					var childs110 = kid110.childNodules([]);
																					var _g110 = 0;
																					while(_g110 < childs110.length) {
																						var kid111 = childs110[_g110];
																						++_g110;
																						switch(kid111.name) {
																						case "g":
																							var g270 = this.parseGroup(kid111);
																							break;
																						case "path":
																							var p212 = { };
																							var at328 = HxOverrides.iter(kid111.attributes([]));
																							while(at328.hasNext()) {
																								var at329 = at328.next();
																								switch(at329.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at329.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p212.d = at329.value;
																									break;
																								case "fill":
																									p212.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at329.value);
																									break;
																								case "id":
																									p212.id = at329.value;
																									break;
																								case "stroke":
																									p212.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at329.value);
																									break;
																								case "stroke-width":
																									p212.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at329.value);
																									break;
																								}
																							}
																							var g271 = this.group;
																							if(g271 == { }) {
																								g271 = null;
																							}
																							this.renderPath(p212,this.group);
																							var p213 = p212;
																							break;
																						default:
																							this.parseChild(kid111);
																						}
																					}
																				}
																				var g272 = g269;
																				break;
																			case "path":
																				var p214 = { };
																				var at330 = HxOverrides.iter(kid110.attributes([]));
																				while(at330.hasNext()) {
																					var at331 = at330.next();
																					switch(at331.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at331.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p214.d = at331.value;
																						break;
																					case "fill":
																						p214.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at331.value);
																						break;
																					case "id":
																						p214.id = at331.value;
																						break;
																					case "stroke":
																						p214.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at331.value);
																						break;
																					case "stroke-width":
																						p214.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at331.value);
																						break;
																					}
																				}
																				var g273 = this.group;
																				if(g273 == { }) {
																					g273 = null;
																				}
																				this.renderPath(p214,this.group);
																				var p215 = p214;
																				break;
																			default:
																				var childs111 = kid110.childNodules([]);
																				var _g111 = 0;
																				while(_g111 < childs111.length) {
																					var kid112 = childs111[_g111];
																					++_g111;
																					switch(kid112.name) {
																					case "g":
																						var g274 = this.parseGroup(kid112);
																						break;
																					case "path":
																						var p216 = { };
																						var at332 = HxOverrides.iter(kid112.attributes([]));
																						while(at332.hasNext()) {
																							var at333 = at332.next();
																							switch(at333.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at333.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p216.d = at333.value;
																								break;
																							case "fill":
																								p216.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at333.value);
																								break;
																							case "id":
																								p216.id = at333.value;
																								break;
																							case "stroke":
																								p216.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at333.value);
																								break;
																							case "stroke-width":
																								p216.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at333.value);
																								break;
																							}
																						}
																						var g275 = this.group;
																						if(g275 == { }) {
																							g275 = null;
																						}
																						this.renderPath(p216,this.group);
																						var p217 = p216;
																						break;
																					default:
																						this.parseChild(kid112);
																					}
																				}
																			}
																		}
																	}
																	var g276 = g268;
																	break;
																case "path":
																	var p218 = { };
																	var at334 = HxOverrides.iter(kid109.attributes([]));
																	while(at334.hasNext()) {
																		var at335 = at334.next();
																		switch(at335.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at335.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p218.d = at335.value;
																			break;
																		case "fill":
																			p218.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at335.value);
																			break;
																		case "id":
																			p218.id = at335.value;
																			break;
																		case "stroke":
																			p218.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at335.value);
																			break;
																		case "stroke-width":
																			p218.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at335.value);
																			break;
																		}
																	}
																	var g277 = this.group;
																	if(g277 == { }) {
																		g277 = null;
																	}
																	this.renderPath(p218,this.group);
																	var p219 = p218;
																	break;
																default:
																	var childs112 = kid109.childNodules([]);
																	var _g112 = 0;
																	while(_g112 < childs112.length) {
																		var kid113 = childs112[_g112];
																		++_g112;
																		switch(kid113.name) {
																		case "g":
																			var g278 = this.parseGroup(kid113);
																			break;
																		case "path":
																			var p220 = { };
																			var at336 = HxOverrides.iter(kid113.attributes([]));
																			while(at336.hasNext()) {
																				var at337 = at336.next();
																				switch(at337.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at337.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p220.d = at337.value;
																					break;
																				case "fill":
																					p220.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at337.value);
																					break;
																				case "id":
																					p220.id = at337.value;
																					break;
																				case "stroke":
																					p220.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at337.value);
																					break;
																				case "stroke-width":
																					p220.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at337.value);
																					break;
																				}
																			}
																			var g279 = this.group;
																			if(g279 == { }) {
																				g279 = null;
																			}
																			this.renderPath(p220,this.group);
																			var p221 = p220;
																			break;
																		default:
																			this.parseChild(kid113);
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										var g280 = g217;
										break;
									case "path":
										var p222 = { };
										var at338 = HxOverrides.iter(kid88.attributes([]));
										while(at338.hasNext()) {
											var at339 = at338.next();
											switch(at339.name) {
											case "_":
												haxe_Log.trace("path attribute " + at339.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
												break;
											case "d":
												p222.d = at339.value;
												break;
											case "fill":
												p222.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at339.value);
												break;
											case "id":
												p222.id = at339.value;
												break;
											case "stroke":
												p222.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at339.value);
												break;
											case "stroke-width":
												p222.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at339.value);
												break;
											}
										}
										var g281 = this.group;
										if(g281 == { }) {
											g281 = null;
										}
										this.renderPath(p222,this.group);
										var p223 = p222;
										break;
									default:
										var childs113 = kid88.childNodules([]);
										var _g113 = 0;
										while(_g113 < childs113.length) {
											var kid114 = childs113[_g113];
											++_g113;
											switch(kid114.name) {
											case "g":
												var g282 = { };
												var at340 = HxOverrides.iter(kid114.attributes([]));
												while(at340.hasNext()) {
													var at341 = at340.next();
													switch(at341.name) {
													case "fill":
														g282.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at341.value);
														break;
													case "id":
														g282.id = at341.value;
														break;
													case "stroke":
														g282.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at341.value);
														break;
													case "stroke-width":
														g282.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at341.value);
														break;
													case "transform":
														g282.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at341.value);
														break;
													case "version":
														g282.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at341.value);
														break;
													case "viewBox":
														g282.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at341.value);
														break;
													case "xmlns":
														g282.xmlns = at341.value;
														break;
													default:
														haxe_Log.trace("group attribute " + at341.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
													}
												}
												this.group = g282;
												if(kid114.firstChild != null) {
													var childs114 = kid114.childNodules([]);
													var _g114 = 0;
													while(_g114 < childs114.length) {
														var kid115 = childs114[_g114];
														++_g114;
														switch(kid115.name) {
														case "g":
															var g283 = { };
															var at342 = HxOverrides.iter(kid115.attributes([]));
															while(at342.hasNext()) {
																var at343 = at342.next();
																switch(at343.name) {
																case "fill":
																	g283.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at343.value);
																	break;
																case "id":
																	g283.id = at343.value;
																	break;
																case "stroke":
																	g283.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at343.value);
																	break;
																case "stroke-width":
																	g283.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at343.value);
																	break;
																case "transform":
																	g283.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at343.value);
																	break;
																case "version":
																	g283.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at343.value);
																	break;
																case "viewBox":
																	g283.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at343.value);
																	break;
																case "xmlns":
																	g283.xmlns = at343.value;
																	break;
																default:
																	haxe_Log.trace("group attribute " + at343.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																}
															}
															this.group = g283;
															if(kid115.firstChild != null) {
																var childs115 = kid115.childNodules([]);
																var _g115 = 0;
																while(_g115 < childs115.length) {
																	var kid116 = childs115[_g115];
																	++_g115;
																	switch(kid116.name) {
																	case "g":
																		var g284 = { };
																		var at344 = HxOverrides.iter(kid116.attributes([]));
																		while(at344.hasNext()) {
																			var at345 = at344.next();
																			switch(at345.name) {
																			case "fill":
																				g284.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at345.value);
																				break;
																			case "id":
																				g284.id = at345.value;
																				break;
																			case "stroke":
																				g284.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at345.value);
																				break;
																			case "stroke-width":
																				g284.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at345.value);
																				break;
																			case "transform":
																				g284.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at345.value);
																				break;
																			case "version":
																				g284.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at345.value);
																				break;
																			case "viewBox":
																				g284.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at345.value);
																				break;
																			case "xmlns":
																				g284.xmlns = at345.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at345.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g284;
																		if(kid116.firstChild != null) {
																			var childs116 = kid116.childNodules([]);
																			var _g116 = 0;
																			while(_g116 < childs116.length) {
																				var kid117 = childs116[_g116];
																				++_g116;
																				switch(kid117.name) {
																				case "g":
																					var g285 = this.parseGroup(kid117);
																					break;
																				case "path":
																					var p224 = { };
																					var at346 = HxOverrides.iter(kid117.attributes([]));
																					while(at346.hasNext()) {
																						var at347 = at346.next();
																						switch(at347.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at347.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p224.d = at347.value;
																							break;
																						case "fill":
																							p224.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at347.value);
																							break;
																						case "id":
																							p224.id = at347.value;
																							break;
																						case "stroke":
																							p224.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at347.value);
																							break;
																						case "stroke-width":
																							p224.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at347.value);
																							break;
																						}
																					}
																					var g286 = this.group;
																					if(g286 == { }) {
																						g286 = null;
																					}
																					this.renderPath(p224,this.group);
																					var p225 = p224;
																					break;
																				default:
																					this.parseChild(kid117);
																				}
																			}
																		}
																		var g287 = g284;
																		break;
																	case "path":
																		var p226 = { };
																		var at348 = HxOverrides.iter(kid116.attributes([]));
																		while(at348.hasNext()) {
																			var at349 = at348.next();
																			switch(at349.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at349.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p226.d = at349.value;
																				break;
																			case "fill":
																				p226.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at349.value);
																				break;
																			case "id":
																				p226.id = at349.value;
																				break;
																			case "stroke":
																				p226.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at349.value);
																				break;
																			case "stroke-width":
																				p226.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at349.value);
																				break;
																			}
																		}
																		var g288 = this.group;
																		if(g288 == { }) {
																			g288 = null;
																		}
																		this.renderPath(p226,this.group);
																		var p227 = p226;
																		break;
																	default:
																		var childs117 = kid116.childNodules([]);
																		var _g117 = 0;
																		while(_g117 < childs117.length) {
																			var kid118 = childs117[_g117];
																			++_g117;
																			switch(kid118.name) {
																			case "g":
																				var g289 = { };
																				var at350 = HxOverrides.iter(kid118.attributes([]));
																				while(at350.hasNext()) {
																					var at351 = at350.next();
																					switch(at351.name) {
																					case "fill":
																						g289.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at351.value);
																						break;
																					case "id":
																						g289.id = at351.value;
																						break;
																					case "stroke":
																						g289.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at351.value);
																						break;
																					case "stroke-width":
																						g289.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at351.value);
																						break;
																					case "transform":
																						g289.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at351.value);
																						break;
																					case "version":
																						g289.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at351.value);
																						break;
																					case "viewBox":
																						g289.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at351.value);
																						break;
																					case "xmlns":
																						g289.xmlns = at351.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at351.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g289;
																				if(kid118.firstChild != null) {
																					var childs118 = kid118.childNodules([]);
																					var _g118 = 0;
																					while(_g118 < childs118.length) {
																						var kid119 = childs118[_g118];
																						++_g118;
																						switch(kid119.name) {
																						case "g":
																							var g290 = { };
																							var at352 = HxOverrides.iter(kid119.attributes([]));
																							while(at352.hasNext()) {
																								var at353 = at352.next();
																								switch(at353.name) {
																								case "fill":
																									g290.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at353.value);
																									break;
																								case "id":
																									g290.id = at353.value;
																									break;
																								case "stroke":
																									g290.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at353.value);
																									break;
																								case "stroke-width":
																									g290.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at353.value);
																									break;
																								case "transform":
																									g290.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at353.value);
																									break;
																								case "version":
																									g290.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at353.value);
																									break;
																								case "viewBox":
																									g290.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at353.value);
																									break;
																								case "xmlns":
																									g290.xmlns = at353.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at353.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g290;
																							if(kid119.firstChild != null) {
																								var childs119 = kid119.childNodules([]);
																								var _g119 = 0;
																								while(_g119 < childs119.length) {
																									var kid120 = childs119[_g119];
																									++_g119;
																									switch(kid120.name) {
																									case "g":
																										var g291 = this.parseGroup(kid120);
																										break;
																									case "path":
																										var p228 = { };
																										var at354 = HxOverrides.iter(kid120.attributes([]));
																										while(at354.hasNext()) {
																											var at355 = at354.next();
																											switch(at355.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at355.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p228.d = at355.value;
																												break;
																											case "fill":
																												p228.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at355.value);
																												break;
																											case "id":
																												p228.id = at355.value;
																												break;
																											case "stroke":
																												p228.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at355.value);
																												break;
																											case "stroke-width":
																												p228.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at355.value);
																												break;
																											}
																										}
																										var g292 = this.group;
																										if(g292 == { }) {
																											g292 = null;
																										}
																										this.renderPath(p228,this.group);
																										var p229 = p228;
																										break;
																									default:
																										this.parseChild(kid120);
																									}
																								}
																							}
																							var g293 = g290;
																							break;
																						case "path":
																							var p230 = { };
																							var at356 = HxOverrides.iter(kid119.attributes([]));
																							while(at356.hasNext()) {
																								var at357 = at356.next();
																								switch(at357.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at357.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p230.d = at357.value;
																									break;
																								case "fill":
																									p230.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at357.value);
																									break;
																								case "id":
																									p230.id = at357.value;
																									break;
																								case "stroke":
																									p230.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at357.value);
																									break;
																								case "stroke-width":
																									p230.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at357.value);
																									break;
																								}
																							}
																							var g294 = this.group;
																							if(g294 == { }) {
																								g294 = null;
																							}
																							this.renderPath(p230,this.group);
																							var p231 = p230;
																							break;
																						default:
																							var childs120 = kid119.childNodules([]);
																							var _g120 = 0;
																							while(_g120 < childs120.length) {
																								var kid121 = childs120[_g120];
																								++_g120;
																								switch(kid121.name) {
																								case "g":
																									var g295 = { };
																									var at358 = HxOverrides.iter(kid121.attributes([]));
																									while(at358.hasNext()) {
																										var at359 = at358.next();
																										switch(at359.name) {
																										case "fill":
																											g295.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at359.value);
																											break;
																										case "id":
																											g295.id = at359.value;
																											break;
																										case "stroke":
																											g295.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at359.value);
																											break;
																										case "stroke-width":
																											g295.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at359.value);
																											break;
																										case "transform":
																											g295.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at359.value);
																											break;
																										case "version":
																											g295.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at359.value);
																											break;
																										case "viewBox":
																											g295.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at359.value);
																											break;
																										case "xmlns":
																											g295.xmlns = at359.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at359.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g295;
																									if(kid121.firstChild != null) {
																										var childs121 = kid121.childNodules([]);
																										var _g121 = 0;
																										while(_g121 < childs121.length) {
																											var kid122 = childs121[_g121];
																											++_g121;
																											switch(kid122.name) {
																											case "g":
																												var g296 = this.parseGroup(kid122);
																												break;
																											case "path":
																												var p232 = { };
																												var at360 = HxOverrides.iter(kid122.attributes([]));
																												while(at360.hasNext()) {
																													var at361 = at360.next();
																													switch(at361.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at361.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p232.d = at361.value;
																														break;
																													case "fill":
																														p232.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at361.value);
																														break;
																													case "id":
																														p232.id = at361.value;
																														break;
																													case "stroke":
																														p232.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at361.value);
																														break;
																													case "stroke-width":
																														p232.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at361.value);
																														break;
																													}
																												}
																												var g297 = this.group;
																												if(g297 == { }) {
																													g297 = null;
																												}
																												this.renderPath(p232,this.group);
																												var p233 = p232;
																												break;
																											default:
																												this.parseChild(kid122);
																											}
																										}
																									}
																									var g298 = g295;
																									break;
																								case "path":
																									var p234 = { };
																									var at362 = HxOverrides.iter(kid121.attributes([]));
																									while(at362.hasNext()) {
																										var at363 = at362.next();
																										switch(at363.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at363.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p234.d = at363.value;
																											break;
																										case "fill":
																											p234.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at363.value);
																											break;
																										case "id":
																											p234.id = at363.value;
																											break;
																										case "stroke":
																											p234.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at363.value);
																											break;
																										case "stroke-width":
																											p234.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at363.value);
																											break;
																										}
																									}
																									var g299 = this.group;
																									if(g299 == { }) {
																										g299 = null;
																									}
																									this.renderPath(p234,this.group);
																									var p235 = p234;
																									break;
																								default:
																									var childs122 = kid121.childNodules([]);
																									var _g122 = 0;
																									while(_g122 < childs122.length) {
																										var kid123 = childs122[_g122];
																										++_g122;
																										switch(kid123.name) {
																										case "g":
																											var g300 = this.parseGroup(kid123);
																											break;
																										case "path":
																											var p236 = { };
																											var at364 = HxOverrides.iter(kid123.attributes([]));
																											while(at364.hasNext()) {
																												var at365 = at364.next();
																												switch(at365.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at365.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p236.d = at365.value;
																													break;
																												case "fill":
																													p236.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at365.value);
																													break;
																												case "id":
																													p236.id = at365.value;
																													break;
																												case "stroke":
																													p236.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at365.value);
																													break;
																												case "stroke-width":
																													p236.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at365.value);
																													break;
																												}
																											}
																											var g301 = this.group;
																											if(g301 == { }) {
																												g301 = null;
																											}
																											this.renderPath(p236,this.group);
																											var p237 = p236;
																											break;
																										default:
																											this.parseChild(kid123);
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				var g302 = g289;
																				break;
																			case "path":
																				var p238 = { };
																				var at366 = HxOverrides.iter(kid118.attributes([]));
																				while(at366.hasNext()) {
																					var at367 = at366.next();
																					switch(at367.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at367.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p238.d = at367.value;
																						break;
																					case "fill":
																						p238.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at367.value);
																						break;
																					case "id":
																						p238.id = at367.value;
																						break;
																					case "stroke":
																						p238.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at367.value);
																						break;
																					case "stroke-width":
																						p238.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at367.value);
																						break;
																					}
																				}
																				var g303 = this.group;
																				if(g303 == { }) {
																					g303 = null;
																				}
																				this.renderPath(p238,this.group);
																				var p239 = p238;
																				break;
																			default:
																				var childs123 = kid118.childNodules([]);
																				var _g123 = 0;
																				while(_g123 < childs123.length) {
																					var kid124 = childs123[_g123];
																					++_g123;
																					switch(kid124.name) {
																					case "g":
																						var g304 = { };
																						var at368 = HxOverrides.iter(kid124.attributes([]));
																						while(at368.hasNext()) {
																							var at369 = at368.next();
																							switch(at369.name) {
																							case "fill":
																								g304.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at369.value);
																								break;
																							case "id":
																								g304.id = at369.value;
																								break;
																							case "stroke":
																								g304.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at369.value);
																								break;
																							case "stroke-width":
																								g304.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at369.value);
																								break;
																							case "transform":
																								g304.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at369.value);
																								break;
																							case "version":
																								g304.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at369.value);
																								break;
																							case "viewBox":
																								g304.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at369.value);
																								break;
																							case "xmlns":
																								g304.xmlns = at369.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at369.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g304;
																						if(kid124.firstChild != null) {
																							var childs124 = kid124.childNodules([]);
																							var _g124 = 0;
																							while(_g124 < childs124.length) {
																								var kid125 = childs124[_g124];
																								++_g124;
																								switch(kid125.name) {
																								case "g":
																									var g305 = { };
																									var at370 = HxOverrides.iter(kid125.attributes([]));
																									while(at370.hasNext()) {
																										var at371 = at370.next();
																										switch(at371.name) {
																										case "fill":
																											g305.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at371.value);
																											break;
																										case "id":
																											g305.id = at371.value;
																											break;
																										case "stroke":
																											g305.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at371.value);
																											break;
																										case "stroke-width":
																											g305.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at371.value);
																											break;
																										case "transform":
																											g305.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at371.value);
																											break;
																										case "version":
																											g305.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at371.value);
																											break;
																										case "viewBox":
																											g305.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at371.value);
																											break;
																										case "xmlns":
																											g305.xmlns = at371.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at371.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g305;
																									if(kid125.firstChild != null) {
																										var childs125 = kid125.childNodules([]);
																										var _g125 = 0;
																										while(_g125 < childs125.length) {
																											var kid126 = childs125[_g125];
																											++_g125;
																											switch(kid126.name) {
																											case "g":
																												var g306 = this.parseGroup(kid126);
																												break;
																											case "path":
																												var p240 = { };
																												var at372 = HxOverrides.iter(kid126.attributes([]));
																												while(at372.hasNext()) {
																													var at373 = at372.next();
																													switch(at373.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at373.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p240.d = at373.value;
																														break;
																													case "fill":
																														p240.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at373.value);
																														break;
																													case "id":
																														p240.id = at373.value;
																														break;
																													case "stroke":
																														p240.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at373.value);
																														break;
																													case "stroke-width":
																														p240.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at373.value);
																														break;
																													}
																												}
																												var g307 = this.group;
																												if(g307 == { }) {
																													g307 = null;
																												}
																												this.renderPath(p240,this.group);
																												var p241 = p240;
																												break;
																											default:
																												this.parseChild(kid126);
																											}
																										}
																									}
																									var g308 = g305;
																									break;
																								case "path":
																									var p242 = { };
																									var at374 = HxOverrides.iter(kid125.attributes([]));
																									while(at374.hasNext()) {
																										var at375 = at374.next();
																										switch(at375.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at375.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p242.d = at375.value;
																											break;
																										case "fill":
																											p242.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at375.value);
																											break;
																										case "id":
																											p242.id = at375.value;
																											break;
																										case "stroke":
																											p242.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at375.value);
																											break;
																										case "stroke-width":
																											p242.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at375.value);
																											break;
																										}
																									}
																									var g309 = this.group;
																									if(g309 == { }) {
																										g309 = null;
																									}
																									this.renderPath(p242,this.group);
																									var p243 = p242;
																									break;
																								default:
																									var childs126 = kid125.childNodules([]);
																									var _g126 = 0;
																									while(_g126 < childs126.length) {
																										var kid127 = childs126[_g126];
																										++_g126;
																										switch(kid127.name) {
																										case "g":
																											var g310 = this.parseGroup(kid127);
																											break;
																										case "path":
																											var p244 = { };
																											var at376 = HxOverrides.iter(kid127.attributes([]));
																											while(at376.hasNext()) {
																												var at377 = at376.next();
																												switch(at377.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at377.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p244.d = at377.value;
																													break;
																												case "fill":
																													p244.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at377.value);
																													break;
																												case "id":
																													p244.id = at377.value;
																													break;
																												case "stroke":
																													p244.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at377.value);
																													break;
																												case "stroke-width":
																													p244.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at377.value);
																													break;
																												}
																											}
																											var g311 = this.group;
																											if(g311 == { }) {
																												g311 = null;
																											}
																											this.renderPath(p244,this.group);
																											var p245 = p244;
																											break;
																										default:
																											this.parseChild(kid127);
																										}
																									}
																								}
																							}
																						}
																						var g312 = g304;
																						break;
																					case "path":
																						var p246 = { };
																						var at378 = HxOverrides.iter(kid124.attributes([]));
																						while(at378.hasNext()) {
																							var at379 = at378.next();
																							switch(at379.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at379.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p246.d = at379.value;
																								break;
																							case "fill":
																								p246.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at379.value);
																								break;
																							case "id":
																								p246.id = at379.value;
																								break;
																							case "stroke":
																								p246.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at379.value);
																								break;
																							case "stroke-width":
																								p246.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at379.value);
																								break;
																							}
																						}
																						var g313 = this.group;
																						if(g313 == { }) {
																							g313 = null;
																						}
																						this.renderPath(p246,this.group);
																						var p247 = p246;
																						break;
																					default:
																						var childs127 = kid124.childNodules([]);
																						var _g127 = 0;
																						while(_g127 < childs127.length) {
																							var kid128 = childs127[_g127];
																							++_g127;
																							switch(kid128.name) {
																							case "g":
																								var g314 = this.parseGroup(kid128);
																								break;
																							case "path":
																								var p248 = { };
																								var at380 = HxOverrides.iter(kid128.attributes([]));
																								while(at380.hasNext()) {
																									var at381 = at380.next();
																									switch(at381.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at381.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p248.d = at381.value;
																										break;
																									case "fill":
																										p248.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at381.value);
																										break;
																									case "id":
																										p248.id = at381.value;
																										break;
																									case "stroke":
																										p248.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at381.value);
																										break;
																									case "stroke-width":
																										p248.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at381.value);
																										break;
																									}
																								}
																								var g315 = this.group;
																								if(g315 == { }) {
																									g315 = null;
																								}
																								this.renderPath(p248,this.group);
																								var p249 = p248;
																								break;
																							default:
																								this.parseChild(kid128);
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
															var g316 = g283;
															break;
														case "path":
															var p250 = { };
															var at382 = HxOverrides.iter(kid115.attributes([]));
															while(at382.hasNext()) {
																var at383 = at382.next();
																switch(at383.name) {
																case "_":
																	haxe_Log.trace("path attribute " + at383.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																	break;
																case "d":
																	p250.d = at383.value;
																	break;
																case "fill":
																	p250.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at383.value);
																	break;
																case "id":
																	p250.id = at383.value;
																	break;
																case "stroke":
																	p250.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at383.value);
																	break;
																case "stroke-width":
																	p250.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at383.value);
																	break;
																}
															}
															var g317 = this.group;
															if(g317 == { }) {
																g317 = null;
															}
															this.renderPath(p250,this.group);
															var p251 = p250;
															break;
														default:
															var childs128 = kid115.childNodules([]);
															var _g128 = 0;
															while(_g128 < childs128.length) {
																var kid129 = childs128[_g128];
																++_g128;
																switch(kid129.name) {
																case "g":
																	var g318 = { };
																	var at384 = HxOverrides.iter(kid129.attributes([]));
																	while(at384.hasNext()) {
																		var at385 = at384.next();
																		switch(at385.name) {
																		case "fill":
																			g318.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at385.value);
																			break;
																		case "id":
																			g318.id = at385.value;
																			break;
																		case "stroke":
																			g318.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at385.value);
																			break;
																		case "stroke-width":
																			g318.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at385.value);
																			break;
																		case "transform":
																			g318.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at385.value);
																			break;
																		case "version":
																			g318.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at385.value);
																			break;
																		case "viewBox":
																			g318.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at385.value);
																			break;
																		case "xmlns":
																			g318.xmlns = at385.value;
																			break;
																		default:
																			haxe_Log.trace("group attribute " + at385.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																		}
																	}
																	this.group = g318;
																	if(kid129.firstChild != null) {
																		var childs129 = kid129.childNodules([]);
																		var _g129 = 0;
																		while(_g129 < childs129.length) {
																			var kid130 = childs129[_g129];
																			++_g129;
																			switch(kid130.name) {
																			case "g":
																				var g319 = { };
																				var at386 = HxOverrides.iter(kid130.attributes([]));
																				while(at386.hasNext()) {
																					var at387 = at386.next();
																					switch(at387.name) {
																					case "fill":
																						g319.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at387.value);
																						break;
																					case "id":
																						g319.id = at387.value;
																						break;
																					case "stroke":
																						g319.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at387.value);
																						break;
																					case "stroke-width":
																						g319.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at387.value);
																						break;
																					case "transform":
																						g319.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at387.value);
																						break;
																					case "version":
																						g319.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at387.value);
																						break;
																					case "viewBox":
																						g319.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at387.value);
																						break;
																					case "xmlns":
																						g319.xmlns = at387.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at387.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g319;
																				if(kid130.firstChild != null) {
																					var childs130 = kid130.childNodules([]);
																					var _g130 = 0;
																					while(_g130 < childs130.length) {
																						var kid131 = childs130[_g130];
																						++_g130;
																						switch(kid131.name) {
																						case "g":
																							var g320 = this.parseGroup(kid131);
																							break;
																						case "path":
																							var p252 = { };
																							var at388 = HxOverrides.iter(kid131.attributes([]));
																							while(at388.hasNext()) {
																								var at389 = at388.next();
																								switch(at389.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at389.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p252.d = at389.value;
																									break;
																								case "fill":
																									p252.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at389.value);
																									break;
																								case "id":
																									p252.id = at389.value;
																									break;
																								case "stroke":
																									p252.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at389.value);
																									break;
																								case "stroke-width":
																									p252.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at389.value);
																									break;
																								}
																							}
																							var g321 = this.group;
																							if(g321 == { }) {
																								g321 = null;
																							}
																							this.renderPath(p252,this.group);
																							var p253 = p252;
																							break;
																						default:
																							this.parseChild(kid131);
																						}
																					}
																				}
																				var g322 = g319;
																				break;
																			case "path":
																				var p254 = { };
																				var at390 = HxOverrides.iter(kid130.attributes([]));
																				while(at390.hasNext()) {
																					var at391 = at390.next();
																					switch(at391.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at391.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p254.d = at391.value;
																						break;
																					case "fill":
																						p254.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at391.value);
																						break;
																					case "id":
																						p254.id = at391.value;
																						break;
																					case "stroke":
																						p254.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at391.value);
																						break;
																					case "stroke-width":
																						p254.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at391.value);
																						break;
																					}
																				}
																				var g323 = this.group;
																				if(g323 == { }) {
																					g323 = null;
																				}
																				this.renderPath(p254,this.group);
																				var p255 = p254;
																				break;
																			default:
																				var childs131 = kid130.childNodules([]);
																				var _g131 = 0;
																				while(_g131 < childs131.length) {
																					var kid132 = childs131[_g131];
																					++_g131;
																					switch(kid132.name) {
																					case "g":
																						var g324 = { };
																						var at392 = HxOverrides.iter(kid132.attributes([]));
																						while(at392.hasNext()) {
																							var at393 = at392.next();
																							switch(at393.name) {
																							case "fill":
																								g324.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at393.value);
																								break;
																							case "id":
																								g324.id = at393.value;
																								break;
																							case "stroke":
																								g324.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at393.value);
																								break;
																							case "stroke-width":
																								g324.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at393.value);
																								break;
																							case "transform":
																								g324.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at393.value);
																								break;
																							case "version":
																								g324.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at393.value);
																								break;
																							case "viewBox":
																								g324.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at393.value);
																								break;
																							case "xmlns":
																								g324.xmlns = at393.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at393.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g324;
																						if(kid132.firstChild != null) {
																							var childs132 = kid132.childNodules([]);
																							var _g132 = 0;
																							while(_g132 < childs132.length) {
																								var kid133 = childs132[_g132];
																								++_g132;
																								switch(kid133.name) {
																								case "g":
																									var g325 = this.parseGroup(kid133);
																									break;
																								case "path":
																									var p256 = { };
																									var at394 = HxOverrides.iter(kid133.attributes([]));
																									while(at394.hasNext()) {
																										var at395 = at394.next();
																										switch(at395.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at395.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p256.d = at395.value;
																											break;
																										case "fill":
																											p256.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at395.value);
																											break;
																										case "id":
																											p256.id = at395.value;
																											break;
																										case "stroke":
																											p256.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at395.value);
																											break;
																										case "stroke-width":
																											p256.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at395.value);
																											break;
																										}
																									}
																									var g326 = this.group;
																									if(g326 == { }) {
																										g326 = null;
																									}
																									this.renderPath(p256,this.group);
																									var p257 = p256;
																									break;
																								default:
																									this.parseChild(kid133);
																								}
																							}
																						}
																						var g327 = g324;
																						break;
																					case "path":
																						var p258 = { };
																						var at396 = HxOverrides.iter(kid132.attributes([]));
																						while(at396.hasNext()) {
																							var at397 = at396.next();
																							switch(at397.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at397.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p258.d = at397.value;
																								break;
																							case "fill":
																								p258.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at397.value);
																								break;
																							case "id":
																								p258.id = at397.value;
																								break;
																							case "stroke":
																								p258.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at397.value);
																								break;
																							case "stroke-width":
																								p258.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at397.value);
																								break;
																							}
																						}
																						var g328 = this.group;
																						if(g328 == { }) {
																							g328 = null;
																						}
																						this.renderPath(p258,this.group);
																						var p259 = p258;
																						break;
																					default:
																						var childs133 = kid132.childNodules([]);
																						var _g133 = 0;
																						while(_g133 < childs133.length) {
																							var kid134 = childs133[_g133];
																							++_g133;
																							switch(kid134.name) {
																							case "g":
																								var g329 = this.parseGroup(kid134);
																								break;
																							case "path":
																								var p260 = { };
																								var at398 = HxOverrides.iter(kid134.attributes([]));
																								while(at398.hasNext()) {
																									var at399 = at398.next();
																									switch(at399.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at399.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p260.d = at399.value;
																										break;
																									case "fill":
																										p260.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at399.value);
																										break;
																									case "id":
																										p260.id = at399.value;
																										break;
																									case "stroke":
																										p260.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at399.value);
																										break;
																									case "stroke-width":
																										p260.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at399.value);
																										break;
																									}
																								}
																								var g330 = this.group;
																								if(g330 == { }) {
																									g330 = null;
																								}
																								this.renderPath(p260,this.group);
																								var p261 = p260;
																								break;
																							default:
																								this.parseChild(kid134);
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																	var g331 = g318;
																	break;
																case "path":
																	var p262 = { };
																	var at400 = HxOverrides.iter(kid129.attributes([]));
																	while(at400.hasNext()) {
																		var at401 = at400.next();
																		switch(at401.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at401.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p262.d = at401.value;
																			break;
																		case "fill":
																			p262.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at401.value);
																			break;
																		case "id":
																			p262.id = at401.value;
																			break;
																		case "stroke":
																			p262.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at401.value);
																			break;
																		case "stroke-width":
																			p262.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at401.value);
																			break;
																		}
																	}
																	var g332 = this.group;
																	if(g332 == { }) {
																		g332 = null;
																	}
																	this.renderPath(p262,this.group);
																	var p263 = p262;
																	break;
																default:
																	var childs134 = kid129.childNodules([]);
																	var _g134 = 0;
																	while(_g134 < childs134.length) {
																		var kid135 = childs134[_g134];
																		++_g134;
																		switch(kid135.name) {
																		case "g":
																			var g333 = { };
																			var at402 = HxOverrides.iter(kid135.attributes([]));
																			while(at402.hasNext()) {
																				var at403 = at402.next();
																				switch(at403.name) {
																				case "fill":
																					g333.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at403.value);
																					break;
																				case "id":
																					g333.id = at403.value;
																					break;
																				case "stroke":
																					g333.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at403.value);
																					break;
																				case "stroke-width":
																					g333.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at403.value);
																					break;
																				case "transform":
																					g333.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at403.value);
																					break;
																				case "version":
																					g333.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at403.value);
																					break;
																				case "viewBox":
																					g333.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at403.value);
																					break;
																				case "xmlns":
																					g333.xmlns = at403.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at403.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g333;
																			if(kid135.firstChild != null) {
																				var childs135 = kid135.childNodules([]);
																				var _g135 = 0;
																				while(_g135 < childs135.length) {
																					var kid136 = childs135[_g135];
																					++_g135;
																					switch(kid136.name) {
																					case "g":
																						var g334 = { };
																						var at404 = HxOverrides.iter(kid136.attributes([]));
																						while(at404.hasNext()) {
																							var at405 = at404.next();
																							switch(at405.name) {
																							case "fill":
																								g334.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at405.value);
																								break;
																							case "id":
																								g334.id = at405.value;
																								break;
																							case "stroke":
																								g334.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at405.value);
																								break;
																							case "stroke-width":
																								g334.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at405.value);
																								break;
																							case "transform":
																								g334.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at405.value);
																								break;
																							case "version":
																								g334.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at405.value);
																								break;
																							case "viewBox":
																								g334.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at405.value);
																								break;
																							case "xmlns":
																								g334.xmlns = at405.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at405.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g334;
																						if(kid136.firstChild != null) {
																							var childs136 = kid136.childNodules([]);
																							var _g136 = 0;
																							while(_g136 < childs136.length) {
																								var kid137 = childs136[_g136];
																								++_g136;
																								switch(kid137.name) {
																								case "g":
																									var g335 = this.parseGroup(kid137);
																									break;
																								case "path":
																									var p264 = { };
																									var at406 = HxOverrides.iter(kid137.attributes([]));
																									while(at406.hasNext()) {
																										var at407 = at406.next();
																										switch(at407.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at407.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p264.d = at407.value;
																											break;
																										case "fill":
																											p264.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at407.value);
																											break;
																										case "id":
																											p264.id = at407.value;
																											break;
																										case "stroke":
																											p264.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at407.value);
																											break;
																										case "stroke-width":
																											p264.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at407.value);
																											break;
																										}
																									}
																									var g336 = this.group;
																									if(g336 == { }) {
																										g336 = null;
																									}
																									this.renderPath(p264,this.group);
																									var p265 = p264;
																									break;
																								default:
																									this.parseChild(kid137);
																								}
																							}
																						}
																						var g337 = g334;
																						break;
																					case "path":
																						var p266 = { };
																						var at408 = HxOverrides.iter(kid136.attributes([]));
																						while(at408.hasNext()) {
																							var at409 = at408.next();
																							switch(at409.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at409.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p266.d = at409.value;
																								break;
																							case "fill":
																								p266.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at409.value);
																								break;
																							case "id":
																								p266.id = at409.value;
																								break;
																							case "stroke":
																								p266.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at409.value);
																								break;
																							case "stroke-width":
																								p266.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at409.value);
																								break;
																							}
																						}
																						var g338 = this.group;
																						if(g338 == { }) {
																							g338 = null;
																						}
																						this.renderPath(p266,this.group);
																						var p267 = p266;
																						break;
																					default:
																						var childs137 = kid136.childNodules([]);
																						var _g137 = 0;
																						while(_g137 < childs137.length) {
																							var kid138 = childs137[_g137];
																							++_g137;
																							switch(kid138.name) {
																							case "g":
																								var g339 = this.parseGroup(kid138);
																								break;
																							case "path":
																								var p268 = { };
																								var at410 = HxOverrides.iter(kid138.attributes([]));
																								while(at410.hasNext()) {
																									var at411 = at410.next();
																									switch(at411.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at411.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p268.d = at411.value;
																										break;
																									case "fill":
																										p268.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at411.value);
																										break;
																									case "id":
																										p268.id = at411.value;
																										break;
																									case "stroke":
																										p268.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at411.value);
																										break;
																									case "stroke-width":
																										p268.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at411.value);
																										break;
																									}
																								}
																								var g340 = this.group;
																								if(g340 == { }) {
																									g340 = null;
																								}
																								this.renderPath(p268,this.group);
																								var p269 = p268;
																								break;
																							default:
																								this.parseChild(kid138);
																							}
																						}
																					}
																				}
																			}
																			var g341 = g333;
																			break;
																		case "path":
																			var p270 = { };
																			var at412 = HxOverrides.iter(kid135.attributes([]));
																			while(at412.hasNext()) {
																				var at413 = at412.next();
																				switch(at413.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at413.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p270.d = at413.value;
																					break;
																				case "fill":
																					p270.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at413.value);
																					break;
																				case "id":
																					p270.id = at413.value;
																					break;
																				case "stroke":
																					p270.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at413.value);
																					break;
																				case "stroke-width":
																					p270.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at413.value);
																					break;
																				}
																			}
																			var g342 = this.group;
																			if(g342 == { }) {
																				g342 = null;
																			}
																			this.renderPath(p270,this.group);
																			var p271 = p270;
																			break;
																		default:
																			var childs138 = kid135.childNodules([]);
																			var _g138 = 0;
																			while(_g138 < childs138.length) {
																				var kid139 = childs138[_g138];
																				++_g138;
																				switch(kid139.name) {
																				case "g":
																					var g343 = this.parseGroup(kid139);
																					break;
																				case "path":
																					var p272 = { };
																					var at414 = HxOverrides.iter(kid139.attributes([]));
																					while(at414.hasNext()) {
																						var at415 = at414.next();
																						switch(at415.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at415.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p272.d = at415.value;
																							break;
																						case "fill":
																							p272.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at415.value);
																							break;
																						case "id":
																							p272.id = at415.value;
																							break;
																						case "stroke":
																							p272.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at415.value);
																							break;
																						case "stroke-width":
																							p272.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at415.value);
																							break;
																						}
																					}
																					var g344 = this.group;
																					if(g344 == { }) {
																						g344 = null;
																					}
																					this.renderPath(p272,this.group);
																					var p273 = p272;
																					break;
																				default:
																					this.parseChild(kid139);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
												var g345 = g282;
												break;
											case "path":
												var p274 = { };
												var at416 = HxOverrides.iter(kid114.attributes([]));
												while(at416.hasNext()) {
													var at417 = at416.next();
													switch(at417.name) {
													case "_":
														haxe_Log.trace("path attribute " + at417.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p274.d = at417.value;
														break;
													case "fill":
														p274.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at417.value);
														break;
													case "id":
														p274.id = at417.value;
														break;
													case "stroke":
														p274.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at417.value);
														break;
													case "stroke-width":
														p274.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at417.value);
														break;
													}
												}
												var g346 = this.group;
												if(g346 == { }) {
													g346 = null;
												}
												this.renderPath(p274,this.group);
												var p275 = p274;
												break;
											default:
												var childs139 = kid114.childNodules([]);
												var _g139 = 0;
												while(_g139 < childs139.length) {
													var kid140 = childs139[_g139];
													++_g139;
													switch(kid140.name) {
													case "g":
														var g347 = { };
														var at418 = HxOverrides.iter(kid140.attributes([]));
														while(at418.hasNext()) {
															var at419 = at418.next();
															switch(at419.name) {
															case "fill":
																g347.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at419.value);
																break;
															case "id":
																g347.id = at419.value;
																break;
															case "stroke":
																g347.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at419.value);
																break;
															case "stroke-width":
																g347.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at419.value);
																break;
															case "transform":
																g347.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at419.value);
																break;
															case "version":
																g347.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at419.value);
																break;
															case "viewBox":
																g347.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at419.value);
																break;
															case "xmlns":
																g347.xmlns = at419.value;
																break;
															default:
																haxe_Log.trace("group attribute " + at419.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
															}
														}
														this.group = g347;
														if(kid140.firstChild != null) {
															var childs140 = kid140.childNodules([]);
															var _g140 = 0;
															while(_g140 < childs140.length) {
																var kid141 = childs140[_g140];
																++_g140;
																switch(kid141.name) {
																case "g":
																	var g348 = { };
																	var at420 = HxOverrides.iter(kid141.attributes([]));
																	while(at420.hasNext()) {
																		var at421 = at420.next();
																		switch(at421.name) {
																		case "fill":
																			g348.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at421.value);
																			break;
																		case "id":
																			g348.id = at421.value;
																			break;
																		case "stroke":
																			g348.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at421.value);
																			break;
																		case "stroke-width":
																			g348.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at421.value);
																			break;
																		case "transform":
																			g348.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at421.value);
																			break;
																		case "version":
																			g348.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at421.value);
																			break;
																		case "viewBox":
																			g348.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at421.value);
																			break;
																		case "xmlns":
																			g348.xmlns = at421.value;
																			break;
																		default:
																			haxe_Log.trace("group attribute " + at421.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																		}
																	}
																	this.group = g348;
																	if(kid141.firstChild != null) {
																		var childs141 = kid141.childNodules([]);
																		var _g141 = 0;
																		while(_g141 < childs141.length) {
																			var kid142 = childs141[_g141];
																			++_g141;
																			switch(kid142.name) {
																			case "g":
																				var g349 = this.parseGroup(kid142);
																				break;
																			case "path":
																				var p276 = { };
																				var at422 = HxOverrides.iter(kid142.attributes([]));
																				while(at422.hasNext()) {
																					var at423 = at422.next();
																					switch(at423.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at423.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p276.d = at423.value;
																						break;
																					case "fill":
																						p276.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at423.value);
																						break;
																					case "id":
																						p276.id = at423.value;
																						break;
																					case "stroke":
																						p276.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at423.value);
																						break;
																					case "stroke-width":
																						p276.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at423.value);
																						break;
																					}
																				}
																				var g350 = this.group;
																				if(g350 == { }) {
																					g350 = null;
																				}
																				this.renderPath(p276,this.group);
																				var p277 = p276;
																				break;
																			default:
																				this.parseChild(kid142);
																			}
																		}
																	}
																	var g351 = g348;
																	break;
																case "path":
																	var p278 = { };
																	var at424 = HxOverrides.iter(kid141.attributes([]));
																	while(at424.hasNext()) {
																		var at425 = at424.next();
																		switch(at425.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at425.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p278.d = at425.value;
																			break;
																		case "fill":
																			p278.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at425.value);
																			break;
																		case "id":
																			p278.id = at425.value;
																			break;
																		case "stroke":
																			p278.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at425.value);
																			break;
																		case "stroke-width":
																			p278.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at425.value);
																			break;
																		}
																	}
																	var g352 = this.group;
																	if(g352 == { }) {
																		g352 = null;
																	}
																	this.renderPath(p278,this.group);
																	var p279 = p278;
																	break;
																default:
																	var childs142 = kid141.childNodules([]);
																	var _g142 = 0;
																	while(_g142 < childs142.length) {
																		var kid143 = childs142[_g142];
																		++_g142;
																		switch(kid143.name) {
																		case "g":
																			var g353 = { };
																			var at426 = HxOverrides.iter(kid143.attributes([]));
																			while(at426.hasNext()) {
																				var at427 = at426.next();
																				switch(at427.name) {
																				case "fill":
																					g353.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at427.value);
																					break;
																				case "id":
																					g353.id = at427.value;
																					break;
																				case "stroke":
																					g353.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at427.value);
																					break;
																				case "stroke-width":
																					g353.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at427.value);
																					break;
																				case "transform":
																					g353.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at427.value);
																					break;
																				case "version":
																					g353.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at427.value);
																					break;
																				case "viewBox":
																					g353.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at427.value);
																					break;
																				case "xmlns":
																					g353.xmlns = at427.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at427.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g353;
																			if(kid143.firstChild != null) {
																				var childs143 = kid143.childNodules([]);
																				var _g143 = 0;
																				while(_g143 < childs143.length) {
																					var kid144 = childs143[_g143];
																					++_g143;
																					switch(kid144.name) {
																					case "g":
																						var g354 = { };
																						var at428 = HxOverrides.iter(kid144.attributes([]));
																						while(at428.hasNext()) {
																							var at429 = at428.next();
																							switch(at429.name) {
																							case "fill":
																								g354.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at429.value);
																								break;
																							case "id":
																								g354.id = at429.value;
																								break;
																							case "stroke":
																								g354.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at429.value);
																								break;
																							case "stroke-width":
																								g354.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at429.value);
																								break;
																							case "transform":
																								g354.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at429.value);
																								break;
																							case "version":
																								g354.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at429.value);
																								break;
																							case "viewBox":
																								g354.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at429.value);
																								break;
																							case "xmlns":
																								g354.xmlns = at429.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at429.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g354;
																						if(kid144.firstChild != null) {
																							var childs144 = kid144.childNodules([]);
																							var _g144 = 0;
																							while(_g144 < childs144.length) {
																								var kid145 = childs144[_g144];
																								++_g144;
																								switch(kid145.name) {
																								case "g":
																									var g355 = this.parseGroup(kid145);
																									break;
																								case "path":
																									var p280 = { };
																									var at430 = HxOverrides.iter(kid145.attributes([]));
																									while(at430.hasNext()) {
																										var at431 = at430.next();
																										switch(at431.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at431.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p280.d = at431.value;
																											break;
																										case "fill":
																											p280.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at431.value);
																											break;
																										case "id":
																											p280.id = at431.value;
																											break;
																										case "stroke":
																											p280.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at431.value);
																											break;
																										case "stroke-width":
																											p280.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at431.value);
																											break;
																										}
																									}
																									var g356 = this.group;
																									if(g356 == { }) {
																										g356 = null;
																									}
																									this.renderPath(p280,this.group);
																									var p281 = p280;
																									break;
																								default:
																									this.parseChild(kid145);
																								}
																							}
																						}
																						var g357 = g354;
																						break;
																					case "path":
																						var p282 = { };
																						var at432 = HxOverrides.iter(kid144.attributes([]));
																						while(at432.hasNext()) {
																							var at433 = at432.next();
																							switch(at433.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at433.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p282.d = at433.value;
																								break;
																							case "fill":
																								p282.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at433.value);
																								break;
																							case "id":
																								p282.id = at433.value;
																								break;
																							case "stroke":
																								p282.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at433.value);
																								break;
																							case "stroke-width":
																								p282.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at433.value);
																								break;
																							}
																						}
																						var g358 = this.group;
																						if(g358 == { }) {
																							g358 = null;
																						}
																						this.renderPath(p282,this.group);
																						var p283 = p282;
																						break;
																					default:
																						var childs145 = kid144.childNodules([]);
																						var _g145 = 0;
																						while(_g145 < childs145.length) {
																							var kid146 = childs145[_g145];
																							++_g145;
																							switch(kid146.name) {
																							case "g":
																								var g359 = { };
																								var at434 = HxOverrides.iter(kid146.attributes([]));
																								while(at434.hasNext()) {
																									var at435 = at434.next();
																									switch(at435.name) {
																									case "fill":
																										g359.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at435.value);
																										break;
																									case "id":
																										g359.id = at435.value;
																										break;
																									case "stroke":
																										g359.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at435.value);
																										break;
																									case "stroke-width":
																										g359.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at435.value);
																										break;
																									case "transform":
																										g359.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at435.value);
																										break;
																									case "version":
																										g359.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at435.value);
																										break;
																									case "viewBox":
																										g359.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at435.value);
																										break;
																									case "xmlns":
																										g359.xmlns = at435.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at435.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g359;
																								if(kid146.firstChild != null) {
																									var childs146 = kid146.childNodules([]);
																									var _g146 = 0;
																									while(_g146 < childs146.length) {
																										var kid147 = childs146[_g146];
																										++_g146;
																										switch(kid147.name) {
																										case "g":
																											var g360 = this.parseGroup(kid147);
																											break;
																										case "path":
																											var p284 = { };
																											var at436 = HxOverrides.iter(kid147.attributes([]));
																											while(at436.hasNext()) {
																												var at437 = at436.next();
																												switch(at437.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at437.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p284.d = at437.value;
																													break;
																												case "fill":
																													p284.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at437.value);
																													break;
																												case "id":
																													p284.id = at437.value;
																													break;
																												case "stroke":
																													p284.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at437.value);
																													break;
																												case "stroke-width":
																													p284.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at437.value);
																													break;
																												}
																											}
																											var g361 = this.group;
																											if(g361 == { }) {
																												g361 = null;
																											}
																											this.renderPath(p284,this.group);
																											var p285 = p284;
																											break;
																										default:
																											this.parseChild(kid147);
																										}
																									}
																								}
																								var g362 = g359;
																								break;
																							case "path":
																								var p286 = { };
																								var at438 = HxOverrides.iter(kid146.attributes([]));
																								while(at438.hasNext()) {
																									var at439 = at438.next();
																									switch(at439.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at439.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p286.d = at439.value;
																										break;
																									case "fill":
																										p286.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at439.value);
																										break;
																									case "id":
																										p286.id = at439.value;
																										break;
																									case "stroke":
																										p286.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at439.value);
																										break;
																									case "stroke-width":
																										p286.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at439.value);
																										break;
																									}
																								}
																								var g363 = this.group;
																								if(g363 == { }) {
																									g363 = null;
																								}
																								this.renderPath(p286,this.group);
																								var p287 = p286;
																								break;
																							default:
																								var childs147 = kid146.childNodules([]);
																								var _g147 = 0;
																								while(_g147 < childs147.length) {
																									var kid148 = childs147[_g147];
																									++_g147;
																									switch(kid148.name) {
																									case "g":
																										var g364 = this.parseGroup(kid148);
																										break;
																									case "path":
																										var p288 = { };
																										var at440 = HxOverrides.iter(kid148.attributes([]));
																										while(at440.hasNext()) {
																											var at441 = at440.next();
																											switch(at441.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at441.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p288.d = at441.value;
																												break;
																											case "fill":
																												p288.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at441.value);
																												break;
																											case "id":
																												p288.id = at441.value;
																												break;
																											case "stroke":
																												p288.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at441.value);
																												break;
																											case "stroke-width":
																												p288.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at441.value);
																												break;
																											}
																										}
																										var g365 = this.group;
																										if(g365 == { }) {
																											g365 = null;
																										}
																										this.renderPath(p288,this.group);
																										var p289 = p288;
																										break;
																									default:
																										this.parseChild(kid148);
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																			var g366 = g353;
																			break;
																		case "path":
																			var p290 = { };
																			var at442 = HxOverrides.iter(kid143.attributes([]));
																			while(at442.hasNext()) {
																				var at443 = at442.next();
																				switch(at443.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at443.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p290.d = at443.value;
																					break;
																				case "fill":
																					p290.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at443.value);
																					break;
																				case "id":
																					p290.id = at443.value;
																					break;
																				case "stroke":
																					p290.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at443.value);
																					break;
																				case "stroke-width":
																					p290.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at443.value);
																					break;
																				}
																			}
																			var g367 = this.group;
																			if(g367 == { }) {
																				g367 = null;
																			}
																			this.renderPath(p290,this.group);
																			var p291 = p290;
																			break;
																		default:
																			var childs148 = kid143.childNodules([]);
																			var _g148 = 0;
																			while(_g148 < childs148.length) {
																				var kid149 = childs148[_g148];
																				++_g148;
																				switch(kid149.name) {
																				case "g":
																					var g368 = { };
																					var at444 = HxOverrides.iter(kid149.attributes([]));
																					while(at444.hasNext()) {
																						var at445 = at444.next();
																						switch(at445.name) {
																						case "fill":
																							g368.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at445.value);
																							break;
																						case "id":
																							g368.id = at445.value;
																							break;
																						case "stroke":
																							g368.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at445.value);
																							break;
																						case "stroke-width":
																							g368.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at445.value);
																							break;
																						case "transform":
																							g368.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at445.value);
																							break;
																						case "version":
																							g368.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at445.value);
																							break;
																						case "viewBox":
																							g368.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at445.value);
																							break;
																						case "xmlns":
																							g368.xmlns = at445.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at445.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g368;
																					if(kid149.firstChild != null) {
																						var childs149 = kid149.childNodules([]);
																						var _g149 = 0;
																						while(_g149 < childs149.length) {
																							var kid150 = childs149[_g149];
																							++_g149;
																							switch(kid150.name) {
																							case "g":
																								var g369 = { };
																								var at446 = HxOverrides.iter(kid150.attributes([]));
																								while(at446.hasNext()) {
																									var at447 = at446.next();
																									switch(at447.name) {
																									case "fill":
																										g369.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at447.value);
																										break;
																									case "id":
																										g369.id = at447.value;
																										break;
																									case "stroke":
																										g369.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at447.value);
																										break;
																									case "stroke-width":
																										g369.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at447.value);
																										break;
																									case "transform":
																										g369.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at447.value);
																										break;
																									case "version":
																										g369.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at447.value);
																										break;
																									case "viewBox":
																										g369.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at447.value);
																										break;
																									case "xmlns":
																										g369.xmlns = at447.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at447.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g369;
																								if(kid150.firstChild != null) {
																									var childs150 = kid150.childNodules([]);
																									var _g150 = 0;
																									while(_g150 < childs150.length) {
																										var kid151 = childs150[_g150];
																										++_g150;
																										switch(kid151.name) {
																										case "g":
																											var g370 = this.parseGroup(kid151);
																											break;
																										case "path":
																											var p292 = { };
																											var at448 = HxOverrides.iter(kid151.attributes([]));
																											while(at448.hasNext()) {
																												var at449 = at448.next();
																												switch(at449.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at449.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p292.d = at449.value;
																													break;
																												case "fill":
																													p292.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at449.value);
																													break;
																												case "id":
																													p292.id = at449.value;
																													break;
																												case "stroke":
																													p292.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at449.value);
																													break;
																												case "stroke-width":
																													p292.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at449.value);
																													break;
																												}
																											}
																											var g371 = this.group;
																											if(g371 == { }) {
																												g371 = null;
																											}
																											this.renderPath(p292,this.group);
																											var p293 = p292;
																											break;
																										default:
																											this.parseChild(kid151);
																										}
																									}
																								}
																								var g372 = g369;
																								break;
																							case "path":
																								var p294 = { };
																								var at450 = HxOverrides.iter(kid150.attributes([]));
																								while(at450.hasNext()) {
																									var at451 = at450.next();
																									switch(at451.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at451.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p294.d = at451.value;
																										break;
																									case "fill":
																										p294.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at451.value);
																										break;
																									case "id":
																										p294.id = at451.value;
																										break;
																									case "stroke":
																										p294.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at451.value);
																										break;
																									case "stroke-width":
																										p294.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at451.value);
																										break;
																									}
																								}
																								var g373 = this.group;
																								if(g373 == { }) {
																									g373 = null;
																								}
																								this.renderPath(p294,this.group);
																								var p295 = p294;
																								break;
																							default:
																								var childs151 = kid150.childNodules([]);
																								var _g151 = 0;
																								while(_g151 < childs151.length) {
																									var kid152 = childs151[_g151];
																									++_g151;
																									switch(kid152.name) {
																									case "g":
																										var g374 = this.parseGroup(kid152);
																										break;
																									case "path":
																										var p296 = { };
																										var at452 = HxOverrides.iter(kid152.attributes([]));
																										while(at452.hasNext()) {
																											var at453 = at452.next();
																											switch(at453.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at453.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p296.d = at453.value;
																												break;
																											case "fill":
																												p296.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at453.value);
																												break;
																											case "id":
																												p296.id = at453.value;
																												break;
																											case "stroke":
																												p296.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at453.value);
																												break;
																											case "stroke-width":
																												p296.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at453.value);
																												break;
																											}
																										}
																										var g375 = this.group;
																										if(g375 == { }) {
																											g375 = null;
																										}
																										this.renderPath(p296,this.group);
																										var p297 = p296;
																										break;
																									default:
																										this.parseChild(kid152);
																									}
																								}
																							}
																						}
																					}
																					var g376 = g368;
																					break;
																				case "path":
																					var p298 = { };
																					var at454 = HxOverrides.iter(kid149.attributes([]));
																					while(at454.hasNext()) {
																						var at455 = at454.next();
																						switch(at455.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at455.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p298.d = at455.value;
																							break;
																						case "fill":
																							p298.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at455.value);
																							break;
																						case "id":
																							p298.id = at455.value;
																							break;
																						case "stroke":
																							p298.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at455.value);
																							break;
																						case "stroke-width":
																							p298.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at455.value);
																							break;
																						}
																					}
																					var g377 = this.group;
																					if(g377 == { }) {
																						g377 = null;
																					}
																					this.renderPath(p298,this.group);
																					var p299 = p298;
																					break;
																				default:
																					var childs152 = kid149.childNodules([]);
																					var _g152 = 0;
																					while(_g152 < childs152.length) {
																						var kid153 = childs152[_g152];
																						++_g152;
																						switch(kid153.name) {
																						case "g":
																							var g378 = this.parseGroup(kid153);
																							break;
																						case "path":
																							var p300 = { };
																							var at456 = HxOverrides.iter(kid153.attributes([]));
																							while(at456.hasNext()) {
																								var at457 = at456.next();
																								switch(at457.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at457.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p300.d = at457.value;
																									break;
																								case "fill":
																									p300.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at457.value);
																									break;
																								case "id":
																									p300.id = at457.value;
																									break;
																								case "stroke":
																									p300.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at457.value);
																									break;
																								case "stroke-width":
																									p300.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at457.value);
																									break;
																								}
																							}
																							var g379 = this.group;
																							if(g379 == { }) {
																								g379 = null;
																							}
																							this.renderPath(p300,this.group);
																							var p301 = p300;
																							break;
																						default:
																							this.parseChild(kid153);
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
														var g380 = g347;
														break;
													case "path":
														var p302 = { };
														var at458 = HxOverrides.iter(kid140.attributes([]));
														while(at458.hasNext()) {
															var at459 = at458.next();
															switch(at459.name) {
															case "_":
																haxe_Log.trace("path attribute " + at459.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																break;
															case "d":
																p302.d = at459.value;
																break;
															case "fill":
																p302.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at459.value);
																break;
															case "id":
																p302.id = at459.value;
																break;
															case "stroke":
																p302.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at459.value);
																break;
															case "stroke-width":
																p302.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at459.value);
																break;
															}
														}
														var g381 = this.group;
														if(g381 == { }) {
															g381 = null;
														}
														this.renderPath(p302,this.group);
														var p303 = p302;
														break;
													default:
														var childs153 = kid140.childNodules([]);
														var _g153 = 0;
														while(_g153 < childs153.length) {
															var kid154 = childs153[_g153];
															++_g153;
															switch(kid154.name) {
															case "g":
																var g382 = { };
																var at460 = HxOverrides.iter(kid154.attributes([]));
																while(at460.hasNext()) {
																	var at461 = at460.next();
																	switch(at461.name) {
																	case "fill":
																		g382.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at461.value);
																		break;
																	case "id":
																		g382.id = at461.value;
																		break;
																	case "stroke":
																		g382.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at461.value);
																		break;
																	case "stroke-width":
																		g382.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at461.value);
																		break;
																	case "transform":
																		g382.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at461.value);
																		break;
																	case "version":
																		g382.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at461.value);
																		break;
																	case "viewBox":
																		g382.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at461.value);
																		break;
																	case "xmlns":
																		g382.xmlns = at461.value;
																		break;
																	default:
																		haxe_Log.trace("group attribute " + at461.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																	}
																}
																this.group = g382;
																if(kid154.firstChild != null) {
																	var childs154 = kid154.childNodules([]);
																	var _g154 = 0;
																	while(_g154 < childs154.length) {
																		var kid155 = childs154[_g154];
																		++_g154;
																		switch(kid155.name) {
																		case "g":
																			var g383 = { };
																			var at462 = HxOverrides.iter(kid155.attributes([]));
																			while(at462.hasNext()) {
																				var at463 = at462.next();
																				switch(at463.name) {
																				case "fill":
																					g383.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at463.value);
																					break;
																				case "id":
																					g383.id = at463.value;
																					break;
																				case "stroke":
																					g383.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at463.value);
																					break;
																				case "stroke-width":
																					g383.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at463.value);
																					break;
																				case "transform":
																					g383.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at463.value);
																					break;
																				case "version":
																					g383.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at463.value);
																					break;
																				case "viewBox":
																					g383.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at463.value);
																					break;
																				case "xmlns":
																					g383.xmlns = at463.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at463.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g383;
																			if(kid155.firstChild != null) {
																				var childs155 = kid155.childNodules([]);
																				var _g155 = 0;
																				while(_g155 < childs155.length) {
																					var kid156 = childs155[_g155];
																					++_g155;
																					switch(kid156.name) {
																					case "g":
																						var g384 = this.parseGroup(kid156);
																						break;
																					case "path":
																						var p304 = { };
																						var at464 = HxOverrides.iter(kid156.attributes([]));
																						while(at464.hasNext()) {
																							var at465 = at464.next();
																							switch(at465.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at465.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p304.d = at465.value;
																								break;
																							case "fill":
																								p304.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at465.value);
																								break;
																							case "id":
																								p304.id = at465.value;
																								break;
																							case "stroke":
																								p304.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at465.value);
																								break;
																							case "stroke-width":
																								p304.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at465.value);
																								break;
																							}
																						}
																						var g385 = this.group;
																						if(g385 == { }) {
																							g385 = null;
																						}
																						this.renderPath(p304,this.group);
																						var p305 = p304;
																						break;
																					default:
																						this.parseChild(kid156);
																					}
																				}
																			}
																			var g386 = g383;
																			break;
																		case "path":
																			var p306 = { };
																			var at466 = HxOverrides.iter(kid155.attributes([]));
																			while(at466.hasNext()) {
																				var at467 = at466.next();
																				switch(at467.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at467.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p306.d = at467.value;
																					break;
																				case "fill":
																					p306.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at467.value);
																					break;
																				case "id":
																					p306.id = at467.value;
																					break;
																				case "stroke":
																					p306.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at467.value);
																					break;
																				case "stroke-width":
																					p306.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at467.value);
																					break;
																				}
																			}
																			var g387 = this.group;
																			if(g387 == { }) {
																				g387 = null;
																			}
																			this.renderPath(p306,this.group);
																			var p307 = p306;
																			break;
																		default:
																			var childs156 = kid155.childNodules([]);
																			var _g156 = 0;
																			while(_g156 < childs156.length) {
																				var kid157 = childs156[_g156];
																				++_g156;
																				switch(kid157.name) {
																				case "g":
																					var g388 = { };
																					var at468 = HxOverrides.iter(kid157.attributes([]));
																					while(at468.hasNext()) {
																						var at469 = at468.next();
																						switch(at469.name) {
																						case "fill":
																							g388.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at469.value);
																							break;
																						case "id":
																							g388.id = at469.value;
																							break;
																						case "stroke":
																							g388.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at469.value);
																							break;
																						case "stroke-width":
																							g388.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at469.value);
																							break;
																						case "transform":
																							g388.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at469.value);
																							break;
																						case "version":
																							g388.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at469.value);
																							break;
																						case "viewBox":
																							g388.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at469.value);
																							break;
																						case "xmlns":
																							g388.xmlns = at469.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at469.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g388;
																					if(kid157.firstChild != null) {
																						var childs157 = kid157.childNodules([]);
																						var _g157 = 0;
																						while(_g157 < childs157.length) {
																							var kid158 = childs157[_g157];
																							++_g157;
																							switch(kid158.name) {
																							case "g":
																								var g389 = this.parseGroup(kid158);
																								break;
																							case "path":
																								var p308 = { };
																								var at470 = HxOverrides.iter(kid158.attributes([]));
																								while(at470.hasNext()) {
																									var at471 = at470.next();
																									switch(at471.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at471.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p308.d = at471.value;
																										break;
																									case "fill":
																										p308.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at471.value);
																										break;
																									case "id":
																										p308.id = at471.value;
																										break;
																									case "stroke":
																										p308.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at471.value);
																										break;
																									case "stroke-width":
																										p308.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at471.value);
																										break;
																									}
																								}
																								var g390 = this.group;
																								if(g390 == { }) {
																									g390 = null;
																								}
																								this.renderPath(p308,this.group);
																								var p309 = p308;
																								break;
																							default:
																								this.parseChild(kid158);
																							}
																						}
																					}
																					var g391 = g388;
																					break;
																				case "path":
																					var p310 = { };
																					var at472 = HxOverrides.iter(kid157.attributes([]));
																					while(at472.hasNext()) {
																						var at473 = at472.next();
																						switch(at473.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at473.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p310.d = at473.value;
																							break;
																						case "fill":
																							p310.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at473.value);
																							break;
																						case "id":
																							p310.id = at473.value;
																							break;
																						case "stroke":
																							p310.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at473.value);
																							break;
																						case "stroke-width":
																							p310.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at473.value);
																							break;
																						}
																					}
																					var g392 = this.group;
																					if(g392 == { }) {
																						g392 = null;
																					}
																					this.renderPath(p310,this.group);
																					var p311 = p310;
																					break;
																				default:
																					var childs158 = kid157.childNodules([]);
																					var _g158 = 0;
																					while(_g158 < childs158.length) {
																						var kid159 = childs158[_g158];
																						++_g158;
																						switch(kid159.name) {
																						case "g":
																							var g393 = this.parseGroup(kid159);
																							break;
																						case "path":
																							var p312 = { };
																							var at474 = HxOverrides.iter(kid159.attributes([]));
																							while(at474.hasNext()) {
																								var at475 = at474.next();
																								switch(at475.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at475.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p312.d = at475.value;
																									break;
																								case "fill":
																									p312.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at475.value);
																									break;
																								case "id":
																									p312.id = at475.value;
																									break;
																								case "stroke":
																									p312.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at475.value);
																									break;
																								case "stroke-width":
																									p312.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at475.value);
																									break;
																								}
																							}
																							var g394 = this.group;
																							if(g394 == { }) {
																								g394 = null;
																							}
																							this.renderPath(p312,this.group);
																							var p313 = p312;
																							break;
																						default:
																							this.parseChild(kid159);
																						}
																					}
																				}
																			}
																		}
																	}
																}
																var g395 = g382;
																break;
															case "path":
																var p314 = { };
																var at476 = HxOverrides.iter(kid154.attributes([]));
																while(at476.hasNext()) {
																	var at477 = at476.next();
																	switch(at477.name) {
																	case "_":
																		haxe_Log.trace("path attribute " + at477.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																		break;
																	case "d":
																		p314.d = at477.value;
																		break;
																	case "fill":
																		p314.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at477.value);
																		break;
																	case "id":
																		p314.id = at477.value;
																		break;
																	case "stroke":
																		p314.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at477.value);
																		break;
																	case "stroke-width":
																		p314.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at477.value);
																		break;
																	}
																}
																var g396 = this.group;
																if(g396 == { }) {
																	g396 = null;
																}
																this.renderPath(p314,this.group);
																var p315 = p314;
																break;
															default:
																var childs159 = kid154.childNodules([]);
																var _g159 = 0;
																while(_g159 < childs159.length) {
																	var kid160 = childs159[_g159];
																	++_g159;
																	switch(kid160.name) {
																	case "g":
																		var g397 = { };
																		var at478 = HxOverrides.iter(kid160.attributes([]));
																		while(at478.hasNext()) {
																			var at479 = at478.next();
																			switch(at479.name) {
																			case "fill":
																				g397.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at479.value);
																				break;
																			case "id":
																				g397.id = at479.value;
																				break;
																			case "stroke":
																				g397.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at479.value);
																				break;
																			case "stroke-width":
																				g397.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at479.value);
																				break;
																			case "transform":
																				g397.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at479.value);
																				break;
																			case "version":
																				g397.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at479.value);
																				break;
																			case "viewBox":
																				g397.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at479.value);
																				break;
																			case "xmlns":
																				g397.xmlns = at479.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at479.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g397;
																		if(kid160.firstChild != null) {
																			var childs160 = kid160.childNodules([]);
																			var _g160 = 0;
																			while(_g160 < childs160.length) {
																				var kid161 = childs160[_g160];
																				++_g160;
																				switch(kid161.name) {
																				case "g":
																					var g398 = { };
																					var at480 = HxOverrides.iter(kid161.attributes([]));
																					while(at480.hasNext()) {
																						var at481 = at480.next();
																						switch(at481.name) {
																						case "fill":
																							g398.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at481.value);
																							break;
																						case "id":
																							g398.id = at481.value;
																							break;
																						case "stroke":
																							g398.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at481.value);
																							break;
																						case "stroke-width":
																							g398.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at481.value);
																							break;
																						case "transform":
																							g398.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at481.value);
																							break;
																						case "version":
																							g398.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at481.value);
																							break;
																						case "viewBox":
																							g398.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at481.value);
																							break;
																						case "xmlns":
																							g398.xmlns = at481.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at481.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g398;
																					if(kid161.firstChild != null) {
																						var childs161 = kid161.childNodules([]);
																						var _g161 = 0;
																						while(_g161 < childs161.length) {
																							var kid162 = childs161[_g161];
																							++_g161;
																							switch(kid162.name) {
																							case "g":
																								var g399 = this.parseGroup(kid162);
																								break;
																							case "path":
																								var p316 = { };
																								var at482 = HxOverrides.iter(kid162.attributes([]));
																								while(at482.hasNext()) {
																									var at483 = at482.next();
																									switch(at483.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at483.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p316.d = at483.value;
																										break;
																									case "fill":
																										p316.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at483.value);
																										break;
																									case "id":
																										p316.id = at483.value;
																										break;
																									case "stroke":
																										p316.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at483.value);
																										break;
																									case "stroke-width":
																										p316.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at483.value);
																										break;
																									}
																								}
																								var g400 = this.group;
																								if(g400 == { }) {
																									g400 = null;
																								}
																								this.renderPath(p316,this.group);
																								var p317 = p316;
																								break;
																							default:
																								this.parseChild(kid162);
																							}
																						}
																					}
																					var g401 = g398;
																					break;
																				case "path":
																					var p318 = { };
																					var at484 = HxOverrides.iter(kid161.attributes([]));
																					while(at484.hasNext()) {
																						var at485 = at484.next();
																						switch(at485.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at485.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p318.d = at485.value;
																							break;
																						case "fill":
																							p318.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at485.value);
																							break;
																						case "id":
																							p318.id = at485.value;
																							break;
																						case "stroke":
																							p318.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at485.value);
																							break;
																						case "stroke-width":
																							p318.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at485.value);
																							break;
																						}
																					}
																					var g402 = this.group;
																					if(g402 == { }) {
																						g402 = null;
																					}
																					this.renderPath(p318,this.group);
																					var p319 = p318;
																					break;
																				default:
																					var childs162 = kid161.childNodules([]);
																					var _g162 = 0;
																					while(_g162 < childs162.length) {
																						var kid163 = childs162[_g162];
																						++_g162;
																						switch(kid163.name) {
																						case "g":
																							var g403 = this.parseGroup(kid163);
																							break;
																						case "path":
																							var p320 = { };
																							var at486 = HxOverrides.iter(kid163.attributes([]));
																							while(at486.hasNext()) {
																								var at487 = at486.next();
																								switch(at487.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at487.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p320.d = at487.value;
																									break;
																								case "fill":
																									p320.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at487.value);
																									break;
																								case "id":
																									p320.id = at487.value;
																									break;
																								case "stroke":
																									p320.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at487.value);
																									break;
																								case "stroke-width":
																									p320.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at487.value);
																									break;
																								}
																							}
																							var g404 = this.group;
																							if(g404 == { }) {
																								g404 = null;
																							}
																							this.renderPath(p320,this.group);
																							var p321 = p320;
																							break;
																						default:
																							this.parseChild(kid163);
																						}
																					}
																				}
																			}
																		}
																		var g405 = g397;
																		break;
																	case "path":
																		var p322 = { };
																		var at488 = HxOverrides.iter(kid160.attributes([]));
																		while(at488.hasNext()) {
																			var at489 = at488.next();
																			switch(at489.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at489.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p322.d = at489.value;
																				break;
																			case "fill":
																				p322.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at489.value);
																				break;
																			case "id":
																				p322.id = at489.value;
																				break;
																			case "stroke":
																				p322.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at489.value);
																				break;
																			case "stroke-width":
																				p322.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at489.value);
																				break;
																			}
																		}
																		var g406 = this.group;
																		if(g406 == { }) {
																			g406 = null;
																		}
																		this.renderPath(p322,this.group);
																		var p323 = p322;
																		break;
																	default:
																		var childs163 = kid160.childNodules([]);
																		var _g163 = 0;
																		while(_g163 < childs163.length) {
																			var kid164 = childs163[_g163];
																			++_g163;
																			switch(kid164.name) {
																			case "g":
																				var g407 = this.parseGroup(kid164);
																				break;
																			case "path":
																				var p324 = { };
																				var at490 = HxOverrides.iter(kid164.attributes([]));
																				while(at490.hasNext()) {
																					var at491 = at490.next();
																					switch(at491.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at491.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p324.d = at491.value;
																						break;
																					case "fill":
																						p324.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at491.value);
																						break;
																					case "id":
																						p324.id = at491.value;
																						break;
																					case "stroke":
																						p324.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at491.value);
																						break;
																					case "stroke-width":
																						p324.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at491.value);
																						break;
																					}
																				}
																				var g408 = this.group;
																				if(g408 == { }) {
																					g408 = null;
																				}
																				this.renderPath(p324,this.group);
																				var p325 = p324;
																				break;
																			default:
																				this.parseChild(kid164);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
							var g409 = g216;
							break;
						case "path":
							var p326 = { };
							var at492 = HxOverrides.iter(kid87.attributes([]));
							while(at492.hasNext()) {
								var at493 = at492.next();
								switch(at493.name) {
								case "_":
									haxe_Log.trace("path attribute " + at493.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
									break;
								case "d":
									p326.d = at493.value;
									break;
								case "fill":
									p326.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at493.value);
									break;
								case "id":
									p326.id = at493.value;
									break;
								case "stroke":
									p326.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at493.value);
									break;
								case "stroke-width":
									p326.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at493.value);
									break;
								}
							}
							var g410 = this.group;
							if(g410 == { }) {
								g410 = null;
							}
							this.renderPath(p326,this.group);
							var p327 = p326;
							break;
						default:
							var childs164 = kid87.childNodules([]);
							var _g164 = 0;
							while(_g164 < childs164.length) {
								var kid165 = childs164[_g164];
								++_g164;
								switch(kid165.name) {
								case "g":
									var g411 = { };
									var at494 = HxOverrides.iter(kid165.attributes([]));
									while(at494.hasNext()) {
										var at495 = at494.next();
										switch(at495.name) {
										case "fill":
											g411.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at495.value);
											break;
										case "id":
											g411.id = at495.value;
											break;
										case "stroke":
											g411.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at495.value);
											break;
										case "stroke-width":
											g411.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at495.value);
											break;
										case "transform":
											g411.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at495.value);
											break;
										case "version":
											g411.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at495.value);
											break;
										case "viewBox":
											g411.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at495.value);
											break;
										case "xmlns":
											g411.xmlns = at495.value;
											break;
										default:
											haxe_Log.trace("group attribute " + at495.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
										}
									}
									this.group = g411;
									if(kid165.firstChild != null) {
										var childs165 = kid165.childNodules([]);
										var _g165 = 0;
										while(_g165 < childs165.length) {
											var kid166 = childs165[_g165];
											++_g165;
											switch(kid166.name) {
											case "g":
												var g412 = { };
												var at496 = HxOverrides.iter(kid166.attributes([]));
												while(at496.hasNext()) {
													var at497 = at496.next();
													switch(at497.name) {
													case "fill":
														g412.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at497.value);
														break;
													case "id":
														g412.id = at497.value;
														break;
													case "stroke":
														g412.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at497.value);
														break;
													case "stroke-width":
														g412.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at497.value);
														break;
													case "transform":
														g412.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at497.value);
														break;
													case "version":
														g412.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at497.value);
														break;
													case "viewBox":
														g412.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at497.value);
														break;
													case "xmlns":
														g412.xmlns = at497.value;
														break;
													default:
														haxe_Log.trace("group attribute " + at497.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
													}
												}
												this.group = g412;
												if(kid166.firstChild != null) {
													var childs166 = kid166.childNodules([]);
													var _g166 = 0;
													while(_g166 < childs166.length) {
														var kid167 = childs166[_g166];
														++_g166;
														switch(kid167.name) {
														case "g":
															var g413 = { };
															var at498 = HxOverrides.iter(kid167.attributes([]));
															while(at498.hasNext()) {
																var at499 = at498.next();
																switch(at499.name) {
																case "fill":
																	g413.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at499.value);
																	break;
																case "id":
																	g413.id = at499.value;
																	break;
																case "stroke":
																	g413.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at499.value);
																	break;
																case "stroke-width":
																	g413.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at499.value);
																	break;
																case "transform":
																	g413.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at499.value);
																	break;
																case "version":
																	g413.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at499.value);
																	break;
																case "viewBox":
																	g413.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at499.value);
																	break;
																case "xmlns":
																	g413.xmlns = at499.value;
																	break;
																default:
																	haxe_Log.trace("group attribute " + at499.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																}
															}
															this.group = g413;
															if(kid167.firstChild != null) {
																var childs167 = kid167.childNodules([]);
																var _g167 = 0;
																while(_g167 < childs167.length) {
																	var kid168 = childs167[_g167];
																	++_g167;
																	switch(kid168.name) {
																	case "g":
																		var g414 = { };
																		var at500 = HxOverrides.iter(kid168.attributes([]));
																		while(at500.hasNext()) {
																			var at501 = at500.next();
																			switch(at501.name) {
																			case "fill":
																				g414.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at501.value);
																				break;
																			case "id":
																				g414.id = at501.value;
																				break;
																			case "stroke":
																				g414.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at501.value);
																				break;
																			case "stroke-width":
																				g414.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at501.value);
																				break;
																			case "transform":
																				g414.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at501.value);
																				break;
																			case "version":
																				g414.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at501.value);
																				break;
																			case "viewBox":
																				g414.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at501.value);
																				break;
																			case "xmlns":
																				g414.xmlns = at501.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at501.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g414;
																		if(kid168.firstChild != null) {
																			var childs168 = kid168.childNodules([]);
																			var _g168 = 0;
																			while(_g168 < childs168.length) {
																				var kid169 = childs168[_g168];
																				++_g168;
																				switch(kid169.name) {
																				case "g":
																					var g415 = this.parseGroup(kid169);
																					break;
																				case "path":
																					var p328 = { };
																					var at502 = HxOverrides.iter(kid169.attributes([]));
																					while(at502.hasNext()) {
																						var at503 = at502.next();
																						switch(at503.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at503.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p328.d = at503.value;
																							break;
																						case "fill":
																							p328.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at503.value);
																							break;
																						case "id":
																							p328.id = at503.value;
																							break;
																						case "stroke":
																							p328.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at503.value);
																							break;
																						case "stroke-width":
																							p328.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at503.value);
																							break;
																						}
																					}
																					var g416 = this.group;
																					if(g416 == { }) {
																						g416 = null;
																					}
																					this.renderPath(p328,this.group);
																					var p329 = p328;
																					break;
																				default:
																					this.parseChild(kid169);
																				}
																			}
																		}
																		var g417 = g414;
																		break;
																	case "path":
																		var p330 = { };
																		var at504 = HxOverrides.iter(kid168.attributes([]));
																		while(at504.hasNext()) {
																			var at505 = at504.next();
																			switch(at505.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at505.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p330.d = at505.value;
																				break;
																			case "fill":
																				p330.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at505.value);
																				break;
																			case "id":
																				p330.id = at505.value;
																				break;
																			case "stroke":
																				p330.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at505.value);
																				break;
																			case "stroke-width":
																				p330.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at505.value);
																				break;
																			}
																		}
																		var g418 = this.group;
																		if(g418 == { }) {
																			g418 = null;
																		}
																		this.renderPath(p330,this.group);
																		var p331 = p330;
																		break;
																	default:
																		var childs169 = kid168.childNodules([]);
																		var _g169 = 0;
																		while(_g169 < childs169.length) {
																			var kid170 = childs169[_g169];
																			++_g169;
																			switch(kid170.name) {
																			case "g":
																				var g419 = { };
																				var at506 = HxOverrides.iter(kid170.attributes([]));
																				while(at506.hasNext()) {
																					var at507 = at506.next();
																					switch(at507.name) {
																					case "fill":
																						g419.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at507.value);
																						break;
																					case "id":
																						g419.id = at507.value;
																						break;
																					case "stroke":
																						g419.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at507.value);
																						break;
																					case "stroke-width":
																						g419.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at507.value);
																						break;
																					case "transform":
																						g419.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at507.value);
																						break;
																					case "version":
																						g419.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at507.value);
																						break;
																					case "viewBox":
																						g419.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at507.value);
																						break;
																					case "xmlns":
																						g419.xmlns = at507.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at507.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g419;
																				if(kid170.firstChild != null) {
																					var childs170 = kid170.childNodules([]);
																					var _g170 = 0;
																					while(_g170 < childs170.length) {
																						var kid171 = childs170[_g170];
																						++_g170;
																						switch(kid171.name) {
																						case "g":
																							var g420 = { };
																							var at508 = HxOverrides.iter(kid171.attributes([]));
																							while(at508.hasNext()) {
																								var at509 = at508.next();
																								switch(at509.name) {
																								case "fill":
																									g420.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at509.value);
																									break;
																								case "id":
																									g420.id = at509.value;
																									break;
																								case "stroke":
																									g420.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at509.value);
																									break;
																								case "stroke-width":
																									g420.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at509.value);
																									break;
																								case "transform":
																									g420.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at509.value);
																									break;
																								case "version":
																									g420.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at509.value);
																									break;
																								case "viewBox":
																									g420.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at509.value);
																									break;
																								case "xmlns":
																									g420.xmlns = at509.value;
																									break;
																								default:
																									haxe_Log.trace("group attribute " + at509.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																								}
																							}
																							this.group = g420;
																							if(kid171.firstChild != null) {
																								var childs171 = kid171.childNodules([]);
																								var _g171 = 0;
																								while(_g171 < childs171.length) {
																									var kid172 = childs171[_g171];
																									++_g171;
																									switch(kid172.name) {
																									case "g":
																										var g421 = this.parseGroup(kid172);
																										break;
																									case "path":
																										var p332 = { };
																										var at510 = HxOverrides.iter(kid172.attributes([]));
																										while(at510.hasNext()) {
																											var at511 = at510.next();
																											switch(at511.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at511.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p332.d = at511.value;
																												break;
																											case "fill":
																												p332.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at511.value);
																												break;
																											case "id":
																												p332.id = at511.value;
																												break;
																											case "stroke":
																												p332.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at511.value);
																												break;
																											case "stroke-width":
																												p332.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at511.value);
																												break;
																											}
																										}
																										var g422 = this.group;
																										if(g422 == { }) {
																											g422 = null;
																										}
																										this.renderPath(p332,this.group);
																										var p333 = p332;
																										break;
																									default:
																										this.parseChild(kid172);
																									}
																								}
																							}
																							var g423 = g420;
																							break;
																						case "path":
																							var p334 = { };
																							var at512 = HxOverrides.iter(kid171.attributes([]));
																							while(at512.hasNext()) {
																								var at513 = at512.next();
																								switch(at513.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at513.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p334.d = at513.value;
																									break;
																								case "fill":
																									p334.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at513.value);
																									break;
																								case "id":
																									p334.id = at513.value;
																									break;
																								case "stroke":
																									p334.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at513.value);
																									break;
																								case "stroke-width":
																									p334.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at513.value);
																									break;
																								}
																							}
																							var g424 = this.group;
																							if(g424 == { }) {
																								g424 = null;
																							}
																							this.renderPath(p334,this.group);
																							var p335 = p334;
																							break;
																						default:
																							var childs172 = kid171.childNodules([]);
																							var _g172 = 0;
																							while(_g172 < childs172.length) {
																								var kid173 = childs172[_g172];
																								++_g172;
																								switch(kid173.name) {
																								case "g":
																									var g425 = { };
																									var at514 = HxOverrides.iter(kid173.attributes([]));
																									while(at514.hasNext()) {
																										var at515 = at514.next();
																										switch(at515.name) {
																										case "fill":
																											g425.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at515.value);
																											break;
																										case "id":
																											g425.id = at515.value;
																											break;
																										case "stroke":
																											g425.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at515.value);
																											break;
																										case "stroke-width":
																											g425.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at515.value);
																											break;
																										case "transform":
																											g425.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at515.value);
																											break;
																										case "version":
																											g425.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at515.value);
																											break;
																										case "viewBox":
																											g425.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at515.value);
																											break;
																										case "xmlns":
																											g425.xmlns = at515.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at515.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g425;
																									if(kid173.firstChild != null) {
																										var childs173 = kid173.childNodules([]);
																										var _g173 = 0;
																										while(_g173 < childs173.length) {
																											var kid174 = childs173[_g173];
																											++_g173;
																											switch(kid174.name) {
																											case "g":
																												var g426 = this.parseGroup(kid174);
																												break;
																											case "path":
																												var p336 = { };
																												var at516 = HxOverrides.iter(kid174.attributes([]));
																												while(at516.hasNext()) {
																													var at517 = at516.next();
																													switch(at517.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at517.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p336.d = at517.value;
																														break;
																													case "fill":
																														p336.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at517.value);
																														break;
																													case "id":
																														p336.id = at517.value;
																														break;
																													case "stroke":
																														p336.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at517.value);
																														break;
																													case "stroke-width":
																														p336.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at517.value);
																														break;
																													}
																												}
																												var g427 = this.group;
																												if(g427 == { }) {
																													g427 = null;
																												}
																												this.renderPath(p336,this.group);
																												var p337 = p336;
																												break;
																											default:
																												this.parseChild(kid174);
																											}
																										}
																									}
																									var g428 = g425;
																									break;
																								case "path":
																									var p338 = { };
																									var at518 = HxOverrides.iter(kid173.attributes([]));
																									while(at518.hasNext()) {
																										var at519 = at518.next();
																										switch(at519.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at519.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p338.d = at519.value;
																											break;
																										case "fill":
																											p338.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at519.value);
																											break;
																										case "id":
																											p338.id = at519.value;
																											break;
																										case "stroke":
																											p338.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at519.value);
																											break;
																										case "stroke-width":
																											p338.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at519.value);
																											break;
																										}
																									}
																									var g429 = this.group;
																									if(g429 == { }) {
																										g429 = null;
																									}
																									this.renderPath(p338,this.group);
																									var p339 = p338;
																									break;
																								default:
																									var childs174 = kid173.childNodules([]);
																									var _g174 = 0;
																									while(_g174 < childs174.length) {
																										var kid175 = childs174[_g174];
																										++_g174;
																										switch(kid175.name) {
																										case "g":
																											var g430 = this.parseGroup(kid175);
																											break;
																										case "path":
																											var p340 = { };
																											var at520 = HxOverrides.iter(kid175.attributes([]));
																											while(at520.hasNext()) {
																												var at521 = at520.next();
																												switch(at521.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at521.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p340.d = at521.value;
																													break;
																												case "fill":
																													p340.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at521.value);
																													break;
																												case "id":
																													p340.id = at521.value;
																													break;
																												case "stroke":
																													p340.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at521.value);
																													break;
																												case "stroke-width":
																													p340.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at521.value);
																													break;
																												}
																											}
																											var g431 = this.group;
																											if(g431 == { }) {
																												g431 = null;
																											}
																											this.renderPath(p340,this.group);
																											var p341 = p340;
																											break;
																										default:
																											this.parseChild(kid175);
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				var g432 = g419;
																				break;
																			case "path":
																				var p342 = { };
																				var at522 = HxOverrides.iter(kid170.attributes([]));
																				while(at522.hasNext()) {
																					var at523 = at522.next();
																					switch(at523.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at523.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p342.d = at523.value;
																						break;
																					case "fill":
																						p342.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at523.value);
																						break;
																					case "id":
																						p342.id = at523.value;
																						break;
																					case "stroke":
																						p342.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at523.value);
																						break;
																					case "stroke-width":
																						p342.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at523.value);
																						break;
																					}
																				}
																				var g433 = this.group;
																				if(g433 == { }) {
																					g433 = null;
																				}
																				this.renderPath(p342,this.group);
																				var p343 = p342;
																				break;
																			default:
																				var childs175 = kid170.childNodules([]);
																				var _g175 = 0;
																				while(_g175 < childs175.length) {
																					var kid176 = childs175[_g175];
																					++_g175;
																					switch(kid176.name) {
																					case "g":
																						var g434 = { };
																						var at524 = HxOverrides.iter(kid176.attributes([]));
																						while(at524.hasNext()) {
																							var at525 = at524.next();
																							switch(at525.name) {
																							case "fill":
																								g434.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at525.value);
																								break;
																							case "id":
																								g434.id = at525.value;
																								break;
																							case "stroke":
																								g434.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at525.value);
																								break;
																							case "stroke-width":
																								g434.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at525.value);
																								break;
																							case "transform":
																								g434.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at525.value);
																								break;
																							case "version":
																								g434.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at525.value);
																								break;
																							case "viewBox":
																								g434.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at525.value);
																								break;
																							case "xmlns":
																								g434.xmlns = at525.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at525.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g434;
																						if(kid176.firstChild != null) {
																							var childs176 = kid176.childNodules([]);
																							var _g176 = 0;
																							while(_g176 < childs176.length) {
																								var kid177 = childs176[_g176];
																								++_g176;
																								switch(kid177.name) {
																								case "g":
																									var g435 = { };
																									var at526 = HxOverrides.iter(kid177.attributes([]));
																									while(at526.hasNext()) {
																										var at527 = at526.next();
																										switch(at527.name) {
																										case "fill":
																											g435.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at527.value);
																											break;
																										case "id":
																											g435.id = at527.value;
																											break;
																										case "stroke":
																											g435.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at527.value);
																											break;
																										case "stroke-width":
																											g435.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at527.value);
																											break;
																										case "transform":
																											g435.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at527.value);
																											break;
																										case "version":
																											g435.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at527.value);
																											break;
																										case "viewBox":
																											g435.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at527.value);
																											break;
																										case "xmlns":
																											g435.xmlns = at527.value;
																											break;
																										default:
																											haxe_Log.trace("group attribute " + at527.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																										}
																									}
																									this.group = g435;
																									if(kid177.firstChild != null) {
																										var childs177 = kid177.childNodules([]);
																										var _g177 = 0;
																										while(_g177 < childs177.length) {
																											var kid178 = childs177[_g177];
																											++_g177;
																											switch(kid178.name) {
																											case "g":
																												var g436 = this.parseGroup(kid178);
																												break;
																											case "path":
																												var p344 = { };
																												var at528 = HxOverrides.iter(kid178.attributes([]));
																												while(at528.hasNext()) {
																													var at529 = at528.next();
																													switch(at529.name) {
																													case "_":
																														haxe_Log.trace("path attribute " + at529.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																														break;
																													case "d":
																														p344.d = at529.value;
																														break;
																													case "fill":
																														p344.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at529.value);
																														break;
																													case "id":
																														p344.id = at529.value;
																														break;
																													case "stroke":
																														p344.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at529.value);
																														break;
																													case "stroke-width":
																														p344.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at529.value);
																														break;
																													}
																												}
																												var g437 = this.group;
																												if(g437 == { }) {
																													g437 = null;
																												}
																												this.renderPath(p344,this.group);
																												var p345 = p344;
																												break;
																											default:
																												this.parseChild(kid178);
																											}
																										}
																									}
																									var g438 = g435;
																									break;
																								case "path":
																									var p346 = { };
																									var at530 = HxOverrides.iter(kid177.attributes([]));
																									while(at530.hasNext()) {
																										var at531 = at530.next();
																										switch(at531.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at531.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p346.d = at531.value;
																											break;
																										case "fill":
																											p346.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at531.value);
																											break;
																										case "id":
																											p346.id = at531.value;
																											break;
																										case "stroke":
																											p346.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at531.value);
																											break;
																										case "stroke-width":
																											p346.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at531.value);
																											break;
																										}
																									}
																									var g439 = this.group;
																									if(g439 == { }) {
																										g439 = null;
																									}
																									this.renderPath(p346,this.group);
																									var p347 = p346;
																									break;
																								default:
																									var childs178 = kid177.childNodules([]);
																									var _g178 = 0;
																									while(_g178 < childs178.length) {
																										var kid179 = childs178[_g178];
																										++_g178;
																										switch(kid179.name) {
																										case "g":
																											var g440 = this.parseGroup(kid179);
																											break;
																										case "path":
																											var p348 = { };
																											var at532 = HxOverrides.iter(kid179.attributes([]));
																											while(at532.hasNext()) {
																												var at533 = at532.next();
																												switch(at533.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at533.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p348.d = at533.value;
																													break;
																												case "fill":
																													p348.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at533.value);
																													break;
																												case "id":
																													p348.id = at533.value;
																													break;
																												case "stroke":
																													p348.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at533.value);
																													break;
																												case "stroke-width":
																													p348.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at533.value);
																													break;
																												}
																											}
																											var g441 = this.group;
																											if(g441 == { }) {
																												g441 = null;
																											}
																											this.renderPath(p348,this.group);
																											var p349 = p348;
																											break;
																										default:
																											this.parseChild(kid179);
																										}
																									}
																								}
																							}
																						}
																						var g442 = g434;
																						break;
																					case "path":
																						var p350 = { };
																						var at534 = HxOverrides.iter(kid176.attributes([]));
																						while(at534.hasNext()) {
																							var at535 = at534.next();
																							switch(at535.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at535.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p350.d = at535.value;
																								break;
																							case "fill":
																								p350.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at535.value);
																								break;
																							case "id":
																								p350.id = at535.value;
																								break;
																							case "stroke":
																								p350.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at535.value);
																								break;
																							case "stroke-width":
																								p350.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at535.value);
																								break;
																							}
																						}
																						var g443 = this.group;
																						if(g443 == { }) {
																							g443 = null;
																						}
																						this.renderPath(p350,this.group);
																						var p351 = p350;
																						break;
																					default:
																						var childs179 = kid176.childNodules([]);
																						var _g179 = 0;
																						while(_g179 < childs179.length) {
																							var kid180 = childs179[_g179];
																							++_g179;
																							switch(kid180.name) {
																							case "g":
																								var g444 = this.parseGroup(kid180);
																								break;
																							case "path":
																								var p352 = { };
																								var at536 = HxOverrides.iter(kid180.attributes([]));
																								while(at536.hasNext()) {
																									var at537 = at536.next();
																									switch(at537.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at537.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p352.d = at537.value;
																										break;
																									case "fill":
																										p352.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at537.value);
																										break;
																									case "id":
																										p352.id = at537.value;
																										break;
																									case "stroke":
																										p352.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at537.value);
																										break;
																									case "stroke-width":
																										p352.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at537.value);
																										break;
																									}
																								}
																								var g445 = this.group;
																								if(g445 == { }) {
																									g445 = null;
																								}
																								this.renderPath(p352,this.group);
																								var p353 = p352;
																								break;
																							default:
																								this.parseChild(kid180);
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
															var g446 = g413;
															break;
														case "path":
															var p354 = { };
															var at538 = HxOverrides.iter(kid167.attributes([]));
															while(at538.hasNext()) {
																var at539 = at538.next();
																switch(at539.name) {
																case "_":
																	haxe_Log.trace("path attribute " + at539.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																	break;
																case "d":
																	p354.d = at539.value;
																	break;
																case "fill":
																	p354.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at539.value);
																	break;
																case "id":
																	p354.id = at539.value;
																	break;
																case "stroke":
																	p354.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at539.value);
																	break;
																case "stroke-width":
																	p354.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at539.value);
																	break;
																}
															}
															var g447 = this.group;
															if(g447 == { }) {
																g447 = null;
															}
															this.renderPath(p354,this.group);
															var p355 = p354;
															break;
														default:
															var childs180 = kid167.childNodules([]);
															var _g180 = 0;
															while(_g180 < childs180.length) {
																var kid181 = childs180[_g180];
																++_g180;
																switch(kid181.name) {
																case "g":
																	var g448 = { };
																	var at540 = HxOverrides.iter(kid181.attributes([]));
																	while(at540.hasNext()) {
																		var at541 = at540.next();
																		switch(at541.name) {
																		case "fill":
																			g448.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at541.value);
																			break;
																		case "id":
																			g448.id = at541.value;
																			break;
																		case "stroke":
																			g448.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at541.value);
																			break;
																		case "stroke-width":
																			g448.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at541.value);
																			break;
																		case "transform":
																			g448.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at541.value);
																			break;
																		case "version":
																			g448.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at541.value);
																			break;
																		case "viewBox":
																			g448.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at541.value);
																			break;
																		case "xmlns":
																			g448.xmlns = at541.value;
																			break;
																		default:
																			haxe_Log.trace("group attribute " + at541.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																		}
																	}
																	this.group = g448;
																	if(kid181.firstChild != null) {
																		var childs181 = kid181.childNodules([]);
																		var _g181 = 0;
																		while(_g181 < childs181.length) {
																			var kid182 = childs181[_g181];
																			++_g181;
																			switch(kid182.name) {
																			case "g":
																				var g449 = { };
																				var at542 = HxOverrides.iter(kid182.attributes([]));
																				while(at542.hasNext()) {
																					var at543 = at542.next();
																					switch(at543.name) {
																					case "fill":
																						g449.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at543.value);
																						break;
																					case "id":
																						g449.id = at543.value;
																						break;
																					case "stroke":
																						g449.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at543.value);
																						break;
																					case "stroke-width":
																						g449.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at543.value);
																						break;
																					case "transform":
																						g449.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at543.value);
																						break;
																					case "version":
																						g449.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at543.value);
																						break;
																					case "viewBox":
																						g449.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at543.value);
																						break;
																					case "xmlns":
																						g449.xmlns = at543.value;
																						break;
																					default:
																						haxe_Log.trace("group attribute " + at543.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																					}
																				}
																				this.group = g449;
																				if(kid182.firstChild != null) {
																					var childs182 = kid182.childNodules([]);
																					var _g182 = 0;
																					while(_g182 < childs182.length) {
																						var kid183 = childs182[_g182];
																						++_g182;
																						switch(kid183.name) {
																						case "g":
																							var g450 = this.parseGroup(kid183);
																							break;
																						case "path":
																							var p356 = { };
																							var at544 = HxOverrides.iter(kid183.attributes([]));
																							while(at544.hasNext()) {
																								var at545 = at544.next();
																								switch(at545.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at545.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p356.d = at545.value;
																									break;
																								case "fill":
																									p356.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at545.value);
																									break;
																								case "id":
																									p356.id = at545.value;
																									break;
																								case "stroke":
																									p356.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at545.value);
																									break;
																								case "stroke-width":
																									p356.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at545.value);
																									break;
																								}
																							}
																							var g451 = this.group;
																							if(g451 == { }) {
																								g451 = null;
																							}
																							this.renderPath(p356,this.group);
																							var p357 = p356;
																							break;
																						default:
																							this.parseChild(kid183);
																						}
																					}
																				}
																				var g452 = g449;
																				break;
																			case "path":
																				var p358 = { };
																				var at546 = HxOverrides.iter(kid182.attributes([]));
																				while(at546.hasNext()) {
																					var at547 = at546.next();
																					switch(at547.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at547.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p358.d = at547.value;
																						break;
																					case "fill":
																						p358.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at547.value);
																						break;
																					case "id":
																						p358.id = at547.value;
																						break;
																					case "stroke":
																						p358.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at547.value);
																						break;
																					case "stroke-width":
																						p358.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at547.value);
																						break;
																					}
																				}
																				var g453 = this.group;
																				if(g453 == { }) {
																					g453 = null;
																				}
																				this.renderPath(p358,this.group);
																				var p359 = p358;
																				break;
																			default:
																				var childs183 = kid182.childNodules([]);
																				var _g183 = 0;
																				while(_g183 < childs183.length) {
																					var kid184 = childs183[_g183];
																					++_g183;
																					switch(kid184.name) {
																					case "g":
																						var g454 = { };
																						var at548 = HxOverrides.iter(kid184.attributes([]));
																						while(at548.hasNext()) {
																							var at549 = at548.next();
																							switch(at549.name) {
																							case "fill":
																								g454.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at549.value);
																								break;
																							case "id":
																								g454.id = at549.value;
																								break;
																							case "stroke":
																								g454.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at549.value);
																								break;
																							case "stroke-width":
																								g454.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at549.value);
																								break;
																							case "transform":
																								g454.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at549.value);
																								break;
																							case "version":
																								g454.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at549.value);
																								break;
																							case "viewBox":
																								g454.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at549.value);
																								break;
																							case "xmlns":
																								g454.xmlns = at549.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at549.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g454;
																						if(kid184.firstChild != null) {
																							var childs184 = kid184.childNodules([]);
																							var _g184 = 0;
																							while(_g184 < childs184.length) {
																								var kid185 = childs184[_g184];
																								++_g184;
																								switch(kid185.name) {
																								case "g":
																									var g455 = this.parseGroup(kid185);
																									break;
																								case "path":
																									var p360 = { };
																									var at550 = HxOverrides.iter(kid185.attributes([]));
																									while(at550.hasNext()) {
																										var at551 = at550.next();
																										switch(at551.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at551.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p360.d = at551.value;
																											break;
																										case "fill":
																											p360.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at551.value);
																											break;
																										case "id":
																											p360.id = at551.value;
																											break;
																										case "stroke":
																											p360.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at551.value);
																											break;
																										case "stroke-width":
																											p360.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at551.value);
																											break;
																										}
																									}
																									var g456 = this.group;
																									if(g456 == { }) {
																										g456 = null;
																									}
																									this.renderPath(p360,this.group);
																									var p361 = p360;
																									break;
																								default:
																									this.parseChild(kid185);
																								}
																							}
																						}
																						var g457 = g454;
																						break;
																					case "path":
																						var p362 = { };
																						var at552 = HxOverrides.iter(kid184.attributes([]));
																						while(at552.hasNext()) {
																							var at553 = at552.next();
																							switch(at553.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at553.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p362.d = at553.value;
																								break;
																							case "fill":
																								p362.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at553.value);
																								break;
																							case "id":
																								p362.id = at553.value;
																								break;
																							case "stroke":
																								p362.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at553.value);
																								break;
																							case "stroke-width":
																								p362.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at553.value);
																								break;
																							}
																						}
																						var g458 = this.group;
																						if(g458 == { }) {
																							g458 = null;
																						}
																						this.renderPath(p362,this.group);
																						var p363 = p362;
																						break;
																					default:
																						var childs185 = kid184.childNodules([]);
																						var _g185 = 0;
																						while(_g185 < childs185.length) {
																							var kid186 = childs185[_g185];
																							++_g185;
																							switch(kid186.name) {
																							case "g":
																								var g459 = this.parseGroup(kid186);
																								break;
																							case "path":
																								var p364 = { };
																								var at554 = HxOverrides.iter(kid186.attributes([]));
																								while(at554.hasNext()) {
																									var at555 = at554.next();
																									switch(at555.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at555.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p364.d = at555.value;
																										break;
																									case "fill":
																										p364.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at555.value);
																										break;
																									case "id":
																										p364.id = at555.value;
																										break;
																									case "stroke":
																										p364.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at555.value);
																										break;
																									case "stroke-width":
																										p364.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at555.value);
																										break;
																									}
																								}
																								var g460 = this.group;
																								if(g460 == { }) {
																									g460 = null;
																								}
																								this.renderPath(p364,this.group);
																								var p365 = p364;
																								break;
																							default:
																								this.parseChild(kid186);
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																	var g461 = g448;
																	break;
																case "path":
																	var p366 = { };
																	var at556 = HxOverrides.iter(kid181.attributes([]));
																	while(at556.hasNext()) {
																		var at557 = at556.next();
																		switch(at557.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at557.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p366.d = at557.value;
																			break;
																		case "fill":
																			p366.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at557.value);
																			break;
																		case "id":
																			p366.id = at557.value;
																			break;
																		case "stroke":
																			p366.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at557.value);
																			break;
																		case "stroke-width":
																			p366.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at557.value);
																			break;
																		}
																	}
																	var g462 = this.group;
																	if(g462 == { }) {
																		g462 = null;
																	}
																	this.renderPath(p366,this.group);
																	var p367 = p366;
																	break;
																default:
																	var childs186 = kid181.childNodules([]);
																	var _g186 = 0;
																	while(_g186 < childs186.length) {
																		var kid187 = childs186[_g186];
																		++_g186;
																		switch(kid187.name) {
																		case "g":
																			var g463 = { };
																			var at558 = HxOverrides.iter(kid187.attributes([]));
																			while(at558.hasNext()) {
																				var at559 = at558.next();
																				switch(at559.name) {
																				case "fill":
																					g463.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at559.value);
																					break;
																				case "id":
																					g463.id = at559.value;
																					break;
																				case "stroke":
																					g463.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at559.value);
																					break;
																				case "stroke-width":
																					g463.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at559.value);
																					break;
																				case "transform":
																					g463.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at559.value);
																					break;
																				case "version":
																					g463.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at559.value);
																					break;
																				case "viewBox":
																					g463.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at559.value);
																					break;
																				case "xmlns":
																					g463.xmlns = at559.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at559.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g463;
																			if(kid187.firstChild != null) {
																				var childs187 = kid187.childNodules([]);
																				var _g187 = 0;
																				while(_g187 < childs187.length) {
																					var kid188 = childs187[_g187];
																					++_g187;
																					switch(kid188.name) {
																					case "g":
																						var g464 = { };
																						var at560 = HxOverrides.iter(kid188.attributes([]));
																						while(at560.hasNext()) {
																							var at561 = at560.next();
																							switch(at561.name) {
																							case "fill":
																								g464.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at561.value);
																								break;
																							case "id":
																								g464.id = at561.value;
																								break;
																							case "stroke":
																								g464.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at561.value);
																								break;
																							case "stroke-width":
																								g464.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at561.value);
																								break;
																							case "transform":
																								g464.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at561.value);
																								break;
																							case "version":
																								g464.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at561.value);
																								break;
																							case "viewBox":
																								g464.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at561.value);
																								break;
																							case "xmlns":
																								g464.xmlns = at561.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at561.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g464;
																						if(kid188.firstChild != null) {
																							var childs188 = kid188.childNodules([]);
																							var _g188 = 0;
																							while(_g188 < childs188.length) {
																								var kid189 = childs188[_g188];
																								++_g188;
																								switch(kid189.name) {
																								case "g":
																									var g465 = this.parseGroup(kid189);
																									break;
																								case "path":
																									var p368 = { };
																									var at562 = HxOverrides.iter(kid189.attributes([]));
																									while(at562.hasNext()) {
																										var at563 = at562.next();
																										switch(at563.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at563.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p368.d = at563.value;
																											break;
																										case "fill":
																											p368.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at563.value);
																											break;
																										case "id":
																											p368.id = at563.value;
																											break;
																										case "stroke":
																											p368.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at563.value);
																											break;
																										case "stroke-width":
																											p368.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at563.value);
																											break;
																										}
																									}
																									var g466 = this.group;
																									if(g466 == { }) {
																										g466 = null;
																									}
																									this.renderPath(p368,this.group);
																									var p369 = p368;
																									break;
																								default:
																									this.parseChild(kid189);
																								}
																							}
																						}
																						var g467 = g464;
																						break;
																					case "path":
																						var p370 = { };
																						var at564 = HxOverrides.iter(kid188.attributes([]));
																						while(at564.hasNext()) {
																							var at565 = at564.next();
																							switch(at565.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at565.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p370.d = at565.value;
																								break;
																							case "fill":
																								p370.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at565.value);
																								break;
																							case "id":
																								p370.id = at565.value;
																								break;
																							case "stroke":
																								p370.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at565.value);
																								break;
																							case "stroke-width":
																								p370.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at565.value);
																								break;
																							}
																						}
																						var g468 = this.group;
																						if(g468 == { }) {
																							g468 = null;
																						}
																						this.renderPath(p370,this.group);
																						var p371 = p370;
																						break;
																					default:
																						var childs189 = kid188.childNodules([]);
																						var _g189 = 0;
																						while(_g189 < childs189.length) {
																							var kid190 = childs189[_g189];
																							++_g189;
																							switch(kid190.name) {
																							case "g":
																								var g469 = this.parseGroup(kid190);
																								break;
																							case "path":
																								var p372 = { };
																								var at566 = HxOverrides.iter(kid190.attributes([]));
																								while(at566.hasNext()) {
																									var at567 = at566.next();
																									switch(at567.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at567.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p372.d = at567.value;
																										break;
																									case "fill":
																										p372.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at567.value);
																										break;
																									case "id":
																										p372.id = at567.value;
																										break;
																									case "stroke":
																										p372.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at567.value);
																										break;
																									case "stroke-width":
																										p372.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at567.value);
																										break;
																									}
																								}
																								var g470 = this.group;
																								if(g470 == { }) {
																									g470 = null;
																								}
																								this.renderPath(p372,this.group);
																								var p373 = p372;
																								break;
																							default:
																								this.parseChild(kid190);
																							}
																						}
																					}
																				}
																			}
																			var g471 = g463;
																			break;
																		case "path":
																			var p374 = { };
																			var at568 = HxOverrides.iter(kid187.attributes([]));
																			while(at568.hasNext()) {
																				var at569 = at568.next();
																				switch(at569.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at569.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p374.d = at569.value;
																					break;
																				case "fill":
																					p374.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at569.value);
																					break;
																				case "id":
																					p374.id = at569.value;
																					break;
																				case "stroke":
																					p374.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at569.value);
																					break;
																				case "stroke-width":
																					p374.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at569.value);
																					break;
																				}
																			}
																			var g472 = this.group;
																			if(g472 == { }) {
																				g472 = null;
																			}
																			this.renderPath(p374,this.group);
																			var p375 = p374;
																			break;
																		default:
																			var childs190 = kid187.childNodules([]);
																			var _g190 = 0;
																			while(_g190 < childs190.length) {
																				var kid191 = childs190[_g190];
																				++_g190;
																				switch(kid191.name) {
																				case "g":
																					var g473 = this.parseGroup(kid191);
																					break;
																				case "path":
																					var p376 = { };
																					var at570 = HxOverrides.iter(kid191.attributes([]));
																					while(at570.hasNext()) {
																						var at571 = at570.next();
																						switch(at571.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at571.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p376.d = at571.value;
																							break;
																						case "fill":
																							p376.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at571.value);
																							break;
																						case "id":
																							p376.id = at571.value;
																							break;
																						case "stroke":
																							p376.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at571.value);
																							break;
																						case "stroke-width":
																							p376.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at571.value);
																							break;
																						}
																					}
																					var g474 = this.group;
																					if(g474 == { }) {
																						g474 = null;
																					}
																					this.renderPath(p376,this.group);
																					var p377 = p376;
																					break;
																				default:
																					this.parseChild(kid191);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
												var g475 = g412;
												break;
											case "path":
												var p378 = { };
												var at572 = HxOverrides.iter(kid166.attributes([]));
												while(at572.hasNext()) {
													var at573 = at572.next();
													switch(at573.name) {
													case "_":
														haxe_Log.trace("path attribute " + at573.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
														break;
													case "d":
														p378.d = at573.value;
														break;
													case "fill":
														p378.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at573.value);
														break;
													case "id":
														p378.id = at573.value;
														break;
													case "stroke":
														p378.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at573.value);
														break;
													case "stroke-width":
														p378.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at573.value);
														break;
													}
												}
												var g476 = this.group;
												if(g476 == { }) {
													g476 = null;
												}
												this.renderPath(p378,this.group);
												var p379 = p378;
												break;
											default:
												var childs191 = kid166.childNodules([]);
												var _g191 = 0;
												while(_g191 < childs191.length) {
													var kid192 = childs191[_g191];
													++_g191;
													switch(kid192.name) {
													case "g":
														var g477 = { };
														var at574 = HxOverrides.iter(kid192.attributes([]));
														while(at574.hasNext()) {
															var at575 = at574.next();
															switch(at575.name) {
															case "fill":
																g477.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at575.value);
																break;
															case "id":
																g477.id = at575.value;
																break;
															case "stroke":
																g477.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at575.value);
																break;
															case "stroke-width":
																g477.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at575.value);
																break;
															case "transform":
																g477.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at575.value);
																break;
															case "version":
																g477.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at575.value);
																break;
															case "viewBox":
																g477.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at575.value);
																break;
															case "xmlns":
																g477.xmlns = at575.value;
																break;
															default:
																haxe_Log.trace("group attribute " + at575.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
															}
														}
														this.group = g477;
														if(kid192.firstChild != null) {
															var childs192 = kid192.childNodules([]);
															var _g192 = 0;
															while(_g192 < childs192.length) {
																var kid193 = childs192[_g192];
																++_g192;
																switch(kid193.name) {
																case "g":
																	var g478 = { };
																	var at576 = HxOverrides.iter(kid193.attributes([]));
																	while(at576.hasNext()) {
																		var at577 = at576.next();
																		switch(at577.name) {
																		case "fill":
																			g478.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at577.value);
																			break;
																		case "id":
																			g478.id = at577.value;
																			break;
																		case "stroke":
																			g478.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at577.value);
																			break;
																		case "stroke-width":
																			g478.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at577.value);
																			break;
																		case "transform":
																			g478.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at577.value);
																			break;
																		case "version":
																			g478.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at577.value);
																			break;
																		case "viewBox":
																			g478.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at577.value);
																			break;
																		case "xmlns":
																			g478.xmlns = at577.value;
																			break;
																		default:
																			haxe_Log.trace("group attribute " + at577.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																		}
																	}
																	this.group = g478;
																	if(kid193.firstChild != null) {
																		var childs193 = kid193.childNodules([]);
																		var _g193 = 0;
																		while(_g193 < childs193.length) {
																			var kid194 = childs193[_g193];
																			++_g193;
																			switch(kid194.name) {
																			case "g":
																				var g479 = this.parseGroup(kid194);
																				break;
																			case "path":
																				var p380 = { };
																				var at578 = HxOverrides.iter(kid194.attributes([]));
																				while(at578.hasNext()) {
																					var at579 = at578.next();
																					switch(at579.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at579.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p380.d = at579.value;
																						break;
																					case "fill":
																						p380.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at579.value);
																						break;
																					case "id":
																						p380.id = at579.value;
																						break;
																					case "stroke":
																						p380.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at579.value);
																						break;
																					case "stroke-width":
																						p380.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at579.value);
																						break;
																					}
																				}
																				var g480 = this.group;
																				if(g480 == { }) {
																					g480 = null;
																				}
																				this.renderPath(p380,this.group);
																				var p381 = p380;
																				break;
																			default:
																				this.parseChild(kid194);
																			}
																		}
																	}
																	var g481 = g478;
																	break;
																case "path":
																	var p382 = { };
																	var at580 = HxOverrides.iter(kid193.attributes([]));
																	while(at580.hasNext()) {
																		var at581 = at580.next();
																		switch(at581.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at581.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p382.d = at581.value;
																			break;
																		case "fill":
																			p382.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at581.value);
																			break;
																		case "id":
																			p382.id = at581.value;
																			break;
																		case "stroke":
																			p382.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at581.value);
																			break;
																		case "stroke-width":
																			p382.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at581.value);
																			break;
																		}
																	}
																	var g482 = this.group;
																	if(g482 == { }) {
																		g482 = null;
																	}
																	this.renderPath(p382,this.group);
																	var p383 = p382;
																	break;
																default:
																	var childs194 = kid193.childNodules([]);
																	var _g194 = 0;
																	while(_g194 < childs194.length) {
																		var kid195 = childs194[_g194];
																		++_g194;
																		switch(kid195.name) {
																		case "g":
																			var g483 = { };
																			var at582 = HxOverrides.iter(kid195.attributes([]));
																			while(at582.hasNext()) {
																				var at583 = at582.next();
																				switch(at583.name) {
																				case "fill":
																					g483.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at583.value);
																					break;
																				case "id":
																					g483.id = at583.value;
																					break;
																				case "stroke":
																					g483.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at583.value);
																					break;
																				case "stroke-width":
																					g483.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at583.value);
																					break;
																				case "transform":
																					g483.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at583.value);
																					break;
																				case "version":
																					g483.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at583.value);
																					break;
																				case "viewBox":
																					g483.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at583.value);
																					break;
																				case "xmlns":
																					g483.xmlns = at583.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at583.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g483;
																			if(kid195.firstChild != null) {
																				var childs195 = kid195.childNodules([]);
																				var _g195 = 0;
																				while(_g195 < childs195.length) {
																					var kid196 = childs195[_g195];
																					++_g195;
																					switch(kid196.name) {
																					case "g":
																						var g484 = { };
																						var at584 = HxOverrides.iter(kid196.attributes([]));
																						while(at584.hasNext()) {
																							var at585 = at584.next();
																							switch(at585.name) {
																							case "fill":
																								g484.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at585.value);
																								break;
																							case "id":
																								g484.id = at585.value;
																								break;
																							case "stroke":
																								g484.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at585.value);
																								break;
																							case "stroke-width":
																								g484.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at585.value);
																								break;
																							case "transform":
																								g484.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at585.value);
																								break;
																							case "version":
																								g484.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at585.value);
																								break;
																							case "viewBox":
																								g484.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at585.value);
																								break;
																							case "xmlns":
																								g484.xmlns = at585.value;
																								break;
																							default:
																								haxe_Log.trace("group attribute " + at585.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																							}
																						}
																						this.group = g484;
																						if(kid196.firstChild != null) {
																							var childs196 = kid196.childNodules([]);
																							var _g196 = 0;
																							while(_g196 < childs196.length) {
																								var kid197 = childs196[_g196];
																								++_g196;
																								switch(kid197.name) {
																								case "g":
																									var g485 = this.parseGroup(kid197);
																									break;
																								case "path":
																									var p384 = { };
																									var at586 = HxOverrides.iter(kid197.attributes([]));
																									while(at586.hasNext()) {
																										var at587 = at586.next();
																										switch(at587.name) {
																										case "_":
																											haxe_Log.trace("path attribute " + at587.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																											break;
																										case "d":
																											p384.d = at587.value;
																											break;
																										case "fill":
																											p384.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at587.value);
																											break;
																										case "id":
																											p384.id = at587.value;
																											break;
																										case "stroke":
																											p384.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at587.value);
																											break;
																										case "stroke-width":
																											p384.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at587.value);
																											break;
																										}
																									}
																									var g486 = this.group;
																									if(g486 == { }) {
																										g486 = null;
																									}
																									this.renderPath(p384,this.group);
																									var p385 = p384;
																									break;
																								default:
																									this.parseChild(kid197);
																								}
																							}
																						}
																						var g487 = g484;
																						break;
																					case "path":
																						var p386 = { };
																						var at588 = HxOverrides.iter(kid196.attributes([]));
																						while(at588.hasNext()) {
																							var at589 = at588.next();
																							switch(at589.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at589.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p386.d = at589.value;
																								break;
																							case "fill":
																								p386.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at589.value);
																								break;
																							case "id":
																								p386.id = at589.value;
																								break;
																							case "stroke":
																								p386.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at589.value);
																								break;
																							case "stroke-width":
																								p386.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at589.value);
																								break;
																							}
																						}
																						var g488 = this.group;
																						if(g488 == { }) {
																							g488 = null;
																						}
																						this.renderPath(p386,this.group);
																						var p387 = p386;
																						break;
																					default:
																						var childs197 = kid196.childNodules([]);
																						var _g197 = 0;
																						while(_g197 < childs197.length) {
																							var kid198 = childs197[_g197];
																							++_g197;
																							switch(kid198.name) {
																							case "g":
																								var g489 = { };
																								var at590 = HxOverrides.iter(kid198.attributes([]));
																								while(at590.hasNext()) {
																									var at591 = at590.next();
																									switch(at591.name) {
																									case "fill":
																										g489.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at591.value);
																										break;
																									case "id":
																										g489.id = at591.value;
																										break;
																									case "stroke":
																										g489.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at591.value);
																										break;
																									case "stroke-width":
																										g489.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at591.value);
																										break;
																									case "transform":
																										g489.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at591.value);
																										break;
																									case "version":
																										g489.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at591.value);
																										break;
																									case "viewBox":
																										g489.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at591.value);
																										break;
																									case "xmlns":
																										g489.xmlns = at591.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at591.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g489;
																								if(kid198.firstChild != null) {
																									var childs198 = kid198.childNodules([]);
																									var _g198 = 0;
																									while(_g198 < childs198.length) {
																										var kid199 = childs198[_g198];
																										++_g198;
																										switch(kid199.name) {
																										case "g":
																											var g490 = this.parseGroup(kid199);
																											break;
																										case "path":
																											var p388 = { };
																											var at592 = HxOverrides.iter(kid199.attributes([]));
																											while(at592.hasNext()) {
																												var at593 = at592.next();
																												switch(at593.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at593.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p388.d = at593.value;
																													break;
																												case "fill":
																													p388.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at593.value);
																													break;
																												case "id":
																													p388.id = at593.value;
																													break;
																												case "stroke":
																													p388.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at593.value);
																													break;
																												case "stroke-width":
																													p388.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at593.value);
																													break;
																												}
																											}
																											var g491 = this.group;
																											if(g491 == { }) {
																												g491 = null;
																											}
																											this.renderPath(p388,this.group);
																											var p389 = p388;
																											break;
																										default:
																											this.parseChild(kid199);
																										}
																									}
																								}
																								var g492 = g489;
																								break;
																							case "path":
																								var p390 = { };
																								var at594 = HxOverrides.iter(kid198.attributes([]));
																								while(at594.hasNext()) {
																									var at595 = at594.next();
																									switch(at595.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at595.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p390.d = at595.value;
																										break;
																									case "fill":
																										p390.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at595.value);
																										break;
																									case "id":
																										p390.id = at595.value;
																										break;
																									case "stroke":
																										p390.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at595.value);
																										break;
																									case "stroke-width":
																										p390.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at595.value);
																										break;
																									}
																								}
																								var g493 = this.group;
																								if(g493 == { }) {
																									g493 = null;
																								}
																								this.renderPath(p390,this.group);
																								var p391 = p390;
																								break;
																							default:
																								var childs199 = kid198.childNodules([]);
																								var _g199 = 0;
																								while(_g199 < childs199.length) {
																									var kid200 = childs199[_g199];
																									++_g199;
																									switch(kid200.name) {
																									case "g":
																										var g494 = this.parseGroup(kid200);
																										break;
																									case "path":
																										var p392 = { };
																										var at596 = HxOverrides.iter(kid200.attributes([]));
																										while(at596.hasNext()) {
																											var at597 = at596.next();
																											switch(at597.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at597.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p392.d = at597.value;
																												break;
																											case "fill":
																												p392.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at597.value);
																												break;
																											case "id":
																												p392.id = at597.value;
																												break;
																											case "stroke":
																												p392.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at597.value);
																												break;
																											case "stroke-width":
																												p392.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at597.value);
																												break;
																											}
																										}
																										var g495 = this.group;
																										if(g495 == { }) {
																											g495 = null;
																										}
																										this.renderPath(p392,this.group);
																										var p393 = p392;
																										break;
																									default:
																										this.parseChild(kid200);
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																			var g496 = g483;
																			break;
																		case "path":
																			var p394 = { };
																			var at598 = HxOverrides.iter(kid195.attributes([]));
																			while(at598.hasNext()) {
																				var at599 = at598.next();
																				switch(at599.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at599.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p394.d = at599.value;
																					break;
																				case "fill":
																					p394.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at599.value);
																					break;
																				case "id":
																					p394.id = at599.value;
																					break;
																				case "stroke":
																					p394.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at599.value);
																					break;
																				case "stroke-width":
																					p394.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at599.value);
																					break;
																				}
																			}
																			var g497 = this.group;
																			if(g497 == { }) {
																				g497 = null;
																			}
																			this.renderPath(p394,this.group);
																			var p395 = p394;
																			break;
																		default:
																			var childs200 = kid195.childNodules([]);
																			var _g200 = 0;
																			while(_g200 < childs200.length) {
																				var kid201 = childs200[_g200];
																				++_g200;
																				switch(kid201.name) {
																				case "g":
																					var g498 = { };
																					var at600 = HxOverrides.iter(kid201.attributes([]));
																					while(at600.hasNext()) {
																						var at601 = at600.next();
																						switch(at601.name) {
																						case "fill":
																							g498.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at601.value);
																							break;
																						case "id":
																							g498.id = at601.value;
																							break;
																						case "stroke":
																							g498.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at601.value);
																							break;
																						case "stroke-width":
																							g498.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at601.value);
																							break;
																						case "transform":
																							g498.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at601.value);
																							break;
																						case "version":
																							g498.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at601.value);
																							break;
																						case "viewBox":
																							g498.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at601.value);
																							break;
																						case "xmlns":
																							g498.xmlns = at601.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at601.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g498;
																					if(kid201.firstChild != null) {
																						var childs201 = kid201.childNodules([]);
																						var _g201 = 0;
																						while(_g201 < childs201.length) {
																							var kid202 = childs201[_g201];
																							++_g201;
																							switch(kid202.name) {
																							case "g":
																								var g499 = { };
																								var at602 = HxOverrides.iter(kid202.attributes([]));
																								while(at602.hasNext()) {
																									var at603 = at602.next();
																									switch(at603.name) {
																									case "fill":
																										g499.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at603.value);
																										break;
																									case "id":
																										g499.id = at603.value;
																										break;
																									case "stroke":
																										g499.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at603.value);
																										break;
																									case "stroke-width":
																										g499.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at603.value);
																										break;
																									case "transform":
																										g499.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at603.value);
																										break;
																									case "version":
																										g499.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at603.value);
																										break;
																									case "viewBox":
																										g499.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at603.value);
																										break;
																									case "xmlns":
																										g499.xmlns = at603.value;
																										break;
																									default:
																										haxe_Log.trace("group attribute " + at603.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																									}
																								}
																								this.group = g499;
																								if(kid202.firstChild != null) {
																									var childs202 = kid202.childNodules([]);
																									var _g202 = 0;
																									while(_g202 < childs202.length) {
																										var kid203 = childs202[_g202];
																										++_g202;
																										switch(kid203.name) {
																										case "g":
																											var g500 = this.parseGroup(kid203);
																											break;
																										case "path":
																											var p396 = { };
																											var at604 = HxOverrides.iter(kid203.attributes([]));
																											while(at604.hasNext()) {
																												var at605 = at604.next();
																												switch(at605.name) {
																												case "_":
																													haxe_Log.trace("path attribute " + at605.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																													break;
																												case "d":
																													p396.d = at605.value;
																													break;
																												case "fill":
																													p396.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at605.value);
																													break;
																												case "id":
																													p396.id = at605.value;
																													break;
																												case "stroke":
																													p396.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at605.value);
																													break;
																												case "stroke-width":
																													p396.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at605.value);
																													break;
																												}
																											}
																											var g501 = this.group;
																											if(g501 == { }) {
																												g501 = null;
																											}
																											this.renderPath(p396,this.group);
																											var p397 = p396;
																											break;
																										default:
																											this.parseChild(kid203);
																										}
																									}
																								}
																								var g502 = g499;
																								break;
																							case "path":
																								var p398 = { };
																								var at606 = HxOverrides.iter(kid202.attributes([]));
																								while(at606.hasNext()) {
																									var at607 = at606.next();
																									switch(at607.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at607.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p398.d = at607.value;
																										break;
																									case "fill":
																										p398.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at607.value);
																										break;
																									case "id":
																										p398.id = at607.value;
																										break;
																									case "stroke":
																										p398.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at607.value);
																										break;
																									case "stroke-width":
																										p398.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at607.value);
																										break;
																									}
																								}
																								var g503 = this.group;
																								if(g503 == { }) {
																									g503 = null;
																								}
																								this.renderPath(p398,this.group);
																								var p399 = p398;
																								break;
																							default:
																								var childs203 = kid202.childNodules([]);
																								var _g203 = 0;
																								while(_g203 < childs203.length) {
																									var kid204 = childs203[_g203];
																									++_g203;
																									switch(kid204.name) {
																									case "g":
																										var g504 = this.parseGroup(kid204);
																										break;
																									case "path":
																										var p400 = { };
																										var at608 = HxOverrides.iter(kid204.attributes([]));
																										while(at608.hasNext()) {
																											var at609 = at608.next();
																											switch(at609.name) {
																											case "_":
																												haxe_Log.trace("path attribute " + at609.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																												break;
																											case "d":
																												p400.d = at609.value;
																												break;
																											case "fill":
																												p400.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at609.value);
																												break;
																											case "id":
																												p400.id = at609.value;
																												break;
																											case "stroke":
																												p400.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at609.value);
																												break;
																											case "stroke-width":
																												p400.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at609.value);
																												break;
																											}
																										}
																										var g505 = this.group;
																										if(g505 == { }) {
																											g505 = null;
																										}
																										this.renderPath(p400,this.group);
																										var p401 = p400;
																										break;
																									default:
																										this.parseChild(kid204);
																									}
																								}
																							}
																						}
																					}
																					var g506 = g498;
																					break;
																				case "path":
																					var p402 = { };
																					var at610 = HxOverrides.iter(kid201.attributes([]));
																					while(at610.hasNext()) {
																						var at611 = at610.next();
																						switch(at611.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at611.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p402.d = at611.value;
																							break;
																						case "fill":
																							p402.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at611.value);
																							break;
																						case "id":
																							p402.id = at611.value;
																							break;
																						case "stroke":
																							p402.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at611.value);
																							break;
																						case "stroke-width":
																							p402.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at611.value);
																							break;
																						}
																					}
																					var g507 = this.group;
																					if(g507 == { }) {
																						g507 = null;
																					}
																					this.renderPath(p402,this.group);
																					var p403 = p402;
																					break;
																				default:
																					var childs204 = kid201.childNodules([]);
																					var _g204 = 0;
																					while(_g204 < childs204.length) {
																						var kid205 = childs204[_g204];
																						++_g204;
																						switch(kid205.name) {
																						case "g":
																							var g508 = this.parseGroup(kid205);
																							break;
																						case "path":
																							var p404 = { };
																							var at612 = HxOverrides.iter(kid205.attributes([]));
																							while(at612.hasNext()) {
																								var at613 = at612.next();
																								switch(at613.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at613.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p404.d = at613.value;
																									break;
																								case "fill":
																									p404.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at613.value);
																									break;
																								case "id":
																									p404.id = at613.value;
																									break;
																								case "stroke":
																									p404.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at613.value);
																									break;
																								case "stroke-width":
																									p404.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at613.value);
																									break;
																								}
																							}
																							var g509 = this.group;
																							if(g509 == { }) {
																								g509 = null;
																							}
																							this.renderPath(p404,this.group);
																							var p405 = p404;
																							break;
																						default:
																							this.parseChild(kid205);
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
														var g510 = g477;
														break;
													case "path":
														var p406 = { };
														var at614 = HxOverrides.iter(kid192.attributes([]));
														while(at614.hasNext()) {
															var at615 = at614.next();
															switch(at615.name) {
															case "_":
																haxe_Log.trace("path attribute " + at615.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																break;
															case "d":
																p406.d = at615.value;
																break;
															case "fill":
																p406.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at615.value);
																break;
															case "id":
																p406.id = at615.value;
																break;
															case "stroke":
																p406.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at615.value);
																break;
															case "stroke-width":
																p406.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at615.value);
																break;
															}
														}
														var g511 = this.group;
														if(g511 == { }) {
															g511 = null;
														}
														this.renderPath(p406,this.group);
														var p407 = p406;
														break;
													default:
														var childs205 = kid192.childNodules([]);
														var _g205 = 0;
														while(_g205 < childs205.length) {
															var kid206 = childs205[_g205];
															++_g205;
															switch(kid206.name) {
															case "g":
																var g512 = { };
																var at616 = HxOverrides.iter(kid206.attributes([]));
																while(at616.hasNext()) {
																	var at617 = at616.next();
																	switch(at617.name) {
																	case "fill":
																		g512.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at617.value);
																		break;
																	case "id":
																		g512.id = at617.value;
																		break;
																	case "stroke":
																		g512.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at617.value);
																		break;
																	case "stroke-width":
																		g512.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at617.value);
																		break;
																	case "transform":
																		g512.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at617.value);
																		break;
																	case "version":
																		g512.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at617.value);
																		break;
																	case "viewBox":
																		g512.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at617.value);
																		break;
																	case "xmlns":
																		g512.xmlns = at617.value;
																		break;
																	default:
																		haxe_Log.trace("group attribute " + at617.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																	}
																}
																this.group = g512;
																if(kid206.firstChild != null) {
																	var childs206 = kid206.childNodules([]);
																	var _g206 = 0;
																	while(_g206 < childs206.length) {
																		var kid207 = childs206[_g206];
																		++_g206;
																		switch(kid207.name) {
																		case "g":
																			var g513 = { };
																			var at618 = HxOverrides.iter(kid207.attributes([]));
																			while(at618.hasNext()) {
																				var at619 = at618.next();
																				switch(at619.name) {
																				case "fill":
																					g513.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at619.value);
																					break;
																				case "id":
																					g513.id = at619.value;
																					break;
																				case "stroke":
																					g513.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at619.value);
																					break;
																				case "stroke-width":
																					g513.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at619.value);
																					break;
																				case "transform":
																					g513.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at619.value);
																					break;
																				case "version":
																					g513.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at619.value);
																					break;
																				case "viewBox":
																					g513.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at619.value);
																					break;
																				case "xmlns":
																					g513.xmlns = at619.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at619.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g513;
																			if(kid207.firstChild != null) {
																				var childs207 = kid207.childNodules([]);
																				var _g207 = 0;
																				while(_g207 < childs207.length) {
																					var kid208 = childs207[_g207];
																					++_g207;
																					switch(kid208.name) {
																					case "g":
																						var g514 = this.parseGroup(kid208);
																						break;
																					case "path":
																						var p408 = { };
																						var at620 = HxOverrides.iter(kid208.attributes([]));
																						while(at620.hasNext()) {
																							var at621 = at620.next();
																							switch(at621.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at621.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p408.d = at621.value;
																								break;
																							case "fill":
																								p408.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at621.value);
																								break;
																							case "id":
																								p408.id = at621.value;
																								break;
																							case "stroke":
																								p408.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at621.value);
																								break;
																							case "stroke-width":
																								p408.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at621.value);
																								break;
																							}
																						}
																						var g515 = this.group;
																						if(g515 == { }) {
																							g515 = null;
																						}
																						this.renderPath(p408,this.group);
																						var p409 = p408;
																						break;
																					default:
																						this.parseChild(kid208);
																					}
																				}
																			}
																			var g516 = g513;
																			break;
																		case "path":
																			var p410 = { };
																			var at622 = HxOverrides.iter(kid207.attributes([]));
																			while(at622.hasNext()) {
																				var at623 = at622.next();
																				switch(at623.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at623.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p410.d = at623.value;
																					break;
																				case "fill":
																					p410.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at623.value);
																					break;
																				case "id":
																					p410.id = at623.value;
																					break;
																				case "stroke":
																					p410.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at623.value);
																					break;
																				case "stroke-width":
																					p410.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at623.value);
																					break;
																				}
																			}
																			var g517 = this.group;
																			if(g517 == { }) {
																				g517 = null;
																			}
																			this.renderPath(p410,this.group);
																			var p411 = p410;
																			break;
																		default:
																			var childs208 = kid207.childNodules([]);
																			var _g208 = 0;
																			while(_g208 < childs208.length) {
																				var kid209 = childs208[_g208];
																				++_g208;
																				switch(kid209.name) {
																				case "g":
																					var g518 = { };
																					var at624 = HxOverrides.iter(kid209.attributes([]));
																					while(at624.hasNext()) {
																						var at625 = at624.next();
																						switch(at625.name) {
																						case "fill":
																							g518.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at625.value);
																							break;
																						case "id":
																							g518.id = at625.value;
																							break;
																						case "stroke":
																							g518.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at625.value);
																							break;
																						case "stroke-width":
																							g518.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at625.value);
																							break;
																						case "transform":
																							g518.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at625.value);
																							break;
																						case "version":
																							g518.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at625.value);
																							break;
																						case "viewBox":
																							g518.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at625.value);
																							break;
																						case "xmlns":
																							g518.xmlns = at625.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at625.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g518;
																					if(kid209.firstChild != null) {
																						var childs209 = kid209.childNodules([]);
																						var _g209 = 0;
																						while(_g209 < childs209.length) {
																							var kid210 = childs209[_g209];
																							++_g209;
																							switch(kid210.name) {
																							case "g":
																								var g519 = this.parseGroup(kid210);
																								break;
																							case "path":
																								var p412 = { };
																								var at626 = HxOverrides.iter(kid210.attributes([]));
																								while(at626.hasNext()) {
																									var at627 = at626.next();
																									switch(at627.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at627.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p412.d = at627.value;
																										break;
																									case "fill":
																										p412.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at627.value);
																										break;
																									case "id":
																										p412.id = at627.value;
																										break;
																									case "stroke":
																										p412.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at627.value);
																										break;
																									case "stroke-width":
																										p412.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at627.value);
																										break;
																									}
																								}
																								var g520 = this.group;
																								if(g520 == { }) {
																									g520 = null;
																								}
																								this.renderPath(p412,this.group);
																								var p413 = p412;
																								break;
																							default:
																								this.parseChild(kid210);
																							}
																						}
																					}
																					var g521 = g518;
																					break;
																				case "path":
																					var p414 = { };
																					var at628 = HxOverrides.iter(kid209.attributes([]));
																					while(at628.hasNext()) {
																						var at629 = at628.next();
																						switch(at629.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at629.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p414.d = at629.value;
																							break;
																						case "fill":
																							p414.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at629.value);
																							break;
																						case "id":
																							p414.id = at629.value;
																							break;
																						case "stroke":
																							p414.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at629.value);
																							break;
																						case "stroke-width":
																							p414.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at629.value);
																							break;
																						}
																					}
																					var g522 = this.group;
																					if(g522 == { }) {
																						g522 = null;
																					}
																					this.renderPath(p414,this.group);
																					var p415 = p414;
																					break;
																				default:
																					var childs210 = kid209.childNodules([]);
																					var _g210 = 0;
																					while(_g210 < childs210.length) {
																						var kid211 = childs210[_g210];
																						++_g210;
																						switch(kid211.name) {
																						case "g":
																							var g523 = this.parseGroup(kid211);
																							break;
																						case "path":
																							var p416 = { };
																							var at630 = HxOverrides.iter(kid211.attributes([]));
																							while(at630.hasNext()) {
																								var at631 = at630.next();
																								switch(at631.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at631.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p416.d = at631.value;
																									break;
																								case "fill":
																									p416.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at631.value);
																									break;
																								case "id":
																									p416.id = at631.value;
																									break;
																								case "stroke":
																									p416.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at631.value);
																									break;
																								case "stroke-width":
																									p416.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at631.value);
																									break;
																								}
																							}
																							var g524 = this.group;
																							if(g524 == { }) {
																								g524 = null;
																							}
																							this.renderPath(p416,this.group);
																							var p417 = p416;
																							break;
																						default:
																							this.parseChild(kid211);
																						}
																					}
																				}
																			}
																		}
																	}
																}
																var g525 = g512;
																break;
															case "path":
																var p418 = { };
																var at632 = HxOverrides.iter(kid206.attributes([]));
																while(at632.hasNext()) {
																	var at633 = at632.next();
																	switch(at633.name) {
																	case "_":
																		haxe_Log.trace("path attribute " + at633.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																		break;
																	case "d":
																		p418.d = at633.value;
																		break;
																	case "fill":
																		p418.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at633.value);
																		break;
																	case "id":
																		p418.id = at633.value;
																		break;
																	case "stroke":
																		p418.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at633.value);
																		break;
																	case "stroke-width":
																		p418.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at633.value);
																		break;
																	}
																}
																var g526 = this.group;
																if(g526 == { }) {
																	g526 = null;
																}
																this.renderPath(p418,this.group);
																var p419 = p418;
																break;
															default:
																var childs211 = kid206.childNodules([]);
																var _g211 = 0;
																while(_g211 < childs211.length) {
																	var kid212 = childs211[_g211];
																	++_g211;
																	switch(kid212.name) {
																	case "g":
																		var g527 = { };
																		var at634 = HxOverrides.iter(kid212.attributes([]));
																		while(at634.hasNext()) {
																			var at635 = at634.next();
																			switch(at635.name) {
																			case "fill":
																				g527.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at635.value);
																				break;
																			case "id":
																				g527.id = at635.value;
																				break;
																			case "stroke":
																				g527.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at635.value);
																				break;
																			case "stroke-width":
																				g527.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at635.value);
																				break;
																			case "transform":
																				g527.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at635.value);
																				break;
																			case "version":
																				g527.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at635.value);
																				break;
																			case "viewBox":
																				g527.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at635.value);
																				break;
																			case "xmlns":
																				g527.xmlns = at635.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at635.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g527;
																		if(kid212.firstChild != null) {
																			var childs212 = kid212.childNodules([]);
																			var _g212 = 0;
																			while(_g212 < childs212.length) {
																				var kid213 = childs212[_g212];
																				++_g212;
																				switch(kid213.name) {
																				case "g":
																					var g528 = { };
																					var at636 = HxOverrides.iter(kid213.attributes([]));
																					while(at636.hasNext()) {
																						var at637 = at636.next();
																						switch(at637.name) {
																						case "fill":
																							g528.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at637.value);
																							break;
																						case "id":
																							g528.id = at637.value;
																							break;
																						case "stroke":
																							g528.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at637.value);
																							break;
																						case "stroke-width":
																							g528.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at637.value);
																							break;
																						case "transform":
																							g528.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at637.value);
																							break;
																						case "version":
																							g528.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at637.value);
																							break;
																						case "viewBox":
																							g528.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at637.value);
																							break;
																						case "xmlns":
																							g528.xmlns = at637.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at637.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g528;
																					if(kid213.firstChild != null) {
																						var childs213 = kid213.childNodules([]);
																						var _g213 = 0;
																						while(_g213 < childs213.length) {
																							var kid214 = childs213[_g213];
																							++_g213;
																							switch(kid214.name) {
																							case "g":
																								var g529 = this.parseGroup(kid214);
																								break;
																							case "path":
																								var p420 = { };
																								var at638 = HxOverrides.iter(kid214.attributes([]));
																								while(at638.hasNext()) {
																									var at639 = at638.next();
																									switch(at639.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at639.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p420.d = at639.value;
																										break;
																									case "fill":
																										p420.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at639.value);
																										break;
																									case "id":
																										p420.id = at639.value;
																										break;
																									case "stroke":
																										p420.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at639.value);
																										break;
																									case "stroke-width":
																										p420.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at639.value);
																										break;
																									}
																								}
																								var g530 = this.group;
																								if(g530 == { }) {
																									g530 = null;
																								}
																								this.renderPath(p420,this.group);
																								var p421 = p420;
																								break;
																							default:
																								this.parseChild(kid214);
																							}
																						}
																					}
																					var g531 = g528;
																					break;
																				case "path":
																					var p422 = { };
																					var at640 = HxOverrides.iter(kid213.attributes([]));
																					while(at640.hasNext()) {
																						var at641 = at640.next();
																						switch(at641.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at641.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p422.d = at641.value;
																							break;
																						case "fill":
																							p422.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at641.value);
																							break;
																						case "id":
																							p422.id = at641.value;
																							break;
																						case "stroke":
																							p422.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at641.value);
																							break;
																						case "stroke-width":
																							p422.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at641.value);
																							break;
																						}
																					}
																					var g532 = this.group;
																					if(g532 == { }) {
																						g532 = null;
																					}
																					this.renderPath(p422,this.group);
																					var p423 = p422;
																					break;
																				default:
																					var childs214 = kid213.childNodules([]);
																					var _g214 = 0;
																					while(_g214 < childs214.length) {
																						var kid215 = childs214[_g214];
																						++_g214;
																						switch(kid215.name) {
																						case "g":
																							var g533 = this.parseGroup(kid215);
																							break;
																						case "path":
																							var p424 = { };
																							var at642 = HxOverrides.iter(kid215.attributes([]));
																							while(at642.hasNext()) {
																								var at643 = at642.next();
																								switch(at643.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at643.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p424.d = at643.value;
																									break;
																								case "fill":
																									p424.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at643.value);
																									break;
																								case "id":
																									p424.id = at643.value;
																									break;
																								case "stroke":
																									p424.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at643.value);
																									break;
																								case "stroke-width":
																									p424.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at643.value);
																									break;
																								}
																							}
																							var g534 = this.group;
																							if(g534 == { }) {
																								g534 = null;
																							}
																							this.renderPath(p424,this.group);
																							var p425 = p424;
																							break;
																						default:
																							this.parseChild(kid215);
																						}
																					}
																				}
																			}
																		}
																		var g535 = g527;
																		break;
																	case "path":
																		var p426 = { };
																		var at644 = HxOverrides.iter(kid212.attributes([]));
																		while(at644.hasNext()) {
																			var at645 = at644.next();
																			switch(at645.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at645.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p426.d = at645.value;
																				break;
																			case "fill":
																				p426.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at645.value);
																				break;
																			case "id":
																				p426.id = at645.value;
																				break;
																			case "stroke":
																				p426.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at645.value);
																				break;
																			case "stroke-width":
																				p426.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at645.value);
																				break;
																			}
																		}
																		var g536 = this.group;
																		if(g536 == { }) {
																			g536 = null;
																		}
																		this.renderPath(p426,this.group);
																		var p427 = p426;
																		break;
																	default:
																		var childs215 = kid212.childNodules([]);
																		var _g215 = 0;
																		while(_g215 < childs215.length) {
																			var kid216 = childs215[_g215];
																			++_g215;
																			switch(kid216.name) {
																			case "g":
																				var g537 = this.parseGroup(kid216);
																				break;
																			case "path":
																				var p428 = { };
																				var at646 = HxOverrides.iter(kid216.attributes([]));
																				while(at646.hasNext()) {
																					var at647 = at646.next();
																					switch(at647.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at647.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p428.d = at647.value;
																						break;
																					case "fill":
																						p428.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at647.value);
																						break;
																					case "id":
																						p428.id = at647.value;
																						break;
																					case "stroke":
																						p428.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at647.value);
																						break;
																					case "stroke-width":
																						p428.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at647.value);
																						break;
																					}
																				}
																				var g538 = this.group;
																				if(g538 == { }) {
																					g538 = null;
																				}
																				this.renderPath(p428,this.group);
																				var p429 = p428;
																				break;
																			default:
																				this.parseChild(kid216);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
									var g539 = g411;
									break;
								case "path":
									var p430 = { };
									var at648 = HxOverrides.iter(kid165.attributes([]));
									while(at648.hasNext()) {
										var at649 = at648.next();
										switch(at649.name) {
										case "_":
											haxe_Log.trace("path attribute " + at649.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
											break;
										case "d":
											p430.d = at649.value;
											break;
										case "fill":
											p430.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at649.value);
											break;
										case "id":
											p430.id = at649.value;
											break;
										case "stroke":
											p430.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at649.value);
											break;
										case "stroke-width":
											p430.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at649.value);
											break;
										}
									}
									var g540 = this.group;
									if(g540 == { }) {
										g540 = null;
									}
									this.renderPath(p430,this.group);
									var p431 = p430;
									break;
								default:
									var childs216 = kid165.childNodules([]);
									var _g216 = 0;
									while(_g216 < childs216.length) {
										var kid217 = childs216[_g216];
										++_g216;
										switch(kid217.name) {
										case "g":
											var g541 = { };
											var at650 = HxOverrides.iter(kid217.attributes([]));
											while(at650.hasNext()) {
												var at651 = at650.next();
												switch(at651.name) {
												case "fill":
													g541.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at651.value);
													break;
												case "id":
													g541.id = at651.value;
													break;
												case "stroke":
													g541.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at651.value);
													break;
												case "stroke-width":
													g541.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at651.value);
													break;
												case "transform":
													g541.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at651.value);
													break;
												case "version":
													g541.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at651.value);
													break;
												case "viewBox":
													g541.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at651.value);
													break;
												case "xmlns":
													g541.xmlns = at651.value;
													break;
												default:
													haxe_Log.trace("group attribute " + at651.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
												}
											}
											this.group = g541;
											if(kid217.firstChild != null) {
												var childs217 = kid217.childNodules([]);
												var _g217 = 0;
												while(_g217 < childs217.length) {
													var kid218 = childs217[_g217];
													++_g217;
													switch(kid218.name) {
													case "g":
														var g542 = { };
														var at652 = HxOverrides.iter(kid218.attributes([]));
														while(at652.hasNext()) {
															var at653 = at652.next();
															switch(at653.name) {
															case "fill":
																g542.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at653.value);
																break;
															case "id":
																g542.id = at653.value;
																break;
															case "stroke":
																g542.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at653.value);
																break;
															case "stroke-width":
																g542.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at653.value);
																break;
															case "transform":
																g542.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at653.value);
																break;
															case "version":
																g542.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at653.value);
																break;
															case "viewBox":
																g542.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at653.value);
																break;
															case "xmlns":
																g542.xmlns = at653.value;
																break;
															default:
																haxe_Log.trace("group attribute " + at653.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
															}
														}
														this.group = g542;
														if(kid218.firstChild != null) {
															var childs218 = kid218.childNodules([]);
															var _g218 = 0;
															while(_g218 < childs218.length) {
																var kid219 = childs218[_g218];
																++_g218;
																switch(kid219.name) {
																case "g":
																	var g543 = this.parseGroup(kid219);
																	break;
																case "path":
																	var p432 = { };
																	var at654 = HxOverrides.iter(kid219.attributes([]));
																	while(at654.hasNext()) {
																		var at655 = at654.next();
																		switch(at655.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at655.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p432.d = at655.value;
																			break;
																		case "fill":
																			p432.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at655.value);
																			break;
																		case "id":
																			p432.id = at655.value;
																			break;
																		case "stroke":
																			p432.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at655.value);
																			break;
																		case "stroke-width":
																			p432.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at655.value);
																			break;
																		}
																	}
																	var g544 = this.group;
																	if(g544 == { }) {
																		g544 = null;
																	}
																	this.renderPath(p432,this.group);
																	var p433 = p432;
																	break;
																default:
																	this.parseChild(kid219);
																}
															}
														}
														var g545 = g542;
														break;
													case "path":
														var p434 = { };
														var at656 = HxOverrides.iter(kid218.attributes([]));
														while(at656.hasNext()) {
															var at657 = at656.next();
															switch(at657.name) {
															case "_":
																haxe_Log.trace("path attribute " + at657.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																break;
															case "d":
																p434.d = at657.value;
																break;
															case "fill":
																p434.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at657.value);
																break;
															case "id":
																p434.id = at657.value;
																break;
															case "stroke":
																p434.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at657.value);
																break;
															case "stroke-width":
																p434.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at657.value);
																break;
															}
														}
														var g546 = this.group;
														if(g546 == { }) {
															g546 = null;
														}
														this.renderPath(p434,this.group);
														var p435 = p434;
														break;
													default:
														var childs219 = kid218.childNodules([]);
														var _g219 = 0;
														while(_g219 < childs219.length) {
															var kid220 = childs219[_g219];
															++_g219;
															switch(kid220.name) {
															case "g":
																var g547 = { };
																var at658 = HxOverrides.iter(kid220.attributes([]));
																while(at658.hasNext()) {
																	var at659 = at658.next();
																	switch(at659.name) {
																	case "fill":
																		g547.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at659.value);
																		break;
																	case "id":
																		g547.id = at659.value;
																		break;
																	case "stroke":
																		g547.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at659.value);
																		break;
																	case "stroke-width":
																		g547.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at659.value);
																		break;
																	case "transform":
																		g547.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at659.value);
																		break;
																	case "version":
																		g547.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at659.value);
																		break;
																	case "viewBox":
																		g547.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at659.value);
																		break;
																	case "xmlns":
																		g547.xmlns = at659.value;
																		break;
																	default:
																		haxe_Log.trace("group attribute " + at659.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																	}
																}
																this.group = g547;
																if(kid220.firstChild != null) {
																	var childs220 = kid220.childNodules([]);
																	var _g220 = 0;
																	while(_g220 < childs220.length) {
																		var kid221 = childs220[_g220];
																		++_g220;
																		switch(kid221.name) {
																		case "g":
																			var g548 = { };
																			var at660 = HxOverrides.iter(kid221.attributes([]));
																			while(at660.hasNext()) {
																				var at661 = at660.next();
																				switch(at661.name) {
																				case "fill":
																					g548.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at661.value);
																					break;
																				case "id":
																					g548.id = at661.value;
																					break;
																				case "stroke":
																					g548.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at661.value);
																					break;
																				case "stroke-width":
																					g548.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at661.value);
																					break;
																				case "transform":
																					g548.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at661.value);
																					break;
																				case "version":
																					g548.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at661.value);
																					break;
																				case "viewBox":
																					g548.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at661.value);
																					break;
																				case "xmlns":
																					g548.xmlns = at661.value;
																					break;
																				default:
																					haxe_Log.trace("group attribute " + at661.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																				}
																			}
																			this.group = g548;
																			if(kid221.firstChild != null) {
																				var childs221 = kid221.childNodules([]);
																				var _g221 = 0;
																				while(_g221 < childs221.length) {
																					var kid222 = childs221[_g221];
																					++_g221;
																					switch(kid222.name) {
																					case "g":
																						var g549 = this.parseGroup(kid222);
																						break;
																					case "path":
																						var p436 = { };
																						var at662 = HxOverrides.iter(kid222.attributes([]));
																						while(at662.hasNext()) {
																							var at663 = at662.next();
																							switch(at663.name) {
																							case "_":
																								haxe_Log.trace("path attribute " + at663.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																								break;
																							case "d":
																								p436.d = at663.value;
																								break;
																							case "fill":
																								p436.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at663.value);
																								break;
																							case "id":
																								p436.id = at663.value;
																								break;
																							case "stroke":
																								p436.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at663.value);
																								break;
																							case "stroke-width":
																								p436.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at663.value);
																								break;
																							}
																						}
																						var g550 = this.group;
																						if(g550 == { }) {
																							g550 = null;
																						}
																						this.renderPath(p436,this.group);
																						var p437 = p436;
																						break;
																					default:
																						this.parseChild(kid222);
																					}
																				}
																			}
																			var g551 = g548;
																			break;
																		case "path":
																			var p438 = { };
																			var at664 = HxOverrides.iter(kid221.attributes([]));
																			while(at664.hasNext()) {
																				var at665 = at664.next();
																				switch(at665.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at665.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p438.d = at665.value;
																					break;
																				case "fill":
																					p438.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at665.value);
																					break;
																				case "id":
																					p438.id = at665.value;
																					break;
																				case "stroke":
																					p438.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at665.value);
																					break;
																				case "stroke-width":
																					p438.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at665.value);
																					break;
																				}
																			}
																			var g552 = this.group;
																			if(g552 == { }) {
																				g552 = null;
																			}
																			this.renderPath(p438,this.group);
																			var p439 = p438;
																			break;
																		default:
																			var childs222 = kid221.childNodules([]);
																			var _g222 = 0;
																			while(_g222 < childs222.length) {
																				var kid223 = childs222[_g222];
																				++_g222;
																				switch(kid223.name) {
																				case "g":
																					var g553 = { };
																					var at666 = HxOverrides.iter(kid223.attributes([]));
																					while(at666.hasNext()) {
																						var at667 = at666.next();
																						switch(at667.name) {
																						case "fill":
																							g553.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at667.value);
																							break;
																						case "id":
																							g553.id = at667.value;
																							break;
																						case "stroke":
																							g553.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at667.value);
																							break;
																						case "stroke-width":
																							g553.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at667.value);
																							break;
																						case "transform":
																							g553.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at667.value);
																							break;
																						case "version":
																							g553.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at667.value);
																							break;
																						case "viewBox":
																							g553.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at667.value);
																							break;
																						case "xmlns":
																							g553.xmlns = at667.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at667.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g553;
																					if(kid223.firstChild != null) {
																						var childs223 = kid223.childNodules([]);
																						var _g223 = 0;
																						while(_g223 < childs223.length) {
																							var kid224 = childs223[_g223];
																							++_g223;
																							switch(kid224.name) {
																							case "g":
																								var g554 = this.parseGroup(kid224);
																								break;
																							case "path":
																								var p440 = { };
																								var at668 = HxOverrides.iter(kid224.attributes([]));
																								while(at668.hasNext()) {
																									var at669 = at668.next();
																									switch(at669.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at669.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p440.d = at669.value;
																										break;
																									case "fill":
																										p440.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at669.value);
																										break;
																									case "id":
																										p440.id = at669.value;
																										break;
																									case "stroke":
																										p440.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at669.value);
																										break;
																									case "stroke-width":
																										p440.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at669.value);
																										break;
																									}
																								}
																								var g555 = this.group;
																								if(g555 == { }) {
																									g555 = null;
																								}
																								this.renderPath(p440,this.group);
																								var p441 = p440;
																								break;
																							default:
																								this.parseChild(kid224);
																							}
																						}
																					}
																					var g556 = g553;
																					break;
																				case "path":
																					var p442 = { };
																					var at670 = HxOverrides.iter(kid223.attributes([]));
																					while(at670.hasNext()) {
																						var at671 = at670.next();
																						switch(at671.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at671.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p442.d = at671.value;
																							break;
																						case "fill":
																							p442.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at671.value);
																							break;
																						case "id":
																							p442.id = at671.value;
																							break;
																						case "stroke":
																							p442.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at671.value);
																							break;
																						case "stroke-width":
																							p442.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at671.value);
																							break;
																						}
																					}
																					var g557 = this.group;
																					if(g557 == { }) {
																						g557 = null;
																					}
																					this.renderPath(p442,this.group);
																					var p443 = p442;
																					break;
																				default:
																					var childs224 = kid223.childNodules([]);
																					var _g224 = 0;
																					while(_g224 < childs224.length) {
																						var kid225 = childs224[_g224];
																						++_g224;
																						switch(kid225.name) {
																						case "g":
																							var g558 = this.parseGroup(kid225);
																							break;
																						case "path":
																							var p444 = { };
																							var at672 = HxOverrides.iter(kid225.attributes([]));
																							while(at672.hasNext()) {
																								var at673 = at672.next();
																								switch(at673.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at673.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p444.d = at673.value;
																									break;
																								case "fill":
																									p444.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at673.value);
																									break;
																								case "id":
																									p444.id = at673.value;
																									break;
																								case "stroke":
																									p444.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at673.value);
																									break;
																								case "stroke-width":
																									p444.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at673.value);
																									break;
																								}
																							}
																							var g559 = this.group;
																							if(g559 == { }) {
																								g559 = null;
																							}
																							this.renderPath(p444,this.group);
																							var p445 = p444;
																							break;
																						default:
																							this.parseChild(kid225);
																						}
																					}
																				}
																			}
																		}
																	}
																}
																var g560 = g547;
																break;
															case "path":
																var p446 = { };
																var at674 = HxOverrides.iter(kid220.attributes([]));
																while(at674.hasNext()) {
																	var at675 = at674.next();
																	switch(at675.name) {
																	case "_":
																		haxe_Log.trace("path attribute " + at675.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																		break;
																	case "d":
																		p446.d = at675.value;
																		break;
																	case "fill":
																		p446.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at675.value);
																		break;
																	case "id":
																		p446.id = at675.value;
																		break;
																	case "stroke":
																		p446.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at675.value);
																		break;
																	case "stroke-width":
																		p446.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at675.value);
																		break;
																	}
																}
																var g561 = this.group;
																if(g561 == { }) {
																	g561 = null;
																}
																this.renderPath(p446,this.group);
																var p447 = p446;
																break;
															default:
																var childs225 = kid220.childNodules([]);
																var _g225 = 0;
																while(_g225 < childs225.length) {
																	var kid226 = childs225[_g225];
																	++_g225;
																	switch(kid226.name) {
																	case "g":
																		var g562 = { };
																		var at676 = HxOverrides.iter(kid226.attributes([]));
																		while(at676.hasNext()) {
																			var at677 = at676.next();
																			switch(at677.name) {
																			case "fill":
																				g562.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at677.value);
																				break;
																			case "id":
																				g562.id = at677.value;
																				break;
																			case "stroke":
																				g562.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at677.value);
																				break;
																			case "stroke-width":
																				g562.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at677.value);
																				break;
																			case "transform":
																				g562.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at677.value);
																				break;
																			case "version":
																				g562.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at677.value);
																				break;
																			case "viewBox":
																				g562.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at677.value);
																				break;
																			case "xmlns":
																				g562.xmlns = at677.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at677.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g562;
																		if(kid226.firstChild != null) {
																			var childs226 = kid226.childNodules([]);
																			var _g226 = 0;
																			while(_g226 < childs226.length) {
																				var kid227 = childs226[_g226];
																				++_g226;
																				switch(kid227.name) {
																				case "g":
																					var g563 = { };
																					var at678 = HxOverrides.iter(kid227.attributes([]));
																					while(at678.hasNext()) {
																						var at679 = at678.next();
																						switch(at679.name) {
																						case "fill":
																							g563.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at679.value);
																							break;
																						case "id":
																							g563.id = at679.value;
																							break;
																						case "stroke":
																							g563.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at679.value);
																							break;
																						case "stroke-width":
																							g563.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at679.value);
																							break;
																						case "transform":
																							g563.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at679.value);
																							break;
																						case "version":
																							g563.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at679.value);
																							break;
																						case "viewBox":
																							g563.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at679.value);
																							break;
																						case "xmlns":
																							g563.xmlns = at679.value;
																							break;
																						default:
																							haxe_Log.trace("group attribute " + at679.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																						}
																					}
																					this.group = g563;
																					if(kid227.firstChild != null) {
																						var childs227 = kid227.childNodules([]);
																						var _g227 = 0;
																						while(_g227 < childs227.length) {
																							var kid228 = childs227[_g227];
																							++_g227;
																							switch(kid228.name) {
																							case "g":
																								var g564 = this.parseGroup(kid228);
																								break;
																							case "path":
																								var p448 = { };
																								var at680 = HxOverrides.iter(kid228.attributes([]));
																								while(at680.hasNext()) {
																									var at681 = at680.next();
																									switch(at681.name) {
																									case "_":
																										haxe_Log.trace("path attribute " + at681.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																										break;
																									case "d":
																										p448.d = at681.value;
																										break;
																									case "fill":
																										p448.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at681.value);
																										break;
																									case "id":
																										p448.id = at681.value;
																										break;
																									case "stroke":
																										p448.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at681.value);
																										break;
																									case "stroke-width":
																										p448.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at681.value);
																										break;
																									}
																								}
																								var g565 = this.group;
																								if(g565 == { }) {
																									g565 = null;
																								}
																								this.renderPath(p448,this.group);
																								var p449 = p448;
																								break;
																							default:
																								this.parseChild(kid228);
																							}
																						}
																					}
																					var g566 = g563;
																					break;
																				case "path":
																					var p450 = { };
																					var at682 = HxOverrides.iter(kid227.attributes([]));
																					while(at682.hasNext()) {
																						var at683 = at682.next();
																						switch(at683.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at683.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p450.d = at683.value;
																							break;
																						case "fill":
																							p450.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at683.value);
																							break;
																						case "id":
																							p450.id = at683.value;
																							break;
																						case "stroke":
																							p450.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at683.value);
																							break;
																						case "stroke-width":
																							p450.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at683.value);
																							break;
																						}
																					}
																					var g567 = this.group;
																					if(g567 == { }) {
																						g567 = null;
																					}
																					this.renderPath(p450,this.group);
																					var p451 = p450;
																					break;
																				default:
																					var childs228 = kid227.childNodules([]);
																					var _g228 = 0;
																					while(_g228 < childs228.length) {
																						var kid229 = childs228[_g228];
																						++_g228;
																						switch(kid229.name) {
																						case "g":
																							var g568 = this.parseGroup(kid229);
																							break;
																						case "path":
																							var p452 = { };
																							var at684 = HxOverrides.iter(kid229.attributes([]));
																							while(at684.hasNext()) {
																								var at685 = at684.next();
																								switch(at685.name) {
																								case "_":
																									haxe_Log.trace("path attribute " + at685.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																									break;
																								case "d":
																									p452.d = at685.value;
																									break;
																								case "fill":
																									p452.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at685.value);
																									break;
																								case "id":
																									p452.id = at685.value;
																									break;
																								case "stroke":
																									p452.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at685.value);
																									break;
																								case "stroke-width":
																									p452.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at685.value);
																									break;
																								}
																							}
																							var g569 = this.group;
																							if(g569 == { }) {
																								g569 = null;
																							}
																							this.renderPath(p452,this.group);
																							var p453 = p452;
																							break;
																						default:
																							this.parseChild(kid229);
																						}
																					}
																				}
																			}
																		}
																		var g570 = g562;
																		break;
																	case "path":
																		var p454 = { };
																		var at686 = HxOverrides.iter(kid226.attributes([]));
																		while(at686.hasNext()) {
																			var at687 = at686.next();
																			switch(at687.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at687.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p454.d = at687.value;
																				break;
																			case "fill":
																				p454.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at687.value);
																				break;
																			case "id":
																				p454.id = at687.value;
																				break;
																			case "stroke":
																				p454.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at687.value);
																				break;
																			case "stroke-width":
																				p454.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at687.value);
																				break;
																			}
																		}
																		var g571 = this.group;
																		if(g571 == { }) {
																			g571 = null;
																		}
																		this.renderPath(p454,this.group);
																		var p455 = p454;
																		break;
																	default:
																		var childs229 = kid226.childNodules([]);
																		var _g229 = 0;
																		while(_g229 < childs229.length) {
																			var kid230 = childs229[_g229];
																			++_g229;
																			switch(kid230.name) {
																			case "g":
																				var g572 = this.parseGroup(kid230);
																				break;
																			case "path":
																				var p456 = { };
																				var at688 = HxOverrides.iter(kid230.attributes([]));
																				while(at688.hasNext()) {
																					var at689 = at688.next();
																					switch(at689.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at689.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p456.d = at689.value;
																						break;
																					case "fill":
																						p456.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at689.value);
																						break;
																					case "id":
																						p456.id = at689.value;
																						break;
																					case "stroke":
																						p456.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at689.value);
																						break;
																					case "stroke-width":
																						p456.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at689.value);
																						break;
																					}
																				}
																				var g573 = this.group;
																				if(g573 == { }) {
																					g573 = null;
																				}
																				this.renderPath(p456,this.group);
																				var p457 = p456;
																				break;
																			default:
																				this.parseChild(kid230);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
											var g574 = g541;
											break;
										case "path":
											var p458 = { };
											var at690 = HxOverrides.iter(kid217.attributes([]));
											while(at690.hasNext()) {
												var at691 = at690.next();
												switch(at691.name) {
												case "_":
													haxe_Log.trace("path attribute " + at691.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
													break;
												case "d":
													p458.d = at691.value;
													break;
												case "fill":
													p458.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at691.value);
													break;
												case "id":
													p458.id = at691.value;
													break;
												case "stroke":
													p458.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at691.value);
													break;
												case "stroke-width":
													p458.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at691.value);
													break;
												}
											}
											var g575 = this.group;
											if(g575 == { }) {
												g575 = null;
											}
											this.renderPath(p458,this.group);
											var p459 = p458;
											break;
										default:
											var childs230 = kid217.childNodules([]);
											var _g230 = 0;
											while(_g230 < childs230.length) {
												var kid231 = childs230[_g230];
												++_g230;
												switch(kid231.name) {
												case "g":
													var g576 = { };
													var at692 = HxOverrides.iter(kid231.attributes([]));
													while(at692.hasNext()) {
														var at693 = at692.next();
														switch(at693.name) {
														case "fill":
															g576.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at693.value);
															break;
														case "id":
															g576.id = at693.value;
															break;
														case "stroke":
															g576.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at693.value);
															break;
														case "stroke-width":
															g576.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at693.value);
															break;
														case "transform":
															g576.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at693.value);
															break;
														case "version":
															g576.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at693.value);
															break;
														case "viewBox":
															g576.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at693.value);
															break;
														case "xmlns":
															g576.xmlns = at693.value;
															break;
														default:
															haxe_Log.trace("group attribute " + at693.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
														}
													}
													this.group = g576;
													if(kid231.firstChild != null) {
														var childs231 = kid231.childNodules([]);
														var _g231 = 0;
														while(_g231 < childs231.length) {
															var kid232 = childs231[_g231];
															++_g231;
															switch(kid232.name) {
															case "g":
																var g577 = { };
																var at694 = HxOverrides.iter(kid232.attributes([]));
																while(at694.hasNext()) {
																	var at695 = at694.next();
																	switch(at695.name) {
																	case "fill":
																		g577.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at695.value);
																		break;
																	case "id":
																		g577.id = at695.value;
																		break;
																	case "stroke":
																		g577.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at695.value);
																		break;
																	case "stroke-width":
																		g577.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at695.value);
																		break;
																	case "transform":
																		g577.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at695.value);
																		break;
																	case "version":
																		g577.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at695.value);
																		break;
																	case "viewBox":
																		g577.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at695.value);
																		break;
																	case "xmlns":
																		g577.xmlns = at695.value;
																		break;
																	default:
																		haxe_Log.trace("group attribute " + at695.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																	}
																}
																this.group = g577;
																if(kid232.firstChild != null) {
																	var childs232 = kid232.childNodules([]);
																	var _g232 = 0;
																	while(_g232 < childs232.length) {
																		var kid233 = childs232[_g232];
																		++_g232;
																		switch(kid233.name) {
																		case "g":
																			var g578 = this.parseGroup(kid233);
																			break;
																		case "path":
																			var p460 = { };
																			var at696 = HxOverrides.iter(kid233.attributes([]));
																			while(at696.hasNext()) {
																				var at697 = at696.next();
																				switch(at697.name) {
																				case "_":
																					haxe_Log.trace("path attribute " + at697.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																					break;
																				case "d":
																					p460.d = at697.value;
																					break;
																				case "fill":
																					p460.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at697.value);
																					break;
																				case "id":
																					p460.id = at697.value;
																					break;
																				case "stroke":
																					p460.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at697.value);
																					break;
																				case "stroke-width":
																					p460.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at697.value);
																					break;
																				}
																			}
																			var g579 = this.group;
																			if(g579 == { }) {
																				g579 = null;
																			}
																			this.renderPath(p460,this.group);
																			var p461 = p460;
																			break;
																		default:
																			this.parseChild(kid233);
																		}
																	}
																}
																var g580 = g577;
																break;
															case "path":
																var p462 = { };
																var at698 = HxOverrides.iter(kid232.attributes([]));
																while(at698.hasNext()) {
																	var at699 = at698.next();
																	switch(at699.name) {
																	case "_":
																		haxe_Log.trace("path attribute " + at699.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																		break;
																	case "d":
																		p462.d = at699.value;
																		break;
																	case "fill":
																		p462.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at699.value);
																		break;
																	case "id":
																		p462.id = at699.value;
																		break;
																	case "stroke":
																		p462.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at699.value);
																		break;
																	case "stroke-width":
																		p462.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at699.value);
																		break;
																	}
																}
																var g581 = this.group;
																if(g581 == { }) {
																	g581 = null;
																}
																this.renderPath(p462,this.group);
																var p463 = p462;
																break;
															default:
																var childs233 = kid232.childNodules([]);
																var _g233 = 0;
																while(_g233 < childs233.length) {
																	var kid234 = childs233[_g233];
																	++_g233;
																	switch(kid234.name) {
																	case "g":
																		var g582 = { };
																		var at700 = HxOverrides.iter(kid234.attributes([]));
																		while(at700.hasNext()) {
																			var at701 = at700.next();
																			switch(at701.name) {
																			case "fill":
																				g582.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at701.value);
																				break;
																			case "id":
																				g582.id = at701.value;
																				break;
																			case "stroke":
																				g582.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at701.value);
																				break;
																			case "stroke-width":
																				g582.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at701.value);
																				break;
																			case "transform":
																				g582.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at701.value);
																				break;
																			case "version":
																				g582.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at701.value);
																				break;
																			case "viewBox":
																				g582.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at701.value);
																				break;
																			case "xmlns":
																				g582.xmlns = at701.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at701.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g582;
																		if(kid234.firstChild != null) {
																			var childs234 = kid234.childNodules([]);
																			var _g234 = 0;
																			while(_g234 < childs234.length) {
																				var kid235 = childs234[_g234];
																				++_g234;
																				switch(kid235.name) {
																				case "g":
																					var g583 = this.parseGroup(kid235);
																					break;
																				case "path":
																					var p464 = { };
																					var at702 = HxOverrides.iter(kid235.attributes([]));
																					while(at702.hasNext()) {
																						var at703 = at702.next();
																						switch(at703.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at703.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p464.d = at703.value;
																							break;
																						case "fill":
																							p464.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at703.value);
																							break;
																						case "id":
																							p464.id = at703.value;
																							break;
																						case "stroke":
																							p464.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at703.value);
																							break;
																						case "stroke-width":
																							p464.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at703.value);
																							break;
																						}
																					}
																					var g584 = this.group;
																					if(g584 == { }) {
																						g584 = null;
																					}
																					this.renderPath(p464,this.group);
																					var p465 = p464;
																					break;
																				default:
																					this.parseChild(kid235);
																				}
																			}
																		}
																		var g585 = g582;
																		break;
																	case "path":
																		var p466 = { };
																		var at704 = HxOverrides.iter(kid234.attributes([]));
																		while(at704.hasNext()) {
																			var at705 = at704.next();
																			switch(at705.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at705.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p466.d = at705.value;
																				break;
																			case "fill":
																				p466.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at705.value);
																				break;
																			case "id":
																				p466.id = at705.value;
																				break;
																			case "stroke":
																				p466.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at705.value);
																				break;
																			case "stroke-width":
																				p466.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at705.value);
																				break;
																			}
																		}
																		var g586 = this.group;
																		if(g586 == { }) {
																			g586 = null;
																		}
																		this.renderPath(p466,this.group);
																		var p467 = p466;
																		break;
																	default:
																		var childs235 = kid234.childNodules([]);
																		var _g235 = 0;
																		while(_g235 < childs235.length) {
																			var kid236 = childs235[_g235];
																			++_g235;
																			switch(kid236.name) {
																			case "g":
																				var g587 = this.parseGroup(kid236);
																				break;
																			case "path":
																				var p468 = { };
																				var at706 = HxOverrides.iter(kid236.attributes([]));
																				while(at706.hasNext()) {
																					var at707 = at706.next();
																					switch(at707.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at707.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p468.d = at707.value;
																						break;
																					case "fill":
																						p468.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at707.value);
																						break;
																					case "id":
																						p468.id = at707.value;
																						break;
																					case "stroke":
																						p468.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at707.value);
																						break;
																					case "stroke-width":
																						p468.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at707.value);
																						break;
																					}
																				}
																				var g588 = this.group;
																				if(g588 == { }) {
																					g588 = null;
																				}
																				this.renderPath(p468,this.group);
																				var p469 = p468;
																				break;
																			default:
																				this.parseChild(kid236);
																			}
																		}
																	}
																}
															}
														}
													}
													var g589 = g576;
													break;
												case "path":
													var p470 = { };
													var at708 = HxOverrides.iter(kid231.attributes([]));
													while(at708.hasNext()) {
														var at709 = at708.next();
														switch(at709.name) {
														case "_":
															haxe_Log.trace("path attribute " + at709.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
															break;
														case "d":
															p470.d = at709.value;
															break;
														case "fill":
															p470.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at709.value);
															break;
														case "id":
															p470.id = at709.value;
															break;
														case "stroke":
															p470.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at709.value);
															break;
														case "stroke-width":
															p470.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at709.value);
															break;
														}
													}
													var g590 = this.group;
													if(g590 == { }) {
														g590 = null;
													}
													this.renderPath(p470,this.group);
													var p471 = p470;
													break;
												default:
													var childs236 = kid231.childNodules([]);
													var _g236 = 0;
													while(_g236 < childs236.length) {
														var kid237 = childs236[_g236];
														++_g236;
														switch(kid237.name) {
														case "g":
															var g591 = { };
															var at710 = HxOverrides.iter(kid237.attributes([]));
															while(at710.hasNext()) {
																var at711 = at710.next();
																switch(at711.name) {
																case "fill":
																	g591.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at711.value);
																	break;
																case "id":
																	g591.id = at711.value;
																	break;
																case "stroke":
																	g591.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at711.value);
																	break;
																case "stroke-width":
																	g591.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at711.value);
																	break;
																case "transform":
																	g591.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at711.value);
																	break;
																case "version":
																	g591.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at711.value);
																	break;
																case "viewBox":
																	g591.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at711.value);
																	break;
																case "xmlns":
																	g591.xmlns = at711.value;
																	break;
																default:
																	haxe_Log.trace("group attribute " + at711.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																}
															}
															this.group = g591;
															if(kid237.firstChild != null) {
																var childs237 = kid237.childNodules([]);
																var _g237 = 0;
																while(_g237 < childs237.length) {
																	var kid238 = childs237[_g237];
																	++_g237;
																	switch(kid238.name) {
																	case "g":
																		var g592 = { };
																		var at712 = HxOverrides.iter(kid238.attributes([]));
																		while(at712.hasNext()) {
																			var at713 = at712.next();
																			switch(at713.name) {
																			case "fill":
																				g592.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at713.value);
																				break;
																			case "id":
																				g592.id = at713.value;
																				break;
																			case "stroke":
																				g592.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at713.value);
																				break;
																			case "stroke-width":
																				g592.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at713.value);
																				break;
																			case "transform":
																				g592.transform = trilateral_parsing_svg__$Matrix_Matrix_$Impl_$.fromString(at713.value);
																				break;
																			case "version":
																				g592.version = trilateral_parsing_svg__$Version_Version_$Impl_$.fromString(at713.value);
																				break;
																			case "viewBox":
																				g592.viewBox = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString(at713.value);
																				break;
																			case "xmlns":
																				g592.xmlns = at713.value;
																				break;
																			default:
																				haxe_Log.trace("group attribute " + at713.name + " not found ",{ fileName : "trilateral/parsing/svg/Group.hx", lineNumber : 28, className : "trilateral.parsing.svg._Group.Group_Impl_", methodName : "attributeAdd"});
																			}
																		}
																		this.group = g592;
																		if(kid238.firstChild != null) {
																			var childs238 = kid238.childNodules([]);
																			var _g238 = 0;
																			while(_g238 < childs238.length) {
																				var kid239 = childs238[_g238];
																				++_g238;
																				switch(kid239.name) {
																				case "g":
																					var g593 = this.parseGroup(kid239);
																					break;
																				case "path":
																					var p472 = { };
																					var at714 = HxOverrides.iter(kid239.attributes([]));
																					while(at714.hasNext()) {
																						var at715 = at714.next();
																						switch(at715.name) {
																						case "_":
																							haxe_Log.trace("path attribute " + at715.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																							break;
																						case "d":
																							p472.d = at715.value;
																							break;
																						case "fill":
																							p472.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at715.value);
																							break;
																						case "id":
																							p472.id = at715.value;
																							break;
																						case "stroke":
																							p472.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at715.value);
																							break;
																						case "stroke-width":
																							p472.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at715.value);
																							break;
																						}
																					}
																					var g594 = this.group;
																					if(g594 == { }) {
																						g594 = null;
																					}
																					this.renderPath(p472,this.group);
																					var p473 = p472;
																					break;
																				default:
																					this.parseChild(kid239);
																				}
																			}
																		}
																		var g595 = g592;
																		break;
																	case "path":
																		var p474 = { };
																		var at716 = HxOverrides.iter(kid238.attributes([]));
																		while(at716.hasNext()) {
																			var at717 = at716.next();
																			switch(at717.name) {
																			case "_":
																				haxe_Log.trace("path attribute " + at717.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																				break;
																			case "d":
																				p474.d = at717.value;
																				break;
																			case "fill":
																				p474.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at717.value);
																				break;
																			case "id":
																				p474.id = at717.value;
																				break;
																			case "stroke":
																				p474.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at717.value);
																				break;
																			case "stroke-width":
																				p474.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at717.value);
																				break;
																			}
																		}
																		var g596 = this.group;
																		if(g596 == { }) {
																			g596 = null;
																		}
																		this.renderPath(p474,this.group);
																		var p475 = p474;
																		break;
																	default:
																		var childs239 = kid238.childNodules([]);
																		var _g239 = 0;
																		while(_g239 < childs239.length) {
																			var kid240 = childs239[_g239];
																			++_g239;
																			switch(kid240.name) {
																			case "g":
																				var g597 = this.parseGroup(kid240);
																				break;
																			case "path":
																				var p476 = { };
																				var at718 = HxOverrides.iter(kid240.attributes([]));
																				while(at718.hasNext()) {
																					var at719 = at718.next();
																					switch(at719.name) {
																					case "_":
																						haxe_Log.trace("path attribute " + at719.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																						break;
																					case "d":
																						p476.d = at719.value;
																						break;
																					case "fill":
																						p476.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at719.value);
																						break;
																					case "id":
																						p476.id = at719.value;
																						break;
																					case "stroke":
																						p476.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at719.value);
																						break;
																					case "stroke-width":
																						p476.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at719.value);
																						break;
																					}
																				}
																				var g598 = this.group;
																				if(g598 == { }) {
																					g598 = null;
																				}
																				this.renderPath(p476,this.group);
																				var p477 = p476;
																				break;
																			default:
																				this.parseChild(kid240);
																			}
																		}
																	}
																}
															}
															var g599 = g591;
															break;
														case "path":
															var p478 = { };
															var at720 = HxOverrides.iter(kid237.attributes([]));
															while(at720.hasNext()) {
																var at721 = at720.next();
																switch(at721.name) {
																case "_":
																	haxe_Log.trace("path attribute " + at721.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																	break;
																case "d":
																	p478.d = at721.value;
																	break;
																case "fill":
																	p478.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at721.value);
																	break;
																case "id":
																	p478.id = at721.value;
																	break;
																case "stroke":
																	p478.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at721.value);
																	break;
																case "stroke-width":
																	p478.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at721.value);
																	break;
																}
															}
															var g600 = this.group;
															if(g600 == { }) {
																g600 = null;
															}
															this.renderPath(p478,this.group);
															var p479 = p478;
															break;
														default:
															var childs240 = kid237.childNodules([]);
															var _g240 = 0;
															while(_g240 < childs240.length) {
																var kid241 = childs240[_g240];
																++_g240;
																switch(kid241.name) {
																case "g":
																	var g601 = this.parseGroup(kid241);
																	break;
																case "path":
																	var p480 = { };
																	var at722 = HxOverrides.iter(kid241.attributes([]));
																	while(at722.hasNext()) {
																		var at723 = at722.next();
																		switch(at723.name) {
																		case "_":
																			haxe_Log.trace("path attribute " + at723.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
																			break;
																		case "d":
																			p480.d = at723.value;
																			break;
																		case "fill":
																			p480.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at723.value);
																			break;
																		case "id":
																			p480.id = at723.value;
																			break;
																		case "stroke":
																			p480.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at723.value);
																			break;
																		case "stroke-width":
																			p480.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at723.value);
																			break;
																		}
																	}
																	var g602 = this.group;
																	if(g602 == { }) {
																		g602 = null;
																	}
																	this.renderPath(p480,this.group);
																	var p481 = p480;
																	break;
																default:
																	this.parseChild(kid241);
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		return g;
	}
	,parsePath: function(kid) {
		var p = { };
		var at = HxOverrides.iter(kid.attributes([]));
		while(at.hasNext()) {
			var at1 = at.next();
			switch(at1.name) {
			case "_":
				haxe_Log.trace("path attribute " + at1.name + " not found ",{ fileName : "trilateral/parsing/svg/Path.hx", lineNumber : 20, className : "trilateral.parsing.svg._Path.Path_Impl_", methodName : "attributeAdd"});
				break;
			case "d":
				p.d = at1.value;
				break;
			case "fill":
				p.fill = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
				break;
			case "id":
				p.id = at1.value;
				break;
			case "stroke":
				p.stroke = trilateral_parsing_svg__$SharpColor_SharpColor_$Impl_$.fromString(at1.value);
				break;
			case "stroke-width":
				p.stroke_width = trilateral_parsing_svg__$Stroke_$Width_Stroke_$Width_$Impl_$.fromString(at1.value);
				break;
			}
		}
		var g = this.group;
		if(g == { }) {
			g = null;
		}
		this.renderPath(p,this.group);
		return p;
	}
	,renderPath: function(path,group) {
		var _this = this.fillDraw;
		var id = _this.colors.indexOf(-16777216);
		if(id == -1) {
			id = _this.colors.length;
			_this.colors[id] = -16777216;
		}
		var black = id;
		var hasGroupFill = group == null ? false : group.fill != null;
		var hasPathFill = path.fill != null;
		var hasFill = hasPathFill ? true : hasGroupFill;
		var solidColor = black;
		if(hasPathFill) {
			var _this1 = this.fillDraw;
			var color = path.fill;
			var id1 = _this1.colors.indexOf(color);
			if(id1 == -1) {
				id1 = _this1.colors.length;
				_this1.colors[id1] = color;
			}
			solidColor = id1;
		} else if(hasGroupFill) {
			var _this2 = this.fillDraw;
			var color1 = group.fill;
			var id2 = _this2.colors.indexOf(color1);
			if(id2 == -1) {
				id2 = _this2.colors.length;
				_this2.colors[id2] = color1;
			}
			solidColor = id2;
		}
		var hasPathStroke = path.stroke != null;
		var hasGroupStroke = group == null ? false : group.stroke != null;
		var hasStroke = hasPathStroke ? true : hasGroupStroke;
		var lineColor = black;
		if(hasPathStroke) {
			var _this3 = this.fillDraw;
			var color2 = path.stroke;
			var id3 = _this3.colors.indexOf(color2);
			if(id3 == -1) {
				id3 = _this3.colors.length;
				_this3.colors[id3] = color2;
			}
			lineColor = id3;
		} else if(hasGroupStroke) {
			var _this4 = this.fillDraw;
			var color3 = group.stroke;
			var id4 = _this4.colors.indexOf(color3);
			if(id4 == -1) {
				id4 = _this4.colors.length;
				_this4.colors[id4] = color3;
			}
			lineColor = id4;
		}
		var hasGroupWidth = group == null ? false : group.stroke_width != null;
		var hasPathWidth = path.stroke_width != null;
		var lineWidth = 0.;
		if(hasPathWidth) {
			lineWidth = path.stroke_width;
			lineWidth /= 2;
		} else if(hasGroupStroke) {
			lineWidth = group.stroke_width;
			lineWidth /= 2;
		}
		if(hasStroke) {
			var pen = this.fillDraw.pathFactory();
			pen.width = lineWidth;
			new trilateral_justPath_SvgPath(pen).parse(path.d);
			var points = pen.pointsRewound();
			if(hasFill) {
				if(this.rnd) {
					this.fillDraw.fillRnd(points,this.fillDraw.colors.length);
				} else {
					this.fillDraw.fill(points,solidColor);
				}
			}
			var this1 = this.fillDraw.triangles;
			var id5 = this.fillDraw.count;
			var triArr = pen.trilateralArray;
			var tri;
			var _g = 0;
			while(_g < triArr.length) {
				var t = triArr[_g];
				++_g;
				if(t != null) {
					var t1 = Object.create(trilateral_tri_Triangle.prototype);
					t1.id = id5;
					t1.ax = t.ax;
					t1.ay = t.ay;
					t1.bx = t.bx;
					t1.by = t.by;
					t1.cx = t.cx;
					t1.cy = t.cy;
					t1.mark = t.mark;
					t1.depth = 0;
					t1.alpha = 1.;
					t1.colorID = lineColor;
					t1.colorA = lineColor;
					t1.colorB = lineColor;
					t1.colorC = lineColor;
					t1.windingAdjusted = t.windingAdjusted;
					tri = t1;
					this1[this1.length] = tri;
				}
			}
		} else if(hasFill) {
			var fillOnly = new trilateral_path_FillOnly();
			fillOnly.width = 1.;
			new trilateral_justPath_SvgPath(fillOnly).parse(path.d);
			var points1 = fillOnly.pointsRewound();
			if(this.rnd) {
				this.fillDraw.fillRnd(points1,this.fillDraw.colors.length);
			} else {
				this.fillDraw.fill(points1,solidColor);
			}
		}
	}
	,__class__: trilateral_parsing_svg_Svg
};
var trilateral_parsing_svg__$Version_Version_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._Version.Version_Impl_"] = trilateral_parsing_svg__$Version_Version_$Impl_$;
trilateral_parsing_svg__$Version_Version_$Impl_$.__name__ = "trilateral.parsing.svg._Version.Version_Impl_";
trilateral_parsing_svg__$Version_Version_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$Version_Version_$Impl_$.fromString = function(s) {
	var this1 = parseFloat(s);
	return this1;
};
trilateral_parsing_svg__$Version_Version_$Impl_$.major = function(this1) {
	return Math.floor(this1);
};
trilateral_parsing_svg__$Version_Version_$Impl_$.minor = function(this1) {
	return Std.parseInt(Std.string(this1 - trilateral_parsing_svg__$Version_Version_$Impl_$.major(this1)).split(".")[1]);
};
var trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$ = {};
$hxClasses["trilateral.parsing.svg._ViewBox.ViewBox_Impl_"] = trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$;
trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.__name__ = "trilateral.parsing.svg._ViewBox.ViewBox_Impl_";
trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$._new = function(val) {
	var this1 = val;
	return this1;
};
trilateral_parsing_svg__$ViewBox_ViewBox_$Impl_$.fromString = function(s) {
	var arr = s.split(" ");
	var this1 = { x : Std.parseInt(arr[0]), y : Std.parseInt(arr[1]), width : Std.parseInt(arr[2]), height : Std.parseInt(arr[3])};
	return this1;
};
var trilateral_path_Base = function(contour_,trilateralArray_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.width = 0.01;
	this.y = 0.;
	this.x = 0.;
	var tmp;
	if(trilateralArray_ == null) {
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this1 = this2;
		} else {
			this1 = t;
		}
		var this3 = this1;
		tmp = this3;
	} else {
		tmp = trilateralArray_;
	}
	this.trilateralArray = tmp;
	this.contour = contour_ == null ? new trilateral_geom_Contour(this.trilateralArray,endLine_) : contour_;
	this.endLine = endLine_;
	this.points = [];
	this.points[0] = [];
	this.dim = [];
};
$hxClasses["trilateral.path.Base"] = trilateral_path_Base;
trilateral_path_Base.__name__ = "trilateral.path.Base";
trilateral_path_Base.__interfaces__ = [trilateral_justPath_IPathContext];
trilateral_path_Base.prototype = {
	trilateralArray: null
	,x: null
	,y: null
	,width: null
	,widthFunction: null
	,tempArr: null
	,contour: null
	,endLine: null
	,points: null
	,dim: null
	,reset: function() {
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this1 = this2;
		} else {
			this1 = t;
		}
		var this3 = this1;
		this.trilateralArray = this3;
		this.contour = new trilateral_geom_Contour(this.trilateralArray,this.endLine);
		this.points = [];
		this.points[0] = [];
		this.dim = [];
	}
	,pointsNoEndOverlap: function() {
		var p;
		var l;
		var j = 0;
		var pointsClean = [];
		var _g = 0;
		var _g1 = this.points.length;
		while(_g < _g1) {
			var i = _g++;
			p = this.points[i];
			if(p.length > 2) {
				pointsClean[j++] = p;
			}
		}
		this.points = pointsClean;
		var _g2 = 0;
		var _g3 = this.points.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			p = this.points[i1];
			l = p.length;
			var repeat = p[0] == p[l - 2] && p[1] == p[l - 1];
			if(repeat) {
				this.points[i1].pop();
				this.points[i1].pop();
				l -= 2;
			}
		}
		return this.points;
	}
	,pointsRewound: function() {
		var p;
		var l;
		var j = 0;
		var pointsClean = [];
		var _g = 0;
		var _g1 = this.points.length;
		while(_g < _g1) {
			var i = _g++;
			p = this.points[i];
			if(p.length > 2) {
				pointsClean[j++] = p;
			}
		}
		this.points = pointsClean;
		var _g2 = 0;
		var _g3 = this.points.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			p = this.points[i1];
			l = p.length;
			var repeat = p[0] == p[l - 2] && p[1] == p[l - 1];
			if(repeat) {
				this.points[i1].pop();
				this.points[i1].pop();
				l -= 2;
			}
			var cc = 0.;
			var k = 0;
			var x1;
			var y1;
			var x2;
			var y2;
			var last = l - 2;
			while(k < l) {
				x1 = p[k];
				y1 = p[k + 1];
				if(k == last) {
					x2 = p[0];
					y2 = p[1];
				} else {
					x2 = p[k + 2];
					y2 = p[k + 3];
				}
				cc += (x2 - x1) * (y2 + y1);
				k += 2;
			}
			var reverse = cc > 0;
			if(reverse) {
				k = 0;
				while(k < l) {
					x1 = p[k];
					p[k] = p[k + 1];
					p[k + 1] = x1;
					k += 2;
				}
			}
			p.reverse();
			this.points[i1] = p;
		}
		return this.points;
	}
	,initDim: function() {
		return { minX : Infinity, maxX : -Infinity, minY : Infinity, maxY : -Infinity};
	}
	,updateDim: function(x,y) {
		var d = this.dim[this.dim.length - 1];
		if(x < d.minX) {
			d.minX = x;
		}
		if(x > d.maxX) {
			d.maxX = x;
		}
		if(y < d.minY) {
			d.minY = y;
		}
		if(y > d.maxY) {
			d.maxY = y;
		}
	}
	,moveTo: function(x_,y_) {
		if(this.endLine == 2 || this.endLine == 3) {
			var _this = this.contour;
			var ax = _this.bx;
			var ay = _this.by;
			var radius = this.width / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 - Math.PI;
			var this1 = _this.triArr;
			var t = [];
			var this2;
			if(t == null) {
				var t1 = [];
				var this3;
				if(t1 == null) {
					var t2 = [];
					var this4;
					if(t2 == null) {
						var t3 = [];
						var this5 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
						this4 = this5;
					} else {
						this4 = t2;
					}
					this3 = this4;
				} else {
					this3 = t1;
				}
				this2 = this3;
			} else {
				this2 = t;
			}
			var this6 = this2;
			var out = this6;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f;
				if(beta >= 0 && beta > Math.PI) {
					f = beta;
				} else {
					var a = beta % (2 * Math.PI);
					f = a >= 0 ? a : a + 2 * Math.PI;
				}
				var this7 = f;
				var za = this7;
				var f1;
				if(gamma >= 0 && gamma > Math.PI) {
					f1 = gamma;
				} else {
					var a1 = gamma % (2 * Math.PI);
					f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
				}
				var this8 = f1;
				var zb = this8;
				var fa = za;
				var fb = zb;
				var theta = Math.abs(beta - gamma);
				var clockwise = beta < gamma;
				var dif1 = clockwise ? theta : -theta;
				dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
				break;
			case 1:
				var f2;
				if(beta >= 0 && beta > Math.PI) {
					f2 = beta;
				} else {
					var a2 = beta % (2 * Math.PI);
					f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
				}
				var this9 = f2;
				var za1 = this9;
				var f3;
				if(gamma >= 0 && gamma > Math.PI) {
					f3 = gamma;
				} else {
					var a3 = gamma % (2 * Math.PI);
					f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
				}
				var this10 = f3;
				var zb1 = this10;
				var fa1 = za1;
				var fb1 = zb1;
				var theta1 = Math.abs(beta - gamma);
				var clockwise1 = beta < gamma;
				var dif2 = clockwise1 ? theta1 : -theta1;
				dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
				break;
			case 2:
				var f4;
				if(beta >= 0 && beta > Math.PI) {
					f4 = beta;
				} else {
					var a4 = beta % (2 * Math.PI);
					f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
				}
				var this11 = f4;
				var za2 = this11;
				var f5;
				if(gamma >= 0 && gamma > Math.PI) {
					f5 = gamma;
				} else {
					var a5 = gamma % (2 * Math.PI);
					f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
				}
				var this12 = f5;
				var zb2 = this12;
				var fa2 = beta;
				var fb2 = gamma;
				var theta2 = Math.abs(beta - gamma);
				var smallest = theta2 <= Math.PI;
				var clockwise2 = beta < gamma;
				var dif3 = clockwise2 ? theta2 : -theta2;
				dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
				break;
			case 3:
				var f6;
				if(beta >= 0 && beta > Math.PI) {
					f6 = beta;
				} else {
					var a6 = beta % (2 * Math.PI);
					f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
				}
				var this13 = f6;
				var za3 = this13;
				var f7;
				if(gamma >= 0 && gamma > Math.PI) {
					f7 = gamma;
				} else {
					var a7 = gamma % (2 * Math.PI);
					f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
				}
				var this14 = f7;
				var zb3 = this14;
				var fa3 = beta;
				var fb3 = gamma;
				var theta3 = Math.abs(beta - gamma);
				var largest = theta3 > Math.PI;
				var clockwise3 = beta < gamma;
				var dif4 = clockwise3 ? theta3 : -theta3;
				dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
				break;
			}
			var positive = dif >= 0;
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(i != 0) {
					var t4 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t4;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t5 = triArr[_g2];
				++_g2;
				this1[this1.length] = t5;
			}
		}
		this.x = x_;
		this.y = y_;
		var l = this.points.length;
		this.points[l] = [];
		this.points[l][0] = x_;
		this.points[l][1] = y_;
		this.dim[this.dim.length] = { minX : Infinity, maxX : -Infinity, minY : Infinity, maxY : -Infinity};
		var d = this.dim[this.dim.length - 1];
		if(x_ < d.minX) {
			d.minX = x_;
		}
		if(x_ > d.maxX) {
			d.maxX = x_;
		}
		if(y_ < d.minY) {
			d.minY = y_;
		}
		if(y_ > d.maxY) {
			d.maxY = y_;
		}
		this.contour.reset();
	}
	,lineTo: function(x_,y_) {
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l = this.points.length;
			var p = this.points[l - 1];
			var l2 = p.length;
			p[l2] = x_;
			p[l2 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
	}
	,line: function(x_,y_) {
		haxe_Log.trace("lineTo( " + this.x + ", " + this.y + ", " + x_ + ", " + y_ + ", width )",{ fileName : "trilateral/path/Base.hx", lineNumber : 196, className : "trilateral.path.Base", methodName : "lineTrace"});
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.halfA = Math.PI / 2;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var dxPrev_ = _this.dx;
		var dyPrev_ = _this.dy;
		var exPrev_ = _this.ex;
		var eyPrev_ = _this.ey;
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var this1 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,exPrev_,eyPrev_,0);
		this1[this1.length] = tri;
		var this2 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this2[this2.length] = tri1;
	}
	,lineTrace: function(x_,y_) {
		haxe_Log.trace("lineTo( " + this.x + ", " + this.y + ", " + x_ + ", " + y_ + ", width )",{ fileName : "trilateral/path/Base.hx", lineNumber : 196, className : "trilateral.path.Base", methodName : "lineTrace"});
	}
	,quadTo: function(x1,y1,x2,y2) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x3 = x1 - x2;
		var y3 = y1 - y2;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x3 * x3 + y3 * y3);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,2) * ax + 2 * u * t * x1 + Math.pow(t,2) * x2;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * y1 + Math.pow(t,2) * y2;
			t += step;
		}
		p[l++] = x2;
		p[l++] = y2;
		var arr = this.tempArr;
		var l1 = arr.length;
		var i = 2;
		var x_ = arr[0];
		var y_ = arr[1];
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l2 = this.points.length;
			var p1 = this.points[l2 - 1];
			var l21 = p1.length;
			p1[l21] = x_;
			p1[l21 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
		while(i < l1) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p2 = this.points[l3 - 1];
				var l22 = p2.length;
				p2[l22] = x_1;
				p2[l22 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
		this.x = x2;
		this.y = y2;
	}
	,quadThru: function(x1,y1,x2,y2) {
		var newx = 2 * x1 - 0.5 * (this.x + x2);
		var newy = 2 * y1 - 0.5 * (this.y + y2);
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - newx;
		var y = ay - newy;
		var x3 = newx - x2;
		var y3 = newy - y2;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x3 * x3 + y3 * y3);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,2) * ax + 2 * u * t * newx + Math.pow(t,2) * x2;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * newy + Math.pow(t,2) * y2;
			t += step;
		}
		p[l++] = x2;
		p[l++] = y2;
		var arr = this.tempArr;
		var l1 = arr.length;
		var i = 2;
		var x_ = arr[0];
		var y_ = arr[1];
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l2 = this.points.length;
			var p1 = this.points[l2 - 1];
			var l21 = p1.length;
			p1[l21] = x_;
			p1[l21 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
		while(i < l1) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p2 = this.points[l3 - 1];
				var l22 = p2.length;
				p2[l22] = x_1;
				p2[l22 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
		this.x = x2;
		this.y = y2;
		return;
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x4 = x1 - x2;
		var y4 = y1 - y2;
		var x5 = x2 - x3;
		var y5 = y2 - y3;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x4 * x4 + y4 * y4) + Math.sqrt(x5 * x5 + y5 * y5);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,3) * ax + 3 * Math.pow(u,2) * t * x1 + 3 * u * Math.pow(t,2) * x2 + Math.pow(t,3) * x3;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,3) * ay + 3 * Math.pow(u1,2) * t * y1 + 3 * u1 * Math.pow(t,2) * y2 + Math.pow(t,3) * y3;
			t += step;
		}
		p[l++] = x3;
		p[l++] = y3;
		var arr = this.tempArr;
		var l1 = arr.length;
		var i = 2;
		var x_ = arr[0];
		var y_ = arr[1];
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l2 = this.points.length;
			var p1 = this.points[l2 - 1];
			var l21 = p1.length;
			p1[l21] = x_;
			p1[l21 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
		while(i < l1) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p2 = this.points[l3 - 1];
				var l22 = p2.length;
				p2[l22] = x_1;
				p2[l22 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
		this.x = x3;
		this.y = y3;
	}
	,plotCoord: function(arr,withMove) {
		if(withMove == null) {
			withMove = true;
		}
		var l = arr.length;
		var i = 2;
		if(withMove) {
			this.moveTo(arr[0],arr[1]);
		} else {
			var x_ = arr[0];
			var y_ = arr[1];
			var repeat = this.x == x_ && this.y == y_;
			if(!repeat) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
				}
				this.line(x_,y_);
				var l1 = this.points.length;
				var p = this.points[l1 - 1];
				var l2 = p.length;
				p[l2] = x_;
				p[l2 + 1] = y_;
				var d = this.dim[this.dim.length - 1];
				if(x_ < d.minX) {
					d.minX = x_;
				}
				if(x_ > d.maxX) {
					d.maxX = x_;
				}
				if(y_ < d.minY) {
					d.minY = y_;
				}
				if(y_ > d.maxY) {
					d.maxY = y_;
				}
				this.x = x_;
				this.y = y_;
			}
		}
		while(i < l) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p1 = this.points[l3 - 1];
				var l21 = p1.length;
				p1[l21] = x_1;
				p1[l21 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
	}
	,__class__: trilateral_path_Base
};
var trilateral_path_Crude = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.Crude"] = trilateral_path_Crude;
trilateral_path_Crude.__name__ = "trilateral.path.Crude";
trilateral_path_Crude.__super__ = trilateral_path_Base;
trilateral_path_Crude.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.halfA = Math.PI / 2;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var dxPrev_ = _this.dx;
		var dyPrev_ = _this.dy;
		var exPrev_ = _this.ex;
		var eyPrev_ = _this.ey;
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var this1 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,exPrev_,eyPrev_,0);
		this1[this1.length] = tri;
		var this2 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this2[this2.length] = tri1;
	}
	,__class__: trilateral_path_Crude
});
var trilateral_path_FillOnly = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.FillOnly"] = trilateral_path_FillOnly;
trilateral_path_FillOnly.__name__ = "trilateral.path.FillOnly";
trilateral_path_FillOnly.__super__ = trilateral_path_Base;
trilateral_path_FillOnly.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
	}
	,__class__: trilateral_path_FillOnly
});
var trilateral_path_Fine = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
$hxClasses["trilateral.path.Fine"] = trilateral_path_Fine;
trilateral_path_Fine.__name__ = "trilateral.path.Fine";
trilateral_path_Fine.__super__ = trilateral_path_Base;
trilateral_path_Fine.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		var oldAngle = _this.dx != null ? _this.angle1 : null;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
		}
		var dif;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f = theta0;
			} else {
				var a = theta0 % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this1 = f;
			var za = this1;
			var f1;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f1 = theta1;
			} else {
				var a1 = theta1 % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this2 = f1;
			var zb = this2;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(theta0 - theta1);
			var clockwise = theta0 < theta1;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f2 = theta0;
			} else {
				var a2 = theta0 % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this3 = f2;
			var za1 = this3;
			var f3;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f3 = theta1;
			} else {
				var a3 = theta1 % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this4 = f3;
			var zb1 = this4;
			var fa1 = za1;
			var fb1 = zb1;
			var theta2 = Math.abs(theta0 - theta1);
			var clockwise1 = theta0 < theta1;
			var dif2 = clockwise1 ? theta2 : -theta2;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f4 = theta0;
			} else {
				var a4 = theta0 % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this5 = f4;
			var za2 = this5;
			var f5;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f5 = theta1;
			} else {
				var a5 = theta1 % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this6 = f5;
			var zb2 = this6;
			var fa2 = theta0;
			var fb2 = theta1;
			var theta3 = Math.abs(theta0 - theta1);
			var smallest = theta3 <= Math.PI;
			var clockwise2 = theta0 < theta1;
			var dif3 = clockwise2 ? theta3 : -theta3;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		case 3:
			var f6;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f6 = theta0;
			} else {
				var a6 = theta0 % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this7 = f6;
			var za3 = this7;
			var f7;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f7 = theta1;
			} else {
				var a7 = theta1 % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this8 = f7;
			var zb3 = this8;
			var fa3 = theta0;
			var fb3 = theta1;
			var theta4 = Math.abs(theta0 - theta1);
			var largest = theta4 > Math.PI;
			var clockwise3 = theta0 < theta1;
			var dif4 = clockwise3 ? theta4 : -theta4;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta4) : 2 * Math.PI - theta4;
			break;
		}
		if(_this.count != 0) {
			var gamma = Math.abs(dif) / 2;
			var h = width_ * Math.sin(gamma);
			var f8;
			if(theta0 <= Math.PI && theta0 > -Math.PI) {
				f8 = theta0;
			} else {
				var a8 = (theta0 + Math.PI) % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 - Math.PI : a8 + Math.PI;
			}
			var this9 = f8;
			var start = this9;
			var start2 = start;
			var delta = start2 + dif / 2 + Math.PI;
			_this.jx = _this.ax + h * Math.sin(delta);
			_this.jy = _this.ay + h * Math.cos(delta);
		}
		if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
			var ax = _this.ax;
			var ay = _this.ay;
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma1 = -_this.angle1 - Math.PI / 2 + Math.PI;
			var this10 = _this.triArr;
			var t = [];
			var this11;
			if(t == null) {
				var t1 = [];
				var this12;
				if(t1 == null) {
					var t2 = [];
					var this13;
					if(t2 == null) {
						var t3 = [];
						var this14 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
						this13 = this14;
					} else {
						this13 = t2;
					}
					this12 = this13;
				} else {
					this12 = t1;
				}
				this11 = this12;
			} else {
				this11 = t;
			}
			var this15 = this11;
			var out = this15;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif5;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f9;
				if(beta >= 0 && beta > Math.PI) {
					f9 = beta;
				} else {
					var a9 = beta % (2 * Math.PI);
					f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
				}
				var this16 = f9;
				var za4 = this16;
				var f10;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f10 = gamma1;
				} else {
					var a10 = gamma1 % (2 * Math.PI);
					f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
				}
				var this17 = f10;
				var zb4 = this17;
				var fa4 = za4;
				var fb4 = zb4;
				var theta5 = Math.abs(beta - gamma1);
				var clockwise4 = beta < gamma1;
				var dif6 = clockwise4 ? theta5 : -theta5;
				dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
				break;
			case 1:
				var f11;
				if(beta >= 0 && beta > Math.PI) {
					f11 = beta;
				} else {
					var a11 = beta % (2 * Math.PI);
					f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
				}
				var this18 = f11;
				var za5 = this18;
				var f12;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f12 = gamma1;
				} else {
					var a12 = gamma1 % (2 * Math.PI);
					f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
				}
				var this19 = f12;
				var zb5 = this19;
				var fa5 = za5;
				var fb5 = zb5;
				var theta6 = Math.abs(beta - gamma1);
				var clockwise5 = beta < gamma1;
				var dif7 = clockwise5 ? theta6 : -theta6;
				dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
				break;
			case 2:
				var f13;
				if(beta >= 0 && beta > Math.PI) {
					f13 = beta;
				} else {
					var a13 = beta % (2 * Math.PI);
					f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
				}
				var this20 = f13;
				var za6 = this20;
				var f14;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f14 = gamma1;
				} else {
					var a14 = gamma1 % (2 * Math.PI);
					f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
				}
				var this21 = f14;
				var zb6 = this21;
				var fa6 = beta;
				var fb6 = gamma1;
				var theta7 = Math.abs(beta - gamma1);
				var smallest1 = theta7 <= Math.PI;
				var clockwise6 = beta < gamma1;
				var dif8 = clockwise6 ? theta7 : -theta7;
				dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
				break;
			case 3:
				var f15;
				if(beta >= 0 && beta > Math.PI) {
					f15 = beta;
				} else {
					var a15 = beta % (2 * Math.PI);
					f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
				}
				var this22 = f15;
				var za7 = this22;
				var f16;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f16 = gamma1;
				} else {
					var a16 = gamma1 % (2 * Math.PI);
					f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
				}
				var this23 = f16;
				var zb7 = this23;
				var fa7 = beta;
				var fb7 = gamma1;
				var theta8 = Math.abs(beta - gamma1);
				var largest1 = theta8 > Math.PI;
				var clockwise7 = beta < gamma1;
				var dif9 = clockwise7 ? theta8 : -theta8;
				dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta8) : 2 * Math.PI - theta8;
				break;
			}
			var positive = dif5 >= 0;
			var totalSteps = Math.ceil(Math.abs(dif5) / step);
			var step1 = dif5 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				if(i != 0) {
					var t4 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t4;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t5 = triArr[_g2];
				++_g2;
				this10[this10.length] = t5;
			}
		}
		var radius1 = width_ / 2;
		var t6 = [];
		var this24;
		if(t6 == null) {
			var t7 = [];
			var this25;
			if(t7 == null) {
				var t8 = [];
				var this26;
				if(t8 == null) {
					var t9 = [];
					var this27 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
					this26 = this27;
				} else {
					this26 = t8;
				}
				this25 = this26;
			} else {
				this25 = t7;
			}
			this24 = this25;
		} else {
			this24 = t6;
		}
		var this28 = this24;
		var out1 = this28;
		var pi1 = Math.PI;
		var step2 = pi1 * 2 / 36;
		var positive1 = dif >= 0;
		var totalSteps1 = Math.ceil(Math.abs(dif) / step2);
		var step3 = dif / totalSteps1;
		var angle1 = theta0;
		var cx1;
		var cy1;
		var bx1 = 0;
		var by1 = 0;
		var _g3 = 0;
		var _g11 = totalSteps1 + 1;
		while(_g3 < _g11) {
			var i1 = _g3++;
			cx1 = ax_ + radius1 * Math.sin(angle1);
			cy1 = ay_ + radius1 * Math.cos(angle1);
			if(i1 != 0) {
				var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
				out1[out1.length] = t10;
			}
			angle1 += step3;
			bx1 = cx1;
			by1 = cy1;
		}
		var trilateralArray = out1;
		var this29 = _this.triArr;
		var _g4 = 0;
		while(_g4 < trilateralArray.length) {
			var t11 = trilateralArray[_g4];
			++_g4;
			this29[this29.length] = t11;
		}
		if(_this.count != 0) {
			if(clockWise && !_this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.jxOld,_this.jyOld);
				}
				_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.kbx,_this.kby,_this.jx,_this.jy);
			}
			if(clockWise && _this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.kbx,_this.kby,_this.jx,_this.jy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.kbx,_this.kby,_this.jx,_this.jy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.nbx,_this.nby,_this.ncx,_this.ncy);
				}
			}
			if(!clockWise && !_this.lastClock) {
				_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.jx,_this.jy,_this.kcx,_this.kcy);
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.jxOld,_this.jyOld);
				}
			}
			if(!clockWise && _this.lastClock) {
				if(_this.count == 1) {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.kax,_this.kay,_this.jx,_this.jy,_this.kcx,_this.kcy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.nax,_this.nay,_this.jx,_this.jy,_this.ncx,_this.ncy);
				} else {
					_this.triArr[_this.quadIndex] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.jx,_this.jy,_this.kcx,_this.kcy);
					_this.triArr[_this.quadIndex + 1] = new trilateral_tri_Trilateral(_this.jxOld,_this.jyOld,_this.jx,_this.jy,_this.ncx,_this.ncy);
				}
			}
		}
		_this.quadIndex = _this.triArr.length;
		if(_this.count == 0) {
			var this30 = _this.triArr;
			var tri = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
			this30[this30.length] = tri;
			var this31 = _this.triArr;
			var tri1 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
			this31[this31.length] = tri1;
		} else {
			if(clockWise && !_this.lastClock) {
				var this32 = _this.triArr;
				var tri2 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this32[this32.length] = tri2;
				var this33 = _this.triArr;
				var tri3 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this33[this33.length] = tri3;
			}
			if(clockWise && _this.lastClock) {
				var this34 = _this.triArr;
				var tri4 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this34[this34.length] = tri4;
				var this35 = _this.triArr;
				var tri5 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this35[this35.length] = tri5;
			}
			if(!clockWise && !_this.lastClock) {
				var this36 = _this.triArr;
				var tri6 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.jx,_this.jy,0);
				this36[this36.length] = tri6;
				var this37 = _this.triArr;
				var tri7 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this37[this37.length] = tri7;
			}
			if(!clockWise && _this.lastClock) {
				var this38 = _this.triArr;
				var tri8 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this38[this38.length] = tri8;
				var this39 = _this.triArr;
				var tri9 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,_this.ex,_this.ey,0);
				this39[this39.length] = tri9;
			}
		}
		_this.nax = _this.dxPrev;
		_this.nay = _this.dyPrev;
		_this.nbx = _this.dx;
		_this.nby = _this.dy;
		_this.ncx = _this.exPrev;
		_this.ncy = _this.eyPrev;
		_this.kax = _this.dxPrev;
		_this.kay = _this.dyPrev;
		_this.kbx = _this.dx;
		_this.kby = _this.dy;
		_this.kcx = _this.ex;
		_this.kcy = _this.ey;
		if(_this.count != 0) {
			if(clockWise) {
				var this40 = _this.triArr;
				var tri10 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxOld,_this.dyOld,_this.jx,_this.jy,0);
				this40[this40.length] = tri10;
				var this41 = _this.triArr;
				var tri11 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exPrev,_this.eyPrev,_this.jx,_this.jy,0);
				this41[this41.length] = tri11;
			} else {
				var this42 = _this.triArr;
				var tri12 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exOld,_this.eyOld,_this.jx,_this.jy,0);
				this42[this42.length] = tri12;
				var this43 = _this.triArr;
				var tri13 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,0);
				this43[this43.length] = tri13;
			}
		}
		_this.jxOld = _this.jx;
		_this.jyOld = _this.jy;
		_this.lastClock = clockWise;
		_this.count++;
	}
	,__class__: trilateral_path_Fine
});
var trilateral_polys_Poly = function() { };
$hxClasses["trilateral.polys.Poly"] = trilateral_polys_Poly;
trilateral_polys_Poly.__name__ = "trilateral.polys.Poly";
trilateral_polys_Poly.circle = function(ax,ay,radius,sides,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var theta = pi / 2 + omega;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.ellipse = function(ax,ay,rx,ry,sides) {
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + rx * Math.sin(theta);
		by = ay + ry * Math.cos(theta);
		theta += step;
		cx = ax + rx * Math.sin(theta);
		cy = ay + ry * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.pie = function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var dif;
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this4 = f;
		var za = this4;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this5 = f1;
		var zb = this5;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this6 = f2;
		var za1 = this6;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this7 = f3;
		var zb1 = this7;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(beta - gamma);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this8 = f4;
		var za2 = this8;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this9 = f5;
		var zb2 = this9;
		var fa2 = beta;
		var fb2 = gamma;
		var theta2 = Math.abs(beta - gamma);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this10 = f6;
		var za3 = this10;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this11 = f7;
		var zb3 = this11;
		var fa3 = beta;
		var fb3 = gamma;
		var theta3 = Math.abs(beta - gamma);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		if(i != 0) {
			var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t2;
			if(mark != 0) {
				t2.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.ellpisePie = function(ax,ay,rx,ry,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var dif;
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this4 = f;
		var za = this4;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this5 = f1;
		var zb = this5;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this6 = f2;
		var za1 = this6;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this7 = f3;
		var zb1 = this7;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(beta - gamma);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this8 = f4;
		var za2 = this8;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this9 = f5;
		var zb2 = this9;
		var fa2 = beta;
		var fb2 = gamma;
		var theta2 = Math.abs(beta - gamma);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this10 = f6;
		var za3 = this10;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this11 = f7;
		var zb3 = this11;
		var fa3 = beta;
		var fb3 = gamma;
		var theta3 = Math.abs(beta - gamma);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + rx * Math.sin(angle);
		cy = ay + ry * Math.cos(angle);
		if(i != 0) {
			var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t2;
			if(mark != 0) {
				t2.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.pieDif = function(ax,ay,radius,beta,dif,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		if(i != 0) {
			var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t2;
			if(mark != 0) {
				t2.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.arc = function(ax,ay,radius,width,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var dif;
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this4 = f;
		var za = this4;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this5 = f1;
		var zb = this5;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this6 = f2;
		var za1 = this6;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this7 = f3;
		var zb1 = this7;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(beta - gamma);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this8 = f4;
		var za2 = this8;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this9 = f5;
		var zb2 = this9;
		var fa2 = beta;
		var fb2 = gamma;
		var theta2 = Math.abs(beta - gamma);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this10 = f6;
		var za3 = this10;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this11 = f7;
		var zb3 = this11;
		var fa3 = beta;
		var fb3 = gamma;
		var theta3 = Math.abs(beta - gamma);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var dx = 0;
	var dy = 0;
	var ex = 0;
	var ey = 0;
	var r2 = radius - width;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		ex = ax + r2 * Math.sin(angle);
		ey = ay + r2 * Math.cos(angle);
		if(i != 0) {
			var t0 = new trilateral_tri_Trilateral(dx,dy,bx,by,cx,cy);
			var t11 = new trilateral_tri_Trilateral(dx,dy,cx,cy,ex,ey);
			out[out.length] = t0;
			out[out.length] = t11;
			if(mark != 0) {
				t0.mark = mark;
				t11.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
		dx = ex;
		dy = ey;
	}
	return out;
};
trilateral_polys_Poly.circleMarked = function(ax,ay,radius,mark,sides,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var theta = pi / 2 + omega;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = t2;
		t2.mark = mark;
	}
	return out;
};
trilateral_polys_Poly.circleOnSide = function(ax,ay,radius,sides,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	theta -= step / 2 + omega;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.ellipseOnSide = function(ax,ay,rx,ry,sides) {
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	theta -= step / 2;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + rx * Math.sin(theta);
		by = ay + rx * Math.cos(theta);
		theta += step;
		cx = ax + rx * Math.sin(theta);
		cy = ay + ry * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.shape = function(x,y,radius,p,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if((p & 1) == 0) {
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this1 = this2;
		} else {
			this1 = t;
		}
		var this3 = this1;
		var out = this3;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / p;
		theta -= step / 2 + omega;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = p;
		while(_g < _g1) {
			var i = _g++;
			bx = x + radius * Math.sin(theta);
			by = y + radius * Math.cos(theta);
			theta += step;
			cx = x + radius * Math.sin(theta);
			cy = y + radius * Math.cos(theta);
			var tri = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = tri;
		}
		return out;
	} else {
		var t2 = [];
		var this4;
		if(t2 == null) {
			var t3 = [];
			var this5 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
			this4 = this5;
		} else {
			this4 = t2;
		}
		var this6 = this4;
		var out1 = this6;
		var pi1 = Math.PI;
		var theta1 = pi1 / 2 + omega;
		var step1 = pi1 * 2 / p;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g2 = 0;
		var _g11 = p;
		while(_g2 < _g11) {
			var i1 = _g2++;
			bx1 = x + radius * Math.sin(theta1);
			by1 = y + radius * Math.cos(theta1);
			theta1 += step1;
			cx1 = x + radius * Math.sin(theta1);
			cy1 = y + radius * Math.cos(theta1);
			var tri1 = new trilateral_tri_Trilateral(x,y,bx1,by1,cx1,cy1);
			out1[out1.length] = tri1;
		}
		return out1;
	}
};
trilateral_polys_Poly.roundedRectangle = function(x,y,width,height,radius) {
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var pi_2 = Math.PI / 2;
	var ax = x + radius;
	var ay = y + radius;
	var bx = x + width - radius;
	var by = y + radius;
	var cx = bx;
	var cy = y + height - radius;
	var dx = ax;
	var dy = cy;
	var ax1 = ax;
	var ay1 = y;
	var bx1 = ax + (width - radius * 2);
	var by1 = ay1;
	var cx1 = bx1;
	var cy1 = ay1 + height;
	var dx1 = ax;
	var dy1 = cy1;
	var tp_t0 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,dx1,dy1);
	var tp_t1 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,dx1,dy1);
	out[out.length] = tp_t0;
	out[out.length] = tp_t1;
	var dimY = height - 2 * radius;
	var ax2 = x;
	var ay2 = ay;
	var bx2 = x + radius;
	var by2 = ay2;
	var cx2 = bx2;
	var cy2 = ay2 + dimY;
	var dx2 = x;
	var dy2 = cy2;
	var tp_t01 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2);
	var tp_t11 = new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2);
	out[out.length] = tp_t01;
	out[out.length] = tp_t11;
	var ax3 = bx;
	var ay3 = by;
	var bx3 = bx + radius;
	var by3 = ay3;
	var cx3 = bx3;
	var cy3 = ay3 + dimY;
	var dx3 = bx;
	var dy3 = cy3;
	var tp_t02 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,dx3,dy3);
	var tp_t12 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,dx3,dy3);
	out[out.length] = tp_t02;
	out[out.length] = tp_t12;
	var beta = -pi;
	var gamma = -pi_2;
	var t2 = [];
	var this4;
	if(t2 == null) {
		var t3 = [];
		var this5;
		if(t3 == null) {
			var t4 = [];
			var this6;
			if(t4 == null) {
				var t5 = [];
				var this7 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
				this6 = this7;
			} else {
				this6 = t4;
			}
			this5 = this6;
		} else {
			this5 = t3;
		}
		this4 = this5;
	} else {
		this4 = t2;
	}
	var this8 = this4;
	var out1 = this8;
	var pi1 = Math.PI;
	var step = pi1 * 2 / 36;
	var dif;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this9 = f;
		var za = this9;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this10 = f1;
		var zb = this10;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this11 = f2;
		var za1 = this11;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this12 = f3;
		var zb1 = this12;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(beta - gamma);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this13 = f4;
		var za2 = this13;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this14 = f5;
		var zb2 = this14;
		var fa2 = beta;
		var fb2 = gamma;
		var theta2 = Math.abs(beta - gamma);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this15 = f6;
		var za3 = this15;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this16 = f7;
		var zb3 = this16;
		var fa3 = beta;
		var fb3 = gamma;
		var theta3 = Math.abs(beta - gamma);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx4;
	var cy4;
	var bx4 = 0;
	var by4 = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx4 = ax + radius * Math.sin(angle);
		cy4 = ay + radius * Math.cos(angle);
		if(i != 0) {
			var t6 = new trilateral_tri_Trilateral(ax,ay,bx4,by4,cx4,cy4);
			out1[out1.length] = t6;
		}
		angle += step1;
		bx4 = cx4;
		by4 = cy4;
	}
	var triArr = out1;
	var _g2 = 0;
	while(_g2 < triArr.length) {
		var t7 = triArr[_g2];
		++_g2;
		out[out.length] = t7;
	}
	var t8 = [];
	var this17;
	if(t8 == null) {
		var t9 = [];
		var this18;
		if(t9 == null) {
			var t10 = [];
			var this19;
			if(t10 == null) {
				var t11 = [];
				var this20 = t11 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t11;
				this19 = this20;
			} else {
				this19 = t10;
			}
			this18 = this19;
		} else {
			this18 = t9;
		}
		this17 = this18;
	} else {
		this17 = t8;
	}
	var this21 = this17;
	var out2 = this21;
	var pi2 = Math.PI;
	var step2 = pi2 * 2 / 36;
	var dif5;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f8;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f8 = pi_2;
		} else {
			var a8 = pi_2 % (2 * Math.PI);
			f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
		}
		var this22 = f8;
		var za4 = this22;
		var f9;
		if(pi >= 0 && pi > Math.PI) {
			f9 = pi;
		} else {
			var a9 = pi % (2 * Math.PI);
			f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
		}
		var this23 = f9;
		var zb4 = this23;
		var fa4 = za4;
		var fb4 = zb4;
		var theta4 = Math.abs(pi_2 - pi);
		var clockwise4 = pi_2 < pi;
		var dif6 = clockwise4 ? theta4 : -theta4;
		dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
		break;
	case 1:
		var f10;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f10 = pi_2;
		} else {
			var a10 = pi_2 % (2 * Math.PI);
			f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
		}
		var this24 = f10;
		var za5 = this24;
		var f11;
		if(pi >= 0 && pi > Math.PI) {
			f11 = pi;
		} else {
			var a11 = pi % (2 * Math.PI);
			f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
		}
		var this25 = f11;
		var zb5 = this25;
		var fa5 = za5;
		var fb5 = zb5;
		var theta5 = Math.abs(pi_2 - pi);
		var clockwise5 = pi_2 < pi;
		var dif7 = clockwise5 ? theta5 : -theta5;
		dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
		break;
	case 2:
		var f12;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f12 = pi_2;
		} else {
			var a12 = pi_2 % (2 * Math.PI);
			f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
		}
		var this26 = f12;
		var za6 = this26;
		var f13;
		if(pi >= 0 && pi > Math.PI) {
			f13 = pi;
		} else {
			var a13 = pi % (2 * Math.PI);
			f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
		}
		var this27 = f13;
		var zb6 = this27;
		var fa6 = pi_2;
		var fb6 = pi;
		var theta6 = Math.abs(pi_2 - pi);
		var smallest1 = theta6 <= Math.PI;
		var clockwise6 = pi_2 < pi;
		var dif8 = clockwise6 ? theta6 : -theta6;
		dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
		break;
	case 3:
		var f14;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f14 = pi_2;
		} else {
			var a14 = pi_2 % (2 * Math.PI);
			f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
		}
		var this28 = f14;
		var za7 = this28;
		var f15;
		if(pi >= 0 && pi > Math.PI) {
			f15 = pi;
		} else {
			var a15 = pi % (2 * Math.PI);
			f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
		}
		var this29 = f15;
		var zb7 = this29;
		var fa7 = pi_2;
		var fb7 = pi;
		var theta7 = Math.abs(pi_2 - pi);
		var largest1 = theta7 > Math.PI;
		var clockwise7 = pi_2 < pi;
		var dif9 = clockwise7 ? theta7 : -theta7;
		dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
		break;
	}
	var positive1 = dif5 >= 0;
	var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
	var step3 = dif5 / totalSteps1;
	var angle1 = pi_2;
	var cx5;
	var cy5;
	var bx5 = 0;
	var by5 = 0;
	var _g3 = 0;
	var _g11 = totalSteps1 + 1;
	while(_g3 < _g11) {
		var i1 = _g3++;
		cx5 = bx + radius * Math.sin(angle1);
		cy5 = by + radius * Math.cos(angle1);
		if(i1 != 0) {
			var t12 = new trilateral_tri_Trilateral(bx,by,bx5,by5,cx5,cy5);
			out2[out2.length] = t12;
		}
		angle1 += step3;
		bx5 = cx5;
		by5 = cy5;
	}
	var triArr1 = out2;
	var _g4 = 0;
	while(_g4 < triArr1.length) {
		var t13 = triArr1[_g4];
		++_g4;
		out[out.length] = t13;
	}
	var t14 = [];
	var this30;
	if(t14 == null) {
		var t15 = [];
		var this31;
		if(t15 == null) {
			var t16 = [];
			var this32;
			if(t16 == null) {
				var t17 = [];
				var this33 = t17 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t17;
				this32 = this33;
			} else {
				this32 = t16;
			}
			this31 = this32;
		} else {
			this31 = t15;
		}
		this30 = this31;
	} else {
		this30 = t14;
	}
	var this34 = this30;
	var out3 = this34;
	var pi3 = Math.PI;
	var step4 = pi3 * 2 / 36;
	var dif10;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f16;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f16 = pi_2;
		} else {
			var a16 = pi_2 % (2 * Math.PI);
			f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
		}
		var this35 = f16;
		var za8 = this35;
		var f17;
		if(0 > Math.PI) {
			f17 = 0;
		} else {
			var a17 = 0 % (2 * Math.PI);
			f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
		}
		var this36 = f17;
		var zb8 = this36;
		var fa8 = za8;
		var fb8 = zb8;
		var theta8 = Math.abs(pi_2);
		var clockwise8 = pi_2 < 0;
		var dif11 = clockwise8 ? theta8 : -theta8;
		dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
		break;
	case 1:
		var f18;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f18 = pi_2;
		} else {
			var a18 = pi_2 % (2 * Math.PI);
			f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
		}
		var this37 = f18;
		var za9 = this37;
		var f19;
		if(0 > Math.PI) {
			f19 = 0;
		} else {
			var a19 = 0 % (2 * Math.PI);
			f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
		}
		var this38 = f19;
		var zb9 = this38;
		var fa9 = za9;
		var fb9 = zb9;
		var theta9 = Math.abs(pi_2);
		var clockwise9 = pi_2 < 0;
		var dif12 = clockwise9 ? theta9 : -theta9;
		dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
		break;
	case 2:
		var f20;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f20 = pi_2;
		} else {
			var a20 = pi_2 % (2 * Math.PI);
			f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
		}
		var this39 = f20;
		var za10 = this39;
		var f21;
		if(0 > Math.PI) {
			f21 = 0;
		} else {
			var a21 = 0 % (2 * Math.PI);
			f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
		}
		var this40 = f21;
		var zb10 = this40;
		var fa10 = pi_2;
		var fb10 = 0;
		var theta10 = Math.abs(pi_2);
		var smallest2 = theta10 <= Math.PI;
		var clockwise10 = pi_2 < 0;
		var dif13 = clockwise10 ? theta10 : -theta10;
		dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
		break;
	case 3:
		var f22;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f22 = pi_2;
		} else {
			var a22 = pi_2 % (2 * Math.PI);
			f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
		}
		var this41 = f22;
		var za11 = this41;
		var f23;
		if(0 > Math.PI) {
			f23 = 0;
		} else {
			var a23 = 0 % (2 * Math.PI);
			f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
		}
		var this42 = f23;
		var zb11 = this42;
		var fa11 = pi_2;
		var fb11 = 0;
		var theta11 = Math.abs(pi_2);
		var largest2 = theta11 > Math.PI;
		var clockwise11 = pi_2 < 0;
		var dif14 = clockwise11 ? theta11 : -theta11;
		dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
		break;
	}
	var positive2 = dif10 >= 0;
	var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
	var step5 = dif10 / totalSteps2;
	var angle2 = pi_2;
	var cx6;
	var cy6;
	var bx6 = 0;
	var by6 = 0;
	var _g5 = 0;
	var _g12 = totalSteps2 + 1;
	while(_g5 < _g12) {
		var i2 = _g5++;
		cx6 = cx + radius * Math.sin(angle2);
		cy6 = cy + radius * Math.cos(angle2);
		if(i2 != 0) {
			var t18 = new trilateral_tri_Trilateral(cx,cy,bx6,by6,cx6,cy6);
			out3[out3.length] = t18;
		}
		angle2 += step5;
		bx6 = cx6;
		by6 = cy6;
	}
	var triArr2 = out3;
	var _g6 = 0;
	while(_g6 < triArr2.length) {
		var t19 = triArr2[_g6];
		++_g6;
		out[out.length] = t19;
	}
	var gamma1 = -pi_2;
	var t20 = [];
	var this43;
	if(t20 == null) {
		var t21 = [];
		var this44;
		if(t21 == null) {
			var t22 = [];
			var this45;
			if(t22 == null) {
				var t23 = [];
				var this46 = t23 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t23;
				this45 = this46;
			} else {
				this45 = t22;
			}
			this44 = this45;
		} else {
			this44 = t21;
		}
		this43 = this44;
	} else {
		this43 = t20;
	}
	var this47 = this43;
	var out4 = this47;
	var pi4 = Math.PI;
	var step6 = pi4 * 2 / 36;
	var dif15;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f24;
		if(0 > Math.PI) {
			f24 = 0;
		} else {
			var a24 = 0 % (2 * Math.PI);
			f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
		}
		var this48 = f24;
		var za12 = this48;
		var f25;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f25 = gamma1;
		} else {
			var a25 = gamma1 % (2 * Math.PI);
			f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
		}
		var this49 = f25;
		var zb12 = this49;
		var fa12 = za12;
		var fb12 = zb12;
		var theta12 = Math.abs(0 - gamma1);
		var clockwise12 = 0 < gamma1;
		var dif16 = clockwise12 ? theta12 : -theta12;
		dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
		break;
	case 1:
		var f26;
		if(0 > Math.PI) {
			f26 = 0;
		} else {
			var a26 = 0 % (2 * Math.PI);
			f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
		}
		var this50 = f26;
		var za13 = this50;
		var f27;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f27 = gamma1;
		} else {
			var a27 = gamma1 % (2 * Math.PI);
			f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
		}
		var this51 = f27;
		var zb13 = this51;
		var fa13 = za13;
		var fb13 = zb13;
		var theta13 = Math.abs(0 - gamma1);
		var clockwise13 = 0 < gamma1;
		var dif17 = clockwise13 ? theta13 : -theta13;
		dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
		break;
	case 2:
		var f28;
		if(0 > Math.PI) {
			f28 = 0;
		} else {
			var a28 = 0 % (2 * Math.PI);
			f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
		}
		var this52 = f28;
		var za14 = this52;
		var f29;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f29 = gamma1;
		} else {
			var a29 = gamma1 % (2 * Math.PI);
			f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
		}
		var this53 = f29;
		var zb14 = this53;
		var fa14 = 0;
		var fb14 = gamma1;
		var theta14 = Math.abs(0 - gamma1);
		var smallest3 = theta14 <= Math.PI;
		var clockwise14 = 0 < gamma1;
		var dif18 = clockwise14 ? theta14 : -theta14;
		dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
		break;
	case 3:
		var f30;
		if(0 > Math.PI) {
			f30 = 0;
		} else {
			var a30 = 0 % (2 * Math.PI);
			f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
		}
		var this54 = f30;
		var za15 = this54;
		var f31;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f31 = gamma1;
		} else {
			var a31 = gamma1 % (2 * Math.PI);
			f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
		}
		var this55 = f31;
		var zb15 = this55;
		var fa15 = 0;
		var fb15 = gamma1;
		var theta15 = Math.abs(0 - gamma1);
		var largest3 = theta15 > Math.PI;
		var clockwise15 = 0 < gamma1;
		var dif19 = clockwise15 ? theta15 : -theta15;
		dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
		break;
	}
	var positive3 = dif15 >= 0;
	var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
	var step7 = dif15 / totalSteps3;
	var angle3 = 0;
	var cx7;
	var cy7;
	var bx7 = 0;
	var by7 = 0;
	var _g7 = 0;
	var _g13 = totalSteps3 + 1;
	while(_g7 < _g13) {
		var i3 = _g7++;
		cx7 = dx + radius * Math.sin(angle3);
		cy7 = dy + radius * Math.cos(angle3);
		if(i3 != 0) {
			var t24 = new trilateral_tri_Trilateral(dx,dy,bx7,by7,cx7,cy7);
			out4[out4.length] = t24;
		}
		angle3 += step7;
		bx7 = cx7;
		by7 = cy7;
	}
	var triArr3 = out4;
	var _g8 = 0;
	while(_g8 < triArr3.length) {
		var t25 = triArr3[_g8];
		++_g8;
		out[out.length] = t25;
	}
	return out;
};
trilateral_polys_Poly.roundedRectangleOutline = function(x,y,width,height,thick,radius) {
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	var this3 = this1;
	var out = this3;
	var pi = Math.PI;
	var pi_2 = Math.PI / 2;
	var ax = x + radius;
	var ay = y + radius;
	var bx = x + width - radius;
	var by = y + radius;
	var cx = bx;
	var cy = y + height - radius;
	var dx = ax;
	var dy = cy;
	var ax1 = ax;
	var ay1 = y;
	var bx1 = ax + (width - radius * 2);
	var by1 = ay1;
	var cx1 = bx1;
	var cy1 = ay1 + thick;
	var dx1 = ax;
	var dy1 = cy1;
	var tp_t0 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,dx1,dy1);
	var tp_t1 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,dx1,dy1);
	out[out.length] = tp_t0;
	out[out.length] = tp_t1;
	var ax2 = ax;
	var ay2 = y + height - thick;
	var bx2 = ax + (width - radius * 2);
	var by2 = ay2;
	var cx2 = bx2;
	var cy2 = ay2 + thick;
	var dx2 = ax;
	var dy2 = cy2;
	var tp_t01 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2);
	var tp_t11 = new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2);
	out[out.length] = tp_t01;
	out[out.length] = tp_t11;
	var dimY = height - 2 * radius;
	var ax3 = x;
	var ay3 = ay;
	var bx3 = x + thick;
	var by3 = ay3;
	var cx3 = bx3;
	var cy3 = ay3 + dimY;
	var dx3 = x;
	var dy3 = cy3;
	var tp_t02 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,dx3,dy3);
	var tp_t12 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,dx3,dy3);
	out[out.length] = tp_t02;
	out[out.length] = tp_t12;
	var x1 = x + width - thick;
	var ax4 = x1;
	var ay4 = by;
	var bx4 = x1 + thick;
	var by4 = ay4;
	var cx4 = bx4;
	var cy4 = ay4 + dimY;
	var dx4 = x1;
	var dy4 = cy4;
	var tp_t03 = new trilateral_tri_Trilateral(ax4,ay4,bx4,by4,dx4,dy4);
	var tp_t13 = new trilateral_tri_Trilateral(bx4,by4,cx4,cy4,dx4,dy4);
	out[out.length] = tp_t03;
	out[out.length] = tp_t13;
	var beta = -pi;
	var gamma = -pi_2;
	var t2 = [];
	var this4;
	if(t2 == null) {
		var t3 = [];
		var this5;
		if(t3 == null) {
			var t4 = [];
			var this6;
			if(t4 == null) {
				var t5 = [];
				var this7 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
				this6 = this7;
			} else {
				this6 = t4;
			}
			this5 = this6;
		} else {
			this5 = t3;
		}
		this4 = this5;
	} else {
		this4 = t2;
	}
	var this8 = this4;
	var out1 = this8;
	var pi1 = Math.PI;
	var step = pi1 * 2 / 36;
	var dif;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this9 = f;
		var za = this9;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this10 = f1;
		var zb = this10;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(beta - gamma);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this11 = f2;
		var za1 = this11;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this12 = f3;
		var zb1 = this12;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(beta - gamma);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this13 = f4;
		var za2 = this13;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this14 = f5;
		var zb2 = this14;
		var fa2 = beta;
		var fb2 = gamma;
		var theta2 = Math.abs(beta - gamma);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this15 = f6;
		var za3 = this15;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this16 = f7;
		var zb3 = this16;
		var fa3 = beta;
		var fb3 = gamma;
		var theta3 = Math.abs(beta - gamma);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx5;
	var cy5;
	var bx5 = 0;
	var by5 = 0;
	var dx5 = 0;
	var dy5 = 0;
	var ex = 0;
	var ey = 0;
	var r2 = radius - thick;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx5 = ax + radius * Math.sin(angle);
		cy5 = ay + radius * Math.cos(angle);
		ex = ax + r2 * Math.sin(angle);
		ey = ay + r2 * Math.cos(angle);
		if(i != 0) {
			var t0 = new trilateral_tri_Trilateral(dx5,dy5,bx5,by5,cx5,cy5);
			var t11 = new trilateral_tri_Trilateral(dx5,dy5,cx5,cy5,ex,ey);
			out1[out1.length] = t0;
			out1[out1.length] = t11;
		}
		angle += step1;
		bx5 = cx5;
		by5 = cy5;
		dx5 = ex;
		dy5 = ey;
	}
	var triArr = out1;
	var _g2 = 0;
	while(_g2 < triArr.length) {
		var t6 = triArr[_g2];
		++_g2;
		out[out.length] = t6;
	}
	var t7 = [];
	var this17;
	if(t7 == null) {
		var t8 = [];
		var this18;
		if(t8 == null) {
			var t9 = [];
			var this19;
			if(t9 == null) {
				var t10 = [];
				var this20 = t10 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t10;
				this19 = this20;
			} else {
				this19 = t9;
			}
			this18 = this19;
		} else {
			this18 = t8;
		}
		this17 = this18;
	} else {
		this17 = t7;
	}
	var this21 = this17;
	var out2 = this21;
	var pi2 = Math.PI;
	var step2 = pi2 * 2 / 36;
	var dif5;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f8;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f8 = pi_2;
		} else {
			var a8 = pi_2 % (2 * Math.PI);
			f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
		}
		var this22 = f8;
		var za4 = this22;
		var f9;
		if(pi >= 0 && pi > Math.PI) {
			f9 = pi;
		} else {
			var a9 = pi % (2 * Math.PI);
			f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
		}
		var this23 = f9;
		var zb4 = this23;
		var fa4 = za4;
		var fb4 = zb4;
		var theta4 = Math.abs(pi_2 - pi);
		var clockwise4 = pi_2 < pi;
		var dif6 = clockwise4 ? theta4 : -theta4;
		dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
		break;
	case 1:
		var f10;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f10 = pi_2;
		} else {
			var a10 = pi_2 % (2 * Math.PI);
			f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
		}
		var this24 = f10;
		var za5 = this24;
		var f11;
		if(pi >= 0 && pi > Math.PI) {
			f11 = pi;
		} else {
			var a11 = pi % (2 * Math.PI);
			f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
		}
		var this25 = f11;
		var zb5 = this25;
		var fa5 = za5;
		var fb5 = zb5;
		var theta5 = Math.abs(pi_2 - pi);
		var clockwise5 = pi_2 < pi;
		var dif7 = clockwise5 ? theta5 : -theta5;
		dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
		break;
	case 2:
		var f12;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f12 = pi_2;
		} else {
			var a12 = pi_2 % (2 * Math.PI);
			f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
		}
		var this26 = f12;
		var za6 = this26;
		var f13;
		if(pi >= 0 && pi > Math.PI) {
			f13 = pi;
		} else {
			var a13 = pi % (2 * Math.PI);
			f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
		}
		var this27 = f13;
		var zb6 = this27;
		var fa6 = pi_2;
		var fb6 = pi;
		var theta6 = Math.abs(pi_2 - pi);
		var smallest1 = theta6 <= Math.PI;
		var clockwise6 = pi_2 < pi;
		var dif8 = clockwise6 ? theta6 : -theta6;
		dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
		break;
	case 3:
		var f14;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f14 = pi_2;
		} else {
			var a14 = pi_2 % (2 * Math.PI);
			f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
		}
		var this28 = f14;
		var za7 = this28;
		var f15;
		if(pi >= 0 && pi > Math.PI) {
			f15 = pi;
		} else {
			var a15 = pi % (2 * Math.PI);
			f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
		}
		var this29 = f15;
		var zb7 = this29;
		var fa7 = pi_2;
		var fb7 = pi;
		var theta7 = Math.abs(pi_2 - pi);
		var largest1 = theta7 > Math.PI;
		var clockwise7 = pi_2 < pi;
		var dif9 = clockwise7 ? theta7 : -theta7;
		dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
		break;
	}
	var positive1 = dif5 >= 0;
	var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
	var step3 = dif5 / totalSteps1;
	var angle1 = pi_2;
	var cx6;
	var cy6;
	var bx6 = 0;
	var by6 = 0;
	var dx6 = 0;
	var dy6 = 0;
	var ex1 = 0;
	var ey1 = 0;
	var r21 = radius - thick;
	var _g3 = 0;
	var _g11 = totalSteps1 + 1;
	while(_g3 < _g11) {
		var i1 = _g3++;
		cx6 = bx + radius * Math.sin(angle1);
		cy6 = by + radius * Math.cos(angle1);
		ex1 = bx + r21 * Math.sin(angle1);
		ey1 = by + r21 * Math.cos(angle1);
		if(i1 != 0) {
			var t01 = new trilateral_tri_Trilateral(dx6,dy6,bx6,by6,cx6,cy6);
			var t12 = new trilateral_tri_Trilateral(dx6,dy6,cx6,cy6,ex1,ey1);
			out2[out2.length] = t01;
			out2[out2.length] = t12;
		}
		angle1 += step3;
		bx6 = cx6;
		by6 = cy6;
		dx6 = ex1;
		dy6 = ey1;
	}
	var triArr1 = out2;
	var _g4 = 0;
	while(_g4 < triArr1.length) {
		var t13 = triArr1[_g4];
		++_g4;
		out[out.length] = t13;
	}
	var t14 = [];
	var this30;
	if(t14 == null) {
		var t15 = [];
		var this31;
		if(t15 == null) {
			var t16 = [];
			var this32;
			if(t16 == null) {
				var t17 = [];
				var this33 = t17 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t17;
				this32 = this33;
			} else {
				this32 = t16;
			}
			this31 = this32;
		} else {
			this31 = t15;
		}
		this30 = this31;
	} else {
		this30 = t14;
	}
	var this34 = this30;
	var out3 = this34;
	var pi3 = Math.PI;
	var step4 = pi3 * 2 / 36;
	var dif10;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f16;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f16 = pi_2;
		} else {
			var a16 = pi_2 % (2 * Math.PI);
			f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
		}
		var this35 = f16;
		var za8 = this35;
		var f17;
		if(0 > Math.PI) {
			f17 = 0;
		} else {
			var a17 = 0 % (2 * Math.PI);
			f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
		}
		var this36 = f17;
		var zb8 = this36;
		var fa8 = za8;
		var fb8 = zb8;
		var theta8 = Math.abs(pi_2);
		var clockwise8 = pi_2 < 0;
		var dif11 = clockwise8 ? theta8 : -theta8;
		dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
		break;
	case 1:
		var f18;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f18 = pi_2;
		} else {
			var a18 = pi_2 % (2 * Math.PI);
			f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
		}
		var this37 = f18;
		var za9 = this37;
		var f19;
		if(0 > Math.PI) {
			f19 = 0;
		} else {
			var a19 = 0 % (2 * Math.PI);
			f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
		}
		var this38 = f19;
		var zb9 = this38;
		var fa9 = za9;
		var fb9 = zb9;
		var theta9 = Math.abs(pi_2);
		var clockwise9 = pi_2 < 0;
		var dif12 = clockwise9 ? theta9 : -theta9;
		dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
		break;
	case 2:
		var f20;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f20 = pi_2;
		} else {
			var a20 = pi_2 % (2 * Math.PI);
			f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
		}
		var this39 = f20;
		var za10 = this39;
		var f21;
		if(0 > Math.PI) {
			f21 = 0;
		} else {
			var a21 = 0 % (2 * Math.PI);
			f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
		}
		var this40 = f21;
		var zb10 = this40;
		var fa10 = pi_2;
		var fb10 = 0;
		var theta10 = Math.abs(pi_2);
		var smallest2 = theta10 <= Math.PI;
		var clockwise10 = pi_2 < 0;
		var dif13 = clockwise10 ? theta10 : -theta10;
		dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
		break;
	case 3:
		var f22;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f22 = pi_2;
		} else {
			var a22 = pi_2 % (2 * Math.PI);
			f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
		}
		var this41 = f22;
		var za11 = this41;
		var f23;
		if(0 > Math.PI) {
			f23 = 0;
		} else {
			var a23 = 0 % (2 * Math.PI);
			f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
		}
		var this42 = f23;
		var zb11 = this42;
		var fa11 = pi_2;
		var fb11 = 0;
		var theta11 = Math.abs(pi_2);
		var largest2 = theta11 > Math.PI;
		var clockwise11 = pi_2 < 0;
		var dif14 = clockwise11 ? theta11 : -theta11;
		dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
		break;
	}
	var positive2 = dif10 >= 0;
	var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
	var step5 = dif10 / totalSteps2;
	var angle2 = pi_2;
	var cx7;
	var cy7;
	var bx7 = 0;
	var by7 = 0;
	var dx7 = 0;
	var dy7 = 0;
	var ex2 = 0;
	var ey2 = 0;
	var r22 = radius - thick;
	var _g5 = 0;
	var _g12 = totalSteps2 + 1;
	while(_g5 < _g12) {
		var i2 = _g5++;
		cx7 = cx + radius * Math.sin(angle2);
		cy7 = cy + radius * Math.cos(angle2);
		ex2 = cx + r22 * Math.sin(angle2);
		ey2 = cy + r22 * Math.cos(angle2);
		if(i2 != 0) {
			var t02 = new trilateral_tri_Trilateral(dx7,dy7,bx7,by7,cx7,cy7);
			var t18 = new trilateral_tri_Trilateral(dx7,dy7,cx7,cy7,ex2,ey2);
			out3[out3.length] = t02;
			out3[out3.length] = t18;
		}
		angle2 += step5;
		bx7 = cx7;
		by7 = cy7;
		dx7 = ex2;
		dy7 = ey2;
	}
	var triArr2 = out3;
	var _g6 = 0;
	while(_g6 < triArr2.length) {
		var t19 = triArr2[_g6];
		++_g6;
		out[out.length] = t19;
	}
	var gamma1 = -pi_2;
	var t20 = [];
	var this43;
	if(t20 == null) {
		var t21 = [];
		var this44;
		if(t21 == null) {
			var t22 = [];
			var this45;
			if(t22 == null) {
				var t23 = [];
				var this46 = t23 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t23;
				this45 = this46;
			} else {
				this45 = t22;
			}
			this44 = this45;
		} else {
			this44 = t21;
		}
		this43 = this44;
	} else {
		this43 = t20;
	}
	var this47 = this43;
	var out4 = this47;
	var pi4 = Math.PI;
	var step6 = pi4 * 2 / 36;
	var dif15;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f24;
		if(0 > Math.PI) {
			f24 = 0;
		} else {
			var a24 = 0 % (2 * Math.PI);
			f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
		}
		var this48 = f24;
		var za12 = this48;
		var f25;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f25 = gamma1;
		} else {
			var a25 = gamma1 % (2 * Math.PI);
			f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
		}
		var this49 = f25;
		var zb12 = this49;
		var fa12 = za12;
		var fb12 = zb12;
		var theta12 = Math.abs(0 - gamma1);
		var clockwise12 = 0 < gamma1;
		var dif16 = clockwise12 ? theta12 : -theta12;
		dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
		break;
	case 1:
		var f26;
		if(0 > Math.PI) {
			f26 = 0;
		} else {
			var a26 = 0 % (2 * Math.PI);
			f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
		}
		var this50 = f26;
		var za13 = this50;
		var f27;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f27 = gamma1;
		} else {
			var a27 = gamma1 % (2 * Math.PI);
			f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
		}
		var this51 = f27;
		var zb13 = this51;
		var fa13 = za13;
		var fb13 = zb13;
		var theta13 = Math.abs(0 - gamma1);
		var clockwise13 = 0 < gamma1;
		var dif17 = clockwise13 ? theta13 : -theta13;
		dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
		break;
	case 2:
		var f28;
		if(0 > Math.PI) {
			f28 = 0;
		} else {
			var a28 = 0 % (2 * Math.PI);
			f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
		}
		var this52 = f28;
		var za14 = this52;
		var f29;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f29 = gamma1;
		} else {
			var a29 = gamma1 % (2 * Math.PI);
			f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
		}
		var this53 = f29;
		var zb14 = this53;
		var fa14 = 0;
		var fb14 = gamma1;
		var theta14 = Math.abs(0 - gamma1);
		var smallest3 = theta14 <= Math.PI;
		var clockwise14 = 0 < gamma1;
		var dif18 = clockwise14 ? theta14 : -theta14;
		dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
		break;
	case 3:
		var f30;
		if(0 > Math.PI) {
			f30 = 0;
		} else {
			var a30 = 0 % (2 * Math.PI);
			f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
		}
		var this54 = f30;
		var za15 = this54;
		var f31;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f31 = gamma1;
		} else {
			var a31 = gamma1 % (2 * Math.PI);
			f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
		}
		var this55 = f31;
		var zb15 = this55;
		var fa15 = 0;
		var fb15 = gamma1;
		var theta15 = Math.abs(0 - gamma1);
		var largest3 = theta15 > Math.PI;
		var clockwise15 = 0 < gamma1;
		var dif19 = clockwise15 ? theta15 : -theta15;
		dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
		break;
	}
	var positive3 = dif15 >= 0;
	var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
	var step7 = dif15 / totalSteps3;
	var angle3 = 0;
	var cx8;
	var cy8;
	var bx8 = 0;
	var by8 = 0;
	var dx8 = 0;
	var dy8 = 0;
	var ex3 = 0;
	var ey3 = 0;
	var r23 = radius - thick;
	var _g7 = 0;
	var _g13 = totalSteps3 + 1;
	while(_g7 < _g13) {
		var i3 = _g7++;
		cx8 = dx + radius * Math.sin(angle3);
		cy8 = dy + radius * Math.cos(angle3);
		ex3 = dx + r23 * Math.sin(angle3);
		ey3 = dy + r23 * Math.cos(angle3);
		if(i3 != 0) {
			var t03 = new trilateral_tri_Trilateral(dx8,dy8,bx8,by8,cx8,cy8);
			var t110 = new trilateral_tri_Trilateral(dx8,dy8,cx8,cy8,ex3,ey3);
			out4[out4.length] = t03;
			out4[out4.length] = t110;
		}
		angle3 += step7;
		bx8 = cx8;
		by8 = cy8;
		dx8 = ex3;
		dy8 = ey3;
	}
	var triArr3 = out4;
	var _g8 = 0;
	while(_g8 < triArr3.length) {
		var t24 = triArr3[_g8];
		++_g8;
		out[out.length] = t24;
	}
	return out;
};
var trilateral_tri_Trilateral = function(ax_,ay_,bx_,by_,cx_,cy_,mark_) {
	if(mark_ == null) {
		mark_ = 0;
	}
	this.mark = 0;
	this.ax = ax_;
	this.ay = ay_;
	this.bx = bx_;
	this.by = by_;
	this.cx = cx_;
	this.cy = cy_;
	this.windingAdjusted = this.adjustWinding();
	if(this.windingAdjusted) {
		this.ax = ax_;
		this.ay = ay_;
		this.bx = cx_;
		this.by = cy_;
		this.cx = bx_;
		this.cy = by_;
	}
	this.mark = mark_;
};
$hxClasses["trilateral.tri.Trilateral"] = trilateral_tri_Trilateral;
trilateral_tri_Trilateral.__name__ = "trilateral.tri.Trilateral";
trilateral_tri_Trilateral.prototype = {
	windingAdjusted: null
	,mark: null
	,ax: null
	,bx: null
	,cx: null
	,ay: null
	,by: null
	,cy: null
	,get_x: function() {
		return Math.min(Math.min(this.ax,this.bx),this.cx);
	}
	,set_x: function(x) {
		var dx = x - this.get_x();
		this.ax += dx;
		this.bx += dx;
		this.cx += dx;
		return x;
	}
	,get_y: function() {
		return Math.min(Math.min(this.ay,this.by),this.cy);
	}
	,set_y: function(y) {
		var dy = y - this.get_y();
		this.ay += dy;
		this.by += dy;
		this.cy += dy;
		return y;
	}
	,get_right: function() {
		return Math.max(Math.max(this.ax,this.bx),this.cx);
	}
	,get_bottom: function() {
		return Math.max(Math.max(this.ay,this.by),this.cy);
	}
	,moveDelta: function(dx,dy) {
		this.ax += dx;
		this.ay += dy;
		this.bx += dx;
		this.by += dy;
		this.cx += dx;
		this.cy += dy;
	}
	,liteHit: function(px,py) {
		var planeAB = (this.ax - px) * (this.by - py) - (this.bx - px) * (this.ay - py);
		var planeBC = (this.bx - px) * (this.cy - py) - (this.cx - px) * (this.by - py);
		var planeCA = (this.cx - px) * (this.ay - py) - (this.ax - px) * (this.cy - py);
		if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0)) {
			return (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0);
		} else {
			return false;
		}
	}
	,fullHit: function(px,py) {
		if(px > this.get_x() && px < this.get_right() && py > this.get_y() && py < this.get_bottom()) {
			return true;
		}
		var planeAB = (this.ax - px) * (this.by - py) - (this.bx - px) * (this.ay - py);
		var planeBC = (this.bx - px) * (this.cy - py) - (this.cx - px) * (this.by - py);
		var planeCA = (this.cx - px) * (this.ay - py) - (this.ax - px) * (this.cy - py);
		if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0)) {
			return (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0);
		} else {
			return false;
		}
	}
	,adjustWinding: function() {
		return this.ax * this.by - this.bx * this.ay + (this.bx * this.cy - this.cx * this.by) + (this.cx * this.ay - this.ax * this.cy) > 0;
	}
	,rotate: function(x,y,theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		this.ax -= x;
		this.ay -= y;
		this.bx -= x;
		this.by -= y;
		this.cx -= x;
		this.cy -= y;
		var dx = this.ax;
		var dy = this.ay;
		this.ax = dx * cos - dy * sin;
		this.ay = dx * sin + dy * cos;
		dx = this.bx;
		dy = this.by;
		this.bx = dx * cos - dy * sin;
		this.by = dx * sin + dy * cos;
		dx = this.cx;
		dy = this.cy;
		this.cx = dx * cos - dy * sin;
		this.cy = dx * sin + dy * cos;
		this.ax += x;
		this.ay += y;
		this.bx += x;
		this.by += y;
		this.cx += x;
		this.cy += y;
	}
	,rotateTrig: function(x,y,cos,sin) {
		this.ax -= x;
		this.ay -= y;
		this.bx -= x;
		this.by -= y;
		this.cx -= x;
		this.cy -= y;
		var dx = this.ax;
		var dy = this.ay;
		this.ax = dx * cos - dy * sin;
		this.ay = dx * sin + dy * cos;
		dx = this.bx;
		dy = this.by;
		this.bx = dx * cos - dy * sin;
		this.by = dx * sin + dy * cos;
		dx = this.cx;
		dy = this.cy;
		this.cx = dx * cos - dy * sin;
		this.cy = dx * sin + dy * cos;
		this.ax += x;
		this.ay += y;
		this.bx += x;
		this.by += y;
		this.cx += x;
		this.cy += y;
	}
	,__class__: trilateral_tri_Trilateral
	,__properties__: {get_bottom:"get_bottom",get_right:"get_right",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var trilateral_tri_Triangle = function(id_,A,B,C,depth_,colorID_) {
	this.id = id_;
	trilateral_tri_Trilateral.call(this,A.x,A.y,B.x,B.y,C.x,C.y);
	this.depth = depth_;
	this.alpha = 1.;
	this.colorID = colorID_;
	this.colorA = colorID_;
	this.colorB = colorID_;
	this.colorC = colorID_;
};
$hxClasses["trilateral.tri.Triangle"] = trilateral_tri_Triangle;
trilateral_tri_Triangle.__name__ = "trilateral.tri.Triangle";
trilateral_tri_Triangle.fromTrilateral = function(id_,tri,depth_,colorID_) {
	var t = Object.create(trilateral_tri_Triangle.prototype);
	t.id = id_;
	t.ax = tri.ax;
	t.ay = tri.ay;
	t.bx = tri.bx;
	t.by = tri.by;
	t.cx = tri.cx;
	t.cy = tri.cy;
	t.mark = tri.mark;
	t.depth = depth_;
	t.alpha = 1.;
	t.colorID = colorID_;
	t.colorA = colorID_;
	t.colorB = colorID_;
	t.colorC = colorID_;
	t.windingAdjusted = tri.windingAdjusted;
	return t;
};
trilateral_tri_Triangle.__super__ = trilateral_tri_Trilateral;
trilateral_tri_Triangle.prototype = $extend(trilateral_tri_Trilateral.prototype,{
	id: null
	,colorID: null
	,colorA: null
	,colorB: null
	,colorC: null
	,depth: null
	,alpha: null
	,hitTest: function(P) {
		return this.fullHit(P.x,P.y);
	}
	,drawStrips: function(drawRect) {
		var xi = Math.floor(this.get_x());
		var yi = Math.floor(this.get_y());
		var righti = Math.ceil(this.get_right());
		var bottomi = Math.ceil(this.get_bottom());
		var sx = 0;
		var ex = 0;
		var sFound;
		var eFound;
		var _g = yi;
		var _g1 = bottomi;
		while(_g < _g1) {
			var y0 = _g++;
			sFound = false;
			eFound = false;
			var _g2 = xi;
			var _g11 = righti;
			while(_g2 < _g11) {
				var x0 = _g2++;
				var planeAB = (this.ax - x0) * (this.by - y0) - (this.bx - x0) * (this.ay - y0);
				var planeBC = (this.bx - x0) * (this.cy - y0) - (this.cx - x0) * (this.by - y0);
				var planeCA = (this.cx - x0) * (this.ay - y0) - (this.ax - x0) * (this.cy - y0);
				if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0) && (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0)) {
					sx = x0;
					sFound = true;
					break;
				}
			}
			if(sFound) {
				var _g21 = sx;
				var _g3 = righti;
				while(_g21 < _g3) {
					var x01 = _g21++;
					var planeAB1 = (this.ax - x01) * (this.by - y0) - (this.bx - x01) * (this.ay - y0);
					var planeBC1 = (this.bx - x01) * (this.cy - y0) - (this.cx - x01) * (this.by - y0);
					var planeCA1 = (this.cx - x01) * (this.ay - y0) - (this.ax - x01) * (this.cy - y0);
					if(!((Math.abs(planeAB1) / planeAB1 | 0) == (Math.abs(planeBC1) / planeBC1 | 0) && (Math.abs(planeBC1) / planeBC1 | 0) == (Math.abs(planeCA1) / planeCA1 | 0))) {
						ex = x01;
						eFound = true;
						break;
					}
				}
				if(eFound) {
					drawRect(sx,y0,ex - sx,1);
				}
			}
		}
	}
	,__class__: trilateral_tri_Triangle
});
var trilateral_tri__$TriangleArray_TriangleArray_$Impl_$ = {};
$hxClasses["trilateral.tri._TriangleArray.TriangleArray_Impl_"] = trilateral_tri__$TriangleArray_TriangleArray_$Impl_$;
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.__name__ = "trilateral.tri._TriangleArray.TriangleArray_Impl_";
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new = function(t) {
	var this1;
	if(t == null) {
		var t1 = [];
		var this2;
		if(t1 == null) {
			var t2 = [];
			var this3 = t2 == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t2;
			this2 = this3;
		} else {
			this2 = t1;
		}
		this1 = this2;
	} else {
		this1 = t;
	}
	return this1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.changeFillColorByID = function(this1,id,colorID,startID,endID) {
	if(endID == null) {
		endID = 0;
	}
	if(startID == null) {
		startID = 0;
	}
	var tri;
	if(endID == 0) {
		endID = this1.length;
	}
	var _g = startID;
	var _g1 = endID;
	while(_g < _g1) {
		var i = _g++;
		tri = this1[i];
		if(tri.id == id) {
			tri.colorID = colorID;
			tri.colorA = colorID;
			tri.colorB = colorID;
			tri.colorC = colorID;
		}
	}
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getEmpty = function() {
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2;
		if(t1 == null) {
			var t2 = [];
			var this3;
			if(t2 == null) {
				var t3 = [];
				var this4;
				if(t3 == null) {
					var t4 = [];
					var this5;
					if(t4 == null) {
						var t5 = [];
						var this6 = t5 == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t5;
						this5 = this6;
					} else {
						this5 = t4;
					}
					this4 = this5;
				} else {
					this4 = t3;
				}
				this3 = this4;
			} else {
				this3 = t2;
			}
			this2 = this3;
		} else {
			this2 = t1;
		}
		this1 = this2;
	} else {
		this1 = t;
	}
	return this1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.clear = function(this1) {
	var t = [];
	var this2;
	if(t == null) {
		var t1 = [];
		var this3;
		if(t1 == null) {
			var t2 = [];
			var this4;
			if(t2 == null) {
				var t3 = [];
				var this5;
				if(t3 == null) {
					var t4 = [];
					var this6;
					if(t4 == null) {
						var t5 = [];
						var this7 = t5 == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t5;
						this6 = this7;
					} else {
						this6 = t4;
					}
					this5 = this6;
				} else {
					this5 = t3;
				}
				this4 = this5;
			} else {
				this4 = t2;
			}
			this3 = this4;
		} else {
			this3 = t1;
		}
		this2 = this3;
	} else {
		this2 = t;
	}
	var this8 = this2;
	this1 = this8;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.pushPair = function(this1,tp) {
	this1[this1.length] = tp.t0;
	this1[this1.length] = tp.t1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.drawTriangle = function(this1,id,p0,p1,p2,colorID) {
	var tri = new trilateral_tri_Triangle(id,p0,p1,p2,0,colorID);
	this1[this1.length] = tri;
	return tri;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.add = function(this1,id,tri,colorID) {
	var t = Object.create(trilateral_tri_Triangle.prototype);
	t.id = id;
	t.ax = tri.ax;
	t.ay = tri.ay;
	t.bx = tri.bx;
	t.by = tri.by;
	t.cx = tri.cx;
	t.cy = tri.cy;
	t.mark = tri.mark;
	t.depth = 0;
	t.alpha = 1.;
	t.colorID = colorID;
	t.colorA = colorID;
	t.colorB = colorID;
	t.colorC = colorID;
	t.windingAdjusted = tri.windingAdjusted;
	var tri1 = t;
	this1[this1.length] = tri1;
	return tri1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.addPair = function(this1,id,tri,colorID) {
	var tri1 = tri.t0;
	var t = Object.create(trilateral_tri_Triangle.prototype);
	t.id = id;
	t.ax = tri1.ax;
	t.ay = tri1.ay;
	t.bx = tri1.bx;
	t.by = tri1.by;
	t.cx = tri1.cx;
	t.cy = tri1.cy;
	t.mark = tri1.mark;
	t.depth = 0;
	t.alpha = 1.;
	t.colorID = colorID;
	t.colorA = colorID;
	t.colorB = colorID;
	t.colorC = colorID;
	t.windingAdjusted = tri1.windingAdjusted;
	var tri0 = t;
	this1[this1.length] = tri0;
	var tri2 = tri.t1;
	var t1 = Object.create(trilateral_tri_Triangle.prototype);
	t1.id = id;
	t1.ax = tri2.ax;
	t1.ay = tri2.ay;
	t1.bx = tri2.bx;
	t1.by = tri2.by;
	t1.cx = tri2.cx;
	t1.cy = tri2.cy;
	t1.mark = tri2.mark;
	t1.depth = 0;
	t1.alpha = 1.;
	t1.colorID = colorID;
	t1.colorA = colorID;
	t1.colorB = colorID;
	t1.colorC = colorID;
	t1.windingAdjusted = tri2.windingAdjusted;
	var tri11 = t1;
	this1[this1.length] = tri11;
	return tri;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.addArray = function(this1,id,triArr,colorID) {
	var tri;
	var _g = 0;
	while(_g < triArr.length) {
		var t = triArr[_g];
		++_g;
		if(t != null) {
			var t1 = Object.create(trilateral_tri_Triangle.prototype);
			t1.id = id;
			t1.ax = t.ax;
			t1.ay = t.ay;
			t1.bx = t.bx;
			t1.by = t.by;
			t1.cx = t.cx;
			t1.cy = t.cy;
			t1.mark = t.mark;
			t1.depth = 0;
			t1.alpha = 1.;
			t1.colorID = colorID;
			t1.colorA = colorID;
			t1.colorB = colorID;
			t1.colorC = colorID;
			t1.windingAdjusted = t.windingAdjusted;
			tri = t1;
			this1[this1.length] = tri;
		}
	}
	return triArr;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getTriangles = function(this1,id) {
	var t = [];
	var this2;
	if(t == null) {
		var t1 = [];
		var this3;
		if(t1 == null) {
			var t2 = [];
			var this4;
			if(t2 == null) {
				var t3 = [];
				var this5;
				if(t3 == null) {
					var t4 = [];
					var this6;
					if(t4 == null) {
						var t5 = [];
						var this7 = t5 == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t5;
						this6 = this7;
					} else {
						this6 = t4;
					}
					this5 = this6;
				} else {
					this5 = t3;
				}
				this4 = this5;
			} else {
				this4 = t2;
			}
			this3 = this4;
		} else {
			this3 = t1;
		}
		this2 = this3;
	} else {
		this2 = t;
	}
	var this8 = this2;
	var out = this8;
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		if(this1[i].id == id) {
			out[out.length] = this1[i];
		}
	}
	return out;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getHitTriangles = function(this1,p) {
	var t = [];
	var this2;
	if(t == null) {
		var t1 = [];
		var this3;
		if(t1 == null) {
			var t2 = [];
			var this4;
			if(t2 == null) {
				var t3 = [];
				var this5;
				if(t3 == null) {
					var t4 = [];
					var this6;
					if(t4 == null) {
						var t5 = [];
						var this7 = t5 == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t5;
						this6 = this7;
					} else {
						this6 = t4;
					}
					this5 = this6;
				} else {
					this5 = t3;
				}
				this4 = this5;
			} else {
				this4 = t2;
			}
			this3 = this4;
		} else {
			this3 = t1;
		}
		this2 = this3;
	} else {
		this2 = t;
	}
	var this8 = this2;
	var out = this8;
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		if(this1[i].hitTest(p)) {
			out[out.length] = this1[i];
		}
	}
	return out;
};
var trilateral_tri__$TriangleGradient_TriangleGradient_$Impl_$ = {};
$hxClasses["trilateral.tri._TriangleGradient.TriangleGradient_Impl_"] = trilateral_tri__$TriangleGradient_TriangleGradient_$Impl_$;
trilateral_tri__$TriangleGradient_TriangleGradient_$Impl_$.__name__ = "trilateral.tri._TriangleGradient.TriangleGradient_Impl_";
trilateral_tri__$TriangleGradient_TriangleGradient_$Impl_$._new = function(id_,A_,B_,C_,depth_,colorID_,colorID2_,gradCorner_) {
	var this1 = new trilateral_tri_Triangle(id_,A_,B_,C_,depth_,colorID_);
	switch(gradCorner_) {
	case 0:
		this1.colorA = colorID2_;
		this1.colorB = colorID_;
		this1.colorC = colorID_;
		break;
	case 1:
		if(this1.windingAdjusted) {
			this1.colorA = colorID_;
			this1.colorB = colorID_;
			this1.colorC = colorID2_;
		} else {
			this1.colorA = colorID_;
			this1.colorB = colorID2_;
			this1.colorC = colorID_;
		}
		break;
	case 2:
		if(this1.windingAdjusted) {
			this1.colorA = colorID_;
			this1.colorB = colorID2_;
			this1.colorC = colorID_;
		} else {
			this1.colorA = colorID_;
			this1.colorB = colorID_;
			this1.colorC = colorID2_;
		}
		break;
	}
	return this1;
};
trilateral_tri__$TriangleGradient_TriangleGradient_$Impl_$.quadGradient = function(id_,pos_,dim_,depth_,colorID_,colorID2_,horizontal,theta,pivotX,pivotY) {
	if(pivotY == null) {
		pivotY = 0.;
	}
	if(pivotX == null) {
		pivotX = 0.;
	}
	if(theta == null) {
		theta = 0.;
	}
	var px = pos_.x;
	var py = pos_.y;
	var dx = dim_.x;
	var dy = dim_.y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx, y : py};
	var C_ = { x : px + dx, y : py + dy};
	var D_ = { x : px, y : py + dy};
	if(theta != 0.) {
		var sin = Math.sin(theta);
		var cos = Math.cos(theta);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - pivotY;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + pivotY};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - pivotY;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + pivotY};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - pivotY;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + pivotY};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - pivotY;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + pivotY};
	}
	var line_A = A_;
	var line_B = B_;
	var line_C = C_;
	var line_D = D_;
	if(horizontal) {
		var this1 = new trilateral_tri_Triangle(id_,line_A,line_B,line_D,depth_,colorID_);
		if(this1.windingAdjusted) {
			this1.colorA = colorID_;
			this1.colorB = colorID_;
			this1.colorC = colorID2_;
		} else {
			this1.colorA = colorID_;
			this1.colorB = colorID2_;
			this1.colorC = colorID_;
		}
		var this2 = new trilateral_tri_Triangle(id_,line_B,line_C,line_D,depth_,colorID2_);
		if(this2.windingAdjusted) {
			this2.colorA = colorID2_;
			this2.colorB = colorID_;
			this2.colorC = colorID2_;
		} else {
			this2.colorA = colorID2_;
			this2.colorB = colorID2_;
			this2.colorC = colorID_;
		}
		return { t0 : this1, t1 : this2};
	} else {
		var this3 = new trilateral_tri_Triangle(id_,line_A,line_B,line_D,depth_,colorID_);
		if(this3.windingAdjusted) {
			this3.colorA = colorID_;
			this3.colorB = colorID2_;
			this3.colorC = colorID_;
		} else {
			this3.colorA = colorID_;
			this3.colorB = colorID_;
			this3.colorC = colorID2_;
		}
		var this4 = new trilateral_tri_Triangle(id_,line_B,line_C,line_D,depth_,colorID2_);
		this4.colorA = colorID_;
		this4.colorB = colorID2_;
		this4.colorC = colorID2_;
		return { t0 : this3, t1 : this4};
	}
};
trilateral_tri__$TriangleGradient_TriangleGradient_$Impl_$.gradientFunction = function(tweenEquation) {
	return function(t) {
		return tweenEquation(t,0,1,1);
	};
};
trilateral_tri__$TriangleGradient_TriangleGradient_$Impl_$.multiGradient = function(id_,horizontal_,x_,y_,wid_,hi_,triangles,colors,func,theta,pivotX,pivotY) {
	if(pivotY == null) {
		pivotY = 0.;
	}
	if(pivotX == null) {
		pivotX = 0.;
	}
	if(theta == null) {
		theta = 0.;
	}
	if(colors.length == 0) {
		return;
	}
	var left = x_;
	var top = y_;
	var wid = wid_;
	var hi = hi_;
	if(colors.length == 1) {
		colors.push(colors[0]);
	}
	var sections = colors.length - 1;
	var loops = colors.length - 1;
	if(func == null) {
		func = function(v) {
			return v;
		};
	}
	if(horizontal_) {
		var step = 1 / sections;
		var x0;
		var x1;
		var _g = 0;
		var _g1 = loops;
		while(_g < _g1) {
			var i = _g++;
			x0 = func(i * step);
			x1 = func((i + 1) * step);
			var pos_x = left + x0 * wid;
			var pos_y = top;
			var dim_x = wid * (x1 - x0);
			var dim_y = hi;
			var colorID_ = colors[i];
			var colorID2_ = colors[i + 1];
			var px = pos_x;
			var py = pos_y;
			var dx = dim_x;
			var dy = dim_y;
			var A_ = { x : px, y : py};
			var B_ = { x : px + dx, y : py};
			var C_ = { x : px + dx, y : py + dy};
			var D_ = { x : px, y : py + dy};
			if(theta != 0.) {
				var sin = Math.sin(theta);
				var cos = Math.cos(theta);
				var px1 = A_.x - pivotX;
				var py1 = A_.y - pivotY;
				var px2 = px1 * cos - py1 * sin;
				py1 = py1 * cos + px1 * sin;
				A_ = { x : px2 + pivotX, y : py1 + pivotY};
				var px3 = B_.x - pivotX;
				var py2 = B_.y - pivotY;
				var px21 = px3 * cos - py2 * sin;
				py2 = py2 * cos + px3 * sin;
				B_ = { x : px21 + pivotX, y : py2 + pivotY};
				var px4 = C_.x - pivotX;
				var py3 = C_.y - pivotY;
				var px22 = px4 * cos - py3 * sin;
				py3 = py3 * cos + px4 * sin;
				C_ = { x : px22 + pivotX, y : py3 + pivotY};
				var px5 = D_.x - pivotX;
				var py4 = D_.y - pivotY;
				var px23 = px5 * cos - py4 * sin;
				py4 = py4 * cos + px5 * sin;
				D_ = { x : px23 + pivotX, y : py4 + pivotY};
			}
			var line_A = A_;
			var line_B = B_;
			var line_C = C_;
			var line_D = D_;
			var tp;
			if(horizontal_) {
				var this1 = new trilateral_tri_Triangle(id_,line_A,line_B,line_D,0,colorID_);
				if(this1.windingAdjusted) {
					this1.colorA = colorID_;
					this1.colorB = colorID_;
					this1.colorC = colorID2_;
				} else {
					this1.colorA = colorID_;
					this1.colorB = colorID2_;
					this1.colorC = colorID_;
				}
				var this2 = new trilateral_tri_Triangle(id_,line_B,line_C,line_D,0,colorID2_);
				if(this2.windingAdjusted) {
					this2.colorA = colorID2_;
					this2.colorB = colorID_;
					this2.colorC = colorID2_;
				} else {
					this2.colorA = colorID2_;
					this2.colorB = colorID2_;
					this2.colorC = colorID_;
				}
				tp = { t0 : this1, t1 : this2};
			} else {
				var this3 = new trilateral_tri_Triangle(id_,line_A,line_B,line_D,0,colorID_);
				if(this3.windingAdjusted) {
					this3.colorA = colorID_;
					this3.colorB = colorID2_;
					this3.colorC = colorID_;
				} else {
					this3.colorA = colorID_;
					this3.colorB = colorID_;
					this3.colorC = colorID2_;
				}
				var this4 = new trilateral_tri_Triangle(id_,line_B,line_C,line_D,0,colorID2_);
				this4.colorA = colorID_;
				this4.colorB = colorID2_;
				this4.colorC = colorID2_;
				tp = { t0 : this3, t1 : this4};
			}
			triangles[triangles.length] = tp.t0;
			triangles[triangles.length] = tp.t1;
		}
	} else {
		var step1 = 1 / sections;
		var dim_x1 = wid;
		var dim_y1 = hi * func(step1);
		var _g2 = 0;
		var _g11 = loops;
		while(_g2 < _g11) {
			var i1 = _g2++;
			var pos_x1 = left;
			var pos_y1 = top + func(i1 * step1) * hi;
			var colorID_1 = colors[i1];
			var colorID2_1 = colors[i1 + 1];
			var px6 = pos_x1;
			var py5 = pos_y1;
			var dx1 = dim_x1;
			var dy1 = dim_y1;
			var A_1 = { x : px6, y : py5};
			var B_1 = { x : px6 + dx1, y : py5};
			var C_1 = { x : px6 + dx1, y : py5 + dy1};
			var D_1 = { x : px6, y : py5 + dy1};
			if(theta != 0.) {
				var sin1 = Math.sin(theta);
				var cos1 = Math.cos(theta);
				var px7 = A_1.x - pivotX;
				var py6 = A_1.y - pivotY;
				var px24 = px7 * cos1 - py6 * sin1;
				py6 = py6 * cos1 + px7 * sin1;
				A_1 = { x : px24 + pivotX, y : py6 + pivotY};
				var px8 = B_1.x - pivotX;
				var py7 = B_1.y - pivotY;
				var px25 = px8 * cos1 - py7 * sin1;
				py7 = py7 * cos1 + px8 * sin1;
				B_1 = { x : px25 + pivotX, y : py7 + pivotY};
				var px9 = C_1.x - pivotX;
				var py8 = C_1.y - pivotY;
				var px26 = px9 * cos1 - py8 * sin1;
				py8 = py8 * cos1 + px9 * sin1;
				C_1 = { x : px26 + pivotX, y : py8 + pivotY};
				var px10 = D_1.x - pivotX;
				var py9 = D_1.y - pivotY;
				var px27 = px10 * cos1 - py9 * sin1;
				py9 = py9 * cos1 + px10 * sin1;
				D_1 = { x : px27 + pivotX, y : py9 + pivotY};
			}
			var line_A1 = A_1;
			var line_B1 = B_1;
			var line_C1 = C_1;
			var line_D1 = D_1;
			var tp1;
			if(horizontal_) {
				var this5 = new trilateral_tri_Triangle(id_,line_A1,line_B1,line_D1,0,colorID_1);
				if(this5.windingAdjusted) {
					this5.colorA = colorID_1;
					this5.colorB = colorID_1;
					this5.colorC = colorID2_1;
				} else {
					this5.colorA = colorID_1;
					this5.colorB = colorID2_1;
					this5.colorC = colorID_1;
				}
				var this6 = new trilateral_tri_Triangle(id_,line_B1,line_C1,line_D1,0,colorID2_1);
				if(this6.windingAdjusted) {
					this6.colorA = colorID2_1;
					this6.colorB = colorID_1;
					this6.colorC = colorID2_1;
				} else {
					this6.colorA = colorID2_1;
					this6.colorB = colorID2_1;
					this6.colorC = colorID_1;
				}
				tp1 = { t0 : this5, t1 : this6};
			} else {
				var this7 = new trilateral_tri_Triangle(id_,line_A1,line_B1,line_D1,0,colorID_1);
				if(this7.windingAdjusted) {
					this7.colorA = colorID_1;
					this7.colorB = colorID2_1;
					this7.colorC = colorID_1;
				} else {
					this7.colorA = colorID_1;
					this7.colorB = colorID_1;
					this7.colorC = colorID2_1;
				}
				var this8 = new trilateral_tri_Triangle(id_,line_B1,line_C1,line_D1,0,colorID2_1);
				this8.colorA = colorID_1;
				this8.colorB = colorID2_1;
				this8.colorC = colorID2_1;
				tp1 = { t0 : this7, t1 : this8};
			}
			triangles[triangles.length] = tp1.t0;
			triangles[triangles.length] = tp1.t1;
		}
	}
};
var trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$ = {};
$hxClasses["trilateral.tri._TrilateralArray.TrilateralArray_Impl_"] = trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$;
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.__name__ = "trilateral.tri._TrilateralArray.TrilateralArray_Impl_";
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new = function(t) {
	var this1;
	if(t == null) {
		var t1 = [];
		var this2;
		if(t1 == null) {
			var t2 = [];
			var this3 = t2 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t2;
			this2 = this3;
		} else {
			this2 = t1;
		}
		this1 = this2;
	} else {
		this1 = t;
	}
	return this1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.reversed = function(this1) {
	this1.reverse();
	return this1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.getEmpty = function() {
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2;
		if(t1 == null) {
			var t2 = [];
			var this3;
			if(t2 == null) {
				var t3 = [];
				var this4;
				if(t3 == null) {
					var t4 = [];
					var this5;
					if(t4 == null) {
						var t5 = [];
						var this6 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
						this5 = this6;
					} else {
						this5 = t4;
					}
					this4 = this5;
				} else {
					this4 = t3;
				}
				this3 = this4;
			} else {
				this3 = t2;
			}
			this2 = this3;
		} else {
			this2 = t1;
		}
		this1 = this2;
	} else {
		this1 = t;
	}
	return this1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.clear = function(this1) {
	var t = [];
	var this2;
	if(t == null) {
		var t1 = [];
		var this3;
		if(t1 == null) {
			var t2 = [];
			var this4;
			if(t2 == null) {
				var t3 = [];
				var this5;
				if(t3 == null) {
					var t4 = [];
					var this6;
					if(t4 == null) {
						var t5 = [];
						var this7 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
						this6 = this7;
					} else {
						this6 = t4;
					}
					this5 = this6;
				} else {
					this5 = t3;
				}
				this4 = this5;
			} else {
				this4 = t2;
			}
			this3 = this4;
		} else {
			this3 = t1;
		}
		this2 = this3;
	} else {
		this2 = t;
	}
	var this8 = this2;
	this1 = this8;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.add = function(this1,tri) {
	this1[this1.length] = tri;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.addPair = function(this1,tp) {
	this1[this1.length] = tp.t0;
	this1[this1.length] = tp.t1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.addArray = function(this1,triArr) {
	var _g = 0;
	while(_g < triArr.length) {
		var t = triArr[_g];
		++_g;
		this1[this1.length] = t;
	}
	return triArr;
};
var trilateralXtra_parsing_FillDrawTess2 = function(w,h) {
	trilateral_parsing_FillDraw.call(this,w,h);
};
$hxClasses["trilateralXtra.parsing.FillDrawTess2"] = trilateralXtra_parsing_FillDrawTess2;
trilateralXtra_parsing_FillDrawTess2.__name__ = "trilateralXtra.parsing.FillDrawTess2";
trilateralXtra_parsing_FillDrawTess2.__super__ = trilateral_parsing_FillDraw;
trilateralXtra_parsing_FillDrawTess2.prototype = $extend(trilateral_parsing_FillDraw.prototype,{
	fillFunc: function(p) {
		var res = hxGeomAlgo_Tess2.tesselate(p,null,hxGeomAlgo_ResultType.POLYGONS,3);
		var vert = res.vertices;
		var tri = res.elements;
		return { vert : vert, tri : tri};
	}
	,pathFactory: function() {
		var pen = new trilateral_path_Fine(null,null,null);
		return pen;
	}
	,__class__: trilateralXtra_parsing_FillDrawTess2
});
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
hxGeomAlgo_PolyTools.exposeEnum(hxGeomAlgo_WindingRule);
hxGeomAlgo_PolyTools.exposeEnum(hxGeomAlgo_ResultType);
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
Main.wid = 800;
Main.hi = 600;
Main.bgColor = -10185235;
Main.depth = 0.3;
Main.fractionColor = 0.45454545454545453;
Main.randomColors = false;
Xml.Element = 0;
Xml.PCData = 1;
Xml.Document = 6;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
htmlHelper_tools_AnimateTimer.counter = 0;
hxGeomAlgo_HomogCoord.INFINITY = new hxGeomAlgo_HomogCoord();
hxGeomAlgo__$HxPoint_HxPoint_$Impl_$.EMPTY = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(NaN,NaN);
hxGeomAlgo_PolyTools.point = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new();
hxGeomAlgo_PolyTools.zero = hxGeomAlgo__$HxPoint_HxPoint_$Impl_$._new(0,0);
hxGeomAlgo_PolyTools.EPSILON = .00000001;
hxPolyK_PolyK.small = 0.0000000001;
iron_App.traitInits = [];
iron_App.traitUpdates = [];
iron_App.traitLateUpdates = [];
iron_App.traitRenders = [];
iron_App.traitRenders2D = [];
iron_App.pauseUpdates = false;
iron_App.lastw = -1;
iron_App.lasth = -1;
iron_RenderPath.meshContext = "mesh";
iron_RenderPath.shadowsContext = "shadowmap";
iron_Scene.uidCounter = 0;
iron_Scene.framePassed = true;
iron_data_ConstData.skydomeIndices = [0,1,2,0,3,4,3,5,6,5,7,8,7,9,10,9,11,12,13,14,15,11,16,17,13,18,2,14,2,19,2,1,20,1,4,21,4,6,22,6,8,23,8,10,24,10,12,25,14,26,15,17,27,25,22,23,28,24,29,28,24,25,30,26,31,15,25,27,32,26,19,33,19,20,34,20,21,35,21,22,36,33,34,37,34,35,38,35,36,39,36,28,40,28,29,41,30,42,41,31,43,15,30,32,44,31,33,45,40,41,46,42,47,46,43,48,15,42,44,49,43,45,50,45,37,51,37,38,52,39,53,52,39,40,54,50,51,55,51,52,56,53,57,56,53,54,58,46,59,58,46,47,60,48,61,15,47,49,62,48,50,63,59,64,65,59,60,66,61,67,15,60,62,68,61,63,69,63,55,70,56,71,70,56,57,72,57,58,65,70,71,73,71,72,74,72,65,75,64,76,75,64,66,77,67,78,15,68,79,77,67,69,80,69,70,81,76,77,82,78,83,15,77,79,84,80,85,83,80,81,86,81,73,87,74,88,87,74,75,89,76,90,89,87,88,91,88,89,92,90,93,92,90,82,94,83,95,15,82,84,96,83,85,97,86,98,97,86,87,99,95,100,15,96,101,102,95,97,103,97,98,104,98,99,105,91,106,105,91,92,107,93,108,107,93,94,102,105,106,109,106,107,110,108,111,110,108,102,112,100,113,15,102,101,114,100,103,115,103,104,116,104,105,117,114,118,119,113,115,120,115,116,121,117,122,121,109,123,122,109,110,124,111,125,124,111,112,119,113,126,15,123,124,127,125,128,127,125,119,129,126,130,15,119,118,131,126,120,132,121,133,132,121,122,134,122,123,135,130,132,136,132,133,137,133,134,138,134,135,139,135,127,140,128,141,140,128,129,142,130,143,15,129,131,144,139,140,145,141,146,145,141,142,147,143,148,15,142,144,149,143,136,150,137,151,150,138,152,151,138,139,153,150,151,154,152,155,154,153,156,155,153,145,157,146,158,157,146,147,159,148,160,15,147,149,161,148,150,162,158,163,164,158,159,165,160,166,15,161,167,165,160,162,168,162,154,169,155,170,169,156,171,170,156,157,164,169,170,172,171,173,172,171,164,174,163,175,174,163,165,176,166,177,15,165,167,178,166,168,179,168,169,180,176,181,182,177,183,15,176,178,184,177,179,185,179,180,186,172,187,186,173,188,187,173,174,189,175,182,189,187,190,191,188,192,190,188,189,193,182,194,193,182,181,195,183,196,15,181,184,197,183,185,198,185,186,191,194,195,199,196,200,15,195,197,201,196,198,202,198,191,203,190,204,203,192,205,204,192,193,206,194,207,206,205,208,209,205,206,210,207,211,210,207,199,212,200,213,15,199,201,214,202,215,213,202,203,216,204,209,216,213,217,15,214,218,219,215,220,217,215,216,221,209,222,221,209,208,223,208,210,224,211,225,224,211,212,219,223,226,227,223,224,228,225,229,228,225,219,230,217,231,15,218,232,230,220,233,231,220,221,234,222,227,234,230,232,235,231,233,236,233,234,237,227,238,237,227,226,239,226,228,240,229,241,240,229,230,242,231,243,15,239,240,244,241,245,244,241,242,246,243,247,15,235,248,246,243,236,249,237,250,249,238,251,250,239,252,251,249,250,253,250,251,254,252,255,254,252,244,256,245,257,256,245,246,258,247,259,15,248,260,258,247,249,261,257,262,263,258,264,262,259,265,15,258,260,266,259,261,267,261,253,268,253,254,269,255,270,269,255,256,263,268,271,272,269,273,271,270,274,273,270,263,275,262,276,275,262,264,277,265,278,15,264,266,279,267,272,278,276,280,281,276,277,282,278,283,15,277,279,284,278,272,285,272,271,286,271,273,287,274,288,287,274,275,281,287,3,0,288,5,3,281,7,5,280,9,7,282,11,9,283,13,15,282,284,16,285,18,13,286,0,18,0,2,18,0,4,1,3,6,4,5,8,6,7,10,8,9,12,10,11,17,12,13,2,14,14,19,26,2,20,19,1,21,20,4,22,21,6,23,22,8,24,23,10,25,24,17,25,12,22,28,36,24,28,23,24,30,29,25,32,30,26,33,31,19,34,33,20,35,34,21,36,35,33,37,45,34,38,37,35,39,38,36,40,39,28,41,40,30,41,29,30,44,42,31,45,43,40,46,54,42,46,41,42,49,47,43,50,48,45,51,50,37,52,51,39,52,38,39,54,53,50,55,63,51,56,55,53,56,52,53,58,57,46,58,54,46,60,59,47,62,60,48,63,61,59,65,58,59,66,64,60,68,66,61,69,67,63,70,69,56,70,55,56,72,71,57,65,72,70,73,81,71,74,73,72,75,74,64,75,65,64,77,76,68,77,66,67,80,78,69,81,80,76,82,90,77,84,82,80,83,78,80,86,85,81,87,86,74,87,73,74,89,88,76,89,75,87,91,99,88,92,91,90,92,89,90,94,93,82,96,94,83,97,95,86,97,85,86,99,98,96,102,94,95,103,100,97,104,103,98,105,104,91,105,99,91,107,106,93,107,92,93,102,108,105,109,117,106,110,109,108,110,107,108,112,111,102,114,112,100,115,113,103,116,115,104,117,116,114,119,112,113,120,126,115,121,120,117,121,116,109,122,117,109,124,123,111,124,110,111,119,125,123,127,135,125,127,124,125,129,128,119,131,129,126,132,130,121,132,120,121,134,133,122,135,134,130,136,143,132,137,136,133,138,137,134,139,138,135,140,139,128,140,127,128,142,141,129,144,142,139,145,153,141,145,140,141,147,146,142,149,147,143,150,148,137,150,136,138,151,137,138,153,152,150,154,162,152,154,151,153,155,152,153,157,156,146,157,145,146,159,158,147,161,159,148,162,160,158,164,157,158,165,163,161,165,159,160,168,166,162,169,168,155,169,154,156,170,155,156,164,171,169,172,180,171,172,170,171,174,173,163,174,164,163,176,175,165,178,176,166,179,177,168,180,179,176,182,175,176,184,181,177,185,183,179,186,185,172,186,180,173,187,172,173,189,188,175,189,174,187,191,186,188,190,187,188,193,192,182,193,189,182,195,194,181,197,195,183,198,196,185,191,198,194,199,207,195,201,199,196,202,200,198,203,202,190,203,191,192,204,190,192,206,205,194,206,193,205,209,204,205,210,208,207,210,206,207,212,211,199,214,212,202,213,200,202,216,215,204,216,203,214,219,212,215,217,213,215,221,220,209,221,216,209,223,222,208,224,223,211,224,210,211,219,225,223,227,222,223,228,226,225,228,224,225,230,229,218,230,219,220,231,217,220,234,233,222,234,221,230,235,242,231,236,243,233,237,236,227,237,234,227,239,238,226,240,239,229,240,228,229,242,241,239,244,252,241,244,240,241,246,245,235,246,242,243,249,247,237,249,236,238,250,237,239,251,238,249,253,261,250,254,253,252,254,251,252,256,255,245,256,244,245,258,257,248,258,246,247,261,259,257,263,256,258,262,257,258,266,264,259,267,265,261,268,267,253,269,268,255,269,254,255,263,270,268,272,267,269,271,268,270,273,269,270,275,274,262,275,263,262,277,276,264,279,277,267,278,265,276,281,275,276,282,280,277,284,282,278,285,283,272,286,285,271,287,286,274,287,273,274,281,288,287,0,286,288,3,287,281,5,288,280,7,281,282,9,280,282,16,11,285,13,283,286,18,285,84,289,96,96,289,101,101,289,114,114,289,118,118,289,131,144,131,289,149,144,289,149,289,161,161,289,167,167,289,178,178,289,184,184,289,197,197,289,201,201,289,214,214,289,218,218,289,232,232,289,235,235,289,248,260,248,289,260,289,266,266,289,279,279,289,284,284,289,16,16,289,17,27,17,289,27,289,32,44,32,289,44,289,49,49,289,62,62,289,68,68,289,79,79,289,84];
iron_data_ConstData.skydomePos = [-0.55557,0.0,0.83147,-0.544895,0.108386,0.83147,-0.37533,0.074658,0.92388,-0.707107,0.0,0.707107,-0.69352,0.13795,0.707107,-0.83147,0.0,0.55557,-0.815493,0.162212,0.55557,-0.92388,0.0,0.382683,-0.906127,0.18024,0.382683,-0.980785,0.0,0.19509,-0.96194,0.191342,0.19509,-1.0,0.0,0.0,-0.980785,0.19509,0.0,-0.19509,0.0,0.980785,-0.191342,0.03806,0.980785,0.0,0.0,1.,-0.980785,0.0,-0.28234,-0.96194,0.191342,-0.28234,-0.382683,0.0,0.92388,-0.353553,0.146447,0.92388,-0.51328,0.212608,0.83147,-0.653281,0.270598,0.707107,-0.768178,0.31819,0.55557,-0.853553,0.353553,0.382683,-0.906127,0.37533,0.19509,-0.923879,0.382684,0.0,-0.18024,0.074658,0.980785,-0.906127,0.37533,-0.28234,-0.768178,0.51328,0.382683,-0.815493,0.544895,0.19509,-0.831469,0.55557,0.0,-0.162212,0.108387,0.980785,-0.815493,0.544895,-0.28234,-0.31819,0.212608,0.92388,-0.46194,0.308658,0.83147,-0.587938,0.392848,0.707107,-0.691342,0.46194,0.55557,-0.392847,0.392848,0.83147,-0.5,0.5,0.707107,-0.587938,0.587938,0.55557,-0.653281,0.653282,0.382683,-0.69352,0.69352,0.19509,-0.707107,0.707107,0.0,-0.13795,0.13795,0.980785,-0.69352,0.69352,-0.28234,-0.270598,0.270598,0.92388,-0.544895,0.815493,0.19509,-0.55557,0.83147,0.0,-0.108386,0.162212,0.980785,-0.544895,0.815493,-0.28234,-0.212607,0.31819,0.92388,-0.308658,0.46194,0.83147,-0.392847,0.587938,0.707107,-0.46194,0.691342,0.55557,-0.51328,0.768178,0.382683,-0.212607,0.51328,0.83147,-0.270598,0.653282,0.707107,-0.318189,0.768178,0.55557,-0.353553,0.853554,0.382683,-0.37533,0.906128,0.19509,-0.382683,0.92388,0.0,-0.074658,0.18024,0.980785,-0.37533,0.906128,-0.28234,-0.146446,0.353554,0.92388,-0.191341,0.96194,0.19509,-0.18024,0.906128,0.382683,-0.19509,0.980785,0.0,-0.03806,0.191342,0.980785,-0.191341,0.96194,-0.28234,-0.074658,0.375331,0.92388,-0.108386,0.544895,0.83147,-0.137949,0.69352,0.707107,-0.162211,0.815493,0.55557,0.0,0.707107,0.707107,0.0,0.83147,0.55557,0.0,0.92388,0.382683,0.0,0.980785,0.19509,0.0,1.,0.0,0.0,0.195091,0.980785,0.0,0.980785,-0.28234,0.0,0.382684,0.92388,0.0,0.55557,0.83147,0.195091,0.980785,0.0,0.038061,0.191342,0.980785,0.191342,0.96194,-0.28234,0.074658,0.375331,0.92388,0.108387,0.544895,0.83147,0.13795,0.69352,0.707107,0.162212,0.815493,0.55557,0.18024,0.906128,0.382683,0.191342,0.96194,0.19509,0.31819,0.768178,0.55557,0.353554,0.853554,0.382683,0.375331,0.906127,0.19509,0.382684,0.92388,0.0,0.074658,0.18024,0.980785,0.375331,0.906127,-0.28234,0.146447,0.353554,0.92388,0.212608,0.51328,0.83147,0.270598,0.653282,0.707107,0.108387,0.162212,0.980785,0.544895,0.815493,-0.28234,0.555571,0.83147,0.0,0.212608,0.31819,0.92388,0.308659,0.46194,0.83147,0.392848,0.587938,0.707107,0.46194,0.691342,0.55557,0.51328,0.768178,0.382683,0.544895,0.815493,0.19509,0.587938,0.587938,0.55557,0.653282,0.653282,0.382683,0.69352,0.69352,0.19509,0.707107,0.707107,0.0,0.13795,0.13795,0.980785,0.69352,0.69352,-0.28234,0.270599,0.270598,0.92388,0.392848,0.392848,0.83147,0.5,0.5,0.707107,0.815493,0.544895,-0.28234,0.83147,0.55557,0.0,0.31819,0.212608,0.92388,0.46194,0.308658,0.83147,0.587938,0.392848,0.707107,0.691342,0.46194,0.55557,0.768178,0.51328,0.382683,0.815493,0.544895,0.19509,0.162212,0.108386,0.980785,0.853554,0.353553,0.382683,0.906128,0.37533,0.19509,0.92388,0.382683,0.0,0.18024,0.074658,0.980785,0.906128,0.37533,-0.28234,0.353554,0.146447,0.92388,0.51328,0.212608,0.83147,0.653282,0.270598,0.707107,0.768178,0.31819,0.55557,0.375331,0.074658,0.92388,0.544896,0.108386,0.83147,0.69352,0.13795,0.707107,0.815493,0.162212,0.55557,0.906128,0.18024,0.382683,0.96194,0.191342,0.19509,0.980786,0.19509,0.0,0.191342,0.03806,0.980785,0.96194,0.191342,-0.28234,0.92388,0.0,0.382683,0.980785,0.0,0.19509,1.,0.0,0.0,0.195091,0.0,0.980785,0.980785,0.0,-0.28234,0.382684,0.0,0.92388,0.555571,0.0,0.83147,0.707107,0.0,0.707107,0.83147,0.0,0.55557,0.544896,-0.108386,0.83147,0.69352,-0.13795,0.707107,0.815493,-0.162212,0.55557,0.906128,-0.18024,0.382683,0.96194,-0.191342,0.19509,0.980786,-0.19509,0.0,0.191342,-0.03806,0.980785,0.96194,-0.191342,-0.28234,0.375331,-0.074658,0.92388,0.906127,-0.37533,0.19509,0.853554,-0.353553,0.382683,0.92388,-0.382684,0.0,0.18024,-0.074658,0.980785,0.906127,-0.37533,-0.28234,0.353554,-0.146447,0.92388,0.51328,-0.212608,0.83147,0.653282,-0.270598,0.707107,0.768178,-0.31819,0.55557,0.587938,-0.392847,0.707107,0.691342,-0.46194,0.55557,0.768178,-0.51328,0.382683,0.815493,-0.544895,0.19509,0.83147,-0.55557,0.0,0.162212,-0.108386,0.980785,0.815493,-0.544895,-0.28234,0.31819,-0.212608,0.92388,0.46194,-0.308658,0.83147,0.707107,-0.707107,0.0,0.69352,-0.69352,0.19509,0.13795,-0.13795,0.980785,0.69352,-0.69352,-0.28234,0.270598,-0.270598,0.92388,0.392848,-0.392848,0.83147,0.5,-0.5,0.707107,0.587938,-0.587938,0.55557,0.653282,-0.653281,0.382683,0.392848,-0.587938,0.707107,0.308659,-0.46194,0.83147,0.46194,-0.691342,0.55557,0.51328,-0.768178,0.382683,0.544895,-0.815493,0.19509,0.55557,-0.83147,0.0,0.108387,-0.162212,0.980785,0.544895,-0.815493,-0.28234,0.212608,-0.31819,0.92388,0.382684,-0.92388,0.0,0.074658,-0.18024,0.980785,0.37533,-0.906127,-0.28234,0.146447,-0.353553,0.92388,0.212608,-0.51328,0.83147,0.270598,-0.653281,0.707107,0.31819,-0.768177,0.55557,0.353554,-0.853553,0.382683,0.37533,-0.906127,0.19509,0.162212,-0.815493,0.55557,0.13795,-0.69352,0.707107,0.18024,-0.906127,0.382683,0.191342,-0.961939,0.19509,0.19509,-0.980785,0.0,0.038061,-0.191342,0.980785,0.191342,-0.961939,-0.28234,0.074658,-0.37533,0.92388,0.108387,-0.544895,0.83147,0.0,-0.19509,0.980785,0.0,-0.980785,-0.28234,0.0,-1.0,0.0,0.0,-0.382683,0.92388,0.0,-0.55557,0.83147,0.0,-0.707107,0.707107,0.0,-0.831469,0.55557,0.0,-0.923879,0.382683,0.0,-0.980785,0.19509,-0.162211,-0.815493,0.55557,-0.137949,-0.69352,0.707107,-0.18024,-0.906127,0.382683,-0.191342,-0.961939,0.19509,-0.19509,-0.980785,0.0,-0.03806,-0.191342,0.980785,-0.191342,-0.961939,-0.28234,-0.074658,-0.37533,0.92388,-0.108386,-0.544895,0.83147,-0.37533,-0.906127,-0.28234,-0.146446,-0.353553,0.92388,-0.212607,-0.51328,0.83147,-0.270598,-0.653281,0.707107,-0.318189,-0.768177,0.55557,-0.353553,-0.853553,0.382683,-0.37533,-0.906127,0.19509,-0.382683,-0.923879,0.0,-0.074658,-0.18024,0.980785,-0.51328,-0.768178,0.382683,-0.544895,-0.815493,0.19509,-0.55557,-0.831469,0.0,-0.108386,-0.162212,0.980785,-0.544895,-0.815493,-0.28234,-0.212607,-0.31819,0.92388,-0.308658,-0.46194,0.83147,-0.392847,-0.587938,0.707107,-0.461939,-0.691341,0.55557,-0.392847,-0.392847,0.83147,-0.5,-0.5,0.707107,-0.587937,-0.587937,0.55557,-0.653281,-0.653281,0.382683,-0.693519,-0.693519,0.19509,-0.707106,-0.707106,0.0,-0.137949,-0.13795,0.980785,-0.693519,-0.693519,-0.28234,-0.270598,-0.270598,0.92388,-0.815492,-0.544895,0.19509,-0.768177,-0.51328,0.382683,-0.831469,-0.55557,0.0,-0.162211,-0.108386,0.980785,-0.815492,-0.544895,-0.28234,-0.318189,-0.212607,0.92388,-0.461939,-0.308658,0.83147,-0.587937,-0.392847,0.707107,-0.691341,-0.461939,0.55557,-0.51328,-0.212607,0.83147,-0.353553,-0.146447,0.92388,-0.653281,-0.270598,0.707107,-0.768177,-0.318189,0.55557,-0.853553,-0.353553,0.382683,-0.906127,-0.37533,0.19509,-0.923879,-0.382683,0.0,-0.18024,-0.074658,0.980785,-0.906127,-0.37533,-0.28234,-0.961939,-0.191341,0.19509,-0.906127,-0.18024,0.382683,-0.980785,-0.19509,0.0,-0.191342,-0.03806,0.980785,-0.961939,-0.191341,-0.28234,-0.37533,-0.074658,0.92388,-0.544895,-0.108386,0.83147,-0.69352,-0.13795,0.707107,-0.815492,-0.162211,0.55557,0.0,0.0,-0.860043];
iron_data_ConstData.skydomeNor = [0.559771,0.0,-0.828639,0.548997,-0.109195,-0.828639,0.380413,-0.075655,-0.92169,0.710135,0.0,-0.704031,0.696493,-0.138524,-0.704031,0.833338,0.0,-0.552751,0.817316,-0.162572,-0.552751,0.924741,0.0,-0.380535,0.90698,-0.180395,-0.380535,0.980987,0.0,-0.193915,0.962157,-0.191382,-0.193915,0.999878,0.0,-0.015015,0.980651,-0.195044,-0.015015,0.200964,0.0,-0.979583,0.197089,-0.039186,-0.979583,0.0,0.0,-1.0,0.858486,0.0,0.512803,0.841975,-0.167455,0.512803,0.38786,0.0,-0.92169,0.358348,-0.148412,-0.92169,0.517136,-0.214209,-0.828639,0.656056,-0.271737,-0.704031,0.76989,-0.318888,-0.552751,0.854366,-0.353862,-0.380535,0.906339,-0.375408,-0.193915,0.923765,-0.382611,-0.015015,0.185644,-0.076907,-0.979583,0.793146,-0.328532,0.512803,0.768914,-0.513749,-0.380535,0.815668,-0.545,-0.193915,0.831355,-0.555498,-0.015015,0.167089,-0.111637,-0.979583,0.713797,-0.476943,0.512803,0.322489,-0.215491,-0.92169,0.465407,-0.310984,-0.828639,0.590442,-0.394513,-0.704031,0.692892,-0.462966,-0.552751,0.395795,-0.395795,-0.828639,0.502121,-0.502121,-0.704031,0.589251,-0.589251,-0.552751,0.65389,-0.65389,-0.380535,0.693655,-0.693655,-0.193915,0.707022,-0.707022,-0.015015,0.142094,-0.142094,-0.979583,0.607044,-0.607044,0.512803,0.27427,-0.27427,-0.92169,0.545,-0.815668,-0.193915,0.555498,-0.831355,-0.015015,0.111637,-0.167089,-0.979583,0.476943,-0.713797,0.512803,0.215491,-0.322489,-0.92169,0.310984,-0.465407,-0.828639,0.394513,-0.590442,-0.704031,0.462966,-0.692892,-0.552751,0.513749,-0.768914,-0.380535,0.214209,-0.517136,-0.828639,0.271737,-0.656056,-0.704031,0.318888,-0.76989,-0.552751,0.353862,-0.854366,-0.380535,0.375408,-0.906339,-0.193915,0.382611,-0.923765,-0.015015,0.076907,-0.185644,-0.979583,0.328532,-0.793146,0.512803,0.148412,-0.358348,-0.92169,0.191382,-0.962157,-0.193915,0.180395,-0.90698,-0.380535,0.195044,-0.980651,-0.015015,0.039186,-0.197089,-0.979583,0.167455,-0.841975,0.512803,0.075655,-0.380413,-0.92169,0.109195,-0.548997,-0.828639,0.138524,-0.696493,-0.704031,0.162572,-0.817316,-0.552751,0.0,-0.710135,-0.704031,0.0,-0.833338,-0.552751,0.0,-0.924741,-0.380535,0.0,-0.980987,-0.193915,0.0,-0.999878,-0.015015,0.0,-0.200964,-0.979583,0.0,-0.858486,0.512803,0.0,-0.38786,-0.92169,0.0,-0.559771,-0.828639,-0.195044,-0.980651,-0.015015,-0.039186,-0.197089,-0.979583,-0.167455,-0.841975,0.512803,-0.075655,-0.380413,-0.92169,-0.109195,-0.548997,-0.828639,-0.138524,-0.696493,-0.704031,-0.162572,-0.817316,-0.552751,-0.180395,-0.90698,-0.380535,-0.191382,-0.962157,-0.193915,-0.318888,-0.76989,-0.552751,-0.353862,-0.854366,-0.380535,-0.375408,-0.906339,-0.193915,-0.382611,-0.923765,-0.015015,-0.076907,-0.185644,-0.979583,-0.328532,-0.793146,0.512803,-0.148412,-0.358348,-0.92169,-0.214209,-0.517136,-0.828639,-0.271737,-0.656056,-0.704031,-0.111637,-0.167089,-0.979583,-0.476943,-0.713797,0.512803,-0.555498,-0.831355,-0.015015,-0.215491,-0.322489,-0.92169,-0.310984,-0.465407,-0.828639,-0.394513,-0.590442,-0.704031,-0.462966,-0.692892,-0.552751,-0.513749,-0.768914,-0.380535,-0.545,-0.815668,-0.193915,-0.589251,-0.589251,-0.552751,-0.65389,-0.65389,-0.380535,-0.693655,-0.693655,-0.193915,-0.707022,-0.707022,-0.015015,-0.142094,-0.142094,-0.979583,-0.607044,-0.607044,0.512803,-0.27427,-0.27427,-0.92169,-0.395795,-0.395795,-0.828639,-0.502121,-0.502121,-0.704031,-0.713797,-0.476943,0.512803,-0.831355,-0.555498,-0.015015,-0.322489,-0.215491,-0.92169,-0.465407,-0.310984,-0.828639,-0.590442,-0.394513,-0.704031,-0.692892,-0.462966,-0.552751,-0.768914,-0.513749,-0.380535,-0.815668,-0.545,-0.193915,-0.167089,-0.111637,-0.979583,-0.854366,-0.353862,-0.380535,-0.906339,-0.375408,-0.193915,-0.923765,-0.382611,-0.015015,-0.185644,-0.076907,-0.979583,-0.793146,-0.328532,0.512803,-0.358348,-0.148412,-0.92169,-0.517136,-0.214209,-0.828639,-0.656056,-0.271737,-0.704031,-0.76989,-0.318888,-0.552751,-0.380413,-0.075655,-0.92169,-0.548997,-0.109195,-0.828639,-0.696493,-0.138524,-0.704031,-0.817316,-0.162572,-0.552751,-0.90698,-0.180395,-0.380535,-0.962157,-0.191382,-0.193915,-0.980651,-0.195044,-0.015015,-0.197089,-0.039186,-0.979583,-0.841975,-0.167455,0.512803,-0.924741,0.0,-0.380535,-0.980987,0.0,-0.193915,-0.999878,0.0,-0.015015,-0.200964,0.0,-0.979583,-0.858486,0.0,0.512803,-0.38786,0.0,-0.92169,-0.559771,0.0,-0.828639,-0.710135,0.0,-0.704031,-0.833338,0.0,-0.552751,-0.548997,0.109195,-0.828639,-0.696493,0.138524,-0.704031,-0.817316,0.162572,-0.552751,-0.90698,0.180395,-0.380535,-0.962157,0.191382,-0.193915,-0.980651,0.195044,-0.015015,-0.197089,0.039186,-0.979583,-0.841975,0.167455,0.512803,-0.380413,0.075655,-0.92169,-0.906339,0.375408,-0.193915,-0.854366,0.353862,-0.380535,-0.923765,0.382611,-0.015015,-0.185644,0.076907,-0.979583,-0.793146,0.328532,0.512803,-0.358348,0.148412,-0.92169,-0.517136,0.214209,-0.828639,-0.656056,0.271737,-0.704031,-0.76989,0.318888,-0.552751,-0.590442,0.394513,-0.704031,-0.692892,0.462966,-0.552751,-0.768914,0.513749,-0.380535,-0.815668,0.545,-0.193915,-0.831355,0.555498,-0.015015,-0.167089,0.111637,-0.979583,-0.713797,0.476943,0.512803,-0.322489,0.215491,-0.92169,-0.465407,0.310984,-0.828639,-0.707022,0.707022,-0.015015,-0.693655,0.693655,-0.193915,-0.142094,0.142094,-0.979583,-0.607044,0.607044,0.512803,-0.27427,0.27427,-0.92169,-0.395795,0.395795,-0.828639,-0.502121,0.502121,-0.704031,-0.589251,0.589251,-0.552751,-0.65389,0.65389,-0.380535,-0.394513,0.590442,-0.704031,-0.310984,0.465407,-0.828639,-0.462966,0.692892,-0.552751,-0.513749,0.768914,-0.380535,-0.545,0.815668,-0.193915,-0.555498,0.831355,-0.015015,-0.111637,0.167089,-0.979583,-0.476943,0.713797,0.512803,-0.215491,0.322489,-0.92169,-0.382611,0.923765,-0.015015,-0.076907,0.185644,-0.979583,-0.328532,0.793146,0.512803,-0.148412,0.358348,-0.92169,-0.214209,0.517136,-0.828639,-0.271737,0.656056,-0.704031,-0.318888,0.76989,-0.552751,-0.353862,0.854366,-0.380535,-0.375408,0.906339,-0.193915,-0.162572,0.817316,-0.552751,-0.138524,0.696493,-0.704031,-0.180395,0.90698,-0.380535,-0.191382,0.962157,-0.193915,-0.195044,0.980651,-0.015015,-0.039186,0.197089,-0.979583,-0.167455,0.841975,0.512803,-0.075655,0.380413,-0.92169,-0.109195,0.548997,-0.828639,0.0,0.200964,-0.979583,0.0,0.858486,0.512803,0.0,0.999878,-0.015015,0.0,0.38786,-0.92169,0.0,0.559771,-0.828639,0.0,0.710135,-0.704031,0.0,0.833338,-0.552751,0.0,0.924741,-0.380535,0.0,0.980987,-0.193915,0.162572,0.817316,-0.552751,0.138524,0.696493,-0.704031,0.180395,0.90698,-0.380535,0.191382,0.962157,-0.193915,0.195044,0.980651,-0.015015,0.039186,0.197089,-0.979583,0.167455,0.841975,0.512803,0.075655,0.380413,-0.92169,0.109195,0.548997,-0.828639,0.328532,0.793146,0.512803,0.148412,0.358348,-0.92169,0.214209,0.517136,-0.828639,0.271737,0.656056,-0.704031,0.318888,0.76989,-0.552751,0.353862,0.854366,-0.380535,0.375408,0.906339,-0.193915,0.382611,0.923765,-0.015015,0.076907,0.185644,-0.979583,0.513749,0.768914,-0.380535,0.545,0.815668,-0.193915,0.555498,0.831355,-0.015015,0.111637,0.167089,-0.979583,0.476943,0.713797,0.512803,0.215491,0.322489,-0.92169,0.310984,0.465407,-0.828639,0.394513,0.590442,-0.704031,0.462966,0.692892,-0.552751,0.395795,0.395795,-0.828639,0.502121,0.502121,-0.704031,0.589251,0.589251,-0.552751,0.65389,0.65389,-0.380535,0.693655,0.693655,-0.193915,0.707022,0.707022,-0.015015,0.142094,0.142094,-0.979583,0.607044,0.607044,0.512803,0.27427,0.27427,-0.92169,0.815668,0.545,-0.193915,0.768914,0.513749,-0.380535,0.831355,0.555498,-0.015015,0.167089,0.111637,-0.979583,0.713797,0.476943,0.512803,0.322489,0.215491,-0.92169,0.465407,0.310984,-0.828639,0.590442,0.394513,-0.704031,0.692892,0.462966,-0.552751,0.517136,0.214209,-0.828639,0.358348,0.148412,-0.92169,0.656056,0.271737,-0.704031,0.76989,0.318888,-0.552751,0.854366,0.353862,-0.380535,0.906339,0.375408,-0.193915,0.923765,0.382611,-0.015015,0.185644,0.076907,-0.979583,0.793146,0.328532,0.512803,0.962157,0.191382,-0.193915,0.90698,0.180395,-0.380535,0.980651,0.195044,-0.015015,0.197089,0.039186,-0.979583,0.841975,0.167486,0.512803,0.380413,0.075655,-0.92169,0.548997,0.109195,-0.828639,0.696493,0.138524,-0.704031,0.817316,0.162572,-0.552751,0.0,0.0,0.999969];
iron_data_ConstData.sphereIndices = [0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,11,12,13,14,15,16,14,16,17,18,19,20,18,20,21,22,23,24,22,24,25,26,27,28,26,28,29,30,31,32,33,34,35,33,35,36,37,38,39,37,39,40,41,42,43,41,43,44,45,46,47,45,47,48,49,50,51,49,51,52,53,54,55,53,55,56,57,58,59,60,61,62,60,62,63,64,65,66,64,66,67,68,69,70,68,70,71,72,73,74,72,74,75,76,77,78,79,80,81,82,83,84,82,84,85,86,87,88,86,88,89,90,91,92,90,92,93,94,95,96,94,96,97,98,99,100,98,100,101,102,103,104,105,106,107,108,109,110,108,110,111,112,113,114,112,114,115,116,117,118,116,118,119,120,121,122,123,124,125,126,127,128,126,128,129,130,131,132,130,132,133,134,135,136,134,136,137,138,139,140,138,140,141,142,143,144,142,144,145,146,147,148,146,148,149,150,151,152,150,152,153,154,155,156,154,156,157,158,159,160,158,160,161,162,163,164,162,164,165,166,167,168,166,168,169,170,171,172,170,172,173,174,175,176,177,178,179,180,181,182,180,182,183,184,185,186,184,186,187,188,189,190,188,190,191,192,193,194,195,196,197,198,199,200,198,200,201,202,203,204,202,204,205,206,207,208,206,208,209,210,211,212,210,212,213,214,215,216,214,216,217,218,219,220,221,222,223,224,225,226,224,226,227,228,229,230,228,230,231,232,233,234,232,234,235,236,237,238,236,238,239,240,241,242,243,244,245,243,245,246,247,248,249,247,249,250,251,252,253,251,253,254,255,256,257,255,257,258,259,260,261,259,261,262,263,264,265,263,265,266,267,268,269,270,271,272,270,272,273,274,275,276,274,276,277,278,279,280,278,280,281,282,283,284,282,284,285,286,287,288,286,288,289,290,291,292,293,294,295,296,297,298,296,298,299,300,301,302,300,302,303,304,305,306,304,306,307,308,309,310,308,310,311,312,313,314,315,316,317,318,319,320,318,320,321,322,323,324,322,324,325,326,327,328,326,328,329,330,331,332,330,332,333,334,335,336,337,338,339,340,341,342,340,342,343,344,345,346,344,346,347,348,349,350,348,350,351,352,353,354,352,354,355,356,357,358,356,358,359,360,361,362,363,364,365,363,365,366,367,368,369,367,369,370,371,372,373,371,373,374,375,376,377,375,377,378,379,380,381,379,381,382,383,384,385,383,385,386,387,388,389,390,391,392,390,392,393,394,395,396,394,396,397,398,399,400,398,400,401,402,403,404,402,404,405,406,407,408,409,410,411,412,413,414,412,414,415,416,417,418,416,418,419,420,421,422,420,422,423,424,425,426,424,426,427,428,429,430,428,430,431,432,433,434,435,436,437,438,439,440,438,440,441,442,443,444,442,444,445,446,447,448,446,448,449,450,451,452,453,454,455,456,457,458,456,458,459,460,461,462,460,462,463,464,465,466,464,466,467,468,469,470,468,470,471,472,473,474,472,474,475,476,477,478,476,478,479];
iron_data_ConstData.spherePos = [0.0,0.46194,-0.191342,0.0,0.5,0.0,0.191342,0.46194,0.0,0.176777,0.426777,-0.191342,0.0,0.46194,0.191342,0.0,0.353553,0.353553,0.135299,0.326641,0.353553,0.176777,0.426777,0.191342,0.0,0.191342,0.46194,0.0,0.0,0.5,0.073223,0.176777,0.46194,0.0,0.0,-0.5,0.0,0.191342,-0.46194,0.073223,0.176777,-0.46194,0.0,0.353553,-0.353553,0.0,0.46194,-0.191342,0.176777,0.426777,-0.191342,0.135299,0.326641,-0.353553,0.0,0.5,0.0,0.0,0.46194,0.191342,0.176777,0.426777,0.191342,0.191342,0.46194,0.0,0.0,0.353553,0.353553,0.0,0.191342,0.46194,0.073223,0.176777,0.46194,0.135299,0.326641,0.353553,0.0,0.191342,-0.46194,0.0,0.353553,-0.353553,0.135299,0.326641,-0.353553,0.073223,0.176777,-0.46194,0.0,0.0,-0.5,0.073223,0.176777,-0.46194,0.135299,0.135299,-0.46194,0.135299,0.326641,-0.353553,0.176777,0.426777,-0.191342,0.326641,0.326641,-0.191342,0.25,0.25,-0.353553,0.191342,0.46194,0.0,0.176777,0.426777,0.191342,0.326641,0.326641,0.191342,0.353553,0.353553,0.0,0.135299,0.326641,0.353553,0.073223,0.176777,0.46194,0.135299,0.135299,0.46194,0.25,0.25,0.353553,0.073223,0.176777,-0.46194,0.135299,0.326641,-0.353553,0.25,0.25,-0.353553,0.135299,0.135299,-0.46194,0.176777,0.426777,-0.191342,0.191342,0.46194,0.0,0.353553,0.353553,0.0,0.326641,0.326641,-0.191342,0.176777,0.426777,0.191342,0.135299,0.326641,0.353553,0.25,0.25,0.353553,0.326641,0.326641,0.191342,0.073223,0.176777,0.46194,0.0,0.0,0.5,0.135299,0.135299,0.46194,0.25,0.25,0.353553,0.135299,0.135299,0.46194,0.176777,0.073223,0.46194,0.326641,0.135299,0.353553,0.135299,0.135299,-0.46194,0.25,0.25,-0.353553,0.326641,0.135299,-0.353553,0.176777,0.073223,-0.46194,0.326641,0.326641,-0.191342,0.353553,0.353553,0.0,0.46194,0.191342,0.0,0.426777,0.176777,-0.191342,0.326641,0.326641,0.191342,0.25,0.25,0.353553,0.326641,0.135299,0.353553,0.426777,0.176777,0.191342,0.135299,0.135299,0.46194,0.0,0.0,0.5,0.176777,0.073223,0.46194,0.0,0.0,-0.5,0.135299,0.135299,-0.46194,0.176777,0.073223,-0.46194,0.25,0.25,-0.353553,0.326641,0.326641,-0.191342,0.426777,0.176777,-0.191342,0.326641,0.135299,-0.353553,0.353553,0.353553,0.0,0.326641,0.326641,0.191342,0.426777,0.176777,0.191342,0.46194,0.191342,0.0,0.176777,0.073223,-0.46194,0.326641,0.135299,-0.353553,0.353553,0.0,-0.353553,0.191342,0.0,-0.46194,0.426777,0.176777,-0.191342,0.46194,0.191342,0.0,0.5,0.0,0.0,0.46194,0.0,-0.191342,0.426777,0.176777,0.191342,0.326641,0.135299,0.353553,0.353553,0.0,0.353553,0.46194,0.0,0.191342,0.176777,0.073223,0.46194,0.0,0.0,0.5,0.191342,0.0,0.46194,0.0,0.0,-0.5,0.176777,0.073223,-0.46194,0.191342,0.0,-0.46194,0.326641,0.135299,-0.353553,0.426777,0.176777,-0.191342,0.46194,0.0,-0.191342,0.353553,0.0,-0.353553,0.46194,0.191342,0.0,0.426777,0.176777,0.191342,0.46194,0.0,0.191342,0.5,0.0,0.0,0.326641,0.135299,0.353553,0.176777,0.073223,0.46194,0.191342,0.0,0.46194,0.353553,0.0,0.353553,0.191342,0.0,0.46194,0.0,0.0,0.5,0.176777,-0.073223,0.46194,0.0,0.0,-0.5,0.191342,0.0,-0.46194,0.176777,-0.073223,-0.46194,0.353553,0.0,-0.353553,0.46194,0.0,-0.191342,0.426777,-0.176777,-0.191342,0.326641,-0.135299,-0.353553,0.5,0.0,0.0,0.46194,0.0,0.191342,0.426777,-0.176777,0.191342,0.46194,-0.191342,0.0,0.353553,0.0,0.353553,0.191342,0.0,0.46194,0.176777,-0.073223,0.46194,0.326641,-0.135299,0.353553,0.191342,0.0,-0.46194,0.353553,0.0,-0.353553,0.326641,-0.135299,-0.353553,0.176777,-0.073223,-0.46194,0.46194,0.0,-0.191342,0.5,0.0,0.0,0.46194,-0.191342,0.0,0.426777,-0.176777,-0.191342,0.46194,0.0,0.191342,0.353553,0.0,0.353553,0.326641,-0.135299,0.353553,0.426777,-0.176777,0.191342,0.326641,-0.135299,-0.353553,0.426777,-0.176777,-0.191342,0.326641,-0.326641,-0.191342,0.25,-0.25,-0.353553,0.46194,-0.191342,0.0,0.426777,-0.176777,0.191342,0.326641,-0.326641,0.191342,0.353553,-0.353553,0.0,0.326641,-0.135299,0.353553,0.176777,-0.073223,0.46194,0.135299,-0.135299,0.46194,0.25,-0.25,0.353553,0.176777,-0.073223,-0.46194,0.326641,-0.135299,-0.353553,0.25,-0.25,-0.353553,0.135299,-0.135299,-0.46194,0.426777,-0.176777,-0.191342,0.46194,-0.191342,0.0,0.353553,-0.353553,0.0,0.326641,-0.326641,-0.191342,0.426777,-0.176777,0.191342,0.326641,-0.135299,0.353553,0.25,-0.25,0.353553,0.326641,-0.326641,0.191342,0.176777,-0.073223,0.46194,0.0,0.0,0.5,0.135299,-0.135299,0.46194,0.0,0.0,-0.5,0.176777,-0.073223,-0.46194,0.135299,-0.135299,-0.46194,0.135299,-0.135299,-0.46194,0.25,-0.25,-0.353553,0.135299,-0.326641,-0.353553,0.073223,-0.176777,-0.46194,0.326641,-0.326641,-0.191342,0.353553,-0.353553,0.0,0.191342,-0.46194,0.0,0.176777,-0.426777,-0.191342,0.326641,-0.326641,0.191342,0.25,-0.25,0.353553,0.135299,-0.326641,0.353553,0.176777,-0.426777,0.191342,0.135299,-0.135299,0.46194,0.0,0.0,0.5,0.073223,-0.176777,0.46194,0.0,0.0,-0.5,0.135299,-0.135299,-0.46194,0.073223,-0.176777,-0.46194,0.25,-0.25,-0.353553,0.326641,-0.326641,-0.191342,0.176777,-0.426777,-0.191342,0.135299,-0.326641,-0.353553,0.353553,-0.353553,0.0,0.326641,-0.326641,0.191342,0.176777,-0.426777,0.191342,0.191342,-0.46194,0.0,0.25,-0.25,0.353553,0.135299,-0.135299,0.46194,0.073223,-0.176777,0.46194,0.135299,-0.326641,0.353553,0.176777,-0.426777,-0.191342,0.191342,-0.46194,0.0,0.0,-0.5,0.0,0.0,-0.46194,-0.191342,0.176777,-0.426777,0.191342,0.135299,-0.326641,0.353553,0.0,-0.353553,0.353553,0.0,-0.46194,0.191342,0.073223,-0.176777,0.46194,0.0,0.0,0.5,0.0,-0.191342,0.46194,0.0,0.0,-0.5,0.073223,-0.176777,-0.46194,0.0,-0.191342,-0.46194,0.135299,-0.326641,-0.353553,0.176777,-0.426777,-0.191342,0.0,-0.46194,-0.191342,0.0,-0.353553,-0.353553,0.191342,-0.46194,0.0,0.176777,-0.426777,0.191342,0.0,-0.46194,0.191342,0.0,-0.5,0.0,0.135299,-0.326641,0.353553,0.073223,-0.176777,0.46194,0.0,-0.191342,0.46194,0.0,-0.353553,0.353553,0.073223,-0.176777,-0.46194,0.135299,-0.326641,-0.353553,0.0,-0.353553,-0.353553,0.0,-0.191342,-0.46194,0.0,0.0,-0.5,0.0,-0.191342,-0.46194,-0.073223,-0.176777,-0.46194,0.0,-0.353553,-0.353553,0.0,-0.46194,-0.191342,-0.176777,-0.426776,-0.191342,-0.135299,-0.32664,-0.353553,0.0,-0.5,0.0,0.0,-0.46194,0.191342,-0.176777,-0.426776,0.191342,-0.191342,-0.461939,0.0,0.0,-0.353553,0.353553,0.0,-0.191342,0.46194,-0.073223,-0.176777,0.46194,-0.135299,-0.32664,0.353553,0.0,-0.191342,-0.46194,0.0,-0.353553,-0.353553,-0.135299,-0.32664,-0.353553,-0.073223,-0.176777,-0.46194,0.0,-0.46194,-0.191342,0.0,-0.5,0.0,-0.191342,-0.461939,0.0,-0.176777,-0.426776,-0.191342,0.0,-0.46194,0.191342,0.0,-0.353553,0.353553,-0.135299,-0.32664,0.353553,-0.176777,-0.426776,0.191342,0.0,-0.191342,0.46194,0.0,0.0,0.5,-0.073223,-0.176777,0.46194,-0.191342,-0.461939,0.0,-0.176777,-0.426776,0.191342,-0.326641,-0.32664,0.191342,-0.353553,-0.353553,0.0,-0.135299,-0.32664,0.353553,-0.073223,-0.176777,0.46194,-0.135299,-0.135299,0.46194,-0.25,-0.25,0.353553,-0.073223,-0.176777,-0.46194,-0.135299,-0.32664,-0.353553,-0.25,-0.25,-0.353553,-0.135299,-0.135299,-0.46194,-0.176777,-0.426776,-0.191342,-0.191342,-0.461939,0.0,-0.353553,-0.353553,0.0,-0.326641,-0.32664,-0.191342,-0.176777,-0.426776,0.191342,-0.135299,-0.32664,0.353553,-0.25,-0.25,0.353553,-0.326641,-0.32664,0.191342,-0.073223,-0.176777,0.46194,0.0,0.0,0.5,-0.135299,-0.135299,0.46194,0.0,0.0,-0.5,-0.073223,-0.176777,-0.46194,-0.135299,-0.135299,-0.46194,-0.135299,-0.32664,-0.353553,-0.176777,-0.426776,-0.191342,-0.326641,-0.32664,-0.191342,-0.25,-0.25,-0.353553,-0.135299,-0.135299,-0.46194,-0.25,-0.25,-0.353553,-0.326641,-0.135299,-0.353553,-0.176777,-0.073223,-0.46194,-0.326641,-0.32664,-0.191342,-0.353553,-0.353553,0.0,-0.46194,-0.191341,0.0,-0.426777,-0.176776,-0.191342,-0.326641,-0.32664,0.191342,-0.25,-0.25,0.353553,-0.326641,-0.135299,0.353553,-0.426777,-0.176776,0.191342,-0.135299,-0.135299,0.46194,0.0,0.0,0.5,-0.176777,-0.073223,0.46194,0.0,0.0,-0.5,-0.135299,-0.135299,-0.46194,-0.176777,-0.073223,-0.46194,-0.25,-0.25,-0.353553,-0.326641,-0.32664,-0.191342,-0.426777,-0.176776,-0.191342,-0.326641,-0.135299,-0.353553,-0.353553,-0.353553,0.0,-0.326641,-0.32664,0.191342,-0.426777,-0.176776,0.191342,-0.46194,-0.191341,0.0,-0.25,-0.25,0.353553,-0.135299,-0.135299,0.46194,-0.176777,-0.073223,0.46194,-0.326641,-0.135299,0.353553,-0.426777,-0.176776,0.191342,-0.326641,-0.135299,0.353553,-0.353553,0.0,0.353553,-0.46194,0.0,0.191342,-0.176777,-0.073223,0.46194,0.0,0.0,0.5,-0.191342,0.0,0.46194,0.0,0.0,-0.5,-0.176777,-0.073223,-0.46194,-0.191342,0.0,-0.46194,-0.326641,-0.135299,-0.353553,-0.426777,-0.176776,-0.191342,-0.46194,0.0,-0.191342,-0.353553,0.0,-0.353553,-0.46194,-0.191341,0.0,-0.426777,-0.176776,0.191342,-0.46194,0.0,0.191342,-0.5,0.0,0.0,-0.326641,-0.135299,0.353553,-0.176777,-0.073223,0.46194,-0.191342,0.0,0.46194,-0.353553,0.0,0.353553,-0.176777,-0.073223,-0.46194,-0.326641,-0.135299,-0.353553,-0.353553,0.0,-0.353553,-0.191342,0.0,-0.46194,-0.426777,-0.176776,-0.191342,-0.46194,-0.191341,0.0,-0.5,0.0,0.0,-0.46194,0.0,-0.191342,0.0,0.0,-0.5,-0.191342,0.0,-0.46194,-0.176777,0.073223,-0.46194,-0.353553,0.0,-0.353553,-0.46194,0.0,-0.191342,-0.426776,0.176777,-0.191342,-0.326641,0.135299,-0.353553,-0.5,0.0,0.0,-0.46194,0.0,0.191342,-0.426776,0.176777,0.191342,-0.461939,0.191342,0.0,-0.353553,0.0,0.353553,-0.191342,0.0,0.46194,-0.176777,0.073223,0.46194,-0.326641,0.135299,0.353553,-0.191342,0.0,-0.46194,-0.353553,0.0,-0.353553,-0.326641,0.135299,-0.353553,-0.176777,0.073223,-0.46194,-0.46194,0.0,-0.191342,-0.5,0.0,0.0,-0.461939,0.191342,0.0,-0.426776,0.176777,-0.191342,-0.46194,0.0,0.191342,-0.353553,0.0,0.353553,-0.326641,0.135299,0.353553,-0.426776,0.176777,0.191342,-0.191342,0.0,0.46194,0.0,0.0,0.5,-0.176777,0.073223,0.46194,-0.326641,0.135299,0.353553,-0.176777,0.073223,0.46194,-0.135299,0.135299,0.46194,-0.25,0.25,0.353553,-0.176777,0.073223,-0.46194,-0.326641,0.135299,-0.353553,-0.25,0.25,-0.353553,-0.135299,0.135299,-0.46194,-0.426776,0.176777,-0.191342,-0.461939,0.191342,0.0,-0.353553,0.353554,0.0,-0.32664,0.326641,-0.191342,-0.426776,0.176777,0.191342,-0.326641,0.135299,0.353553,-0.25,0.25,0.353553,-0.32664,0.326641,0.191342,-0.176777,0.073223,0.46194,0.0,0.0,0.5,-0.135299,0.135299,0.46194,0.0,0.0,-0.5,-0.176777,0.073223,-0.46194,-0.135299,0.135299,-0.46194,-0.326641,0.135299,-0.353553,-0.426776,0.176777,-0.191342,-0.32664,0.326641,-0.191342,-0.25,0.25,-0.353553,-0.461939,0.191342,0.0,-0.426776,0.176777,0.191342,-0.32664,0.326641,0.191342,-0.353553,0.353554,0.0,-0.135299,0.135299,-0.46194,-0.25,0.25,-0.353553,-0.135299,0.326641,-0.353553,-0.073223,0.176777,-0.46194,-0.32664,0.326641,-0.191342,-0.353553,0.353554,0.0,-0.191341,0.46194,0.0,-0.176776,0.426777,-0.191342,-0.32664,0.326641,0.191342,-0.25,0.25,0.353553,-0.135299,0.326641,0.353553,-0.176776,0.426777,0.191342,-0.135299,0.135299,0.46194,0.0,0.0,0.5,-0.073223,0.176777,0.46194,0.0,0.0,-0.5,-0.135299,0.135299,-0.46194,-0.073223,0.176777,-0.46194,-0.25,0.25,-0.353553,-0.32664,0.326641,-0.191342,-0.176776,0.426777,-0.191342,-0.135299,0.326641,-0.353553,-0.353553,0.353554,0.0,-0.32664,0.326641,0.191342,-0.176776,0.426777,0.191342,-0.191341,0.46194,0.0,-0.25,0.25,0.353553,-0.135299,0.135299,0.46194,-0.073223,0.176777,0.46194,-0.135299,0.326641,0.353553,-0.073223,0.176777,0.46194,0.0,0.0,0.5,0.0,0.191342,0.46194,0.0,0.0,-0.5,-0.073223,0.176777,-0.46194,0.0,0.191342,-0.46194,-0.135299,0.326641,-0.353553,-0.176776,0.426777,-0.191342,0.0,0.46194,-0.191342,0.0,0.353553,-0.353553,-0.191341,0.46194,0.0,-0.176776,0.426777,0.191342,0.0,0.46194,0.191342,0.0,0.5,0.0,0.0,0.191342,0.46194,0.0,0.353553,0.353553,-0.135299,0.326641,0.353553,-0.073223,0.176777,0.46194,-0.073223,0.176777,-0.46194,-0.135299,0.326641,-0.353553,0.0,0.353553,-0.353553,0.0,0.191342,-0.46194,-0.176776,0.426777,-0.191342,-0.191341,0.46194,0.0,0.0,0.5,0.0,0.0,0.46194,-0.191342,-0.176776,0.426777,0.191342,-0.135299,0.326641,0.353553,0.0,0.353553,0.353553,0.0,0.46194,0.191342];
iron_data_ConstData.coneIndices = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,51,52,52,53,54,54,55,56,57,58,59,60,61,62,62,63,64,64,65,48,48,50,52,52,54,56,56,60,62,62,64,48,48,52,56,56,62,48];
iron_data_ConstData.conePos = [0.0,0.5,-1.0,0.0,0.0,0.0,0.191342,0.46194,-1.0,0.191342,0.46194,-1.0,0.0,0.0,0.0,0.353553,0.353553,-1.0,0.353553,0.353553,-1.0,0.0,0.0,0.0,0.46194,0.191342,-1.0,0.46194,0.191342,-1.0,0.0,0.0,0.0,0.5,0.0,-1.0,0.5,0.0,-1.0,0.0,0.0,0.0,0.46194,-0.191342,-1.0,0.46194,-0.191342,-1.0,0.0,0.0,0.0,0.353553,-0.353553,-1.0,0.353553,-0.353553,-1.0,0.0,0.0,0.0,0.191342,-0.46194,-1.0,0.191342,-0.46194,-1.0,0.0,0.0,0.0,0.0,-0.5,-1.0,0.0,-0.5,-1.0,0.0,0.0,0.0,-0.191342,-0.46194,-1.0,-0.191342,-0.46194,-1.0,0.0,0.0,0.0,-0.353553,-0.353554,-1.0,-0.353553,-0.353554,-1.0,0.0,0.0,0.0,-0.46194,-0.191342,-1.0,-0.46194,-0.191342,-1.0,0.0,0.0,0.0,-0.5,0.0,-1.0,-0.5,0.0,-1.0,0.0,0.0,0.0,-0.46194,0.191342,-1.0,-0.46194,0.191342,-1.0,0.0,0.0,0.0,-0.353553,0.353554,-1.0,-0.353553,0.353554,-1.0,0.0,0.0,0.0,-0.191341,0.46194,-1.0,-0.191341,0.46194,-1.0,0.0,0.0,0.0,0.0,0.5,-1.0,-0.191341,0.46194,-1.0,0.0,0.5,-1.0,0.191342,0.46194,-1.0,0.353553,0.353553,-1.0,0.46194,0.191342,-1.0,0.5,0.0,-1.0,0.46194,-0.191342,-1.0,0.353553,-0.353553,-1.0,0.191342,-0.46194,-1.0,0.191342,-0.46194,-1.0,0.0,-0.5,-1.0,-0.191342,-0.46194,-1.0,-0.191342,-0.46194,-1.0,-0.353553,-0.353554,-1.0,-0.46194,-0.191342,-1.0,-0.5,0.0,-1.0,-0.46194,0.191342,-1.0,-0.353553,0.353554,-1.0];
iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
iron_data_Data.cachedLights = new haxe_ds_StringMap();
iron_data_Data.cachedCameras = new haxe_ds_StringMap();
iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
iron_data_Data.cachedParticles = new haxe_ds_StringMap();
iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
iron_data_Data.cachedShaders = new haxe_ds_StringMap();
iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
iron_data_Data.cachedImages = new haxe_ds_StringMap();
iron_data_Data.cachedSounds = new haxe_ds_StringMap();
iron_data_Data.cachedVideos = new haxe_ds_StringMap();
iron_data_Data.cachedFonts = new haxe_ds_StringMap();
iron_data_Data.dataPath = "";
iron_data_Data.loadingMeshes = new haxe_ds_StringMap();
iron_data_Data.loadingLights = new haxe_ds_StringMap();
iron_data_Data.loadingCameras = new haxe_ds_StringMap();
iron_data_Data.loadingMaterials = new haxe_ds_StringMap();
iron_data_Data.loadingParticles = new haxe_ds_StringMap();
iron_data_Data.loadingWorlds = new haxe_ds_StringMap();
iron_data_Data.loadingShaders = new haxe_ds_StringMap();
iron_data_Data.loadingSceneRaws = new haxe_ds_StringMap();
iron_data_Data.assetsLoaded = 0;
iron_data_Data.loadingBlobs = new haxe_ds_StringMap();
iron_data_Data.loadingImages = new haxe_ds_StringMap();
iron_data_Data.loadingSounds = new haxe_ds_StringMap();
iron_data_Data.loadingVideos = new haxe_ds_StringMap();
iron_data_Data.loadingFonts = new haxe_ds_StringMap();
iron_data_MaterialData.uidCounter = 0;
iron_data_MaterialContext.num = 0;
iron_helper_CameraHelper.camera_object = "camera_object";
iron_helper_MultiColorMesh.vert = "painter_colored_iron.vert";
iron_helper_MultiColorMesh.frag = "painter_colored_iron.frag";
iron_helper_MultiColorMesh.materialName = "MultiColorMaterial";
iron_helper_MultiColorMesh.shaderName = "MultiColorShader";
iron_helper_MultiColorMesh.mesh_object = "mesh_object";
iron_helper_MultiColorMesh.worldMatrix = "_worldViewProjectionMatrix";
kha_math_FastMatrix4.width = 4;
kha_math_FastMatrix4.height = 4;
iron_math_Mat4.helpVec = new iron_math_Vec4();
iron_math_Mat4.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_Math.E = 2.7182818284590452354;
iron_math_Math.LOG2E = 1.4426950408889634074;
iron_math_Math.LOG10E = 0.43429448190325182765;
iron_math_Math.LN2 = 0.69314718055994530942;
iron_math_Math.LN10 = 2.30258509299404568402;
iron_math_Math.PI = 3.14159265358979323846;
iron_math_Math.PI_2 = 1.57079632679489661923;
iron_math_Math.PI_4 = 0.78539816339744830962;
iron_math_Math.ONE_PI = 0.31830988618379067154;
iron_math_Math.TWO_PI = 0.63661977236758134308;
iron_math_Math.TWO_SQRTPI = 1.12837916709551257390;
iron_math_Math.SQRT2 = 1.41421356237309504880;
iron_math_Math.SQRT1_2 = 0.70710678118654752440;
iron_math_Quat.helpVec0 = new iron_math_Vec4();
iron_math_Quat.helpVec1 = new iron_math_Vec4();
iron_math_Quat.helpVec2 = new iron_math_Vec4();
iron_math_Quat.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_math_Quat.xAxis = new iron_math_Vec4(1.0,0.0,0.0);
iron_math_Quat.yAxis = new iron_math_Vec4(0.0,1.0,0.0);
iron_object_Animation.m1 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.m2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Animation.vpos = new iron_math_Vec4();
iron_object_Animation.vpos2 = new iron_math_Vec4();
iron_object_Animation.vscl = new iron_math_Vec4();
iron_object_Animation.vscl2 = new iron_math_Vec4();
iron_object_Animation.q1 = new iron_math_Quat();
iron_object_Animation.q2 = new iron_math_Quat();
iron_object_Animation.q3 = new iron_math_Quat();
iron_object_Animation.vp = new iron_math_Vec4();
iron_object_Animation.vs = new iron_math_Vec4();
iron_object_Object.uidCounter = 0;
iron_object_Object.seed = 1;
iron_object_CameraObject.temp = new iron_math_Vec4();
iron_object_CameraObject.q = new iron_math_Quat();
iron_object_CameraObject.sphereCenter = new iron_math_Vec4();
iron_object_CameraObject.vcenter = new iron_math_Vec4();
iron_object_CameraObject.vup = new iron_math_Vec4();
iron_object_LightObject.cascadeCount = 1;
iron_object_LightObject.cascadeSplitFactor = 0.8;
iron_object_LightObject.cascadeBounds = 1.0;
iron_object_LightObject.m = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_LightObject.eye = new iron_math_Vec4();
iron_object_Transform.temp = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Transform.q = new iron_math_Quat();
kha_math_FastMatrix3.width = 3;
kha_math_FastMatrix3.height = 3;
iron_object_Uniforms.biasMat = new iron_math_Mat4(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat2 = new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat3 = new iron_math_Mat3(1,0,0,0,1,0,0,0,1);
iron_object_Uniforms.helpVec = new iron_math_Vec4();
iron_object_Uniforms.helpVec2 = new iron_math_Vec4();
iron_object_Uniforms.helpQuat = new iron_math_Quat();
iron_system_Time.scale = 1.0;
iron_system_Time.last = 0.0;
iron_system_Time.realDelta = 0.0;
js_Boot.__toStr = ({ }).toString;
kha_Assets.images = new kha__$Assets_ImageList();
kha_Assets.sounds = new kha__$Assets_SoundList();
kha_Assets.blobs = new kha__$Assets_BlobList();
kha_Assets.fonts = new kha__$Assets_FontList();
kha_Assets.videos = new kha__$Assets_VideoList();
kha__$Color_Color_$Impl_$.Black = -16777216;
kha__$Color_Color_$Impl_$.White = -1;
kha__$Color_Color_$Impl_$.Red = -65536;
kha__$Color_Color_$Impl_$.Blue = -16776961;
kha__$Color_Color_$Impl_$.Green = -16711936;
kha__$Color_Color_$Impl_$.Magenta = -65281;
kha__$Color_Color_$Impl_$.Yellow = -256;
kha__$Color_Color_$Impl_$.Cyan = -16711681;
kha__$Color_Color_$Impl_$.Purple = -8388480;
kha__$Color_Color_$Impl_$.Pink = -16181;
kha__$Color_Color_$Impl_$.Orange = -23296;
kha__$Color_Color_$Impl_$.Transparent = 0;
kha__$Color_Color_$Impl_$.invMaxChannelValue = 0.00392156862745098;
kha_CompilerDefines.utf16 = "1";
kha_CompilerDefines["true"] = "1";
kha_CompilerDefines.trilateralXtra = "1";
kha_CompilerDefines.trilateral = "1";
kha_CompilerDefines.sys_html5 = "1";
kha_CompilerDefines.sys_g4 = "1";
kha_CompilerDefines.sys_g3 = "1";
kha_CompilerDefines.sys_g2 = "1";
kha_CompilerDefines.sys_g1 = "1";
kha_CompilerDefines.sys_a2 = "1";
kha_CompilerDefines.sys_a1 = "1";
kha_CompilerDefines["source-header"] = "Generated by Haxe 4.0.0-preview.5";
kha_CompilerDefines.script_name = "kha";
kha_CompilerDefines.kha_webgl = "1";
kha_CompilerDefines.kha_version = "1810";
kha_CompilerDefines.kha_js = "1";
kha_CompilerDefines.kha_html5_js = "1";
kha_CompilerDefines.kha_html5 = "1";
kha_CompilerDefines.kha_g4 = "1";
kha_CompilerDefines.kha_g3 = "1";
kha_CompilerDefines.kha_g2 = "1";
kha_CompilerDefines.kha_g1 = "1";
kha_CompilerDefines.kha_a2 = "1";
kha_CompilerDefines.kha_a1 = "1";
kha_CompilerDefines.kha = "1";
kha_CompilerDefines.js_es5 = "1";
kha_CompilerDefines.js_es = "5";
kha_CompilerDefines["js-es5"] = "1";
kha_CompilerDefines.js = "1";
kha_CompilerDefines.iron = "1";
kha_CompilerDefines.hxPolyK = "1";
kha_CompilerDefines.hxGeomAlgo = "1";
kha_CompilerDefines.haxe_ver = "4.000";
kha_CompilerDefines.haxe3 = "1";
kha_CompilerDefines.dce = "std";
kha_CompilerDefines.canvas_id = "khanvas";
kha_Display.instance = new kha_Display();
kha_Scheduler.timeWarpSaveTime = 10.0;
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.painter_colored_iron_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_iron_fragData1 = "s192:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZnJhZ21lbnRDb2xvcjsKfQoK";
kha_Shaders.painter_colored_iron_fragData2 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgZnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBmcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_iron_vertData0 = "s260:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgV1ZQOwoKdmFyeWluZyB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSB2ZWMzIGNvbDsKYXR0cmlidXRlIHZlYzMgcG9zOwoKdm9pZCBtYWluKCkKewogICAgZnJhZ21lbnRDb2xvciA9IHZlYzQoY29sLCAxLjApOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiB2ZWM0KHBvcywgMS4wKTsKfQoK";
kha_Shaders.painter_colored_iron_vertData1 = "s303:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBXVlA7Cgp2YXJ5aW5nIG1lZGl1bXAgdmVjNCBmcmFnbWVudENvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWMzIGNvbDsKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyBwb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBmcmFnbWVudENvbG9yID0gdmVjNChjb2wsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IFdWUCAqIHZlYzQocG9zLCAxLjApOwp9Cgo";
kha_Shaders.painter_colored_iron_vertData2 = "s240:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgV1ZQOwoKb3V0IHZlYzQgZnJhZ21lbnRDb2xvcjsKaW4gdmVjMyBjb2w7CmluIHZlYzMgcG9zOwoKdm9pZCBtYWluKCkKewogICAgZnJhZ21lbnRDb2xvciA9IHZlYzQoY29sLCAxLjApOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiB2ZWM0KHBvcywgMS4wKTsKfQoK";
kha_Shaders.painter_colored_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_fragData1 = "s192:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gZnJhZ21lbnRDb2xvcjsKfQoK";
kha_Shaders.painter_colored_fragData2 = "s223:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSBmcmFnbWVudENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData0 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_colored_vertData1 = "s374:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIG1lZGl1bXAgdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_vertData2 = "s311:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData1 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_image_fragData2 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData1 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData2 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_fragData0 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_fragData1 = "s340:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjNCBmcmFnbWVudENvbG9yOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoZnJhZ21lbnRDb2xvci54eXosIHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKS54ICogZnJhZ21lbnRDb2xvci53KTsKfQoK";
kha_Shaders.painter_text_fragData2 = "s367:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwppbiBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CmluIGhpZ2hwIHZlYzIgdGV4Q29vcmQ7Cgp2b2lkIG1haW4oKQp7CiAgICBGcmFnQ29sb3IgPSB2ZWM0KGZyYWdtZW50Q29sb3IueHl6LCB0ZXh0dXJlKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_vertData0 = "s436:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData1 = "s500:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGZyYWdtZW50Q29sb3I7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_text_vertData2 = "s402:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBmcmFnbWVudENvbG9yOwppbiB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBmcmFnbWVudENvbG9yID0gdmVydGV4Q29sb3I7Cn0KCg";
kha_Shaders.painter_video_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_fragData1 = "s444:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7Cgp1bmlmb3JtIG1lZGl1bXAgc2FtcGxlcjJEIHRleDsKCnZhcnlpbmcgdmVjMiB0ZXhDb29yZDsKdmFyeWluZyB2ZWM0IGNvbG9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUyRCh0ZXgsIHRleENvb3JkKSAqIGNvbG9yOwogICAgdmVjMyBfMzIgPSB0ZXhjb2xvci54eXogKiBjb2xvci53OwogICAgdGV4Y29sb3IgPSB2ZWM0KF8zMi54LCBfMzIueSwgXzMyLnosIHRleGNvbG9yLncpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB0ZXhjb2xvcjsKfQoK";
kha_Shaders.painter_video_fragData2 = "s487:I3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKaW4gaGlnaHAgdmVjMiB0ZXhDb29yZDsKaW4gaGlnaHAgdmVjNCBjb2xvcjsKb3V0IGhpZ2hwIHZlYzQgRnJhZ0NvbG9yOwoKdm9pZCBtYWluKCkKewogICAgaGlnaHAgdmVjNCB0ZXhjb2xvciA9IHRleHR1cmUodGV4LCB0ZXhDb29yZCkgKiBjb2xvcjsKICAgIGhpZ2hwIHZlYzMgXzMyID0gdGV4Y29sb3IueHl6ICogY29sb3IudzsKICAgIHRleGNvbG9yID0gdmVjNChfMzIueCwgXzMyLnksIF8zMi56LCB0ZXhjb2xvci53KTsKICAgIEZyYWdDb2xvciA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData1 = "s479:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1lZGl1bXAgbWF0NCBwcm9qZWN0aW9uTWF0cml4OwoKYXR0cmlidXRlIG1lZGl1bXAgdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsKdmFyeWluZyBtZWRpdW1wIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSBtZWRpdW1wIHZlYzIgdGV4UG9zaXRpb247CnZhcnlpbmcgbWVkaXVtcCB2ZWM0IGNvbG9yOwphdHRyaWJ1dGUgbWVkaXVtcCB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData2 = "s380:I3ZlcnNpb24gMzAwIGVzCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmluIHZlYzMgdmVydGV4UG9zaXRpb247Cm91dCB2ZWMyIHRleENvb3JkOwppbiB2ZWMyIHRleFBvc2l0aW9uOwpvdXQgdmVjNCBjb2xvcjsKaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsKCnZvaWQgbWFpbigpCnsKICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIHZlYzQodmVydGV4UG9zaXRpb24sIDEuMCk7CiAgICB0ZXhDb29yZCA9IHRleFBvc2l0aW9uOwogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.resumeListeners = [];
kha_System.pauseListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_System.dropFilesListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.ios = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.firefox = false;
kha_SystemImpl.ie = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.maxGamepads = 4;
kha_SystemImpl.leftMouseCtrlDown = false;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_SystemImpl.soundEnabled = false;
kha_SystemImpl.iosTouchs = [];
kha_WebGLImage.GL_RGBA16F = 34842;
kha_WebGLImage.GL_RGBA32F = 34836;
kha_WebGLImage.GL_R16F = 33325;
kha_WebGLImage.GL_R32F = 33326;
kha_WebGLImage.GL_RED = 6403;
kha_WebGLImage.GL_DEPTH_COMPONENT24 = 33190;
kha_WebGLImage.GL_DEPTH24_STENCIL8 = 35056;
kha_WebGLImage.GL_DEPTH32F_STENCIL8 = 36013;
kha_Window.windows = [];
kha__$WindowOptions_WindowFeatures_$Impl_$.None = 0;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureResizable = 1;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureMinimizable = 2;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureMaximizable = 4;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureBorderless = 8;
kha__$WindowOptions_WindowFeatures_$Impl_$.FeatureOnTop = 16;
kha_audio2_Audio1.channelCount = 16;
kha_audio2_ogg_tools_Crc32.POLY = 79764919;
kha_audio2_ogg_vorbis_VorbisDecodeState.INVALID_BITS = -1;
kha_audio2_ogg_vorbis_VorbisTools.EOP = -1;
kha_audio2_ogg_vorbis_VorbisTools.M__PI = 3.14159265358979323846264;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_NUMER = 32;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_DENOM = 64;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_audio2_ogg_vorbis_data_Codebook.NO_CODE = 255;
kha_audio2_ogg_vorbis_data_Codebook.delay = 0;
kha_audio2_ogg_vorbis_data_Header.PACKET_ID = 1;
kha_audio2_ogg_vorbis_data_Header.PACKET_COMMENT = 3;
kha_audio2_ogg_vorbis_data_Header.PACKET_SETUP = 5;
kha_audio2_ogg_vorbis_data_PageFlag.CONTINUED_PACKET = 1;
kha_audio2_ogg_vorbis_data_PageFlag.FIRST_PAGE = 2;
kha_audio2_ogg_vorbis_data_PageFlag.LAST_PAGE = 4;
kha_audio2_ogg_vorbis_data_Setting.MAX_CHANNELS = 16;
kha_audio2_ogg_vorbis_data_Setting.PUSHDATA_CRC_COUNT = 4;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_LENGTH = 10;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_SIZE = 1024;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_MASK = 1023;
kha_graphics2_Graphics.fontGlyphs = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 32;
		while(_g1 < 256) {
			var i = _g1++;
			_g.push(i);
		}
	}
	$r = _g;
	return $r;
}(this));
kha_graphics2_truetype_StbTruetype.STBTT_vmove = 1;
kha_graphics2_truetype_StbTruetype.STBTT_vline = 2;
kha_graphics2_truetype_StbTruetype.STBTT_vcurve = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_DONTCARE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_BOLD = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_ITALIC = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_UNDERSCORE = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_NONE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_UNICODE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MAC = 1;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_ISO = 2;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MICROSOFT = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_0 = 0;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_1 = 1;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_ISO_10646 = 2;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SYMBOL = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_BMP = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SHIFTJIS = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_FULL = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ROMAN = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ARABIC = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_JAPANESE = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_HEBREW = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_CHINESE_TRAD = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_GREEK = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_KOREAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_RUSSIAN = 7;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ENGLISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ITALIAN = 1040;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_CHINESE = 2052;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_JAPANESE = 1041;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_DUTCH = 1043;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_KOREAN = 1042;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_FRENCH = 1036;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_RUSSIAN = 1049;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_GERMAN = 1031;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SPANISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_HEBREW = 1037;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SWEDISH = 1053;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ENGLISH = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_JAPANESE = 11;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ARABIC = 12;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_KOREAN = 23;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_DUTCH = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_RUSSIAN = 32;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_FRENCH = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SPANISH = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_GERMAN = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SWEDISH = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_HEBREW = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ITALIAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_TRAD = 19;
kha_graphics2_truetype_StbTruetype.STBTT_MAX_OVERSAMPLE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_RASTERIZER_VERSION = 2;
kha_graphics4_CubeMap.GL_RGBA16F = 34842;
kha_graphics4_CubeMap.GL_RGBA32F = 34836;
kha_graphics4_CubeMap.GL_R16F = 33325;
kha_graphics4_CubeMap.GL_R32F = 33326;
kha_graphics4_CubeMap.GL_DEPTH_COMPONENT24 = 33190;
kha_graphics4_CubeMap.GL_DEPTH24_STENCIL8 = 35056;
kha_graphics4_CubeMap.GL_DEPTH32F_STENCIL8 = 36013;
kha_graphics4_ImageShaderPainter.bufferSize = 1500;
kha_graphics4_ImageShaderPainter.vertexSize = 9;
kha_graphics4_ColoredShaderPainter.bufferSize = 100;
kha_graphics4_ColoredShaderPainter.triangleBufferSize = 100;
kha_graphics4_TextShaderPainter.bufferSize = 100;
kha_input_Gamepad.__meta__ = { statics : { sendConnectEvent : { input : null}, sendDisconnectEvent : { input : null}}, fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Gamepad.connectListeners = [];
kha_input_Gamepad.disconnectListeners = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendPressEvent : { input : null}}};
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_input_Sensor.accelerometer = new kha_input_Sensor();
kha_input_Sensor.gyroscope = new kha_input_Sensor();
kha_internal_BytesBlob.bufferSize = 2000;
kha_internal_HdrFormat.radiancePattern = new EReg("#\\?RADIANCE","i");
kha_internal_HdrFormat.commentPattern = new EReg("#.*","i");
kha_internal_HdrFormat.gammaPattern = new EReg("GAMMA=","i");
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_AEAudioChannel.todo = [];
kha_js_Sound.loading = [];
kha_math_Matrix3.width = 3;
kha_math_Matrix3.height = 3;
kha_math_Matrix4.width = 4;
kha_math_Matrix4.height = 4;
kha_math_Quaternion.AXIS_X = 0;
kha_math_Quaternion.AXIS_Y = 1;
kha_math_Quaternion.AXIS_Z = 2;
kha_network_ControllerBuilder.nextId = 0;
kha_network_Session.START = 0;
kha_network_Session.ENTITY_UPDATES = 1;
kha_network_Session.CONTROLLER_UPDATES = 2;
kha_network_Session.REMOTE_CALL = 3;
kha_network_Session.PING = 4;
kha_network_Session.SESSION_ERROR = 5;
kha_network_Session.PLAYER_UPDATES = 6;
kha_network_Session.RPC_SERVER = 0;
kha_network_Session.RPC_ALL = 1;
kha_network_SyncBuilder.nextId = 0;
kha_network_SyncBuilder.objects = [];
trilateral_geom_Algebra.quadStep = 0.03;
trilateral_geom_Algebra.cubicStep = 0.03;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
